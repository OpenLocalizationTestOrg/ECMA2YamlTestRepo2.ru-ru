### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.IBuildEngine4
  id: IBuildEngine4
  children:
  - Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  - Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  - Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  langs:
  - csharp
  name: IBuildEngine4
  nameWithType: IBuildEngine4
  fullName: Microsoft.Build.Framework.IBuildEngine4
  type: Interface
  summary: "Этот интерфейс расширяет IBuildEngine для предоставления механизма, что позволяет задачи для обмена данными между вызовами задачи."
  syntax:
    content: 'public interface IBuildEngine4 : Microsoft.Build.Framework.IBuildEngine3'
  implements:
  - Microsoft.Build.Framework.IBuildEngine3
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  id: GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Извлекает объект ранее зарегистрированные задачи, хранимые с указанным ключом."
  syntax:
    content: public object GetRegisteredTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ, используемый для извлечения объекта."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "Время существования объекта."
    return:
      type: System.Object
      description: "Возвращает зарегистрированный объект или значение null, если объекты не зарегистрирован в данном разделе или если объект был проигнорирован ранних коллекции."
  overload: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  id: RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  nameWithType: IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Регистрирует объект с системой, которая будет уничтожен некоторое время указанного в будущем."
  remarks: "Этот метод может вызываться задачи, которые необходимы для поддержания состояния между вызовами задачи, например задачи по кэшированию данных. Настоятельно рекомендуется, `allowEarlyCollection` задать значение `true` , если объект будет сохранять все значительные объемы данных.       Объект удален поток может быть произвольно, но он не будет уничтожен во время выполнения задачи, даже если `allowEarlyCollection` равен `true`.       Если объект реализует интерфейс IDisposable, IDisposable.Dispose будет вызван для объекта перед его удаление."
  syntax:
    content: public void RegisterTaskObject (object key, object obj, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime, bool allowEarlyCollection);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ, используемый для извлечения объекта."
    - id: obj
      type: System.Object
      description: "Объект, будут удерживаться для реализации более поздней версии."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "Время существования объекта."
    - id: allowEarlyCollection
      type: System.Boolean
      description: "Флаг, определяющий, может ли объект удален ранее запрошенный времени."
  overload: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  id: UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  langs:
  - csharp
  name: UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Отменяет регистрацию объектов ранее зарегистрированные задачи."
  syntax:
    content: public object UnregisterTaskObject (object key, Microsoft.Build.Framework.RegisteredTaskObjectLifetime lifetime);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ, используемый для извлечения объекта."
    - id: lifetime
      type: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
      description: "Время существования объекта."
    return:
      type: System.Object
      description: "Возвращает ранее зарегистрированного объекта, или значение null, если объект отсутствует, зарегистрированные в этом ключе или если объект был проигнорирован ранних коллекции."
  overload: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject(Object,RegisteredTaskObjectLifetime)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
  parent: Microsoft.Build.Framework
  isExternal: false
  name: RegisteredTaskObjectLifetime
  nameWithType: RegisteredTaskObjectLifetime
  fullName: Microsoft.Build.Framework.RegisteredTaskObjectLifetime
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(System.Object,System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime,System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  nameWithType: IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject(Object,Object,RegisteredTaskObjectLifetime,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(System.Object,Microsoft.Build.Framework.RegisteredTaskObjectLifetime)
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  nameWithType: IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
  fullName: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject(Object,RegisteredTaskObjectLifetime)
- uid: Microsoft.Build.Framework.IBuildEngine4.GetRegisteredTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: GetRegisteredTaskObject
  nameWithType: IBuildEngine4.GetRegisteredTaskObject
- uid: Microsoft.Build.Framework.IBuildEngine4.RegisterTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: RegisterTaskObject
  nameWithType: IBuildEngine4.RegisterTaskObject
- uid: Microsoft.Build.Framework.IBuildEngine4.UnregisterTaskObject*
  parent: Microsoft.Build.Framework.IBuildEngine4
  isExternal: false
  name: UnregisterTaskObject
  nameWithType: IBuildEngine4.UnregisterTaskObject
