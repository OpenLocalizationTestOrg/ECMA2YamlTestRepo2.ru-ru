### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectInstance
  id: ProjectInstance
  children:
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Execution.ProjectInstance.Build
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  - Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  - Microsoft.Build.Execution.ProjectInstance.Directory
  - Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  - Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  - Microsoft.Build.Execution.ProjectInstance.FullPath
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  - Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  - Microsoft.Build.Execution.ProjectInstance.InitialTargets
  - Microsoft.Build.Execution.ProjectInstance.IsImmutable
  - Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  - Microsoft.Build.Execution.ProjectInstance.Items
  - Microsoft.Build.Execution.ProjectInstance.ItemTypes
  - Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  - Microsoft.Build.Execution.ProjectInstance.Properties
  - Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.Targets
  - Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  - Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  - Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  langs:
  - csharp
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
  type: Class
  summary: "Представляет экземпляр проекта."
  remarks: "Экземпляры этого класса привести при клонировании проекта. Конструкторы являются внутренними, чтобы от пользователей требовалось создавать экземпляры проекта из существующих проектов.       Новые экземпляры проекта являются неизменяемыми, за исключением того, что на них можно добавить элементы экземпляра и устанавливать им свойства экземпляра. Экземпляры проекта полезны, поскольку изменения и построение несколько раз без вмешательства в исходный проект.       Может иметь ссылки на этот класс ни ни его составляющие <xref:Microsoft.Build.Construction>или <xref:Microsoft.Build.Evaluation>объектов.</xref:Microsoft.Build.Evaluation> </xref:Microsoft.Build.Construction>       Целевые объекты экземпляра проекта, службы узла и реестр задач не предоставляются."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")]

      public class ProjectInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданной корневой папки проекта, с помощью коллекции проектов по умолчанию."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Элемент корневой папки проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданного файла проекта, с помощью коллекции проектов по умолчанию."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: "Имя файла проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов по умолчанию."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: "Имя файла проекта."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Используемые глобальные свойства."
    - id: toolsVersion
      type: System.String
      description: "Версия инструментов."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданной корневой папки проекта, с помощью заданных глобальных свойств, версии инструментов и коллекции проектов."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Элемент корневой папки проекта"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Используемые глобальные свойства. Может принимать значение null."
    - id: toolsVersion
      type: System.String
      description: "Версия инструментов. Может принимать значение null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Коллекция проектов"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "Имя файла проекта."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Используемые глобальные свойства. Может принимать значение null."
    - id: toolsVersion
      type: System.String
      description: "Версия инструментов. Может принимать значение null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Коллекция проектов"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданной корневой папки проекта, с помощью заданных глобальных свойств, версии инструментов и коллекции проектов"
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Элемент корневой папки проекта."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Используемые глобальные свойства. Может принимать значение null."
    - id: toolsVersion
      type: System.String
      description: "Версия инструментов. Может принимать значение null."
    - id: subToolsetVersion
      type: System.String
      description: "Версия набора инструментов sub. Может принимать значение null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Коллекция проектов."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов, sub версии инструментов и коллекции проектов."
  remarks: "Без промежуточного <xref:Microsoft.Build.Evaluation.Project>создается объект.</xref:Microsoft.Build.Evaluation.Project> Это полезно, если проект будет построен, но не отображать или изменять."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "Имя файла проекта."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Используемые глобальные свойства. Может принимать значение null."
    - id: toolsVersion
      type: System.String
      description: "Версия инструментов. Может принимать значение null."
    - id: subToolsetVersion
      type: System.String
      description: "Версия набора инструментов sub. Может принимать значение null."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Коллекция проектов."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Добавляет элемент без метаданных в проект."
  remarks: "Мы не используем ProjectItemInstance, чтобы убедиться в том, что мы уже используется другой ProjectInstance нет."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "Тип элемента для добавляемого элемента."
    - id: evaluatedInclude
      type: System.String
      description: "Оцененный атрибут Include элемента."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Возвращает новый элемент."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Добавляет элемент с заданными метаданными в проект."
  remarks: "Мы не используем ProjectItemInstance, чтобы убедиться в том, что мы уже используется другой ProjectInstance нет."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "Тип элемента для добавляемого элемента."
    - id: evaluatedInclude
      type: System.String
      description: "Оцененный атрибут Include элемента."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Метаданные элемента."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Возвращает новый элемент."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  id: Build
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает целевые объекты по умолчанию проекта со средствами ведения журнала коллекции проектов."
  syntax:
    content: public bool Build ();
    parameters: []
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Выполняет построение целевых объектов по умолчанию проекта с заданными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Выполняет построение целевых объектов по умолчанию проекта с заданными и удаленными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Удаленные средства ведения журнала для сборки. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Выполняет построение заданного целевого объекта проекта с заданными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: target
      type: System.String
      description: "Целевой объект для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Строит заданные целевые объекты проекта с заданными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "Целевые объекты для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Выполняет построение заданного целевого объекта проекта с заданными и удаленными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: target
      type: System.String
      description: "Целевой объект для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Удаленные средства ведения журнала для сборки. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создать список целевых объектов с заданными средствами ведения журнала. Целевые объекты могут иметь значение null. Средства ведения журнала может иметь значение null."
  remarks: "Если любой из предоставленных средств ведения журнала уже присоединено к переданной нами службы ведения журнала, создает исключение InvalidOperationException."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "Список целевых объектов для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Нумерованный список средств ведения журнала для использования при построении целевых объектов."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "Создает выходные данные целевого объекта."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если операция выполнена успешно; значение false в случае сбоя."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Строит заданные целевые объекты проекта с заданными и удаленными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "Целевые объекты для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Удаленные средства ведения журнала для сборки. Может принимать значение null."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает целевой с выходами заданного целевого объекта и с заданными и удаленными средствами ведения журнала."
  remarks: "Создает исключение InvalidOperationException, если любой из предоставленных средств ведения журнала уже присоединено к службе ведения журнала."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "Целевые объекты для построения. Может принимать значение null."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Ведения журнала, используемых для построения. Может принимать значение null."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Удаленные средства ведения журнала для сборки. Может принимать значение null."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "Выходные данные целевого объекта."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если построение выполнено успешно; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  id: DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает независимый глубокий клон данного проекта и все, что в нем. Копия имеет Изменяемость же, что и исходный. Удобно использовать для компиляции отдельного файла или сохранения результатов построения между построениями."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Создает независимый глубокий клон данного проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  id: DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает независимый глубокий клон данного проекта и все, что в ней, с указанным Изменяемость. Удобно использовать для компиляции отдельного файла или сохранения результатов построения между построениями."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);
    parameters:
    - id: isImmutable
      type: System.Boolean
      description: "Флаг, указывающий, клонировать Изменяемость."
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Возвращает указанный Изменяемость независимый глубокий клон данного проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  id: DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает или задает список целевых объектов по умолчанию для этого проекта."
  remarks: "Выполняется построение целевых объектов по умолчанию, если целевые объекты не заданы явно."
  syntax:
    content: public System.Collections.Generic.List<string> DefaultTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Возвращает список целевых объектов по умолчанию для этого проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  id: Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: 'Возвращает корневой каталог проекта. Используется для оценки относительных путей и настройки текущего каталога во время построения. Никогда не имеет значение null: проекты, не загруженные с диска используют текущий каталог со времени запуска сборки.'
  syntax:
    content: public string Directory { get; }
    return:
      type: System.String
      description: "Возвращает корневой каталог проекта, который никогда не бывает null. Проекты, не загруженные с диска, возвращают текущий каталог во время запуска построения."
  overload: Microsoft.Build.Execution.ProjectInstance.Directory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  id: EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Оценивает предоставленную строку как условие, разворачивая элементы и свойства с помощью текущих элементов и свойств, доступных, выполнив логической оценкой."
  remarks: "Это полезно для окна интерпретации.       Не разворачивает простые выражения метаданных."
  syntax:
    content: public bool EvaluateCondition (string condition);
    parameters:
    - id: condition
      type: System.String
      description: "Разворачиваемая строка."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если строка имеет значение true. значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  id: ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Оценивает предоставленную строку, разворачивая элементы и свойства с помощью текущих элементов и свойств, доступных."
  remarks: "Это полезно для некоторых узлов или в окне интерпретации отладчика.       Не разворачивает простые выражения метаданных."
  syntax:
    content: public string ExpandString (string unexpandedValue);
    parameters:
    - id: unexpandedValue
      type: System.String
      description: "Разворачиваемая строка."
    return:
      type: System.String
      description: "Возвращает значение развернутой строки."
  overload: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  id: FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает полный путь к файлу проекта. Используется для ведения журнала."
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "Возвращает полный путь к файлу проекта. Возвращает значение null, если проект не был именован."
  overload: Microsoft.Build.Execution.ProjectInstance.FullPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает escape-вычисленное значение атрибута Include указанного определения элемента."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "Определение элемента, которое необходимо оценить и escape-последовательность."
    return:
      type: System.String
      description: "Возвращает вычисленное значение атрибута Include указанного определения элемента в escape-последовательность."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает escape-вычисленное значение атрибута Include указанных элементов."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Элемент, который необходимо оценить и escape-последовательность."
    return:
      type: System.String
      description: "Возвращает вычисленное значение атрибута Include указанного элемента в escape-последовательность."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  id: GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает все элементы в этом проекте указанного типа. Это список только для чтения."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> GetItems (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "Тип элемента для извлечения элементов."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Возвращает все элементы в этом проекте указанного типа. Возвращает пустой список, если их нет."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  id: GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает все элементы в этом проекте указанного типа и вычисляется включать значение. Это список только для чтения."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance> GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "Тип элемента для извлечения элементов."
    - id: evaluatedInclude
      type: System.String
      description: "Значение вычисленного include элементов для извлечения"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Возвращает все элементы в этом проекте указанного типа и вычисляется включать значение. Возвращает пустую коллекцию, если их нет."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает escape-значение указанных метаданных."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);
    parameters:
    - id: metadatum
      type: Microsoft.Build.Execution.ProjectMetadataInstance
      description: "В escape-метаданных."
    return:
      type: System.String
      description: "Возвращает escape-значение указанных метаданных."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает escape-значение метаданных с заданным именем указанного определения элемента."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "Определение элемента для получения значения метаданных."
    - id: name
      type: System.String
      description: "Имя метаданных."
    return:
      type: System.String
      description: "Возвращает escape-значение метаданных с заданным именем указанного определения элемента."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает escape-значение метаданных с заданным именем для указанного элемента."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Элемент для получения значения метаданных."
    - id: name
      type: System.String
      description: "Имя метаданных."
    return:
      type: System.String
      description: "Возвращает escape-значение метаданных с заданным именем для указанного элемента."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Получите свойство с заданным именем."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого свойства."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Возвращает свойство с заданным именем. Возвращает значение null, если свойство не существует с таким именем."
  overload: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Получите значение свойства с заданным именем."
  remarks: "Этот метод не различает свойство со значением пустой строки и отсутствие свойства с заданным именем."
  syntax:
    content: public string GetPropertyValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя свойства, значение которого требуется получить."
    return:
      type: System.String
      description: "Возвращает значение свойства с заданным именем. Если отсутствует свойство с таким именем существует, возвращается пустая строка. Возвращаемое значение имеет не последовательностей escape-символов."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  id: GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Получите escape-значение указанного свойства."
  syntax:
    content: public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);
    parameters:
    - id: property
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Свойство необходимо экранировать."
    return:
      type: System.String
      description: "Возвращает escape-значение указанного свойства."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Получает словарь глобальных свойств, использованную для оценки проекта, если таковые имеются."
  remarks: "Read only collection.  \n  \n Traverses project references.  \n  \n This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Возвращает словарь глобальных свойств, использованную для оценки этого проекта."
  overload: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  id: InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает список начальных целевых объектов для проекта и всех его импортов глубину. Эти целевые объекты строятся перед любыми другими объектами."
  syntax:
    content: public System.Collections.Generic.List<string> InitialTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Возвращает список начальных целевых объектов для проекта и всех его импортов глубину."
  overload: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  id: IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает флаг, указывающий, что экземпляр проекта является неизменяемым. Этот флаг установлен без возможности восстановления при создании экземпляра."
  syntax:
    content: public bool IsImmutable { get; }
    return:
      type: System.Boolean
      description: "Возвращает флаг."
  overload: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  id: ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает словарь только для чтения определений элементов проекта, ключом которого является тип элемента."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectItemDefinitionInstance> ItemDefinitions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
      description: "Возвращает словарь только для чтения определений элементов проекта, ключом которого является тип элемента."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  id: Items
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает все элементы в этом проекте."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Возвращает все элементы в этом проекте."
  overload: Microsoft.Build.Execution.ProjectInstance.Items*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  id: ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает все типы элементов в этом проекте."
  syntax:
    content: public System.Collections.Generic.ICollection<string> ItemTypes { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Возвращает все типы элементов в этом проекте."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  id: ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает расположение исходного файла. Никогда не равно null."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Возвращает расположение исходного файла. Никогда не возвращает значение null."
  overload: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  id: Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Получает все свойства в этом проекте."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance> Properties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
      description: "Возвращает все свойства в этом проекте."
  overload: Microsoft.Build.Execution.ProjectInstance.Properties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  id: RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Удаляет элемент из проекта, если он имеется. Возвращает значение true, если он присутствует, значение false в противном случае."
  syntax:
    content: public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Удаляемый элемент."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если элемент присутствовал до удаления; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  id: RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Удаляет свойство с заданным именем. Возвращает значение true, если свойство имело значение (возможно пустую строку), в противном случае — значение false."
  syntax:
    content: public bool RemoveProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя удаляемого свойства."
    return:
      type: System.Boolean
      description: "Возвращает значение true, если свойство имело значение (возможно пустую строку) до удаления; значение false в противном случае."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  id: SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Добавьте свойство с заданным именем и значением в проект. Перезаписывает свойство с тем же именем уже существует в коллекции свойств."
  remarks: "Мы не используем ProjectPropertyInstance, чтобы убедиться в том, что мы уже используется другой ProjectPropertyInstance нет."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "Имя добавляемого свойства."
    - id: evaluatedValue
      type: System.String
      description: "Вычисленное значение свойства."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Возвращает новое свойство."
  overload: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  id: Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает перечислитель по всем целевым объектам в данном проекте. Эта коллекция доступна только для чтения."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
      description: "Возвращает перечислитель по всем целевым объектам в данном проекте."
  overload: Microsoft.Build.Execution.ProjectInstance.Targets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает версию инструментов, использованную для оценки проекта, если таковые имеются."
  remarks: "Результат не обязательно совпадает с версией средств на теге проекта при его наличии; он может извне указано, например с помощью переключателя /tv."
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: "Возвращает версию инструментов, использованную для оценки проекта, если он существует."
  overload: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  id: ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Создает ProjectRootElement из содержимого этого ProjectInstance."
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();
    parameters: []
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Возвращает ProjectRootElement, представляющую данный экземпляр."
  overload: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  id: UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Заменяет состояние проекта <> </> *настроек, <> </> *настроек и <xref:Microsoft.Build.Execution.ProjectInstance.Items*>с записями из указанного <xref href=&quot;Microsoft.Build.Execution.ProjectInstance&quot;> </xref>.</xref:Microsoft.Build.Execution.ProjectInstance.Items*>"
  syntax:
    content: public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);
    parameters:
    - id: projectState
      type: Microsoft.Build.Execution.ProjectInstance
      description: "<xref uid=&quot;langword_csharp_ProjectInstance&quot; name=&quot;ProjectInstance&quot; href=&quot;&quot;> </xref> Обновление из."
  overload: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemInstance
  nameWithType: ProjectItemInstance
  fullName: Microsoft.Build.Execution.ProjectItemInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Framework.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ForwardingLoggerRecord>
  nameWithType: IEnumerable<ForwardingLoggerRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord
    name: ForwardingLoggerRecord
    nameWithType: ForwardingLoggerRecord
    fullName: ForwardingLoggerRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TargetResult>
  nameWithType: IDictionary<String,TargetResult>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.TargetResult
    name: TargetResult
    nameWithType: TargetResult
    fullName: TargetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
- uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemDefinitionInstance
  nameWithType: ProjectItemDefinitionInstance
  fullName: Microsoft.Build.Execution.ProjectItemDefinitionInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItemInstance>
  nameWithType: ICollection<ProjectItemInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectItemInstance>
  nameWithType: IEnumerable<ProjectItemInstance>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
- uid: Microsoft.Build.Execution.ProjectMetadataInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectMetadataInstance
  nameWithType: ProjectMetadataInstance
  fullName: Microsoft.Build.Execution.ProjectMetadataInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectItemDefinitionInstance>
  nameWithType: IDictionary<String,ProjectItemDefinitionInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
    name: ProjectItemDefinitionInstance
    nameWithType: ProjectItemDefinitionInstance
    fullName: ProjectItemDefinitionInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectPropertyInstance>
  nameWithType: ICollection<ProjectPropertyInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectPropertyInstance
    name: ProjectPropertyInstance
    nameWithType: ProjectPropertyInstance
    fullName: ProjectPropertyInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectTargetInstance>
  nameWithType: IDictionary<String,ProjectTargetInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectTargetInstance
    name: ProjectTargetInstance
    nameWithType: ProjectTargetInstance
    fullName: ProjectTargetInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem
  nameWithType: ProjectInstance.AddItem
- uid: Microsoft.Build.Execution.ProjectInstance.Build*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build
  nameWithType: ProjectInstance.Build
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy
  nameWithType: ProjectInstance.DeepCopy
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
- uid: Microsoft.Build.Execution.ProjectInstance.Directory*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition
  nameWithType: ProjectInstance.EvaluateCondition
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString
  nameWithType: ProjectInstance.ExpandString
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems
  nameWithType: ProjectInstance.GetItems
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped
  nameWithType: ProjectInstance.GetMetadataValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty
  nameWithType: ProjectInstance.GetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProjectInstance.GetPropertyValue
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped
  nameWithType: ProjectInstance.GetPropertyValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
- uid: Microsoft.Build.Execution.ProjectInstance.Items*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem
  nameWithType: ProjectInstance.RemoveItem
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty
  nameWithType: ProjectInstance.RemoveProperty
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty
  nameWithType: ProjectInstance.SetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.Targets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement
  nameWithType: ProjectInstance.ToProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom
  nameWithType: ProjectInstance.UpdateStateFrom
