### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.LC
  id: LC
  children:
  - Microsoft.Build.Tasks.LC.#ctor
  - Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)
  - Microsoft.Build.Tasks.LC.GenerateFullPathToTool
  - Microsoft.Build.Tasks.LC.LicenseTarget
  - Microsoft.Build.Tasks.LC.NoLogo
  - Microsoft.Build.Tasks.LC.OutputDirectory
  - Microsoft.Build.Tasks.LC.OutputLicense
  - Microsoft.Build.Tasks.LC.ReferencedAssemblies
  - Microsoft.Build.Tasks.LC.SdkToolsPath
  - Microsoft.Build.Tasks.LC.Sources
  - Microsoft.Build.Tasks.LC.ToolName
  - Microsoft.Build.Tasks.LC.ValidateParameters
  langs:
  - csharp
  name: LC
  nameWithType: LC
  fullName: Microsoft.Build.Tasks.LC
  type: Class
  summary: "Реализует `LC` задачи. Используйте `LC` элемент в файл проекта для создания и выполнения этой задачи. Сведения об использовании и параметрах см. в разделе [LC-задача](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class LC : Microsoft.Build.Tasks.ToolTaskExtension'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Utilities.ToolTask
  - Microsoft.Build.Tasks.ToolTaskExtension
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)
  - Microsoft.Build.Tasks.ToolTaskExtension.Bag
  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateCommandLineCommands
  - Microsoft.Build.Tasks.ToolTaskExtension.GenerateResponseFileCommands
  - Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)
  - Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)
  - Microsoft.Build.Tasks.ToolTaskExtension.HasLoggedErrors
  - Microsoft.Build.Tasks.ToolTaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  - Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute
  - Microsoft.Build.Utilities.ToolTask.Cancel
  - Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)
  - Microsoft.Build.Utilities.ToolTask.EchoOff
  - Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
  - Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
  - Microsoft.Build.Utilities.ToolTask.Execute
  - Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.ExitCode
  - Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)
  - Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory
  - Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors
  - Microsoft.Build.Utilities.ToolTask.InitializeHostObject
  - Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)
  - Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
  - Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)
  - Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
  - Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)
  - Microsoft.Build.Utilities.ToolTask.SkipTaskExecution
  - Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
  - Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
  - Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
  - Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
  - Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
  - Microsoft.Build.Utilities.ToolTask.Timeout
  - Microsoft.Build.Utilities.ToolTask.ToolCanceled
  - Microsoft.Build.Utilities.ToolTask.ToolExe
  - Microsoft.Build.Utilities.ToolTask.ToolPath
  - Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
  - Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: LC()
  nameWithType: LC.LC()
  fullName: Microsoft.Build.Tasks.LC.LC()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.Build.Tasks.LC&quot;> </xref> класса."
  syntax:
    content: public LC ();
    parameters: []
  overload: Microsoft.Build.Tasks.LC.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)
  id: AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: AddCommandLineCommands(CommandLineBuilderExtension)
  nameWithType: LC.AddCommandLineCommands(CommandLineBuilderExtension)
  fullName: Microsoft.Build.Tasks.LC.AddCommandLineCommands(CommandLineBuilderExtension)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Создает аргументы командной строки, которые средство компиляции лицензий (lc.exe) должно запускать непосредственно из командной строки, а не из файла ответов."
  syntax:
    content: protected override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);
    parameters:
    - id: commandLine
      type: Microsoft.Build.Tasks.CommandLineBuilderExtension
      description: "Построитель командной строки для добавления аргументов."
  overload: Microsoft.Build.Tasks.LC.AddCommandLineCommands*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool
  id: GenerateFullPathToTool
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: GenerateFullPathToTool()
  nameWithType: LC.GenerateFullPathToTool()
  fullName: Microsoft.Build.Tasks.LC.GenerateFullPathToTool()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает полный путь к файлу средства компиляции лицензий (lc.exe)."
  syntax:
    content: protected override string GenerateFullPathToTool ();
    parameters: []
    return:
      type: System.String
      description: "Полный путь к файлу средства компиляции лицензий или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл средства компилятор лицензий не найден."
  overload: Microsoft.Build.Tasks.LC.GenerateFullPathToTool*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.LicenseTarget
  id: LicenseTarget
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: LicenseTarget
  nameWithType: LC.LicenseTarget
  fullName: Microsoft.Build.Tasks.LC.LicenseTarget
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает исполняемый файл, для которого создаются LICENSES-файлы."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem LicenseTarget { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "Исполняемый файл, для которого создаются LICENSES-файлы."
  overload: Microsoft.Build.Tasks.LC.LicenseTarget*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.NoLogo
  id: NoLogo
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: NoLogo
  nameWithType: LC.NoLogo
  fullName: Microsoft.Build.Tasks.LC.NoLogo
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает логическое значение, указывающее, следует ли подавлять отображение эмблемы Майкрософт при запуске."
  syntax:
    content: public bool NoLogo { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображение эмблемы Майкрософт при запуске отключено; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.Tasks.LC.NoLogo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.OutputDirectory
  id: OutputDirectory
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: OutputDirectory
  nameWithType: LC.OutputDirectory
  fullName: Microsoft.Build.Tasks.LC.OutputDirectory
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает каталог, в котором следует разместить выходные LICENSES-файлы."
  syntax:
    content: public string OutputDirectory { get; set; }
    return:
      type: System.String
      description: "Каталог, в котором следует разместить выходные LICENSES-файлы."
  overload: Microsoft.Build.Tasks.LC.OutputDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.OutputLicense
  id: OutputLicense
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: OutputLicense
  nameWithType: LC.OutputLicense
  fullName: Microsoft.Build.Tasks.LC.OutputLicense
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает имя LICENSES-файл."
  remarks: "Если имя не указано, используется имя LICX-файл и LICENSES-файл помещается в каталог, содержащий LICX-файл."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem OutputLicense { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "Имя LICENSES-файл."
  overload: Microsoft.Build.Tasks.LC.OutputLicense*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: LC.ReferencedAssemblies
  fullName: Microsoft.Build.Tasks.LC.ReferencedAssemblies
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает компоненты, на которые имеются ссылки к загрузке при генерации LICENSES-файл."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] ReferencedAssemblies { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Указанный компоненты к загрузке при генерации LICENSES-файл."
  overload: Microsoft.Build.Tasks.LC.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.SdkToolsPath
  id: SdkToolsPath
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: SdkToolsPath
  nameWithType: LC.SdkToolsPath
  fullName: Microsoft.Build.Tasks.LC.SdkToolsPath
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает путь, используемый для поиска средств пакета SDK."
  syntax:
    content: public string SdkToolsPath { get; set; }
    return:
      type: System.String
      description: "Возвращает путь к инструментальным средствам пакета SDK."
  overload: Microsoft.Build.Tasks.LC.SdkToolsPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.Sources
  id: Sources
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: Sources
  nameWithType: LC.Sources
  fullName: Microsoft.Build.Tasks.LC.Sources
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает элементы, содержащие лицензируемые компоненты, включаемых в LICENSES-файл."
  remarks: "Дополнительные сведения см. в документации для `/complist` переключиться в [Lc.exe (компилятор лицензий)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Sources { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Элементы, содержащие лицензируемые компоненты, включаемых в LICENSES-файл."
  overload: Microsoft.Build.Tasks.LC.Sources*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.ToolName
  id: ToolName
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: ToolName
  nameWithType: LC.ToolName
  fullName: Microsoft.Build.Tasks.LC.ToolName
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Получает имя средства компиляции лицензий."
  syntax:
    content: protected override string ToolName { get; }
    return:
      type: System.String
      description: "Имя средства компиляции лицензий."
  overload: Microsoft.Build.Tasks.LC.ToolName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.LC.ValidateParameters
  id: ValidateParameters
  parent: Microsoft.Build.Tasks.LC
  langs:
  - csharp
  name: ValidateParameters()
  nameWithType: LC.ValidateParameters()
  fullName: Microsoft.Build.Tasks.LC.ValidateParameters()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Проверяет входные параметры и журналы ошибок или предупреждений, если таковые имеются. Возвращает логическое значение, указывающее, должен ли продолжаться выполнение задачи."
  syntax:
    content: protected override bool ValidateParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если нужно продолжить выполнение задачи; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.Tasks.LC.ValidateParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.ToolTaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.ToolTaskExtension
- uid: Microsoft.Build.Tasks.LC.#ctor
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: LC()
  nameWithType: LC.LC()
  fullName: Microsoft.Build.Tasks.LC.LC()
- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: AddCommandLineCommands(CommandLineBuilderExtension)
  nameWithType: LC.AddCommandLineCommands(CommandLineBuilderExtension)
  fullName: Microsoft.Build.Tasks.LC.AddCommandLineCommands(CommandLineBuilderExtension)
- uid: Microsoft.Build.Tasks.CommandLineBuilderExtension
  parent: Microsoft.Build.Tasks
  isExternal: false
  name: CommandLineBuilderExtension
  nameWithType: CommandLineBuilderExtension
  fullName: Microsoft.Build.Tasks.CommandLineBuilderExtension
- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: GenerateFullPathToTool()
  nameWithType: LC.GenerateFullPathToTool()
  fullName: Microsoft.Build.Tasks.LC.GenerateFullPathToTool()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.LC.LicenseTarget
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: LicenseTarget
  nameWithType: LC.LicenseTarget
  fullName: Microsoft.Build.Tasks.LC.LicenseTarget
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.LC.NoLogo
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: NoLogo
  nameWithType: LC.NoLogo
  fullName: Microsoft.Build.Tasks.LC.NoLogo
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.LC.OutputDirectory
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: OutputDirectory
  nameWithType: LC.OutputDirectory
  fullName: Microsoft.Build.Tasks.LC.OutputDirectory
- uid: Microsoft.Build.Tasks.LC.OutputLicense
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: OutputLicense
  nameWithType: LC.OutputLicense
  fullName: Microsoft.Build.Tasks.LC.OutputLicense
- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: LC.ReferencedAssemblies
  fullName: Microsoft.Build.Tasks.LC.ReferencedAssemblies
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.LC.SdkToolsPath
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: SdkToolsPath
  nameWithType: LC.SdkToolsPath
  fullName: Microsoft.Build.Tasks.LC.SdkToolsPath
- uid: Microsoft.Build.Tasks.LC.Sources
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: Sources
  nameWithType: LC.Sources
  fullName: Microsoft.Build.Tasks.LC.Sources
- uid: Microsoft.Build.Tasks.LC.ToolName
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ToolName
  nameWithType: LC.ToolName
  fullName: Microsoft.Build.Tasks.LC.ToolName
- uid: Microsoft.Build.Tasks.LC.ValidateParameters
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ValidateParameters()
  nameWithType: LC.ValidateParameters()
  fullName: Microsoft.Build.Tasks.LC.ValidateParameters()
- uid: Microsoft.Build.Tasks.LC.#ctor*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: LC
  nameWithType: LC.LC
- uid: Microsoft.Build.Tasks.LC.AddCommandLineCommands*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: AddCommandLineCommands
  nameWithType: LC.AddCommandLineCommands
- uid: Microsoft.Build.Tasks.LC.GenerateFullPathToTool*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: GenerateFullPathToTool
  nameWithType: LC.GenerateFullPathToTool
- uid: Microsoft.Build.Tasks.LC.LicenseTarget*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: LicenseTarget
  nameWithType: LC.LicenseTarget
- uid: Microsoft.Build.Tasks.LC.NoLogo*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: NoLogo
  nameWithType: LC.NoLogo
- uid: Microsoft.Build.Tasks.LC.OutputDirectory*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: OutputDirectory
  nameWithType: LC.OutputDirectory
- uid: Microsoft.Build.Tasks.LC.OutputLicense*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: OutputLicense
  nameWithType: LC.OutputLicense
- uid: Microsoft.Build.Tasks.LC.ReferencedAssemblies*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: LC.ReferencedAssemblies
- uid: Microsoft.Build.Tasks.LC.SdkToolsPath*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: SdkToolsPath
  nameWithType: LC.SdkToolsPath
- uid: Microsoft.Build.Tasks.LC.Sources*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: Sources
  nameWithType: LC.Sources
- uid: Microsoft.Build.Tasks.LC.ToolName*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ToolName
  nameWithType: LC.ToolName
- uid: Microsoft.Build.Tasks.LC.ValidateParameters*
  parent: Microsoft.Build.Tasks.LC
  isExternal: false
  name: ValidateParameters
  nameWithType: LC.ValidateParameters
