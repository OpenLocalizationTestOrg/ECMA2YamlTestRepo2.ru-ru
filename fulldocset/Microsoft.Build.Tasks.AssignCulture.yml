### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.AssignCulture
  id: AssignCulture
  children:
  - Microsoft.Build.Tasks.AssignCulture.#ctor
  - Microsoft.Build.Tasks.AssignCulture.AssignedFiles
  - Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture
  - Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture
  - Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles
  - Microsoft.Build.Tasks.AssignCulture.Execute
  - Microsoft.Build.Tasks.AssignCulture.Files
  langs:
  - csharp
  name: AssignCulture
  nameWithType: AssignCulture
  fullName: Microsoft.Build.Tasks.AssignCulture
  type: Class
  summary: "Реализует `AssignCulture` задачи. Используйте `AssignCulture` элемента в файле проекта для создания и выполнения этой задачи. Сведения об использовании и параметрах см. в разделе [задача AssignCulture](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class AssignCulture : Microsoft.Build.Tasks.TaskExtension'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements: []
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: AssignCulture()
  nameWithType: AssignCulture.AssignCulture()
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignCulture()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.Build.Tasks.AssignCulture&quot;> </xref> класса."
  syntax:
    content: public AssignCulture ();
    parameters: []
  overload: Microsoft.Build.Tasks.AssignCulture.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles
  id: AssignedFiles
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: AssignedFiles
  nameWithType: AssignCulture.AssignedFiles
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Получает список <xref:Microsoft.Build.Tasks.AssignCulture.Files*>с `Culture` запись метаданных, добавленной для каждого элемента.</xref:Microsoft.Build.Tasks.AssignCulture.Files*>"
  remarks: "Если входящий элемент из <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A>уже содержит свойство `Culture` используется запись метаданных, исходная запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.Files%2A>       Задача может назначать только `Culture` запись метаданных, если имя файла содержит является допустимым идентификатором культуры. Идентификатор языка и региональных параметров должен быть между двумя последними точками в имени файла."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] AssignedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Список <xref:Microsoft.Build.Tasks.AssignCulture.Files*>, с `Culture` запись метаданных, добавленной для каждого элемента.</xref:Microsoft.Build.Tasks.AssignCulture.Files*>"
  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture
  id: AssignedFilesWithCulture
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: AssignedFilesWithCulture
  nameWithType: AssignCulture.AssignedFilesWithCulture
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, имеющих `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithCulture { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, имеющих `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture
  id: AssignedFilesWithNoCulture
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: AssignedFilesWithNoCulture
  nameWithType: AssignCulture.AssignedFilesWithNoCulture
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, не имеющие `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithNoCulture { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, не имеющие `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles
  id: CultureNeutralAssignedFiles
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: CultureNeutralAssignedFiles
  nameWithType: AssignCulture.CultureNeutralAssignedFiles
  fullName: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, не имеющие `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] CultureNeutralAssignedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Подмножество <xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>, не имеющие `Culture` запись метаданных.</xref:Microsoft.Build.Tasks.AssignCulture.AssignedFiles*>"
  overload: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: Execute()
  nameWithType: AssignCulture.Execute()
  fullName: Microsoft.Build.Tasks.AssignCulture.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Выполняет `AssignCulture` задачи."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если задача выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.Tasks.AssignCulture.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.AssignCulture.Files
  id: Files
  parent: Microsoft.Build.Tasks.AssignCulture
  langs:
  - csharp
  name: Files
  nameWithType: AssignCulture.Files
  fullName: Microsoft.Build.Tasks.AssignCulture.Files
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает список файлов со встроенными именами для назначения."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Список файлов со встроенными именами для назначения."
  overload: Microsoft.Build.Tasks.AssignCulture.Files*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.AssignCulture.#ctor
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignCulture()
  nameWithType: AssignCulture.AssignCulture()
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignCulture()
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFiles
  nameWithType: AssignCulture.AssignedFiles
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFilesWithCulture
  nameWithType: AssignCulture.AssignedFilesWithCulture
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFilesWithNoCulture
  nameWithType: AssignCulture.AssignedFilesWithNoCulture
  fullName: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture
- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: CultureNeutralAssignedFiles
  nameWithType: AssignCulture.CultureNeutralAssignedFiles
  fullName: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles
- uid: Microsoft.Build.Tasks.AssignCulture.Execute
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: Execute()
  nameWithType: AssignCulture.Execute()
  fullName: Microsoft.Build.Tasks.AssignCulture.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.AssignCulture.Files
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: Files
  nameWithType: AssignCulture.Files
  fullName: Microsoft.Build.Tasks.AssignCulture.Files
- uid: Microsoft.Build.Tasks.AssignCulture.#ctor*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignCulture
  nameWithType: AssignCulture.AssignCulture
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFiles
  nameWithType: AssignCulture.AssignedFiles
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFilesWithCulture
  nameWithType: AssignCulture.AssignedFilesWithCulture
- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: AssignedFilesWithNoCulture
  nameWithType: AssignCulture.AssignedFilesWithNoCulture
- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: CultureNeutralAssignedFiles
  nameWithType: AssignCulture.CultureNeutralAssignedFiles
- uid: Microsoft.Build.Tasks.AssignCulture.Execute*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: Execute
  nameWithType: AssignCulture.Execute
- uid: Microsoft.Build.Tasks.AssignCulture.Files*
  parent: Microsoft.Build.Tasks.AssignCulture
  isExternal: false
  name: Files
  nameWithType: AssignCulture.Files
