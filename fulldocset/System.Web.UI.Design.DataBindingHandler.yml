### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DataBindingHandler
  id: DataBindingHandler
  children:
  - System.Web.UI.Design.DataBindingHandler.#ctor
  - System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)
  langs:
  - csharp
  name: DataBindingHandler
  nameWithType: DataBindingHandler
  fullName: System.Web.UI.Design.DataBindingHandler
  type: Class
  summary: "Предоставляет базовый класс для обработчика привязки данных."
  remarks: "DataBindingHandler предоставляет базовый класс для обработчиков привязки данных. Чтобы выполнить привязку данных для информативного отображения элемента управления в рабочей области конструирования в конструкторе можно обработчика привязки данных. Обычно конструктор элемента управления отвечает за эту функциональность. Однако при управления не отображается в рабочей области конструирования, например в шаблоне другого элемента управления, он не имеет конструктора, и эта функциональность обеспечивается обработчиком привязки данных, если оно указано с <xref:System.Web.UI.DataBindingHandlerAttribute>в коде для элемента управления.</xref:System.Web.UI.DataBindingHandlerAttribute>       Чтобы использовать обработчик привязки данных, должен иметь элемент управления с привязкой к данным свойство или свойства <xref:System.Web.UI.DataBindingHandlerAttribute>указанного в коде, который указывает тип обработчика привязки данных.</xref:System.Web.UI.DataBindingHandlerAttribute>       Например, <xref:System.Web.UI.WebControls.Label>элемент управления связан с <xref:System.Web.UI.Design.TextDataBindingHandler>класса с помощью объекта <xref:System.Web.UI.DataBindingHandlerAttribute>в коде <xref:System.Web.UI.WebControls.Label>класса.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.DataBindingHandlerAttribute> </xref:System.Web.UI.Design.TextDataBindingHandler> </xref:System.Web.UI.WebControls.Label> В шаблоне для <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.Label>, свойство которого текста была привязана к данным элемент управления отображается слово «С привязкой к данным» на метке.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.DataList> Без привязки к данным обработчика метка будет невидима во время разработки, так как не имеет конструктора, его свойства с привязкой к данным в шаблонного элемента управления во время разработки.       Чтобы реализовать обработчик привязки данных, определите новый класс, производный от этого класса и реализуйте <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A>метод, чтобы задать соответствующие свойства.</xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A>"
  syntax:
    content: public abstract class DataBindingHandler
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataBindingHandler.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DataBindingHandler
  langs:
  - csharp
  name: DataBindingHandler()
  nameWithType: DataBindingHandler.DataBindingHandler()
  fullName: System.Web.UI.Design.DataBindingHandler.DataBindingHandler()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.Design.DataBindingHandler&quot;> </xref> класса."
  syntax:
    content: protected DataBindingHandler ();
    parameters: []
  overload: System.Web.UI.Design.DataBindingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)
  id: DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)
  parent: System.Web.UI.Design.DataBindingHandler
  langs:
  - csharp
  name: DataBindControl(IDesignerHost,Control)
  nameWithType: DataBindingHandler.DataBindControl(IDesignerHost,Control)
  fullName: System.Web.UI.Design.DataBindingHandler.DataBindControl(IDesignerHost,Control)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Привязывает указанный элемент управления."
  remarks: "Этот метод должен быть реализован в производном классе для обеспечения функциональности пользовательского обработчика привязки данных. Логику для привязки данных в этот метод должен быть реализован и может различаться для разных типов, для которых обработчик привязки данных для привязки свойства или свойств."
  syntax:
    content: public abstract void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);
    parameters:
    - id: designerHost
      type: System.ComponentModel.Design.IDesignerHost
      description: "<xref href=&quot;System.ComponentModel.Design.IDesignerHost&quot;> </xref> Для документа."
    - id: control
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> Для привязки."
  overload: System.Web.UI.Design.DataBindingHandler.DataBindControl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Design.DataBindingHandler.#ctor
  parent: System.Web.UI.Design.DataBindingHandler
  isExternal: false
  name: DataBindingHandler()
  nameWithType: DataBindingHandler.DataBindingHandler()
  fullName: System.Web.UI.Design.DataBindingHandler.DataBindingHandler()
- uid: System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)
  parent: System.Web.UI.Design.DataBindingHandler
  isExternal: false
  name: DataBindControl(IDesignerHost,Control)
  nameWithType: DataBindingHandler.DataBindControl(IDesignerHost,Control)
  fullName: System.Web.UI.Design.DataBindingHandler.DataBindControl(IDesignerHost,Control)
- uid: System.ComponentModel.Design.IDesignerHost
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesignerHost
  nameWithType: IDesignerHost
  fullName: System.ComponentModel.Design.IDesignerHost
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Design.DataBindingHandler.#ctor*
  parent: System.Web.UI.Design.DataBindingHandler
  isExternal: false
  name: DataBindingHandler
  nameWithType: DataBindingHandler.DataBindingHandler
- uid: System.Web.UI.Design.DataBindingHandler.DataBindControl*
  parent: System.Web.UI.Design.DataBindingHandler
  isExternal: false
  name: DataBindControl
  nameWithType: DataBindingHandler.DataBindControl
