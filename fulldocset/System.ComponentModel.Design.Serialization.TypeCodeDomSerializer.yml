### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  id: TypeCodeDomSerializer
  children:
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  langs:
  - csharp
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  type: Class
  summary: "Сериализует объект в новый тип."
  remarks: "Класс TypeCodeDomSerializer выполняет те же задачи, что <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, но сериализация объекта через этот класс определяет новый тип.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))]

      public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  inheritance:
  - System.Object
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot;> </xref> класса."
  syntax:
    content: public TypeCodeDomSerializer ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет десериализацию объявления заданного типа."
  remarks: "Метод Deserialize десериализует объявление типа ранее сериализованного кода. В следующей таблице показаны что выполняет задачи реализация по умолчанию.      | Задача | Описание |   |----------|-----------------|   | Вариант проверки чувствительности | В реализации поиск службы <xref:System.CodeDom.Compiler.CodeDomProvider>решаете, если члены следует интерпретировать с учетом регистра или без учета регистра. |   | Оператор сортировки | Все переменные-члены и локальные переменные от методов init хранятся в таблице.</xref:System.CodeDom.Compiler.CodeDomProvider> Затем каждая инструкция в методе init добавляется коллекцию инструкций, сгруппированные по левой части, поэтому все инструкции, назначенные или оперирующие в соответствующей переменной группируются под этой переменной. Переменные без инструкций, отбрасываются. |   | Десериализация | Десериализация коллекции инструкций для каждой переменной выполняется согласно переменной. |       Ниже приведены службы, которые требуется десериализовать методу.      | Службы | Описание |   |-------------|-----------------|   | <xref:System.CodeDom.Compiler.CodeDomProvider>| Не является строго обязательным, службы, если он доступен, используется для определения ли сериализации должен регистра и без учета регистра. |   | <xref:System.ComponentModel.IContainer>| Если объект не существует в таблице имен во время десериализации запроса для <xref:System.ComponentModel.IContainer>становится.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.CodeDom.Compiler.CodeDomProvider> Если запрос выполнен успешно, контейнер проверяется для объекта. Контейнер также используется в качестве замены для любого аргумента контейнера, необходимого компонентам. |"
  syntax:
    content: public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации для использования при выполнении сериализации."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Объявление типа для использования при выполнении сериализации."
    return:
      type: System.Object
      description: "Корневой объект."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  id: GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает метод, в котором хранятся инструкции, используемые для сериализации элемента."
  remarks: "Метод GetInitializeMethod возвращает метод для создания всех кодов инициализации для заданного элемента. Реализация по умолчанию возвращает пустой конструктор. Один и тот же экземпляр метода должно быть возвращено, если тот же метод, должны быть возвращены для нескольких значений. Можно использовать <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName>словарь запомнить методы создания.</xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName> `typeDecl` Параметр можно также использовать для добавления методов инфраструктуры. Например если необходимо создать отдельный метод для каждого объекта, необходимо один метод, который в свою очередь вызывает все эти методы. Этот метод можно добавить объявление типа кода, при необходимости."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации для использования при выполнении сериализации."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Объявление типа для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Значение, используемое для сериализации."
    return:
      type: System.CodeDom.CodeMemberMethod
      description: "Метод, используемый для создания всех кодов инициализации для заданного элемента."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>typeDecl</code>, or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает массив методов, предназначенных для интерпретации в процессе десериализации."
  remarks: "Реализация по умолчанию возвращает одноэлементный массив с помощью конструктора."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации для использования при выполнении сериализации."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Объявление типа для использования при выполнении сериализации."
    return:
      type: System.CodeDom.CodeMemberMethod[]
      description: "Объект <xref href=&quot;System.CodeDom.CodeMemberMethod&quot;> </xref> массив методов, предназначенных для интерпретации в процессе десериализации."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  id: Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию корня объекта путем создания объявления нового типа, определяющего корень."
  remarks: "Метод сериализации выполняет сериализацию заданного корневого объекта и необязательную коллекцию членов, чтобы создать новое определение типа. Если `members` коллекция содержит значения, эти значения сериализуются. Сами значения может сериализовать как локальные переменные или переменные-члены. Это делается путем поиска свойства средства расширения в объекте с именем `GenerateMember`. Если `true`, создается элемент. В противном случае создается локальная переменная. Для удобства `members` корневого объекта может содержать коллекция. В этом случае корневой объект не также добавляется как элемент или локальной переменной.       Имя возвращаемого типа берется из имени корневого объекта, если он был именованный объект. В противном случае имя создается на основе имени простого типа корневого класса.       Ниже приведены задачи, выполняемые с использованием реализации по умолчанию метод сериализации.      | Задача | Описание |   |----------|-----------------|   | Заполнение контекста | Контекст сериализации инициализируется с данными, включая <xref:System.ComponentModel.Design.Serialization.RootContext>и <xref:System.CodeDom.CodeTypeDeclaration>|   | Сериализация члена | Далее Serialize обходит все члены и вызовы <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.ComponentModel.Design.Serialization.RootContext> Поскольку сериализация выполняется возможности в <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, это гарантирует, что сериализации не выполняется дважды. |   | Корневой сериализации | Далее выполняется сериализация корневого объекта и его инструкции добавляются в коллекцию инструкций. |   | Интеграция инструкции | После сериализуются все объекты, методу сериализации упорядочивает операторы и добавляет их к методу, возвращенные <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Наконец, создается конструктор, вызывающий все методы, возвращаемые <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>. |      -В следующей таблице показаны объекты местах метод сериализации в стеке контекста.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>      | Экземпляр | Описание |   |--------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>| Данный сериализатор.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Наследование классов может оказаться полезным для добавления общих свойств к этому классу. |   | <xref:System.CodeDom.CodeTypeDeclaration>| Тип, который создается.</xref:System.CodeDom.CodeTypeDeclaration> Большинство методов не требуется прямой доступ к этому. |"
  syntax:
    content: public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации для использования при выполнении сериализации."
    - id: root
      type: System.Object
      description: "Объект для сериализации."
    - id: members
      type: System.Collections.ICollection
      description: "Необязательная коллекция элементов. Может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустым."
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "Объект <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> , определяющий корневой объект."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>root</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberMethod[]
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod[]
  spec.csharp:
  - uid: System.CodeDom.CodeMemberMethod
    name: CodeMemberMethod
    nameWithType: CodeMemberMethod
    fullName: CodeMemberMethod[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize
  nameWithType: TypeCodeDomSerializer.Deserialize
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize
  nameWithType: TypeCodeDomSerializer.Serialize
