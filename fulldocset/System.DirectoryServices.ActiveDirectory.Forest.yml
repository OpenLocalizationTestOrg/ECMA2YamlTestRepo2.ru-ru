### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.Forest
  id: Forest
  children:
  - System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  - System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  - System.DirectoryServices.ActiveDirectory.Forest.Dispose
  - System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.Domains
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  - System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  - System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  - System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  - System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.Name
  - System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  - System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  - System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  - System.DirectoryServices.ActiveDirectory.Forest.Schema
  - System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  - System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.Sites
  - System.DirectoryServices.ActiveDirectory.Forest.ToString
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  langs:
  - csharp
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
  type: Class
  summary: "Класс леса представляет лес доменных служб Active Directory."
  syntax:
    content: 'public class Forest : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  id: ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию всех разделов приложений в лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection&quot;> </xref> , Содержащий все разделы приложений в этом лесу."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Создает локальную сторону отношения доверия с указанным лесом."
  remarks: "Этот метод создает одну сторону отношения доверия. Отношение доверия не установлено, пока не созданы обе стороны отношения доверия.       `trustPassword` Параметр связывает пароль с созданной доверия. При создании стороны доверия предоставляется тот же пароль, и два локальных доверия связываются друг с другом.       Чтобы программно создать обе стороны отношения доверия в одном вызове метода, используйте <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName>метод.</xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя леса, которым создается отношение доверия."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Один из <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> члены, который определяет направление отношения доверия по отношению к этому лесу."
    - id: trustPassword
      type: System.String
      description: "Пароль для доверия. Дополнительные сведения см."
  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Отношение доверия уже существует."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForest</code>имя или <code>trustPassword</code> строка пуста."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>or <code>trustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: CreateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Создает обе стороны отношения доверия с указанным лесом."
  remarks: "Этот метод создает обе стороны отношения доверия с помощью одного вызова метода. <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>Метод используется для создания одной стороне отношения доверия.</xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, представляющий лес, с которым создается отношение доверия."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Один из <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> члены, который определяет направление отношения доверия по отношению к этому лесу."
  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Отношение доверия уже существует."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  id: DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Удаляет локальную сторону отношения доверия."
  remarks: "При удалении одной стороны отношения доверия, доверия больше не устанавливается.       Чтобы удалить обе стороны отношения доверия с помощью одного вызова метода, используйте <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName>метод.</xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteLocalSideOfTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя леса, с которым существует доверие."
  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , указанным параметром <code> targetForestName </code> параметра."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: DeleteTrustRelationship(Forest)
  nameWithType: Forest.DeleteTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Удаляет обе стороны отношения доверия."
  remarks: "Чтобы удалить только с одной стороны отношения доверия, используйте <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>метод.</xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, представляющий лес, с которым существует доверие."
  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с указанным <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Dispose()
  nameWithType: Forest.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Освобождает все управляемые и неуправляемые ресурсы, удерживаемые объектом."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Forest.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Освобождает управляемые ресурсы, используемые этим объектом и при необходимости освобождает неуправляемые ресурсы."
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, определяющее, следует освободить управляемые ресурсы.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если следует освободить управляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> если только освобождению неуправляемых ресурсов."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains
  id: Domains
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Domains
  nameWithType: Forest.Domains
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию всех доменов в лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainCollection&quot;> </xref> коллекцию, содержащую <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> доменов в текущем <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Domains*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  id: FindAllDiscoverableGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllDiscoverableGlobalCatalogs()
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит все обнаруживаемые глобальные каталоги в данном лесу."
  remarks: "Обнаруживаемые контроллеры домена можно найти с помощью запроса DNS SRV-записи.  Этот метод возвращает только глобальные каталоги, которые регистрируют универсальную, узел конкретной GC SRV-записи."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> , содержащий коллекцию найденных глобальных каталогов."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  id: FindAllDiscoverableGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllDiscoverableGlobalCatalogs(String)
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит все обнаруживаемые глобальные каталоги в данном лесу на указанном сайте."
  remarks: "Обнаруживаемые глобальные каталоги можно найти с помощью запроса DNS SRV-записи.  Если глобальный каталог не регистрирует запись GC SRV для заданного узла, он не возвращается этим методом, даже если глобальный каталог физически расположены в этом узле.       Все глобальные каталоги, которые регистрируют запись GC SRV для указанного сайта будет возвращаться этим методом, даже если они не могут быть физически расположены в этом узле."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Имя узла для поиска."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> , содержащий коллекцию найденных глобальных каталогов."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  id: FindAllGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllGlobalCatalogs()
  nameWithType: Forest.FindAllGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит все глобальные каталоги в данном лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> , содержащий коллекцию найденных глобальных каталогов."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  id: FindAllGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllGlobalCatalogs(String)
  nameWithType: Forest.FindAllGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит все глобальные каталоги в данном лесу для данного сайта."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Имя узла для поиска."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> объект, содержащий коллекцию найденных глобальных каталогов."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  id: FindGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog()
  nameWithType: Forest.FindGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит любой глобальный каталог в данном лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;></xref> of this <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;></xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Глобальный каталог не найден."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит глобальный каталог в данном лесу для указанного расположения критериев."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> значение, указывающее условия расположения."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> объекта для указанных условий расположения."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Глобальный каталог не найден."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  id: FindGlobalCatalog(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(String)
  nameWithType: Forest.FindGlobalCatalog(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит глобальный каталог в данном лесу для указанного сайта."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "Имя узла для поиска."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> объекта для указанного сайта."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Глобальный каталог не найден."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(String,LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит глобальный каталог в данном лесу для указанного сайта и условий расположения."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: siteName
      type: System.String
      description: "Имя узла для поиска."
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> значение, указывающее условия расположения."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> объекта для указанного сайта и условий расположения."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Глобальный каталог не найден."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  id: ForestMode
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ForestMode
  nameWithType: Forest.ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает режим работы леса."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ForestMode
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> значение, представляющее текущий режим леса этого <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  id: ForestModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Получает уровень режима работы леса."
  syntax:
    content: public int ForestModeLevel { get; }
    return:
      type: System.Int32
      description: "Уровень режима работы леса."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  id: GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetAllTrustRelationships()
  nameWithType: Forest.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Получает коллекцию отношений доверия текущего леса."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection&quot;> </xref> коллекцию, содержащую <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation&quot;> </xref> объекты, представляющие отношения текущего доверия <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  id: GetCurrentForest
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetCurrentForest()
  nameWithType: Forest.GetCurrentForest()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект для текущего пользователя."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , представляющий текущего леса."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetForest(DirectoryContext)
  nameWithType: Forest.GetForest(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта для указанного контекста."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> , содержащий цель и учетные данные, используемые для извлечения объекта."
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , представляющий лес, который был извлечен с помощью данного метода."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetForest*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Подключение к целевой базе данных, указанной в <code> context </code> не может быть установлено."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>не допускается."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  id: GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает логическое значение, указывающее, включена ли Выборочная проверка подлинности для входящего отношения доверия с указанным лесом.  <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включена выборочная проверка подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Дополнительные сведения см. в разделе «Примечания»."
  remarks: "Для отношения доверия с лесом Если включить выборочную проверку подлинности, необходимо вручную включить разрешения на каждом домене и ресурсе в локальном лесу, к которому пользователям в другом лесу.       При прохождении пользователем проверки подлинности через доверие для которого выборочной проверки подлинности включена, другие организации идентификатор безопасности (SID) добавляется к данным авторизации пользователя. Наличие идентификатора безопасности вызывает проверку в домене ресурсов, чтобы убедиться, пользователь может проходить проверку подлинности в конкретной службы. После проверки подлинности пользователя сервер, выполняющий проверку подлинности пользователь добавляет SID данной организации, если SID другой организации еще нет. В контексте авторизованного пользователя может присутствовать только один из таких идентификаторов безопасности."
  syntax:
    content: public bool GetSelectiveAuthenticationStatus (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> с которым существует входящее отношение доверия."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включена выборочная проверка подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , указанным параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов LsaQueryTrustedDomainInfoByName завершился ошибкой. Дополнительные сведения см. в разделе [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  id: GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetSidFilteringStatus(String)
  nameWithType: Forest.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Получает состояние фильтрации SID для доверия."
  syntax:
    content: public bool GetSidFilteringStatus (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, с которым существует отношение доверия."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если фильтрация SID включена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  id: GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetTrustRelationship(String)
  nameWithType: Forest.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает отношение доверия между данным лесом и указанным лесом."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "Имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта, для которого требуется получить сведения об отношении доверия."
    return:
      type: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation&quot;> </xref> , представляющий отношение доверия между данным лесом и указанным лесом."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , указанным параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  id: GlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию всех глобальных каталогов в лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> коллекцию, содержащую <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> глобальных каталогов в текущем <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Name
  nameWithType: Forest.Name
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Получает имя леса."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Имя этого аспекта <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  id: NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает контроллер домена, играющий роль хозяина FSMO именования для леса."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> объект, который представляет контроллер домена, являющийся хозяином FSMO именования этого <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  id: RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RaiseForestFunctionality(ForestMode)
  nameWithType: Forest.RaiseForestFunctionality(ForestMode)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Вызывает режим работы леса."
  remarks: "<xref:System.DirectoryServices.ActiveDirectory.ForestMode>Значение можно инициируется, но не уменьшить.</xref:System.DirectoryServices.ActiveDirectory.ForestMode> Это означает, что повышение уровня функциональности леса операция необратима и решение об этом следует принимать с осторожностью.       Дополнительные сведения о рабочих режимах леса см. в разделе [работы домена и леса](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       Следующая таблица определяет допустимые значения для `forestMode` зависимости от текущего режима работы леса.      | Текущий режим | Режим может быть повышен до |   |------------------|---------------------------|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| <xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| None|</xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode>"
  syntax:
    content: public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);
    parameters:
    - id: forestMode
      type: System.DirectoryServices.ActiveDirectory.ForestMode
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> значение перечисления, указывающее новый уровень операции для леса."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Учитывая текущий режим работы леса, заданное значение для <code> forestMode </code> является недопустимым."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>forestMode</code>не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> значение перечисления."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  id: RaiseForestFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RaiseForestFunctionalityLevel(Int32)
  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Повышает уровень функциональности леса до заданного значения."
  syntax:
    content: public void RaiseForestFunctionalityLevel (int forestMode);
    parameters:
    - id: forestMode
      type: System.Int32
      description: "Повысить до этого уровня."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RepairTrustRelationship(Forest)
  nameWithType: Forest.RepairTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Восстанавливает отношение доверия."
  syntax:
    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> , представляющий объект леса, с которым существует отношение доверия."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, который задается параметром <code> targetForest </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  id: RootDomain
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RootDomain
  nameWithType: Forest.RootDomain
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает первый домен, который был создан в лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> , представляющий первый домен, который был создан в этом <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema
  id: Schema
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Schema
  nameWithType: Forest.Schema
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Получает схему леса."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> , Представляющий схему текущего <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Schema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает контроллер домена, который выполняет роль хозяина схемы FSMO для леса."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> объект, который представляет контроллер домена, являющийся хозяином схемы FSMO этого <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Включает или отключает выборочную проверку подлинности для входящего отношения доверия."
  syntax:
    content: public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта, с которым существует входящее отношение доверия."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если Выборочная проверка подлинности должен быть включен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с лесом, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  id: SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Задает состояние фильтрации SID с указанным лесом."
  remarks: "По умолчанию новых внешних и лесом доверяет [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] доменных служб Active Directory применяют фильтрацию SID.  Фильтрация SID используется для предотвращения атак злоумышленников, могут пытаться предоставить повышенные права доступа к учетной записи пользователя.  Применение фильтрации SID для доверия леса не запрещает миграции для доменов в одном лесу с помощью журнала SID и не влияет на стратегию управления доступом к универсальной группе."
  syntax:
    content: public void SetSidFilteringStatus (string targetForestName, bool enable);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, с которым существует отношение доверия."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если фильтрация SID должно быть включено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с лесом, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites
  id: Sites
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Sites
  nameWithType: Forest.Sites
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию узлов, содержащихся в лесу."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection&quot;> </xref> , содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;> </xref> узлов в текущем <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Sites*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ToString()
  nameWithType: Forest.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает строковое представление текущего леса."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Объект <xref:System.String>, представляющий DNS-имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.Forest.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Обновляет пароль на локальной стороне отношения доверия."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "Имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта, для которого требуется изменить локальный пароль отношения доверия."
    - id: newTrustPassword
      type: System.String
      description: "Новый пароль для отношения доверия."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с лесом, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>или <code>newTrustPassword</code> — пустая строка."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Обновляет пароль и направление доверия на локальной стороне отношения доверия."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "Имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта, для которого должны быть изменены локальное направление доверия и пароль."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение для нового направление доверия для отношения доверия."
    - id: newTrustPassword
      type: System.String
      description: "Новый пароль для отношения доверия."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объект, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>или <code>newTrustPassword</code> — пустая строка."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code> newTrustDirection </code> Параметр не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Обновляет направление доверия для отношения доверия. Направления доверия обновляются на обеих сторонах доверия."
  syntax:
    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объектов, для которого необходимо изменить направления доверия."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение, указывающее новое направление доверия для отношения доверия."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с лесом, который задается параметром <code> targetForest </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  id: VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Forest.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Проверяет допустимость предварительно установленного исходящего отношения доверия с указанным лесом."
  syntax:
    content: public void VerifyOutboundTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "DNS-имя домена, с которым существует отношение доверия."
  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Не задано отношение исходящего отношения доверия с лесом, который задается параметром <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: VerifyTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Проверяет допустимость ранее установленного отношения доверия с указанным лесом."
  remarks: "Этот метод проверяет, что полностью установлено отношение доверия. Отношение доверия не установлено, пока не созданы обе стороны отношения доверия."
  syntax:
    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> объекта, для которого требуется проверить отношение доверия."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение, указывающее направление отношения доверия по отношению к этому лесу."
  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Отсутствует отношение доверия с лесом, который задается параметром <code> targetForest </code>, или целевой лес не имеет направления доверия, определяется <code> direction </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "Целевой сервер занят или недоступен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code> direction </code> Параметр не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Указанная учетная запись имеет разрешение на выполнение этой операции."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ApplicationPartitionCollection
  nameWithType: ApplicationPartitionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.TrustDirection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustDirection
  nameWithType: TrustDirection
  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteTrustRelationship(Forest)
  nameWithType: Forest.DeleteTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose()
  nameWithType: Forest.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Forest.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Domains
  nameWithType: Forest.Domains
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains
- uid: System.DirectoryServices.ActiveDirectory.DomainCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainCollection
  nameWithType: DomainCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs()
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalogCollection
  nameWithType: GlobalCatalogCollection
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs(String)
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs()
  nameWithType: Forest.FindAllGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs(String)
  nameWithType: Forest.FindAllGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog()
  nameWithType: Forest.FindGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalog
  nameWithType: GlobalCatalog
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(String)
  nameWithType: Forest.FindGlobalCatalog(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(String,LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestMode
  nameWithType: Forest.ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.ForestMode
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ForestMode
  nameWithType: ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetAllTrustRelationships()
  nameWithType: Forest.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformationCollection
  nameWithType: TrustRelationshipInformationCollection
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetCurrentForest()
  nameWithType: Forest.GetCurrentForest()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetForest(DirectoryContext)
  nameWithType: Forest.GetForest(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSidFilteringStatus(String)
  nameWithType: Forest.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetTrustRelationship(String)
  nameWithType: Forest.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ForestTrustRelationshipInformation
  nameWithType: ForestTrustRelationshipInformation
  fullName: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Name
  nameWithType: Forest.Name
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionality(ForestMode)
  nameWithType: Forest.RaiseForestFunctionality(ForestMode)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionalityLevel(Int32)
  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RepairTrustRelationship(Forest)
  nameWithType: Forest.RepairTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RootDomain
  nameWithType: Forest.RootDomain
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Schema
  nameWithType: Forest.Schema
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Sites
  nameWithType: Forest.Sites
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlySiteCollection
  nameWithType: ReadOnlySiteCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ToString()
  nameWithType: Forest.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Forest.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateLocalSideOfTrustRelationship
  nameWithType: Forest.CreateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateTrustRelationship
  nameWithType: Forest.CreateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteTrustRelationship
  nameWithType: Forest.DeleteTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose
  nameWithType: Forest.Dispose
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Domains
  nameWithType: Forest.Domains
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs
  nameWithType: Forest.FindAllGlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog
  nameWithType: Forest.FindGlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestMode
  nameWithType: Forest.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetAllTrustRelationships
  nameWithType: Forest.GetAllTrustRelationships
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetCurrentForest
  nameWithType: Forest.GetCurrentForest
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetForest
  nameWithType: Forest.GetForest
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSelectiveAuthenticationStatus
  nameWithType: Forest.GetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSidFilteringStatus
  nameWithType: Forest.GetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetTrustRelationship
  nameWithType: Forest.GetTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Name
  nameWithType: Forest.Name
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionality
  nameWithType: Forest.RaiseForestFunctionality
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionalityLevel
  nameWithType: Forest.RaiseForestFunctionalityLevel
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RepairTrustRelationship
  nameWithType: Forest.RepairTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RootDomain
  nameWithType: Forest.RootDomain
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Schema
  nameWithType: Forest.Schema
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSelectiveAuthenticationStatus
  nameWithType: Forest.SetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSidFilteringStatus
  nameWithType: Forest.SetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Sites
  nameWithType: Forest.Sites
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ToString
  nameWithType: Forest.ToString
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateTrustRelationship
  nameWithType: Forest.UpdateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyOutboundTrustRelationship
  nameWithType: Forest.VerifyOutboundTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyTrustRelationship
  nameWithType: Forest.VerifyTrustRelationship
