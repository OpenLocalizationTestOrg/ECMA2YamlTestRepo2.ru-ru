### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.AsyncResult
  id: AsyncResult
  children:
  - System.IdentityModel.AsyncResult.#ctor
  - System.IdentityModel.AsyncResult.#ctor(System.Object)
  - System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  - System.IdentityModel.AsyncResult.AsyncState
  - System.IdentityModel.AsyncResult.AsyncWaitHandle
  - System.IdentityModel.AsyncResult.Complete(System.Boolean)
  - System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  - System.IdentityModel.AsyncResult.CompletedSynchronously
  - System.IdentityModel.AsyncResult.Dispose
  - System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  - System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  - System.IdentityModel.AsyncResult.Finalize
  - System.IdentityModel.AsyncResult.IsCompleted
  langs:
  - csharp
  name: AsyncResult
  nameWithType: AsyncResult
  fullName: System.IdentityModel.AsyncResult
  type: Class
  summary: "Абстрактный базовый класс, реализующий <xref:System.IAsyncResult>интерфейса.</xref:System.IAsyncResult> Служит базовым классом, из которой извлекается <xref:System.IAsyncResult>объекты, которые могут использоваться для общих сценариев асинхронного программирования.</xref:System.IAsyncResult>"
  remarks: "Дополнительные сведения см. <xref:System.IAsyncResult?displayProperty=fullName>интерфейса.</xref:System.IAsyncResult?displayProperty=fullName>       <xref:System.IdentityModel.TypedAsyncResult%601>Класс является производным от AsyncResult.</xref:System.IdentityModel.TypedAsyncResult%601>"
  syntax:
    content: 'public abstract class AsyncResult : IAsyncResult, IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IAsyncResult
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor
  id: '#ctor'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызывается из конструкторов в производных классах для инициализации нового экземпляра <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> класс, у которого нет делегат обратного вызова и объект состояния."
  syntax:
    content: protected AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызывается из конструкторов в производных классах для инициализации нового экземпляра <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> класс, который не имеет делегат обратного вызова, но имеет состояние объекта."
  syntax:
    content: protected AsyncResult (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции."
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  id: '#ctor(System.AsyncCallback,System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызывается из конструкторов в производных классах для инициализации нового экземпляра <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> класс, имеющий делегат обратного вызова и объект состояния."
  syntax:
    content: protected AsyncResult (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции."
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncState
  id: AsyncState
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Получает определенный пользователем объект, который определяет или содержит сведения об асинхронной операции."
  remarks: "Дополнительные сведения см. <xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName>свойство.</xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName>"
  syntax:
    content: public object AsyncState { get; }
    return:
      type: System.Object
      description: "Определенный пользователем объект, который определяет или содержит сведения об асинхронной операции."
  overload: System.IdentityModel.AsyncResult.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  id: AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Возвращает <xref:System.Threading.WaitHandle>, используемый для ожидания завершения асинхронной операции.</xref:System.Threading.WaitHandle>"
  remarks: "Дополнительные сведения см. <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName>свойство.</xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: "Объект <xref:System.Threading.WaitHandle>, используемый для ожидания завершения асинхронной операции.</xref:System.Threading.WaitHandle>"
  overload: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  id: Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызовите эту версию завершения после завершения асинхронной операции и исключение не обнаружена. Он обновляет состояние операции и уведомляет обратного вызова."
  syntax:
    content: protected void Complete (bool completedSynchronously);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если асинхронная операция выполнена синхронно. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  id: Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызовите эту версию завершения, если нужно вызывать исключение во время обработки. Помимо уведомление обратного вызова, он перехватывает исключение и сохраняет его во время вызова <xref:System.IdentityModel.AsyncResult.End*>метод.</xref:System.IdentityModel.AsyncResult.End*>"
  syntax:
    content: protected void Complete (bool completedSynchronously, Exception exception);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если асинхронная операция выполнена синхронно. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: exception
      type: System.Exception
      description: "Исключение, которое возникло во время выполнения асинхронной операции."
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  id: CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Возвращает значение, указывающее, выполнялась ли асинхронная операция синхронно."
  remarks: "Дополнительные сведения см. <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName>свойство.</xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName>"
  syntax:
    content: public bool CompletedSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если асинхронная операция выполнена синхронно. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.CompletedSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose
  id: Dispose
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Освобождает ресурсы, используемые текущим экземпляром <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> класса."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Вызывается методом <xref href=&quot;System.IdentityModel.AsyncResult.Dispose&quot;> </xref> и <xref:System.IdentityModel.AsyncResult.Finalize*>методов, чтобы освободить управляемые и неуправляемые ресурсы, используемые текущим экземпляром <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> класса</xref:System.IdentityModel.AsyncResult.Finalize*>"
  syntax:
    content: protected virtual void Dispose (bool isExplicitDispose);
    parameters:
    - id: isExplicitDispose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы освободить управляемые и неуправляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Указывает, что это явный вызов Dispose."
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  id: End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Этот метод вызывается при `End` функция, завершении асинхронной операции. Гарантирует, что асинхронная операция завершена и некоторые распространенные проверку."
  syntax:
    content: public static void End (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Представляет состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.AsyncResult.End*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Finalize
  id: Finalize
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Позволяет <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref> объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.IsCompleted
  id: IsCompleted
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Возвращает значение, указывающее, выполнена ли асинхронная операция."
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если операция завершена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.AsyncResult.IsCompleted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.AsyncResult.#ctor
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.AsyncResult.AsyncState
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IdentityModel.AsyncResult.Finalize
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
- uid: System.IdentityModel.AsyncResult.IsCompleted
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
- uid: System.IdentityModel.AsyncResult.#ctor*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult
  nameWithType: AsyncResult.AsyncResult
- uid: System.IdentityModel.AsyncResult.AsyncState*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
- uid: System.IdentityModel.AsyncResult.Complete*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete
  nameWithType: AsyncResult.Complete
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose
  nameWithType: AsyncResult.Dispose
- uid: System.IdentityModel.AsyncResult.End*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End
  nameWithType: AsyncResult.End
- uid: System.IdentityModel.AsyncResult.Finalize*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize
  nameWithType: AsyncResult.Finalize
- uid: System.IdentityModel.AsyncResult.IsCompleted*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
