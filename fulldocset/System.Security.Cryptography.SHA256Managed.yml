### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA256Managed
  id: SHA256Managed
  children:
  - System.Security.Cryptography.SHA256Managed.#ctor
  - System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA256Managed.HashFinal
  - System.Security.Cryptography.SHA256Managed.Initialize
  langs:
  - csharp
  name: SHA256Managed
  nameWithType: SHA256Managed
  fullName: System.Security.Cryptography.SHA256Managed
  type: Class
  summary: "Вычисляет <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> хэш для входных данных с помощью управляемой библиотеки."
  remarks: "Хэш-код используется в качестве уникального значения фиксированной длины, представляющего большой объем данных. Хэши двух наборов данных должны совпадать только в том случае, если соответствующие данные также совпадают. Небольшие изменения в данных приводят к непредсказуемым изменениям в хэш.       Размер хэша алгоритма SHA256Managed, применяющий составляет 256 бит."
  example:
  - "The following example calculates the SHA-256 hash for all files in a directory.  \n  \n [!code-cpp[Classic SHA256 Example#1](~/add/codesnippet/cpp/t-system.security.crypto_6_1.cpp)]\n [!code-cs[Classic SHA256 Example#1](~/add/codesnippet/csharp/t-system.security.crypto_6_1.cs)]\n [!code-vb[Classic SHA256 Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA256Managed : System.Security.Cryptography.SHA256
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA256
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA256.Create
  - System.Security.Cryptography.SHA256.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA256Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA256Managed
  langs:
  - csharp
  name: SHA256Managed()
  nameWithType: SHA256Managed.SHA256Managed()
  fullName: System.Security.Cryptography.SHA256Managed.SHA256Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;> </xref> класса с помощью управляемой библиотеки."
  remarks: "Хэш-код используется в качестве уникального значения фиксированной длины, представляющего большой объем данных. Хэши двух наборов данных должны совпадать только в том случае, если соответствующие данные также совпадают. Небольшие изменения в данных приводят к непредсказуемым изменениям в хэш.       Размер хэша для <xref:System.Security.Cryptography.SHA256Managed>алгоритм составляет 256 бит.</xref:System.Security.Cryptography.SHA256Managed>       **Важные** Если включить следующий параметр в локальной политике безопасности безопасности или в рамках групповой политики вы получите <xref:System.InvalidOperationException>при попытке использовать этот конструктор: **Системная криптография: использовать FIPS-совместимые алгоритмы для шифрования, хэширования и подписывания** </xref:System.InvalidOperationException>"
  syntax:
    content: public SHA256Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA256Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Параметр безопасности федеральным стандартам обработки информации (FIPS) включен. Эта реализация не входит криптографических алгоритмов Windows Platform FIPS проверки."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA256Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA256Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA256Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "При переопределении в производном классе, передает данные, записанные в объект, в <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> хэш-алгоритма для вычисления хэша."
  remarks: "Этот метод не вызывается кодом приложения.       Этот абстрактный метод выполняет вычисление хэша. Каждая операция записи в криптографический потоковый объект передает данные с помощью этого метода. Для каждого блока данных этот метод обновляет состояние хэш-объекта, поэтому правильное значение хэша возвращается в конце потока данных."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Входные данные."
    - id: ibStart
      type: System.Int32
      description: "Смещение в массиве байтов, из которого следует использовать данные."
    - id: cbSize
      type: System.Int32
      description: "Число байтов в массиве для использования в качестве данных."
  overload: System.Security.Cryptography.SHA256Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA256Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA256Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA256Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA256Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "При переопределении в производном классе, завершает вычисление хэша после обработки последних данных криптографическим потоковым объектом."
  remarks: "Этот метод не вызывается кодом приложения. Этот метод завершает все частичные вычисления и возвращает правильное значение хэша потока данных."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Вычисляемый хэш-код."
  overload: System.Security.Cryptography.SHA256Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA256Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA256Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA256Managed.Initialize()
  fullName: System.Security.Cryptography.SHA256Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Security.Cryptography.SHA256Managed&quot;> </xref>."
  remarks: "Хэш-код используется в качестве уникального значения фиксированной длины, представляющего большой объем данных. Хэши двух наборов данных должны совпадать только в том случае, если соответствующие данные также совпадают. Небольшие изменения в данных приводят к непредсказуемым изменениям в хэш.       Размер хэша для <xref:System.Security.Cryptography.SHA256Managed>алгоритм составляет 256 бит.</xref:System.Security.Cryptography.SHA256Managed>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA256Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA256
  isExternal: false
  name: System.Security.Cryptography.SHA256
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA256Managed.#ctor
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: SHA256Managed()
  nameWithType: SHA256Managed.SHA256Managed()
  fullName: System.Security.Cryptography.SHA256Managed.SHA256Managed()
- uid: System.Security.Cryptography.SHA256Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA256Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA256Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA256Managed.HashFinal
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA256Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA256Managed.HashFinal()
- uid: System.Security.Cryptography.SHA256Managed.Initialize
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA256Managed.Initialize()
  fullName: System.Security.Cryptography.SHA256Managed.Initialize()
- uid: System.Security.Cryptography.SHA256Managed.#ctor*
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: SHA256Managed
  nameWithType: SHA256Managed.SHA256Managed
- uid: System.Security.Cryptography.SHA256Managed.HashCore*
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA256Managed.HashCore
- uid: System.Security.Cryptography.SHA256Managed.HashFinal*
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA256Managed.HashFinal
- uid: System.Security.Cryptography.SHA256Managed.Initialize*
  parent: System.Security.Cryptography.SHA256Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA256Managed.Initialize
