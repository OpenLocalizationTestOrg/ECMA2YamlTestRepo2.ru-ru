### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePoint
  id: ServicePoint
  children:
  - System.Net.ServicePoint.Address
  - System.Net.ServicePoint.BindIPEndPointDelegate
  - System.Net.ServicePoint.Certificate
  - System.Net.ServicePoint.ClientCertificate
  - System.Net.ServicePoint.CloseConnectionGroup(System.String)
  - System.Net.ServicePoint.ConnectionLeaseTimeout
  - System.Net.ServicePoint.ConnectionLimit
  - System.Net.ServicePoint.ConnectionName
  - System.Net.ServicePoint.CurrentConnections
  - System.Net.ServicePoint.Expect100Continue
  - System.Net.ServicePoint.IdleSince
  - System.Net.ServicePoint.MaxIdleTime
  - System.Net.ServicePoint.ProtocolVersion
  - System.Net.ServicePoint.ReceiveBufferSize
  - System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePoint.SupportsPipelining
  - System.Net.ServicePoint.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
  type: Class
  summary: "Обеспечивает управление HTTP-соединений."
  remarks: "Класс ServicePoint обрабатывает подключения к Интернет-ресурсу на основе сведений об узле, переданный в ресурса Универсальный код ресурса (URI). Определяет сведения, хранит объект ServicePoint, которые затем используются всеми последующими запросами к этому ресурсу, начального подключения к ресурсу.       Объекты ServicePoint управляются <xref:System.Net.ServicePointManager>класса, а также создания, при необходимости, <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName>метод.</xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> </xref:System.Net.ServicePointManager> Объекты ServicePoint никогда не создаются непосредственно, но всегда создаются и управляются <xref:System.Net.ServicePointManager>классом.</xref:System.Net.ServicePointManager> Максимальное число ServicePoint объекты, которые могут быть созданы задается <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>свойство.</xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>       Каждый объект ServicePoint сохраняет свое подключение к Интернет-ресурсу до простоя больше времени, указанного в <xref:System.Net.ServicePoint.MaxIdleTime%2A>свойство.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Если экземпляр ServicePoint превышает <xref:System.Net.ServicePoint.MaxIdleTime%2A>значение, он может использоваться для другого подключения.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Значение по умолчанию <xref:System.Net.ServicePoint.MaxIdleTime%2A>задается <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>свойство.</xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> </xref:System.Net.ServicePoint.MaxIdleTime%2A>       Когда <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A>свойству присвоено значение, отличное от -1, а по истечении указанного времени ServicePoint активное подключение закрывается после его служб следующего запроса.</xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> Это полезно для приложений, которые не требуют активных подключений, открытых на неопределенно долгое время, так как это делается по умолчанию.      Настроек [!NOTE] настроек в условиях высокой нагрузки, для некоторых приложений может не хватить свободных потоков в пул потоков, что может привести к низкой производительности системы (такие как время транзакциям). В разделе [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) для некоторых изменений конфигурации, можно сделать, чтобы устранить эту проблему."
  example:
  - "The following code example creates a ServicePoint object that connects to the URI www.contoso.com.  \n  \n [!code-cpp[System.Net.ServicePoint#1](~/add/codesnippet/cpp/t-system.net.servicepoint_1.cpp)]\n [!code-vb[System.Net.ServicePoint#1](~/add/codesnippet/visualbasic/t-system.net.servicepoint_1.vb)]\n [!code-cs[System.Net.ServicePoint#1](~/add/codesnippet/csharp/t-system.net.servicepoint_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.CompilerServices.FriendAccessAllowed]

      public class ServicePoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Address
  id: Address
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Получает универсальный код ресурса (URI) сервера, это <xref href=&quot;System.Net.ServicePoint&quot;> </xref> соединения объекта."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_3_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_3_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_3_1.cs)]"
  syntax:
    content: public Uri Address { get; }
    return:
      type: System.Uri
      description: "Экземпляр <xref:System.Uri>класс, который содержит URI Интернет-сервера, это <xref href=&quot;System.Net.ServicePoint&quot;> </xref> соединения объекта.</xref:System.Uri>"
  overload: System.Net.ServicePoint.Address*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Net.ServicePoint&quot;> </xref> Находится в режиме узла."
  platform:
  - net462
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  id: BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Определяет делегат для связи локальной <xref:System.Net.IPEndPoint>с <xref href=&quot;System.Net.ServicePoint&quot;> </xref>.</xref:System.Net.IPEndPoint>"
  remarks: "Некоторые методы балансировки нагрузки требуется клиент для использования определенного локального IP адрес и номер порта, а не <xref:System.Net.IPAddress.Any?displayProperty=fullName>(или <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName>для протокола Интернета версии 6) и эфемерный порт</xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> </xref:System.Net.IPAddress.Any?displayProperty=fullName> Ваш BindIPEndPointDelegate может выполнить это требование."
  syntax:
    content: public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }
    return:
      type: System.Net.BindIPEndPoint
      description: "Делегат, который приводит <xref href=&quot;System.Net.ServicePoint&quot;> </xref> для использования определенного локального Internet Protocol (IP) адрес и номер порта. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.BindIPEndPointDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Certificate
  id: Certificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает сертификат, полученный для данного <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  remarks: "Несмотря на то что <xref:System.Net.ServicePoint>объект может выполнять несколько подключений к Интернет-ресурсу, он может обслуживать только один сертификат.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_1_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_1_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_1_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Экземпляр <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> класс, содержащий сертификат безопасности, полученный для данного <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  overload: System.Net.ServicePoint.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ClientCertificate
  id: ClientCertificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает последний сертификат клиента, отправляются на сервер."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_19_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_19_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_19_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> Отправляются на сервер, содержащий открытые значения последнего сертификата клиента."
  overload: System.Net.ServicePoint.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  id: CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Удаляет указанную группу подключений из этого <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  remarks: "Группы подключений связывают набор запросов с определенным подключением или набор подключений. Этот метод удаляет и закрывает все соединения, принадлежащие к указанной группе подключений."
  syntax:
    content: public bool CloseConnectionGroup (string connectionGroupName);
    parameters:
    - id: connectionGroupName
      type: System.String
      description: "Имя группы подключения, которая содержит соединения следует закрыть и удалить из этой точки обслуживания."
    return:
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, закрыт ли группы подключения.</xref:System.Boolean>"
  overload: System.Net.ServicePoint.CloseConnectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  id: ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает количество миллисекунд, по истечении которого активный <xref href=&quot;System.Net.ServicePoint&quot;> </xref> соединение закрывается."
  remarks: "Это свойство можно использовать, чтобы убедиться, что <xref:System.Net.ServicePoint>активных подключений объекта не оставаться открытым бесконечно.</xref:System.Net.ServicePoint> Это свойство предназначено для сценариев, где нужно удалить и повторно периодически, например балансирования нагрузки подключений.       По умолчанию когда <xref:System.Net.FtpWebRequest.KeepAlive%2A>— `true` для запроса, <xref:System.Net.ServicePoint.MaxIdleTime%2A>свойство задает время ожидания закрытия <xref:System.Net.ServicePoint>подключения из-за отсутствия активности.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.FtpWebRequest.KeepAlive%2A> Если <xref:System.Net.ServicePoint>имеется активных соединений <xref:System.Net.ServicePoint.MaxIdleTime%2A>не действует и соединения оставаться открытым бесконечно.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint>       Если свойство ConnectionLeaseTimeout присвоено значение, отличное от-1 и после указанного времени истечения активного <xref:System.Net.ServicePoint>подключение закрывается после обслуживания запроса, задав <xref:System.Net.FtpWebRequest.KeepAlive%2A>для `false` этого запроса.</xref:System.Net.FtpWebRequest.KeepAlive%2A> </xref:System.Net.ServicePoint>       Установка этого значения влияет на все соединения, управляется <xref:System.Net.ServicePoint>объекта.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_15_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_15_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_15_1.cpp)]"
  syntax:
    content: public int ConnectionLeaseTimeout { get; set; }
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>, задающий число миллисекунд, активный <xref href=&quot;System.Net.ServicePoint&quot;> </xref> соединение остается открытым.</xref:System.Int32> Значение по умолчанию — -1, что позволяет активному <xref href=&quot;System.Net.ServicePoint&quot;> </xref> подключения оставаться открытым неограниченное количество времени. Присвойте этому свойству значение 0, чтобы принудительно <xref href=&quot;System.Net.ServicePoint&quot;> </xref> закрыть после обслуживания запроса подключения."
  overload: System.Net.ServicePoint.ConnectionLeaseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение, указанное для операции задания является отрицательным числом меньше -1."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLimit
  id: ConnectionLimit
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает максимальное число подключений, разрешенное для этого <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  remarks: "Свойство ConnectionLimit задает максимальное число подключений <xref:System.Net.ServicePoint>может сделать Интернет-ресурса.</xref:System.Net.ServicePoint> Значение свойства ConnectionLimit присвоено значение <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>свойства при <xref:System.Net.ServicePoint>создается объект; последующие изменения <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>не оказывают влияния на существующие <xref:System.Net.ServicePoint>объектов.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the ConnectionLimit property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).  \n  \n [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_6_1.cpp)]\n [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_6_1.vb)]\n [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_6_1.cs)]"
  syntax:
    content: public int ConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число подключений, разрешенное для этого <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  overload: System.Net.ServicePoint.ConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Предел для числа подключений меньше или равно 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionName
  id: ConnectionName
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает имя подключения."
  remarks: "Если <xref:System.Net.ServicePoint>объект был создан с <xref:System.Uri>объекта ( <xref:System.Net.ServicePointManager.FindServicePoint%2A>или <xref:System.Net.ServicePointManager.FindServicePoint%2A>методов, например), то свойство ConnectionName представляет <xref:System.Uri.Scheme%2A>свойство <xref:System.Uri>объект, используемый.</xref:System.Uri> </xref:System.Uri.Scheme%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Uri> </xref:System.Net.ServicePoint>       Если <xref:System.Net.ServicePoint>объект был создан из сетевого узла и порт, ConnectionName свойство содержит строку, представляющую узле, а сети порт</xref:System.Net.ServicePoint> Если ConnectionName свойству при создании из узла и порта, только <xref:System.Net.WebRequest>объекты с тем же <xref:System.Net.WebRequest.ConnectionGroupName%2A>значения, можно использовать это <xref:System.Net.ServicePoint>объекта.</xref:System.Net.ServicePoint> </xref:System.Net.WebRequest.ConnectionGroupName%2A> </xref:System.Net.WebRequest>"
  example:
  - >-
    [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_0_1.cpp)]
     [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_0_1.vb)]
     [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_0_1.cs)]
  syntax:
    content: public string ConnectionName { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, представляющий имя подключения.</xref:System.String>"
  overload: System.Net.ServicePoint.ConnectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CurrentConnections
  id: CurrentConnections
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает число открытых подключений, связанных с этим <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  remarks: "Свойство служба\\текущих подключений содержит число открытых подключений Интернет, связанный с этим <xref:System.Net.ServicePoint>объекта.</xref:System.Net.ServicePoint> Значение служба\\текущих подключений не может выходить за границы <xref:System.Net.ServicePoint.ConnectionLimit%2A>.</xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example uses the CurrentConnections property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_2_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_2_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_2_1.cs)]"
  syntax:
    content: public int CurrentConnections { get; }
    return:
      type: System.Int32
      description: "Число открытых соединений, связанный с этим <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта."
  overload: System.Net.ServicePoint.CurrentConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает <xref:System.Boolean>значение, определяющее, является ли 100-продолжить использовать поведение.</xref:System.Boolean>"
  remarks: "Если значение этого свойства `true`, клиент запрашивает, использующих `POST` метод ожидается 100-продолжения ответа от сервера, чтобы указать, что клиент должен отправить данные. Этот механизм позволяет клиентам избежать отправки больших объемов данных по сети, если сервер, основываясь на заголовках запроса планирует отклонить запрос.       Предположим, например, свойство Expect100Continue `false`. Если запрос отправлен на сервер, в нем содержатся данные. Если после прочтения заголовков запроса, сервер требует проверки подлинности и отправляет ответ 401, клиент должен повторно отправить данные с заголовками надлежащую проверку подлинности.       Если свойство Expect100Continue `true`, заголовки запроса отправляются на сервер. Если сервер не отклонил запрос, он отправляет 100-продолжения ответа сигнализации передачи данных. Если, как в предыдущем примере, сервер требует проверки подлинности, он отправляет ответ 401 и клиент не отправляет данные без необходимости.       Изменение значения этого свойства не влияет на существующие подключения. Затрагиваются только новые подключения, созданным после такого изменения.       Ожидается 100-продолжить поведение полностью описаны в разделе IETF RFC 2616 10.1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_4_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_4_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_4_1.cs)]"
  syntax:
    content: public bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>следует ожидать 100-ответы для продолжения <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref> запрашивает; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.IdleSince
  id: IdleSince
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает дату и время <xref href=&quot;System.Net.ServicePoint&quot;> </xref> последнего подключения объекта к узлу."
  remarks: "Свойство IdleSince записывает последние дата и время, по которому точка службы был отключен от узла. Если разница между текущим временем и IdleSince превышает значение <xref:System.Net.ServicePoint.MaxIdleTime%2A>, <xref:System.Net.ServicePoint>объект доступен для использования другим подключением.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A>"
  example:
  - "The following code example uses the IdleSince property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_7_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_7_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_7_1.cs)]"
  syntax:
    content: public DateTime IdleSince { get; }
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, содержащий дату и время, когда <xref href=&quot;System.Net.ServicePoint&quot;> </xref> последнего подключения объекта.</xref:System.DateTime>"
  overload: System.Net.ServicePoint.IdleSince*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.MaxIdleTime
  id: MaxIdleTime
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает количество времени, подключение, связанное с <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объект остается неактивным до закрытия соединения."
  remarks: "Можно задать MaxIdleTime <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>для указания, что подключение, связанное с <xref:System.Net.ServicePoint>объект никогда не должно истечь.</xref:System.Net.ServicePoint> </xref:System.Threading.Timeout.Infinite?displayProperty=fullName>       Значение по умолчанию свойства MaxIdleTime значение <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>свойства при <xref:System.Net.ServicePoint>создан объект.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> Последующие изменения <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>свойства не оказывают влияния на существующие <xref:System.Net.ServicePoint>объектов.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>       Если MaxIdleTime соединения, связанные с <xref:System.Net.ServicePoint>будет превышено, подключение остается открытым до приложение пытается использовать соединение.</xref:System.Net.ServicePoint> В этот момент платформа закрывает подключение и создает новое подключение к удаленному узлу."
  example:
  - "The following code example uses the MaxIdleTime property to set and retrieve the <xref:System.Net.ServicePoint> idle time.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_11_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_11_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_11_1.cs)]"
  syntax:
    content: public int MaxIdleTime { get; set; }
    return:
      type: System.Int32
      description: "Время в миллисекундах, подключение, связанное с <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объект может простаивать до его закрытия и повторного использования для другого подключения."
  overload: System.Net.ServicePoint.MaxIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxIdleTime задано значение меньше, чем &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; или больше, чем &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePoint.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает версию протокола HTTP, <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объектов используют."
  remarks: "Версии протокола HTTP, HTTP/1.0 и HTTP/1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_22_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_22_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_22_1.cs)]"
  syntax:
    content: public virtual Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "Объект <xref:System.Version>, содержащий версию протокола HTTP, <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объектов используют.</xref:System.Version>"
  overload: System.Net.ServicePoint.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает размер приемного буфера для сокета, используемого этим <xref href=&quot;System.Net.ServicePoint&quot;> </xref>."
  remarks: "Дополнительные сведения см. в разделе <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.</xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_9_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_9_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_9_1.cpp)]"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>, содержащее размер в байтах буфера приема.</xref:System.Int32> Значение по умолчанию — 8192."
  overload: System.Net.ServicePoint.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение, указанное для операции задания больше, чем <xref:System.Int32>.</xref:System.Int32>"
  platform:
  - net462
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Включает или отключает параметр поддержания активности соединения TCP."
  remarks: "Приложение может запросить, что поставщик TCP/IP позволяют использовать пакетов поддержания активности соединения TCP. Значение по умолчанию — что отключено использование пакетов поддержания активности соединения TCP.       Параметры по умолчанию в сокета TCP инициализировать аут поддержания активности устанавливается до 2 часов, а интервал в 1 секунду. `keepAliveTime` Параметр задает время ожидания в миллисекундах при отсутствии активности до отправки первого пакета поддержания активности. `keepAliveInterval` Параметр задает интервал в миллисекундах между при последующих пакетов поддержания активности отправляются в том случае, если не получено подтверждение. Число проб активности нельзя изменить и равно 10.       Если подключение TCP удаляется в результате активность, <xref:System.Net.Sockets.SocketError>из <xref:System.Net.Sockets.SocketError>возвращается сокете, на какие вызовы выполняется и все последующие вызовы будут завершаться <xref:System.Net.Sockets.SocketError> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Если задано значение true, а затем TCP параметр поддержания активности соединения TCP будет включен с помощью указанного `keepAliveTime` и `keepAliveInterval` значения.       Если задано значение false, затем параметр поддержания активности TCP отключен и остальные параметры игнорируются.       Значение по умолчанию — &quot;ложь&quot;."
    - id: keepAliveTime
      type: System.Int32
      description: "Указывает время ожидания в миллисекундах, при отсутствии активности до отправки первого пакета поддержания активности.       Значение должно быть больше 0.  Если передается значение меньше или равно нулю <xref:System.ArgumentOutOfRangeException>возникает исключение.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Задает интервал (в миллисекундах) между последовательными пакеты проверки активности отправляются в том случае, если не получено подтверждение.       Значение должно быть больше 0.  Если передается значение меньше или равно нулю <xref:System.ArgumentOutOfRangeException>возникает исключение.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePoint.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение, указанное для <code> keepAliveTime </code> или <code> keepAliveInterval </code> меньше или равно 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.SupportsPipelining
  id: SupportsPipelining
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Указывает, является ли <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объект поддерживает Конвейерные подключения."
  remarks: "Этот режим позволяет клиентам отправлять несколько запросов через постоянное подключение без ожидания каждого ответа, полученного от сервера. Сервер отправляет ответы в том же порядке, как запросы были получены.       Конвейеризация подробно описан в IETF RFC 2616 разделе 8.1.2.2 документа."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_18_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_18_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_18_1.cs)]"
  syntax:
    content: public bool SupportsPipelining { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объект поддерживает Конвейерные подключения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.SupportsPipelining*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает <xref:System.Boolean>значение, которое определяет, используется ли алгоритм Nagle для подключений, управляемых этим объектом <xref href=&quot;System.Net.ServicePoint&quot;> </xref> объекта.</xref:System.Boolean>"
  remarks: "Алгоритм Nagle используется для буферизации небольших пакетов данных и передачи их в виде одного пакета. Этот процесс называют «уменьшает», широко используется, так как он уменьшает количество передаваемых пакетов и снижает затраты времени на пакет.       Изменение значения этого свойства не влияет на существующие подключения. Затрагиваются только новые подключения, созданным после такого изменения.       Алгоритм Nagle полностью описаны в IETF RFC 896."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_16_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_16_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_16_1.cs)]"
  syntax:
    content: public bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для использования алгоритма Nagle; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.ServicePoint.Address
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
- uid: System.Net.BindIPEndPoint
  parent: System.Net
  isExternal: false
  name: BindIPEndPoint
  nameWithType: BindIPEndPoint
  fullName: System.Net.BindIPEndPoint
- uid: System.Net.ServicePoint.Certificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.ServicePoint.ClientCertificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePoint.ConnectionLimit
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Net.ServicePoint.MaxIdleTime
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.ServicePoint.ReceiveBufferSize
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePoint.SupportsPipelining
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
- uid: System.Net.ServicePoint.Address*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
- uid: System.Net.ServicePoint.BindIPEndPointDelegate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
- uid: System.Net.ServicePoint.Certificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
- uid: System.Net.ServicePoint.ClientCertificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup
  nameWithType: ServicePoint.CloseConnectionGroup
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
- uid: System.Net.ServicePoint.ConnectionLimit*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince*
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
- uid: System.Net.ServicePoint.MaxIdleTime*
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
- uid: System.Net.ServicePoint.ReceiveBufferSize*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePoint.SetTcpKeepAlive
- uid: System.Net.ServicePoint.SupportsPipelining*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm*
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
