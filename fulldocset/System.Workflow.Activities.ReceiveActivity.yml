### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ReceiveActivity
  id: ReceiveActivity
  children:
  - System.Workflow.Activities.ReceiveActivity.#ctor
  - System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  - System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  - System.Workflow.Activities.ReceiveActivity.Context
  - System.Workflow.Activities.ReceiveActivity.ContextToken
  - System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  - System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.FaultMessage
  - System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  - System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  - System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.ReceiveActivity.InitializeProperties
  - System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.OperationValidation
  - System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  - System.Workflow.Activities.ReceiveActivity.ParameterBindings
  - System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  - System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  langs:
  - csharp
  name: ReceiveActivity
  nameWithType: ReceiveActivity
  fullName: System.Workflow.Activities.ReceiveActivity
  type: Class
  summary: "Действие службы, реализующее операцию, определенную [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] контракт службы."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Действие ReceiveActivity используется в том случае, если рабочий процесс реализует операцию, определенную в [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] контракт службы. ReceiveActivity можно реализовать операцию на основе уже определенного контракта службы, или определить контракт службы и операцию внутри рабочего процесса. Последний называется контракта первого рабочего процесса.       Действие ReceiveActivity поддерживает набор стандартных шаблонам обмена сообщениями. Эти шаблоны включают: - одностороннего получения клиент отправляет сообщение не ожидает службы для отправки ответа. Операция контракта должна иметь тип возвращаемого значения void.      -Получение запроса — Отправка ответа после сообщение принимается и обрабатывается действием ReceiveActivity ответ отправляется обратно клиенту. При операция контракта имеет возвращаемый тип void, действию отправки отправляется подтверждение.      -Получение запроса — отправка ошибки после сообщение принимается и обрабатывается ReceiveActivity действия, ответ или ошибка отправляется обратно клиенту.      Настроек [!NOTE] настроек, чтобы сохраняемости работает правильно и не сохраняет временные сообщения, убедитесь, что дочерние действия ReceiveActivity не сохраняются сами по себе. Это может произойти, если дочерние действия переходят в состояние бездействия при создании поставщика сохраняемости с `UnloadOnIdle` значение `true`, для экземпляра.      Настроек [!NOTE] настроек это действие является частью [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. Эквивалентные действия в [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], <xref:System.ServiceModel.Activities.Receive>.</xref:System.ServiceModel.Activities.Receive> см."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))]

      public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> класса."
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity>Конструктор обычно вызывается в файле с кодом, созданном конструктором рабочих процессов.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#11](~/add/codesnippet/csharp/receiveactivity/snippets.cs#11)]"
  syntax:
    content: public ReceiveActivity ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> класса, инициализация его <xref:System.Workflow.ComponentModel.Activity.Name*>свойство.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity>Конструктор обычно вызывается в файле с кодом, созданном конструктором рабочих процессов.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  \n  \n [!code-cs[ReceiveActivity#12](~/add/codesnippet/csharp/receiveactivity/snippets.cs#12)]"
  syntax:
    content: public ReceiveActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя, присваиваемое экземпляра действия."
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Для добавления."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  id: CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возвращает или задает операцию вызывает новый экземпляр службы рабочего процесса должен быть создан."
  remarks: "Объект <xref:System.Workflow.Activities.ReceiveActivity>действия, которое свойство CanCreateInstance имеет значение `true` представляет операцию службы, при вызове клиентом службы, не являясь частью диалога, инициирует создание нового экземпляра службы рабочего процесса должен быть создан.</xref:System.Workflow.Activities.ReceiveActivity>       Службы рабочих процессов, которые не имеют <xref:System.Workflow.Activities.ReceiveActivity>действие с CanCreateInstance равным `true` невозможно создать экземпляр клиента с помощью вызова операции службы.</xref:System.Workflow.Activities.ReceiveActivity> Такие рабочие процессы могут создаваться с помощью <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>метод связанного <xref:System.Workflow.Runtime.WorkflowRuntime>объекта.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       Значение по умолчанию для этого свойства — `false`."
  example:
  - "The following example shows how to set the `CanCreateInstance` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#0](~/add/codesnippet/csharp/receiveactivity/snippets.cs#0)]"
  syntax:
    content: public bool CanCreateInstance { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если создается новый экземпляр рабочего процесса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Context
  id: Context
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возвращает сведения о контексте для этого действия."
  remarks: "Сведения контекста используются для взаимодействия между клиентом и службой, он взаимодействует с и включают, например, данные идентификации для корреляции."
  example:
  - "The following example shows how to access the `Context` property.  \n  \n [!code-cs[ReceiveActivity#17](~/add/codesnippet/csharp/receiveactivity/snippets.cs#17)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Объект &lt;xref:System.Collections.Generic.IDictionary%602&gt; , содержащий сведения контекста для данного действия."
  overload: System.Workflow.Activities.ReceiveActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  id: ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Представляет маркер, который может использоваться для указания контекста, который должен использоваться для корреляции обмена данными между <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия и клиента, с которым взаимодействует действие."
  remarks: "Каждый ContextToken определяется в области действия-владельца. Пользователи могут моделировать два различных маркера контекста с одинаковыми именами, но относящиеся к различным областям. Значения контекстов, связанные с этими маркерами контекста, различаются во время выполнения.       По умолчанию для каждого рабочего процесса имеется неявный маркер корневого контекста, областью действия на корневом уровне действия. Маркер корневого контекста называется «(RootContext)» и <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A>— `null`.</xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> Если <xref:System.Workflow.Activities.ReceiveActivity>действие не должно быть ContextToken, связанные с ним, используется маркер корневого контекста.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following code example shows how to access the `ContextToken` property. This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#1](~/add/codesnippet/csharp/receiveactivity/snippets.cs#1)]"
  syntax:
    content: public System.Workflow.Activities.ContextToken ContextToken { get; set; }
    return:
      type: System.Workflow.Activities.ContextToken
      description: "Объект <xref href=&quot;System.Workflow.Activities.ContextToken&quot;> </xref> может использоваться для корреляции."
  overload: System.Workflow.Activities.ReceiveActivity.ContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Для добавления."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  id: FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Исключение, которое возвращается, когда завершается выполнение действия получения."
  remarks: "Если экземпляр типа имеет значение свойства FaultMessage <xref:System.ServiceModel.FaultException>, клиенту по завершении возвращается ошибка.</xref:System.ServiceModel.FaultException>       Если задано свойство FaultMessage исключение во время выполнения действия, клиенту возвращается заданная ошибка. Если исключение создается во время выполнения действия и свойству FaultMessage связанной операции имеется <xref:System.ServiceModel.FaultContractAttribute>атрибут, указывающий тип ошибки, который соответствует FaultMessage свойства, то канал не находится в состоянии сбоя и клиент может по-прежнему взаимодействия с сервером.</xref:System.ServiceModel.FaultContractAttribute> Если свойство FaultMessage не задано, созданное исключение возвращается как ошибка клиенту."
  example:
  - "The following code sample shows how to access the `FaultMessage` property.  \n  \n [!code-cs[ReceiveActivity#2](~/add/codesnippet/csharp/receiveactivity/snippets.cs#2)]"
  syntax:
    content: public System.ServiceModel.FaultException FaultMessage { get; set; }
    return:
      type: System.ServiceModel.FaultException
      description: "Объект <xref:System.ServiceModel.FaultException>, содержащий текст ошибки сообщения и сведения о.</xref:System.ServiceModel.FaultException>"
  overload: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  id: FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Представляет <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> , ориентированном <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>свойство.</xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>"
  remarks: "Это свойство зависимостей может использоваться для настройки связи между действие receive <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>свойство и свойство/поле открытого рабочего процесса типа <xref:System.ServiceModel.FaultException>или другое действие открытым свойством или полем того же типа.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Это свойство зависимостей может также использоваться для задания значения, связанные с <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>свойство <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Это свойство зависимостей может также использоваться для получения привязки или значение, связанное с <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>свойство <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Статический метод, возвращающий сведения контекста для заданного экземпляра действия и маркера контекста."
  remarks: "Сведения контекста используются для взаимодействия между клиентом и службой, он взаимодействует с и включают, например, данные идентификации для корреляции."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#13](~/add/codesnippet/csharp/receiveactivity/snippets.cs#13)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Экземпляр действия, для которого запрашиваются сведения контекста."
    - id: contextToken
      type: System.Workflow.Activities.ContextToken
      description: "Маркер контекста, используемой этим действием."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Коллекция, содержащая на основе словаря <xref:System.Xml.XmlQualifiedName>ключей и связанные с ними <xref:System.String>значения.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Статический метод, возвращающий сведения контекста для заданного экземпляра действия и маркера контекста."
  remarks: "Сведения контекста используются для взаимодействия между клиентом и службой, он взаимодействует с и включают, например, данные идентификации для корреляции."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#15](~/add/codesnippet/csharp/receiveactivity/snippets.cs#15)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Экземпляр действия, для которого запрашиваются сведения контекста."
    - id: contextName
      type: System.String
      description: "Имя маркера контекста, используемой этим действием."
    - id: ownerActivityName
      type: System.String
      description: "Имя имя действия-владельца."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Основанная на словаре коллекция, содержащая <xref:System.Xml.XmlQualifiedName>ключей и связанные с ними <xref:System.String>значения.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  id: GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Статический метод, возвращающий сведения контекста для корневого контекста, связанного с заданным экземпляром действия. Сведения контекста используются для взаимодействия между ведущим приложением и службой рабочего процесса."
  remarks: "Сведения контекста используются для взаимодействия между клиентом и службой, он взаимодействует с и включают, например, данные идентификации для корреляции."
  example:
  - "The following example shows how to use the `GetRootContext` method.  \n  \n [!code-cs[ReceiveActivity#16](~/add/codesnippet/csharp/receiveactivity/snippets.cs#16)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetRootContext (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Экземпляр дочернего действия."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Основанная на словаре коллекция, содержащая <xref:System.Xml.XmlQualifiedName>ключей и связанные с ними <xref:System.String>значения, представляющие сведения контекста для корневого контекста.</xref:System.String> </xref:System.Xml.XmlQualifiedName> Исключения логику создания пользовательских экземпляров которое вызывает создание нового экземпляра сообщение в корневом контексте."
  overload: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  id: GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возвращает <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> атрибуты для службы, реализованной с <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия. Эти атрибуты включают такие элементы, как <> </> *настроек, <> </> *настроек, <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>и следует ли включать информацию об исключениях во все ошибки, возвращаемые из <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>"
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>Свойство является прикрепленным свойством зависимостей определяется <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Присоединено это свойство зависимостей в корневом рабочий процесс, содержащий <xref:System.Workflow.Activities.ReceiveActivity>действия с помощью <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>вызов метода во время разработки.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>Свойство используется для определения атрибутов поведения уровня службы, которые применяются к службе рабочего процесса при запуске.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Эти значения невозможно изменить во время выполнения.      Настроек [!NOTE] настроек, если текущий рабочий процесс запускает другой рабочий процесс с помощью <xref:System.Workflow.Activities.InvokeWorkflowActivity>действия, то вызываемый рабочий процесс не наследует атрибуты службы вызывающего рабочего процесса.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      Настроек [!NOTE] настроек атрибутах службы задано пользовательское действие, это действие включено в рабочем процессе используются эти атрибуты службы. Атрибуты службы используются только для пользовательских действий, если сами пользовательские действия запускается в виде рабочего процесса."
  example:
  - "The following example shows how to use the `GetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#5](~/add/codesnippet/csharp/receiveactivity/snippets.cs#5)]"
  syntax:
    content: public static object GetWorkflowServiceAttributes (object dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "Объект для получения атрибуты службы."
    return:
      type: System.Object
      description: "Объект <xref:System.Object>, представляющий <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> объект, который содержит данные атрибута службы.</xref:System.Object>"
  overload: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Для добавления."
    - id: exception
      type: System.Exception
      description: "Для добавления."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.HandleFault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  id: OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возникает при получении сообщения для операции требуется проверка."
  remarks: "Это необязательный обработчик событий, возникающее, когда <xref:System.Workflow.Activities.ReceiveActivity>действие ожидает получения сообщения.</xref:System.Workflow.Activities.ReceiveActivity> Связанный обработчик может использоваться для выполнения проверок безопасности на основе ClaimSet авторизовать вызов клиентом операции службы, реализуемой <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity>       Параметр <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>для `false` в обработчике событий вызывает отказ в вызове операции службы, и клиент получает <xref:System.ServiceModel.FaultException>.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> Если <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>имеет значение `true`, то вызов операции службы выполняется успешно и <xref:System.Workflow.Activities.ReceiveActivity>действие получает и обрабатывает сообщение.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the `OperationValidation` event.  \n  \n [!code-cs[ReceiveActivity#7](~/add/codesnippet/csharp/receiveactivity/snippets.cs#7)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.OperationValidationEventArgs> OperationValidation;
    return:
      type: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  id: OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Представляет <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> , ориентированном <xref href=&quot;System.Workflow.Activities.ReceiveActivity.OperationValidation&quot;> </xref> событий."
  remarks: "Это свойство событий зависимостей может использоваться для привязки действия получения <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>событий к обработчику открытых событий для данного класса рабочего процесса.</xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возвращает коллекцию привязываемых параметров, обнаруженных в списке формальных параметров службы."
  remarks: "ParameterBindings может использоваться для задания привязки между параметрами операции службы и открытым полем и свойствами рабочего процесса, которые содержат <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> Когда клиент вызывает операцию, значения соответствующего параметра записываются в свойства привязанного рабочего процесса во время выполнения действие receive.       ParameterBindings также может использоваться с дочерними действиями действия получения для чтения значения параметров, передаваемые при вызове клиента. Дочерние действия могут использовать коллекцию ParameterBindings присвоить возвращаемое значение родительского <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity>       Все параметры контракта службы должны быть включены в `ParameterBindings` свойство. Несвязанные параметры вызывают появление предупреждений компилятора, и может возникнуть исключение при <xref:System.Workflow.Activities.ReceiveActivity>возвращает сообщение обратно клиенту.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#3](~/add/codesnippet/csharp/receiveactivity/snippets.cs#3)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "<xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> Параметров для привязки."
  overload: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Определяет контракт и операцию службы, <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> реализует действие."
  remarks: "Свойство ServiceOperationInfo можно задать для экземпляра типа <xref:System.Workflow.Activities.TypedOperationInfo>или <xref:System.Workflow.Activities.OperationInfo>.</xref:System.Workflow.Activities.OperationInfo> </xref:System.Workflow.Activities.TypedOperationInfo> <xref:System.Workflow.Activities.TypedOperationInfo>можно использовать для настройки действия получения с помощью существующей [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] контракт службы.</xref:System.Workflow.Activities.TypedOperationInfo>       Экземпляр <xref:System.Workflow.Activities.OperationInfo>можно использовать для настройки действия получения для реализации контракта первого рабочего процесса.</xref:System.Workflow.Activities.OperationInfo>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#4](~/add/codesnippet/csharp/receiveactivity/snippets.cs#4)]"
  syntax:
    content: public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.OperationInfoBase
      description: "<xref href=&quot;System.Workflow.Activities.OperationInfoBase&quot;> </xref> , Содержащий имя контракта, тип контракта, операция именем (которое может отличаться от имени метода), является ли операция односторонней операции и данные метода, включая параметры, касающиеся операции."
  overload: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  id: SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Задает атрибуты для службы, реализованной с <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия. Эти атрибуты включают такие элементы, как <> </> *настроек, <> </> *настроек и следует ли включать информацию об исключениях во все ошибки, возвращаемые из <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия."
  remarks: "<xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>Свойство является прикрепленным свойством зависимостей определяется <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Присоединено это свойство зависимостей в корневом рабочий процесс, содержащий <xref:System.Workflow.Activities.ReceiveActivity>вызова действия, используя метод SetWorkflowServiceAttributes во время разработки.</xref:System.Workflow.Activities.ReceiveActivity>       <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>Свойство используется для определения атрибутов поведения уровня службы, которые применяются к службе рабочего процесса при запуске.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Эти значения невозможно изменить во время выполнения.      Настроек [!NOTE] настроек, если текущий рабочий процесс запускает другой рабочий процесс с помощью <xref:System.Workflow.Activities.InvokeWorkflowActivity>действия, то вызываемый рабочий процесс не наследует атрибуты службы вызывающего рабочего процесса.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      Настроек [!NOTE] настроек атрибутах службы задано пользовательское действие и это действие включено в рабочем процессе, эти атрибуты службы не используется. Атрибуты службы используются только в пользовательских действий, если сами пользовательские действия запускается в виде рабочего процесса."
  example:
  - "The following example shows how to use the `SetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#6](~/add/codesnippet/csharp/receiveactivity/snippets.cs#6)]"
  syntax:
    content: public static void SetWorkflowServiceAttributes (object dependencyObject, object value);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "Применить атрибуты службы для объекта."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> Объект, содержащий данные атрибутов службы вступили в силу."
  overload: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Возвращает имя <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> в которой действие ожидает поступления данных."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "Имя <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> в которой действие ожидает поступления данных."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Создает подписку <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действие на событие."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> , Представляющий среду выполнения <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> действия."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>, Обрабатывающий событие.</xref:System.EventHandler> Этот обработчик событий принадлежит родительскому действию."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Отменяет подписку действия <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> на событие."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "<xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> , Представляющий среду выполнения <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> действия."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "<xref:System.EventHandler>, Обрабатывающий событие.</xref:System.EventHandler> Этот обработчик событий принадлежит родительскому действию."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Для добавления."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "Для добавления."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  id: WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Представляет <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> , ориентированном <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>свойство.</xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>"
  remarks: "Свойство WorkflowServiceAttributesProperty является прикрепленным свойством зависимостей определяется <xref:System.Workflow.Activities.ReceiveActivity>действие.</xref:System.Workflow.Activities.ReceiveActivity> Присоединено это свойство зависимостей в корневом рабочий процесс, содержащий <xref:System.Workflow.Activities.ReceiveActivity>действия с помощью <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>вызов метода во время разработки.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       Свойство WorkflowServiceAttributesProperty используется для определения атрибутов поведения уровня службы, которые применяются к службе рабочего процесса при запуске. Эти значения невозможно изменить во время выполнения."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.ReceiveActivity.Context
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ContextToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ContextToken
  nameWithType: ContextToken
  fullName: System.Workflow.Activities.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: true
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
- uid: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<OperationValidationEventArgs>
  nameWithType: EventHandler<OperationValidationEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.OperationValidationEventArgs
    name: OperationValidationEventArgs
    nameWithType: OperationValidationEventArgs
    fullName: OperationValidationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.OperationInfoBase
  parent: System.Workflow.Activities
  isExternal: false
  name: OperationInfoBase
  nameWithType: OperationInfoBase
  fullName: System.Workflow.Activities.OperationInfoBase
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
- uid: System.Workflow.Activities.ReceiveActivity.#ctor*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity
  nameWithType: ReceiveActivity.ReceiveActivity
- uid: System.Workflow.Activities.ReceiveActivity.Cancel*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel
  nameWithType: ReceiveActivity.Cancel
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
- uid: System.Workflow.Activities.ReceiveActivity.Context*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose
  nameWithType: ReceiveActivity.Dispose
- uid: System.Workflow.Activities.ReceiveActivity.Execute*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute
  nameWithType: ReceiveActivity.Execute
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
- uid: System.Workflow.Activities.ReceiveActivity.GetContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext
  nameWithType: ReceiveActivity.GetContext
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext
  nameWithType: ReceiveActivity.GetRootContext
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault
  nameWithType: ReceiveActivity.HandleFault
- uid: System.Workflow.Activities.ReceiveActivity.Initialize*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize
  nameWithType: ReceiveActivity.Initialize
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: ReceiveActivity.InitializeProperties
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete
  nameWithType: ReceiveActivity.OnSequenceComplete
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
