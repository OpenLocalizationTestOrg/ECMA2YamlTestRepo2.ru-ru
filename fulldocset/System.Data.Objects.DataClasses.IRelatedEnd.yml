### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.IRelatedEnd
  id: IRelatedEnd
  children:
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  - System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.IRelatedEnd.Load
  - System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  langs:
  - csharp
  name: IRelatedEnd
  nameWithType: IRelatedEnd
  fullName: System.Data.Objects.DataClasses.IRelatedEnd
  type: Interface
  summary: "Определяет конец связи."
  remarks: "IRelatedEnd определяет требования к объекту, представляющему элемент ассоциации. Этот интерфейс реализуется <xref:System.Data.Objects.DataClasses.RelatedEnd>классом.</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.RelatedEnd>является базовым классом для <xref:System.Data.Objects.DataClasses.EntityCollection%601>и <xref:System.Data.Objects.DataClasses.EntityReference%601>классы.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601></xref:System.Data.Objects.DataClasses.RelatedEnd>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public interface IRelatedEnd
  implements: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Добавляет объект в связанный элемент."
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>Метод добавляет объект к связанному элементу.</xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> Связанный элемент должен иметь <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       Если исходный объект реализует <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>и отслеживается в <xref:System.Data.Objects.ObjectStateManager>, добавляемый объект также отслеживается.</xref:System.Data.Objects.ObjectStateManager> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Явным образом реализует класс <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>метод.</xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класс использует эту реализацию.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>       Если связанный элемент <xref:System.Data.Objects.DataClasses.EntityReference%601>и <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>свойство ссылки не `null`, этот метод создает исключение.</xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601>"
  syntax:
    content: public void Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "Объект для добавления в коллекцию. `entity`необходимо реализовать <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  id: Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Добавляет объект в связанный элемент."
  remarks: "Используйте перегрузку этого метода для классов сущностей, которые не реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> Использование <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>метода для классов сущностей, которые реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> </xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A>       Метод Add добавляет объект в связанный элемент. Связанный элемент должен иметь <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Класса явным образом реализует метод Add.</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класс использует эту реализацию.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>       Если связанный элемент <xref:System.Data.Objects.DataClasses.EntityReference%601>и <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>свойство ссылки не `null`, этот метод создает исключение.</xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601>"
  syntax:
    content: public void Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Объект для добавления в коллекцию."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Определяет связь между двумя присоединенными объектами."
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>Метод используется для определения связи между двумя объектами, присоединенными к тому же <xref:System.Data.Objects.ObjectContext>экземпляра.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Явным образом реализует класс <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>метод.</xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класса используется эта реализация для определения связи между исходным присоединенным объектом и объектом, присоединенным к коллекции.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе [присоединение и отсоединение объектов](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)."
  syntax:
    content: public void Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "Присоединяемый объект. `entity`необходимо реализовать <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Определяет связь между двумя присоединенными объектами."
  remarks: "Используйте перегрузку этого метода для классов сущностей, которые не реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> Использование <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>метода для классов сущностей, которые реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> </xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A>       Метод Attach используется для определения связи между двумя объектами, присоединенными к тому же <xref:System.Data.Objects.ObjectContext>экземпляра.</xref:System.Data.Objects.ObjectContext>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Класса явным образом реализует метод Attach.</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класса используется эта реализация для определения связи между исходным присоединенным объектом и объектом, присоединенным к коллекции.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе [присоединение и отсоединение объектов](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)."
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Присоединяемый объект."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  id: CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает <xref:System.Collections.IEnumerable>, представляющий объекты, принадлежащие к связанному элементу.</xref:System.Collections.IEnumerable>"
  remarks: "Метод CreateSourceQuery явно реализован <xref:System.Data.Objects.DataClasses.RelatedEnd>классом.</xref:System.Data.Objects.DataClasses.RelatedEnd>  <xref:System.Data.Objects.DataClasses.EntityCollection%601>И <xref:System.Data.Objects.DataClasses.EntityReference%601>оба класса переопределите <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A>метод для возврата <xref:System.Data.Objects.ObjectQuery%601>, при выполнении которого возвращается набор объектов, принадлежащих к связанному элементу.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>"
  syntax:
    content: public System.Collections.IEnumerable CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>, Представляющий объекты, принадлежащие к связанному элементу.</xref:System.Collections.IEnumerable>"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает <xref:System.Collections.IEnumerator>, проходящий по коллекции связанных объектов.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>, Проходящий по коллекции связанных объектов.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает значение, указывающее, были ли загружены все связанные объекты."
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>Класс реализует метод IsLoaded <xref:System.Data.Objects.DataClasses.IRelatedEnd>.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>       <xref:System.Data.Objects.DataClasses.EntityCollection%601>И <xref:System.Data.Objects.DataClasses.EntityReference%601>классы наследуют от <xref:System.Data.Objects.DataClasses.RelatedEnd>.</xref:System.Data.Objects.DataClasses.RelatedEnd> </xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>"
  example:
  - '[Defining and Managing Relationships](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)'
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанный элемент содержит все связанные сущности из базы данных; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Загружает связанный объект или объекты в этот связанный элемент с параметром слияния по умолчанию."
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>Класс реализует метод Load <xref:System.Data.Objects.DataClasses.IRelatedEnd>.</xref:System.Data.Objects.DataClasses.IRelatedEnd> </xref:System.Data.Objects.DataClasses.RelatedEnd> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>       [Загрузить](~/add/includes/ajax-current-ext-md.md) вызывается для явной загрузки связанных объектов из связанного элемента, доступного с помощью свойства навигации. Дополнительные сведения см. в разделе [загрузка связанных объектов](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).       <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>Метод загружает связанные объекты из источника данных ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>— `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Загружает связанный объект или объекты в связанный элемент с указанным параметром слияния."
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>Класс реализует метод Load.</xref:System.Data.Objects.DataClasses.RelatedEnd> Как <xref:System.Data.Objects.DataClasses.EntityCollection%601>и <xref:System.Data.Objects.DataClasses.EntityReference%601>переопределяют эту реализацию.</xref:System.Data.Objects.DataClasses.EntityReference%601> </xref:System.Data.Objects.DataClasses.EntityCollection%601>       `Load`вызывается для явной загрузки связанных объектов из связанного элемента, который предоставляется с помощью свойства навигации. Дополнительные сведения см. в разделе [загрузка связанных объектов](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).       Метод Load загружает связанные объекты из источника данных ли <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>— `true`.</xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>"
  syntax:
    content: public void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "<xref href=&quot;System.Data.Objects.MergeOption&quot;> </xref> , Используемый для слияния объектов в существующую коллекцию &lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает имя связи, в которой участвует этот связанный элемент."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays the relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "Имя связи, в котором эта <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;> </xref> участвует. В имени связи не указано пространство имен."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает ссылку на метаданные для связанного элемента."
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "Объект <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;> </xref> объект, содержащий метаданные для элемента связи."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Удаляет объект из коллекции объектов связанного элемента."
  remarks: "<xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>Метод удаляет объект из связанного элемента.</xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> Связанный элемент должен иметь <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Явным образом реализует класс <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>метод.</xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> </xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класс использует эту реализацию.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>"
  syntax:
    content: public bool Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "Объект, удаляемый из коллекции. `entity`необходимо реализовать <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>entity</code> was successfully removed, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Удаляет объект из коллекции объектов связанного элемента."
  remarks: "Используйте перегрузку этого метода для классов сущностей, которые не реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> Использование <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>метода для классов сущностей, которые реализуют <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships> </xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A>       Метод Remove удаляет объект из связанного элемента. Связанный элемент должен иметь <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</xref:System.Data.Objects.DataClasses.EntityCollection%601>       <xref:System.Data.Objects.DataClasses.RelatedEnd>Класса явным образом реализует метод Remove.</xref:System.Data.Objects.DataClasses.RelatedEnd> <xref:System.Data.Objects.DataClasses.EntityCollection%601>Класс использует эту реализацию.</xref:System.Data.Objects.DataClasses.EntityCollection%601> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>.</xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>"
  syntax:
    content: public bool Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Объект, удаляемый из коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> entity </code> был успешно удален; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает имя роли в исходном элементе связи."
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>Класс реализует свойство SourceRoleName.</xref:System.Data.Objects.DataClasses.RelatedEnd> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>       Имя роли задано `Role` атрибут `End` элемента ассоциации, которая определяет отношение в концептуальной модели. Дополнительные сведения см. в разделе [элемент ассоциации (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)."
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "Имя роли в исходном элементе связи."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Возвращает имя роли в целевом элементе связи."
  remarks: "<xref:System.Data.Objects.DataClasses.RelatedEnd>Класс реализует свойство TargetRoleName.</xref:System.Data.Objects.DataClasses.RelatedEnd> Дополнительные сведения см. в разделе <xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>.</xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>       Имя роли задано `Role` атрибут `End` элемента ассоциации, которая определяет отношение в концептуальной модели. Дополнительные сведения см. в разделе [элемент ассоциации (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)."
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "Имя роли в целевом элементе связи."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add
  nameWithType: IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach
  nameWithType: IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery
  nameWithType: IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: IRelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load
  nameWithType: IRelatedEnd.Load
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove
  nameWithType: IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
