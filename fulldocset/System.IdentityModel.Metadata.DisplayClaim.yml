### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Metadata.DisplayClaim
  id: DisplayClaim
  children:
  - System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String)
  - System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String)
  - System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String)
  - System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  - System.IdentityModel.Metadata.DisplayClaim.ClaimType
  - System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType(System.String)
  - System.IdentityModel.Metadata.DisplayClaim.Description
  - System.IdentityModel.Metadata.DisplayClaim.DisplayTag
  - System.IdentityModel.Metadata.DisplayClaim.DisplayValue
  - System.IdentityModel.Metadata.DisplayClaim.Optional
  - System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute
  langs:
  - csharp
  name: DisplayClaim
  nameWithType: DisplayClaim
  fullName: System.IdentityModel.Metadata.DisplayClaim
  type: Class
  summary: "Представляет объект отображаемую утверждения."
  remarks: "Обычно отображения тега ( <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag%2A>Свойства) и описание (Свойство Description), локализованы.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag%2A> <xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType%2A>Свойство идентифицирует различных типов утверждений.</xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType%2A> Отображаемое значение (свойство <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue%2A>) является строковым представлением утверждения. Ресурс.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue%2A>"
  syntax:
    content: public class DisplayClaim
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayClaim(String)
  nameWithType: DisplayClaim.DisplayClaim(String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Metadata.DisplayClaim&quot;> </xref> класс, который имеет указанный тип утверждения."
  syntax:
    content: public DisplayClaim (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: "Тип утверждения для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>"
  overload: System.IdentityModel.Metadata.DisplayClaim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimType</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayClaim(String,String,String)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Metadata.DisplayClaim&quot;> </xref> класс, который имеет указанный тип утверждения, отображаемое имя и описание."
  syntax:
    content: public DisplayClaim (string claimType, string displayTag, string description);
    parameters:
    - id: claimType
      type: System.String
      description: "Тип утверждения для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>"
    - id: displayTag
      type: System.String
      description: "Отображаемое имя (или понятное имя) для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>"
    - id: description
      type: System.String
      description: "Описание для отображения утверждения. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.Description*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.Description*>"
  overload: System.IdentityModel.Metadata.DisplayClaim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimType</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayClaim(String,String,String,String)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String,String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Metadata.DisplayClaim&quot;> </xref> класс, который имеет указанный тип утверждения, отображаемое имя, отображаемое значение и описание. Требуется утверждение."
  remarks: "<xref:System.IdentityModel.Metadata.DisplayClaim.Optional%2A>Инициализируется свойство `true` в новом экземпляре.</xref:System.IdentityModel.Metadata.DisplayClaim.Optional%2A>"
  syntax:
    content: public DisplayClaim (string claimType, string displayTag, string description, string displayValue);
    parameters:
    - id: claimType
      type: System.String
      description: "Тип утверждения для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>"
    - id: displayTag
      type: System.String
      description: "Отображаемое имя (или понятное имя) для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>"
    - id: description
      type: System.String
      description: "Описание для отображения утверждения. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.Description*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.Description*>"
    - id: displayValue
      type: System.String
      description: "Отображаемое значение для отображения утверждения. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue*>"
  overload: System.IdentityModel.Metadata.DisplayClaim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimType</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Boolean)'
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayClaim(String,String,String,String,Boolean)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String,String,Boolean)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Metadata.DisplayClaim&quot;> </xref> класс, который имеет указанный тип утверждения, имя, отображать значения, описание и необязательный атрибут."
  syntax:
    content: public DisplayClaim (string claimType, string displayTag, string description, string displayValue, bool optional);
    parameters:
    - id: claimType
      type: System.String
      description: "Тип утверждения для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.ClaimType*>"
    - id: displayTag
      type: System.String
      description: "Отображаемое имя (или понятное имя) для отображения утверждений. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag*>"
    - id: description
      type: System.String
      description: "Описание для отображения утверждения. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.Description*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.Description*>"
    - id: displayValue
      type: System.String
      description: "Отображаемое значение для отображения утверждения. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.DisplayValue*>"
    - id: optional
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если утверждение является необязательным. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Инициализирует <xref:System.IdentityModel.Metadata.DisplayClaim.Optional*>свойство.</xref:System.IdentityModel.Metadata.DisplayClaim.Optional*>"
  overload: System.IdentityModel.Metadata.DisplayClaim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimType</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.ClaimType
  id: ClaimType
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: ClaimType
  nameWithType: DisplayClaim.ClaimType
  fullName: System.IdentityModel.Metadata.DisplayClaim.ClaimType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает тип утверждения, связанный с утверждением отображения."
  remarks: "Этот обязательный атрибут содержит уникальный идентификатор (URI) возвращаются в маркере безопасности отдельных утверждения"
  syntax:
    content: public string ClaimType { get; }
    return:
      type: System.String
      description: "URI, представляющий тип утверждения."
  overload: System.IdentityModel.Metadata.DisplayClaim.ClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType(System.String)
  id: CreateDisplayClaimFromClaimType(System.String)
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: CreateDisplayClaimFromClaimType(String)
  nameWithType: DisplayClaim.CreateDisplayClaimFromClaimType(String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Создание экрана утверждения из указанного типа утверждений."
  remarks: "<xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag%2A>И <xref:System.IdentityModel.Metadata.DisplayClaim.Description%2A>свойствам присваиваются значения по умолчанию в зависимости от указанного типа утверждений.</xref:System.IdentityModel.Metadata.DisplayClaim.Description%2A> </xref:System.IdentityModel.Metadata.DisplayClaim.DisplayTag%2A> Если значения по умолчанию для свойств, не существуют, они устанавливаются в `null`."
  syntax:
    content: public static System.IdentityModel.Metadata.DisplayClaim CreateDisplayClaimFromClaimType (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: "URI, представляющий тип утверждения."
    return:
      type: System.IdentityModel.Metadata.DisplayClaim
      description: "Returns <xref href=&quot;System.IdentityModel.Metadata.DisplayClaim&quot;></xref>."
  overload: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.Description
  id: Description
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: Description
  nameWithType: DisplayClaim.Description
  fullName: System.IdentityModel.Metadata.DisplayClaim.Description
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает или задает описание для отображения утверждения."
  remarks: "Этот необязательный элемент предоставляет описание семантики для утверждения, возвращаемых в маркере безопасности."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Описание для отображения утверждения."
  overload: System.IdentityModel.Metadata.DisplayClaim.Description*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayTag
  id: DisplayTag
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayTag
  nameWithType: DisplayClaim.DisplayTag
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayTag
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает или задает понятное имя для отображения утверждения."
  remarks: "Этот необязательный элемент содержит понятное имя для утверждения, возвращаемых в маркере безопасности."
  syntax:
    content: public string DisplayTag { get; set; }
    return:
      type: System.String
      description: "Понятное имя для отображения утверждения."
  overload: System.IdentityModel.Metadata.DisplayClaim.DisplayTag*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayValue
  id: DisplayValue
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: DisplayValue
  nameWithType: DisplayClaim.DisplayValue
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayValue
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает или задает отображаемое значение для утверждения отображения."
  remarks: "Этот необязательный элемент содержит один или более отображаемые значения для утверждения, возвращаемые в маркере безопасности."
  syntax:
    content: public string DisplayValue { get; set; }
    return:
      type: System.String
      description: "Отображаемое значение для отображения утверждения."
  overload: System.IdentityModel.Metadata.DisplayClaim.DisplayValue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.Optional
  id: Optional
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: Optional
  nameWithType: DisplayClaim.Optional
  fullName: System.IdentityModel.Metadata.DisplayClaim.Optional
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает или задает необязательный атрибут для отображения утверждения"
  remarks: "Необязательный атрибут."
  syntax:
    content: public bool Optional { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображение утверждение является необязательным. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Metadata.DisplayClaim.Optional*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute
  id: WriteOptionalAttribute
  parent: System.IdentityModel.Metadata.DisplayClaim
  langs:
  - csharp
  name: WriteOptionalAttribute
  nameWithType: DisplayClaim.WriteOptionalAttribute
  fullName: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Metadata
  summary: "Возвращает или задает значение, указывающее, будет ли сериализован необязательный атрибут."
  syntax:
    content: public bool WriteOptionalAttribute { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для сериализации необязательный атрибут; в противном случае — значение false. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String)
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayClaim(String)
  nameWithType: DisplayClaim.DisplayClaim(String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String)
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayClaim(String,String,String)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String)
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String)
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayClaim(String,String,String,String)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String,String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String,String)
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayClaim(String,String,String,String,Boolean)
  nameWithType: DisplayClaim.DisplayClaim(String,String,String,String,Boolean)
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayClaim(String,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Metadata.DisplayClaim.ClaimType
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: ClaimType
  nameWithType: DisplayClaim.ClaimType
  fullName: System.IdentityModel.Metadata.DisplayClaim.ClaimType
- uid: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType(System.String)
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: CreateDisplayClaimFromClaimType(String)
  nameWithType: DisplayClaim.CreateDisplayClaimFromClaimType(String)
  fullName: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType(String)
- uid: System.IdentityModel.Metadata.DisplayClaim
  parent: System.IdentityModel.Metadata
  isExternal: false
  name: DisplayClaim
  nameWithType: DisplayClaim
  fullName: System.IdentityModel.Metadata.DisplayClaim
- uid: System.IdentityModel.Metadata.DisplayClaim.Description
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: Description
  nameWithType: DisplayClaim.Description
  fullName: System.IdentityModel.Metadata.DisplayClaim.Description
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayTag
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayTag
  nameWithType: DisplayClaim.DisplayTag
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayTag
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayValue
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayClaim.DisplayValue
  fullName: System.IdentityModel.Metadata.DisplayClaim.DisplayValue
- uid: System.IdentityModel.Metadata.DisplayClaim.Optional
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: Optional
  nameWithType: DisplayClaim.Optional
  fullName: System.IdentityModel.Metadata.DisplayClaim.Optional
- uid: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: WriteOptionalAttribute
  nameWithType: DisplayClaim.WriteOptionalAttribute
  fullName: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute
- uid: System.IdentityModel.Metadata.DisplayClaim.#ctor*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayClaim
  nameWithType: DisplayClaim.DisplayClaim
- uid: System.IdentityModel.Metadata.DisplayClaim.ClaimType*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: ClaimType
  nameWithType: DisplayClaim.ClaimType
- uid: System.IdentityModel.Metadata.DisplayClaim.CreateDisplayClaimFromClaimType*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: CreateDisplayClaimFromClaimType
  nameWithType: DisplayClaim.CreateDisplayClaimFromClaimType
- uid: System.IdentityModel.Metadata.DisplayClaim.Description*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: Description
  nameWithType: DisplayClaim.Description
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayTag*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayTag
  nameWithType: DisplayClaim.DisplayTag
- uid: System.IdentityModel.Metadata.DisplayClaim.DisplayValue*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: DisplayValue
  nameWithType: DisplayClaim.DisplayValue
- uid: System.IdentityModel.Metadata.DisplayClaim.Optional*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: Optional
  nameWithType: DisplayClaim.Optional
- uid: System.IdentityModel.Metadata.DisplayClaim.WriteOptionalAttribute*
  parent: System.IdentityModel.Metadata.DisplayClaim
  isExternal: false
  name: WriteOptionalAttribute
  nameWithType: DisplayClaim.WriteOptionalAttribute
