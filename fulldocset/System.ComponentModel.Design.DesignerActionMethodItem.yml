### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionMethodItem
  id: DesignerActionMethodItem
  children:
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)
  - System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)
  - System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb
  - System.ComponentModel.Design.DesignerActionMethodItem.Invoke
  - System.ComponentModel.Design.DesignerActionMethodItem.MemberName
  - System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent
  langs:
  - csharp
  name: DesignerActionMethodItem
  nameWithType: DesignerActionMethodItem
  fullName: System.ComponentModel.Design.DesignerActionMethodItem
  type: Class
  summary: "Представляет элемент панели смарт-тега, связанного с помощью метода в классе, производном от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  remarks: "Класс DesignerActionMethodItem представляет отдельные элементы в панели смарт-тегов. Элемент этого типа отображается как активный элемент пользовательского интерфейса, таких как гиперссылки, которая вызывает предоставленный программистом метод в класс, производный от <xref:System.ComponentModel.Design.DesignerActionList>.</xref:System.ComponentModel.Design.DesignerActionList> Взаимосвязь между элементом и метод поддерживается до значения <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A>свойство.</xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName%2A> Метод, который вызывает этот элемент должен не принимать параметры и возвращать значение.       Отдельные элементы связаны друг с другом, для формирования панели путем вызова <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>метода <xref:System.ComponentModel.Design.DesignerActionList>класса.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a full example of implementing smart tags, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/t-system.componentmodel._93_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/t-system.componentmodel._93_1.cs)]"
  syntax:
    content: 'public class DesignerActionMethodItem : System.ComponentModel.Design.DesignerActionItem'
  inheritance:
  - System.Object
  - System.ComponentModel.Design.DesignerActionItem
  implements: []
  inheritedMembers:
  - System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  - System.ComponentModel.Design.DesignerActionItem.Category
  - System.ComponentModel.Design.DesignerActionItem.Description
  - System.ComponentModel.Design.DesignerActionItem.DisplayName
  - System.ComponentModel.Design.DesignerActionItem.Properties
  - System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанным методом и отображаемые имена."
  remarks: "Конструктор присваивает DesignerActionMethodItem <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>и <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>Свойства `null`и <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>Свойства `false`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> </xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанным методом и отображаемые имена и флаг, указывающий, будет ли элемент отображаться в других контекстах пользовательского интерфейса."
  remarks: "Если `includeAsDesignerVerb` параметра равным `true`, то этот элемент также считается <xref:System.ComponentModel.Design.DesignerVerb>; таким образом, оно будет добавлено для компонента времени разработки контекстное меню.</xref:System.ComponentModel.Design.DesignerVerb> В [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], команды, также добавляются в **атрибуты** области окна «Свойства». Список команд конструктора, которые можно получить с помощью конструктора <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство коллекции.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>       Конструктор присваивает DesignerActionMethodItem <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>и <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>Свойства `null`.</xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> </xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, bool includeAsDesignerVerb);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
    - id: includeAsDesignerVerb
      type: System.Boolean
      description: "Флаг, указывающий, следует ли сопоставленный метод также рассматриваться как команда конструктора."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанными именами метода, отображения и категории."
  remarks: "Конструктор присваивает DesignerActionMethodItem <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>Свойства `null` и <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>Свойства `false`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>       Дополнительные сведения о том, как `category` параметр используется для группировки элементов в области см. в разделе <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>метод.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
    - id: category
      type: System.String
      description: "С учетом регистра <xref:System.String>используются для группировки схожих элементов на панели.</xref:System.String>"
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанными именами метода, отображения и категории и флаг, указывающий, будет ли элемент отображаться в других контекстах пользовательского интерфейса."
  remarks: "Если `includeAsDesignerVerb` параметра равным `true`, то элемент также считается <xref:System.ComponentModel.Design.DesignerVerb>; таким образом, оно будет добавлено для компонента времени разработки контекстное меню.</xref:System.ComponentModel.Design.DesignerVerb> Список команд конструктора, которые можно получить с помощью конструктора <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство коллекции.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>       Конструктор присваивает DesignerActionMethodItem <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>Свойства `null`.</xref:System.ComponentModel.Design.DesignerActionItem.Description%2A>       Дополнительные сведения о том, как `category` параметр используется для группировки элементов в области см. в разделе <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>метод.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, bool includeAsDesignerVerb);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
    - id: category
      type: System.String
      description: "С учетом регистра <xref:System.String>используются для группировки схожих элементов на панели.</xref:System.String>"
    - id: includeAsDesignerVerb
      type: System.Boolean
      description: "Флаг, указывающий, следует ли сопоставленный метод также рассматриваться как команда конструктора для сопоставленного компонента."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанными именами метода и категории и отображаемого текста и описание текста."
  remarks: "Конструктор присваивает DesignerActionMethodItem <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>Свойства `false`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>       Дополнительные сведения о том, как `category` параметр используется для группировки элементов в области см. в разделе <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>метод.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
    - id: category
      type: System.String
      description: "С учетом регистра <xref:System.String>используются для группировки схожих элементов на панели.</xref:System.String>"
    - id: description
      type: System.String
      description: "Дополнительный текст для этого элемента, который используется в всплывающих подсказках или строке состояния."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)'
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> класса с указанными именами метода и категории, отображения и описание и флаг, указывающий, будет ли элемент отображаться в других контекстах пользовательского интерфейса."
  remarks: "Если `includeAsDesignerVerb` параметра равным `true`, то этот элемент также считается <xref:System.ComponentModel.Design.DesignerVerb>; таким образом, оно будет добавлено для компонента времени разработки контекстное меню.</xref:System.ComponentModel.Design.DesignerVerb> Список команд конструктора, которые можно получить с помощью конструктора <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство коллекции.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>       Дополнительные сведения о том, как `category` параметр используется для группировки элементов в области см. в разделе <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>метод.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a full example of implementing smart tags, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/7b814014-2462-41fb-a15c-_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/7b814014-2462-41fb-a15c-_1.cs)]"
  syntax:
    content: public DesignerActionMethodItem (System.ComponentModel.Design.DesignerActionList actionList, string memberName, string displayName, string category, string description, bool includeAsDesignerVerb);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий метод, этот элемент, связанный с."
    - id: memberName
      type: System.String
      description: "С учетом регистра имя метода в класс производным от <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> для вызова через элемент панели."
    - id: displayName
      type: System.String
      description: "Текст панели для этого элемента."
    - id: category
      type: System.String
      description: "С учетом регистра <xref:System.String>используются для группировки схожих элементов на панели.</xref:System.String>"
    - id: description
      type: System.String
      description: "Дополнительный текст для этого элемента, который используется в всплывающих подсказках или строке состояния."
    - id: includeAsDesignerVerb
      type: System.Boolean
      description: "Флаг, указывающий, следует ли сопоставленный метод также рассматриваться как команда конструктора для сопоставленного компонента."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb
  id: IncludeAsDesignerVerb
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: IncludeAsDesignerVerb
  nameWithType: DesignerActionMethodItem.IncludeAsDesignerVerb
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Возвращает значение, указывающее, <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> должны появиться в других контекстах пользовательского интерфейса."
  remarks: "Если имеет значение свойства IncludeAsDesignerVerb `true`, то элемент также считается <xref:System.ComponentModel.Design.DesignerVerb>; таким образом, оно будет добавлено для компонента времени разработки контекстное меню.</xref:System.ComponentModel.Design.DesignerVerb> Список команд конструктора, которые можно получить с помощью конструктора <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство коллекции.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>       Значение свойства IncludeAsDesignerVerb задан в конструктор для этого класса."
  syntax:
    content: public virtual bool IncludeAsDesignerVerb { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент должен использоваться в контекстных меню; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: Invoke()
  nameWithType: DesignerActionMethodItem.Invoke()
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.Invoke()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Программным способом выполняет метод, связанный с <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref>."
  remarks: "Если <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>инициализируется свойство `true`, связанный метод может также вызывать с помощью соответствующего события команд конструктора операций.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>"
  syntax:
    content: public virtual void Invoke ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionMethodItem.Invoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод с именем в <xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName*>не найден.</xref:System.ComponentModel.Design.DesignerActionMethodItem.MemberName*>"
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.MemberName
  id: MemberName
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: MemberName
  nameWithType: DesignerActionMethodItem.MemberName
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.MemberName
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Возвращает имя метода, это <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> сопоставлен."
  remarks: "Свойство MemberName указывает, какое свойство в классе, производном от <xref:System.ComponentModel.Design.DesignerActionList>класс, от которого должен быть привязан элемент.</xref:System.ComponentModel.Design.DesignerActionList> Когда программист взаимодействует с этим элементом через пользовательский интерфейс (UI), задается значение сопоставленного свойства.       Связанный метод должен не принимать параметры и возвращать значение.       Это свойство задается в конструкторе. Регистр не учитывается."
  syntax:
    content: public virtual string MemberName { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, содержащее имя связанного метода.</xref:System.String>"
  overload: System.ComponentModel.Design.DesignerActionMethodItem.MemberName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent
  id: RelatedComponent
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  langs:
  - csharp
  name: RelatedComponent
  nameWithType: DesignerActionMethodItem.RelatedComponent
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Получает или задает компонент, который вносит его <xref href=&quot;System.ComponentModel.Design.DesignerActionMethodItem&quot;> </xref> объекты в текущую область."
  remarks: "<xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A>Свойство позволяет другим компонентом одалживать его смарт-тег элементы панели в текущий список.</xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> Например пользовательский элемент управления могут объединяться элементы из одной из базовых стандартных элементов управления.       Это свойство работает совместно с <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=fullName>свойство.</xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=fullName>"
  syntax:
    content: public System.ComponentModel.IComponent RelatedComponent { get; set; }
    return:
      type: System.ComponentModel.IComponent
      description: "Составляющей компонент, который должен иметь сопоставленный конструктор, предоставляющий элементы."
  overload: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: System.ComponentModel.Design.DesignerActionItem
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String)
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String)
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,Boolean)
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,String)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String)
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.DesignerActionMethodItem(DesignerActionList,String,String,String,String,Boolean)
- uid: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: IncludeAsDesignerVerb
  nameWithType: DesignerActionMethodItem.IncludeAsDesignerVerb
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb
- uid: System.ComponentModel.Design.DesignerActionMethodItem.Invoke
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: Invoke()
  nameWithType: DesignerActionMethodItem.Invoke()
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.Invoke()
- uid: System.ComponentModel.Design.DesignerActionMethodItem.MemberName
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: MemberName
  nameWithType: DesignerActionMethodItem.MemberName
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.MemberName
- uid: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: RelatedComponent
  nameWithType: DesignerActionMethodItem.RelatedComponent
  fullName: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionMethodItem.#ctor*
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: DesignerActionMethodItem
  nameWithType: DesignerActionMethodItem.DesignerActionMethodItem
- uid: System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb*
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: IncludeAsDesignerVerb
  nameWithType: DesignerActionMethodItem.IncludeAsDesignerVerb
- uid: System.ComponentModel.Design.DesignerActionMethodItem.Invoke*
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: Invoke
  nameWithType: DesignerActionMethodItem.Invoke
- uid: System.ComponentModel.Design.DesignerActionMethodItem.MemberName*
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: MemberName
  nameWithType: DesignerActionMethodItem.MemberName
- uid: System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent*
  parent: System.ComponentModel.Design.DesignerActionMethodItem
  isExternal: false
  name: RelatedComponent
  nameWithType: DesignerActionMethodItem.RelatedComponent
