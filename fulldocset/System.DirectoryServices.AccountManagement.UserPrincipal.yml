### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  id: UserPrincipal
  children:
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.UserPrincipal.Current
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  - System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  - System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  - System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  - System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  langs:
  - csharp
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
  type: Class
  summary: "Инкапсулирует участников, которые являются учетные записи пользователей."
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UserPrincipal : System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> , используя заданный контекст."
  remarks: "Основной учетной записи пользователя не сохраняется при его создании. Чтобы сохранить учетную запись, вызовите <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>метод.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  example:
  - "The following code example connects to the LDAP domain \"fabrikam.com\" with the username and password initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor to \"administrator\" and \"securelyStoredPassword.\"  \n  \n The properties set in the example, such as user name and e-mail address, are created under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  \n  \n```  \n  \nPrincipalContext ctx = new PrincipalContext(  \n                                         ContextType.Domain,  \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",  \n                                         \"administrator\",   \n                                         \"securelyStoredPassword\");   \n  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \nusr.Name = \"Jim Daly\";  \nusr.Description = \"This is the user account for Jim Daly\";  \nusr.EmailAddress = \"jimdaly@fabrikam.com\";  \nusr.SetPassword(\"securelyStoredPassword\");  \nusr.Save();  \n  \nusr.Dispose();  \nctx.Dispose();   \n```"
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> класса, используя заданный контекст, имя учетной записи SAM, пароль и включить значение."
  remarks: "Основной учетной записи пользователя не сохраняется при его создании. Чтобы сохранить учетную запись, вызовите <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>метод.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: samAccountName
      type: System.String
      description: "Имя учетной записи SAM для участника-пользователя."
    - id: password
      type: System.String
      description: "Пароль для этой учетной записи."
    - id: enabled
      type: System.Boolean
      description: "Логическое значение, указывающее, включена ли учетная запись."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает <xref href=&quot;System.DirectoryServices.AccountManagement.AdvancedFilters&quot;> </xref> объекта, чтобы задать свойства только для чтения перед передачей объекта <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;> </xref>."
  syntax:
    content: public override System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.AdvancedFilters&quot;> </xref> Объекта."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  id: Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает объект пользователя субъекта, представляющий текущего пользователя, под которой выполняется поток."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal Current { get; }
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> представляет текущего пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "Не удалось найти объект участник-пользователь для текущего пользователя. Основной объект может содержать список управления доступом, чтобы предотвратить несанкционированный доступ."
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Найдено несколько объектов участников-пользователей, соответствующих текущему пользователю."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  id: EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает адрес электронной почты для этой учетной записи."
  syntax:
    content: public string EmailAddress { get; set; }
    return:
      type: System.String
      description: "Адрес электронной почты участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  id: EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает идентификатор сотрудника участника-пользователя."
  syntax:
    content: public string EmployeeId { get; set; }
    return:
      type: System.String
      description: "Идентификатор сотрудника участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; объектов для пользователей, имеющих неправильного пароля попытка записи в заданном диапазоне дат и времени."
  remarks: "По умолчанию время UTC. Если вы хотите указать время в формате местного времени, укажите <xref:System.DateTime.Kind%2A>свойство `time` объект как <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: time
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий дату и время, повторите неправильный пароль.</xref:System.DateTime> Этот параметр используется вместе с параметром типа, чтобы определить диапазон времени, в котором были зарегистрированы попытки неверного входа возвращаемых объектов."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> значение перечисления, указывающее тип соответствия, который применяется к `time` параметра."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "Объект &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; , содержит один или несколько <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объектов или пустая коллекция, если ничего не найдено."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; объектов для пользователей, имеющих время истечения срока действия учетной записи в заданном диапазоне дат и времени."
  remarks: "По умолчанию время UTC. Если вы хотите указать время в формате местного времени, укажите <xref:System.DateTime.Kind%2A>свойство `time` объект как <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: time
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий дату и время, повторите неправильный пароль.</xref:System.DateTime> Этот параметр используется вместе с параметром типа, чтобы определить диапазон времени, в котором были зарегистрированы попытки неверного входа возвращаемых объектов."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> значение перечисления, указывающее тип соответствия, который применяется к `time` параметра."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "Объект &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; , содержит один или несколько <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объектов или пустая коллекция, если ничего не найдено."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает объект участник-пользователь, соответствующий заданному значению удостоверения."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: identityValue
      type: System.String
      description: "Удостоверение участника-пользователя. Этот параметр может иметь любой формат, который содержится в <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> перечисления."
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объекта, который соответствует заданному значению удостоверения, или значение null, если совпадения не найдены."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Найдено несколько объектов участников-пользователей, соответствующих текущему объекту пользователя."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает объект участник-пользователь, соответствующий тип указанного удостоверения и значения. Эта версия <xref:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*>метод определяет формат значений идентификаторов.</xref:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*>"
  remarks: ''
  example:
  - "The following code connects to the local computer store. Since the credentials are not specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, the credentials of the user running the current thread are used.  \n  \n A search is performed to find the user who has SamAccountName \"Guest\".  \n  \n If the user is found, a check is performed to determine whether this user's account is enabled. If the account is not enabled, the example code enables it.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Machine);  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx,   \n                                           IdentityType.SamAccountName,   \n                                           \"Guest\");  \n  \nif(usr != null)  \n{  \n    if (usr.Enabled == false)  \n        usr.Enabled = true;  \n  \n    usr.Save();  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> значение перечисления, указывающее формат `identityValue` параметра."
    - id: identityValue
      type: System.String
      description: "Удостоверение участника-пользователя. Этот параметр может иметь любой формат, который содержится в <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> перечисления."
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объекта, соответствующего заданным значением идентификации и тип, или значение null, если совпадения не найдены."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Найдено несколько объектов участников-пользователей, соответствующих текущему объекту пользователя."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Не является допустимым значением идентификатора <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> значение перечисления."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; объектов для пользователей, имеющих время блокировки учетной записи в заданном диапазоне дат и времени."
  remarks: "По умолчанию время UTC. Если вы хотите указать время в формате местного времени, укажите <xref:System.DateTime.Kind%2A>свойство `time` объект как <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: time
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий дату и время, повторите неправильный пароль.</xref:System.DateTime> Этот параметр используется вместе с параметром типа, чтобы определить диапазон времени, в котором были зарегистрированы попытки неверного входа возвращаемых объектов."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> значение перечисления, указывающее тип соответствия, который применяется к `time` параметра."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "Объект &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; , содержит один или несколько <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объектов или пустая коллекция, если ничего не найдено."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; объектов для пользователей, имеющих учетную запись входа, записанные в заданном диапазоне дат и времени."
  remarks: "По умолчанию время UTC. Если вы хотите указать время в формате местного времени, укажите <xref:System.DateTime.Kind%2A>свойство `time` объект как <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: time
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий дату и время, повторите неправильный пароль.</xref:System.DateTime> Этот параметр используется вместе с параметром типа, чтобы определить диапазон времени, в котором были зарегистрированы попытки неверного входа возвращаемых объектов."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> значение перечисления, указывающее тип соответствия, который применяется к `time` параметра."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "Объект &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; , содержит один или несколько <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объектов или пустая коллекция, если ничего не найдено."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; объектов для пользователей, которые задали пароль в заданном диапазоне дат и времени."
  remarks: "По умолчанию время UTC. Если вы хотите указать время в формате местного времени, укажите <xref:System.DateTime.Kind%2A>свойство `time` объект как <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> , Указывающий сервер или домен, в которой выполняются операции."
    - id: time
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий дату и время, повторите неправильный пароль.</xref:System.DateTime> Этот параметр используется вместе с параметром типа, чтобы определить диапазон времени, в котором были зарегистрированы попытки неверного входа возвращаемых объектов."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "Объект <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> значение перечисления, указывающее тип соответствия, который применяется к `time` параметра."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "Объект &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; , содержит один или несколько <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> объектов или пустая коллекция, если ничего не найдено."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  id: GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает коллекцию объектов-участников, содержит все группы авторизации, членом которых является этот пользователь. Эта функция возвращает только группы, которые являются группами безопасности; группы распространения не возвращаются."
  remarks: "Этот метод осуществляет рекурсивно, все группы и возвращает групп, членом которых является пользователь. Возвращенный набор может также включать дополнительные группы, что система будет учитывать пользователь является членом для проверки подлинности.       Группы, возвращаемые этим методом может включать группы из другой области и хранилища, чем участника. Например, если объект AD DS, имеющий DN объекта является основной» CN = SpecialGroups, DC = Fabrikam, DC = com, возвращаемый набор может содержать группы, принадлежащие» CN = NormalGroups, DC = Fabrikam, DC = com."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetAuthorizationGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "Коллекция <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> объекты, которые содержат группы, членом которых является пользователь, или значение null, если пользователь не принадлежит ни одной из групп."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Не удалось получить группы авторизации."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Получение групп авторизации не поддерживается этой операционной системе."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  id: GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает имя участника-пользователя."
  syntax:
    content: public string GivenName { get; set; }
    return:
      type: System.String
      description: "Заданное имя участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  id: MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает второе имя участника-пользователя."
  syntax:
    content: public string MiddleName { get; set; }
    return:
      type: System.String
      description: "Второе имя участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  id: Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает фамилию участника-пользователя."
  syntax:
    content: public string Surname { get; set; }
    return:
      type: System.String
      description: "Фамилия участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  id: VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Возвращает или задает основной номер телефона пользователя."
  syntax:
    content: public string VoiceTelephoneNumber { get; set; }
    return:
      type: System.String
      description: "Номер телефона участника-пользователя."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовое хранилище не поддерживает это свойство."
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Current
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<UserPrincipal>
  nameWithType: PrincipalSearchResult<UserPrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.UserPrincipal
    name: UserPrincipal
    nameWithType: UserPrincipal
    fullName: UserPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal.UserPrincipal
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: UserPrincipal.FindByBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: UserPrincipal.FindByExpirationTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity
  nameWithType: UserPrincipal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: UserPrincipal.FindByLockoutTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: UserPrincipal.FindByLogonTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: UserPrincipal.FindByPasswordSetTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups
  nameWithType: UserPrincipal.GetAuthorizationGroups
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
