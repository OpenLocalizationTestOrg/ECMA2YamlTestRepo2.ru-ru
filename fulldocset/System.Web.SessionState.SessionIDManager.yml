### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionIDManager
  id: SessionIDManager
  children:
  - System.Web.SessionState.SessionIDManager.#ctor
  - System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Decode(System.String)
  - System.Web.SessionState.SessionIDManager.Encode(System.String)
  - System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.Initialize
  - System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  - System.Web.SessionState.SessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: SessionIDManager
  nameWithType: SessionIDManager
  fullName: System.Web.SessionState.SessionIDManager
  type: Class
  summary: "Управляет уникальные идентификаторы для состояния сеанса ASP.NET."
  remarks: "Класс SessionIDManager является HTTP-модуль, который управляет идентификаторами уникальный сеанс для использования с ASP.NET состояние сеанса. Уникальный идентификатор сеанса ASP.NET — <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>свойство, которого может осуществляться из <xref:System.Web.HttpContext.Session%2A>свойства текущего <xref:System.Web.HttpContext>или <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Идентификатор сеанса ASP.NET — случайное число, закодированные в 24-символьную строку, состоящую из нижнего регистра символов из до z и цифры от 0 до 5.       По умолчанию <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение отправляется в файл cookie при каждом запросе к приложению ASP.NET.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Имя файла cookie, который содержит <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение по умолчанию является ASP.NET_SessionId.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Можно настроить, задав имя файла cookie различных `cookieName` атрибут [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) имя нужного файла cookie.       Если вы хотите отключить использование файлов cookie в приложении ASP.NET и все еще используют состояние сеанса, можно настроить приложение для хранения идентификатора сеанса в URL-адрес вместо файла cookie, задав `cookieless` атрибут `sessionState` элемент `true` в файле Web.config для приложения. Дополнительные сведения см. в разделе <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>свойство.</xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>"
  syntax:
    content: 'public class SessionIDManager : System.Web.SessionState.ISessionIDManager'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionIDManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Создает экземпляр <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> класса."
  remarks: "Этот конструктор не предназначен для вызова из кода приложения.       ASP.NET вызывает этот конструктор для создания экземпляра <xref:System.Web.SessionState.SessionIDManager>класса.</xref:System.Web.SessionState.SessionIDManager> После вызова конструктора, ASP.NET вызывает <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>метод для инициализации нового <xref:System.Web.SessionState.SessionIDManager>объекта.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.Initialize%2A>"
  syntax:
    content: public SessionIDManager ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Создает уникальный идентификатор сеанса для сеанса."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Метод CreateSessionID возвращает уникальный идентификатор сеанса является случайным числом, закодированные в 24-символьную строку, состоящую из нижнего регистра символов из до z и цифры от 0 до 5."
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the CreateSessionID and <xref:System.Web.SessionState.SessionIDManager.Validate%2A> methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/e6d29e71-07f8-4130-8db5-_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/e6d29e71-07f8-4130-8db5-_1.vb)]  \n  \n To use the custom class demonstrated in this example, configure the sessionIDManagerType attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element, as shown in the following example.  \n  \n```  \n<sessionState  \n  Mode=\"InProc\"  \n  stateConnectionString=\"tcp=127.0.0.1:42424\"  \n  stateNetworkTimeout=\"10\"  \n  sqlConnectionString=\"data source=127.0.0.1;Integrated Security=SSPI\"  \n  sqlCommandTimeout=\"30\"  \n  customProvider=\"\"  \n  cookieless=\"false\"  \n  regenerateExpiredSessionId=\"false\"  \n  timeout=\"20\"  \n  sessionIDManagerType=\"Your.ID.Manager.Type,  \n    CustomAssemblyNameInBinFolder\"  \n/>  \n```"
  syntax:
    content: public virtual string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    return:
      type: System.String
      description: "Уникальный идентификатор сеанса."
  overload: System.Web.SessionState.SessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  id: Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Декодирует идентификатор сеанса, URL-адреса, полученные из файла cookie или URL-адрес."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Этот метод используется внутренними механизмами <xref:System.Web.SessionState.SessionIDManager>класс декодировать настраиваемый <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значениями, созданными классы, наследующие <xref:System.Web.SessionState.SessionIDManager>класса и переопределить <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>и <xref:System.Web.SessionState.SessionIDManager.Validate%2A>методы.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Чтобы обеспечить точность значение пользовательский идентификатор сеанса, полученные из HTTP-запроса, <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>метод <xref:System.Web.SessionState.SessionIDManager>декодирует пользовательское значение с помощью <xref:System.Web.HttpUtility.UrlDecode%2A>метод.</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  syntax:
    content: public virtual string Decode (string id);
    parameters:
    - id: id
      type: System.String
      description: "Идентификатор сеанса для декодирования."
    return:
      type: System.String
      description: "Раскодированный идентификатор сеанса."
  overload: System.Web.SessionState.SessionIDManager.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  id: Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Кодирует идентификатор сеанса для сохранения файла cookie или URL-адрес."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Этот метод используется внутренними механизмами <xref:System.Web.SessionState.SessionIDManager>класса для кодирования настраиваемый <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значениями, созданными классы, наследующие <xref:System.Web.SessionState.SessionIDManager>класса и переопределить <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>и <xref:System.Web.SessionState.SessionIDManager.Validate%2A>методы.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Чтобы обеспечить точность значения пользовательского идентификатора сеанса, хранящегося в HTTP-ответа, <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>метод <xref:System.Web.SessionState.SessionIDManager>кодирует пользовательское значение с помощью <xref:System.Web.HttpUtility.UrlEncode%2A>метод.</xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>       Например, класс, наследующий <xref:System.Web.SessionState.SessionIDManager>класса и переопределяет <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>и <xref:System.Web.SessionState.SessionIDManager.Validate%2A>методов, см. <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>метод.</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public virtual string Encode (string id);
    parameters:
    - id: id
      type: System.String
      description: "Идентификатор сеанса для кодирования."
    return:
      type: System.String
      description: "Закодированный идентификатор сеанса."
  overload: System.Web.SessionState.SessionIDManager.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает значение идентификатора сеанса из текущего веб-запроса."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       <xref:System.Web.SessionState.SessionStateModule>Вызывает метод GetSessionID во время <xref:System.Web.HttpApplication.AcquireRequestState>событий для получения <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>из текущего <xref:System.Web.HttpRequest>.</xref:System.Web.HttpRequest> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    return:
      type: System.String
      description: "Текущий <xref:System.Web.SessionState.HttpSessionState.SessionID*>.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
  overload: System.Web.SessionState.SessionIDManager.GetSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Длина значения идентификатора сеанса, полученные из HTTP запроса превышает <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>значение.</xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength*>"
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Инициализирует <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объект с данными из файлов конфигурации."
  remarks: "Метод Initialize считывает данные о конфигурации сеанса из [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) элемент конфигурации из файлов конфигурации."
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.SessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Выполняет инициализацию для каждого запроса из <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объекта."
  remarks: "Когда `cookieless` атрибут `sessionState` задан равным `AutoDetect`, <xref:System.Web.SessionState.SessionIDManager>объекта будет перенаправлен по тому же пути, чтобы определить, поддерживает ли подключение браузер файлы cookie.</xref:System.Web.SessionState.SessionIDManager> Если `suppressAutoDetectRedirect` параметр `false`, сервер не будет выполнять это перенаправление.       `supportSessionIDReissue` Будет возвращаться параметр `false` Если запрос использует файлы cookie для идентификации сеанса."
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> , Содержащий сведения о текущем запросе."
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для перенаправления для определения поддержки файлов cookie; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Чтобы отключить автоматическое перенаправление для определения поддержки файлов cookie."
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "При возвращении этого метода содержит логическое значение, указывающее, является ли <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объект поддерживает выпуск новых ИД сеанса при исходный идентификатор является устаревшим. Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объекта выполнит перенаправление для определения поддержки файлов cookie; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Удаляет файл cookie идентификатора сеанса из HTTP-ответа."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       <xref:System.Web.SessionState.SessionStateModule>Вызывает метод RemoveSessionID во время <xref:System.Web.HttpApplication.ReleaseRequestState>событий для удаления идентификатор сеанса из <xref:System.Web.HttpResponse.Cookies%2A>коллекцию <xref:System.Web.HttpResponse>Если новый сеанс был создан, но не использовался.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
  overload: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Сохраняет идентификатор только что созданного сеанса HTTP-ответа."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Метод SaveSessionID вызывается <xref:System.Web.SessionState.SessionStateModule>объекта во время <xref:System.Web.HttpApplication.AcquireRequestState>событий.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Метод SaveSessionID хранится идентификатор сеанса, либо URL-адрес (при использовании состояния сеанса без файлов cookie) или без ограничения срока действия файла cookie сеанса.       По умолчанию <xref:System.Web.SessionState.SessionIDManager>переводит уникальный идентификатор сеанса в без ограничения срока действия файла cookie сеанса и задает `cookieAdded` параметра `true`.</xref:System.Web.SessionState.SessionIDManager>       Для состояния сеанса без файлов cookie <xref:System.Web.SessionState.SessionIDManager>объект вставляет уникальный идентификатор сеанса в URL-адрес текущей, перенаправляет браузер на URL-адрес, включающий идентификатор сеанса и затем задает `redirected` параметра `true`.</xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    - id: id
      type: System.String
      description: "Идентификатор сеанса."
    - id: redirected
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение,<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref> Если отклик имеет перенаправляются на текущий URL-адрес с идентификатором сеанса, добавленным в; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cookieAdded
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение,<xref uid=&quot;langword_csharp_ true&quot; name=&quot; true&quot; href=&quot;&quot;> </xref> Если файл cookie был добавлен в HTTP-ответ, в противном случае, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.SaveSessionID*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ответ уже отправлен.       - или - переданный идентификатор сеанса для проверки этот сбой метода."
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  id: SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает максимальную длину допустимого идентификатора сеанса."
  remarks: "Максимальная длина идентификатора сеанса составляет 80 символов.       Хотя идентификаторы сеансов, созданных <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>метод — 24 символов, максимальная длина идентификатора сеанса, допускаемые <xref:System.Web.SessionState.SessionIDManager>класс составляет 80 символов.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> Это особенно важно, если реализовать пользовательский <xref:System.Web.SessionState.SessionIDManager>.</xref:System.Web.SessionState.SessionIDManager> <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>Метод, который извлекает значения идентификатора сеанса из текущего <xref:System.Web.HttpRequest>, гарантирует, что значения не превышает значение SessionIDMaxLength и идентификатор сеанса является 24-символьную строку, содержащую только строчные буквы до z и цифры 0 – 5, вызвав <xref:System.Web.SessionState.SessionIDManager.Validate%2A>метод.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.HttpRequest> </xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> При реализации пользовательского <xref:System.Web.SessionState.SessionIDManager>класс, наследующий <xref:System.Web.SessionState.SessionIDManager>класса и переопределяет <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>метода, но не <xref:System.Web.SessionState.SessionIDManager.Validate%2A>метод, пользовательский идентификатор сеанса значения должен соответствовать ограничениям выше.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager> Пример переопределения <xref:System.Web.SessionState.SessionIDManager>класса и реализации этих методов см. пример для <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>метод.</xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  syntax:
    content: public static int SessionIDMaxLength { get; }
    return:
      type: System.Int32
      description: "Максимальная длина допустимого идентификатора сеанса."
  overload: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает значение, указывающее, допустим ли идентификатор сеанса."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Метод Validate проверяет, что предоставленный `id` 24-символьная строка, состоящая из символов нижнего регистра из z и числа от 0 до 5 и максимальная длина сеанса идентификатор не превышает 80 символов.       <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>Метод вызывает метод проверки при получении идентификатора сеанса из HTTP-запроса, чтобы убедиться, что предоставленного идентификатора сеанса имеет правильный формат.</xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>"
  example:
  - "The following code example shows a class that inherits the <xref:System.Web.SessionState.SessionIDManager> class and overrides the <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> and Validate methods with methods that supply and validate a <xref:System.Guid> as the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  \n  \n [!code-cs[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/csharp/m-system.web.sessionstat_5_1.cs)]\n [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/add/codesnippet/visualbasic/m-system.web.sessionstat_5_1.vb)]  \n  \n To use the custom class demonstrated in this example, replace the `SessionID` HTTP module in your Web.config file with your custom class, as shown in the following example.  \n  \n```  \n<httpModules>  \n  <remove name=\"SessionID\" />  \n  <add name=\"SessionID\"  \n       type=\"Samples.AspNet.Session.GuidSessionIDManager\" />  \n</httpModules>  \n```"
  syntax:
    content: public virtual bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "Идентификатор сеанса для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если идентификатор сеанса является допустимым; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionIDManager.#ctor
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager()
  nameWithType: SessionIDManager.SessionIDManager()
  fullName: System.Web.SessionState.SessionIDManager.SessionIDManager()
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: SessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionIDManager.Decode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode(String)
  nameWithType: SessionIDManager.Decode(String)
  fullName: System.Web.SessionState.SessionIDManager.Decode(String)
- uid: System.Web.SessionState.SessionIDManager.Encode(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode(String)
  nameWithType: SessionIDManager.Encode(String)
  fullName: System.Web.SessionState.SessionIDManager.Encode(String)
- uid: System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: SessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.Initialize
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: SessionIDManager.Initialize()
  fullName: System.Web.SessionState.SessionIDManager.Initialize()
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: SessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.SessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.SessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
  fullName: System.Web.SessionState.SessionIDManager.SessionIDMaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: SessionIDManager.Validate(String)
  fullName: System.Web.SessionState.SessionIDManager.Validate(String)
- uid: System.Web.SessionState.SessionIDManager.#ctor*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDManager
  nameWithType: SessionIDManager.SessionIDManager
- uid: System.Web.SessionState.SessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: SessionIDManager.CreateSessionID
- uid: System.Web.SessionState.SessionIDManager.Decode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Decode
  nameWithType: SessionIDManager.Decode
- uid: System.Web.SessionState.SessionIDManager.Encode*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Encode
  nameWithType: SessionIDManager.Encode
- uid: System.Web.SessionState.SessionIDManager.GetSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: SessionIDManager.GetSessionID
- uid: System.Web.SessionState.SessionIDManager.Initialize*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: SessionIDManager.Initialize
- uid: System.Web.SessionState.SessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionIDManager.InitializeRequest
- uid: System.Web.SessionState.SessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: SessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.SessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: SessionIDManager.SaveSessionID
- uid: System.Web.SessionState.SessionIDManager.SessionIDMaxLength*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: SessionIDMaxLength
  nameWithType: SessionIDManager.SessionIDMaxLength
- uid: System.Web.SessionState.SessionIDManager.Validate*
  parent: System.Web.SessionState.SessionIDManager
  isExternal: false
  name: Validate
  nameWithType: SessionIDManager.Validate
