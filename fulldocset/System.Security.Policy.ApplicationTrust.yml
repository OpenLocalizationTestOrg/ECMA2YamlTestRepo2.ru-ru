### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrust
  id: ApplicationTrust
  children:
  - System.Security.Policy.ApplicationTrust.#ctor
  - System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  - System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  - System.Security.Policy.ApplicationTrust.ApplicationIdentity
  - System.Security.Policy.ApplicationTrust.Clone
  - System.Security.Policy.ApplicationTrust.DefaultGrantSet
  - System.Security.Policy.ApplicationTrust.ExtraInfo
  - System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  - System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  - System.Security.Policy.ApplicationTrust.Persist
  - System.Security.Policy.ApplicationTrust.ToXml
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
  type: Class
  summary: "Инкапсулирует точки зрения безопасности приложения. Этот класс не наследуется."
  remarks: "Возвращаемый объект прав ApplicationTrust диспетчер доверия <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>метод.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrust : System.Security.Policy.EvidenceBase, System.Security.ISecurityEncodable
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements:
  - System.Security.ISecurityEncodable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor
  id: '#ctor'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> класса."
  remarks: "Этот конструктор создает пустой <xref:System.Security.Policy.ApplicationTrust>объекта.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public ApplicationTrust ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> класса <xref href=&quot;System.ApplicationIdentity&quot;> </xref>."
  remarks: "Удостоверение приложения содержит полное имя приложения и расположение базового кода."
  syntax:
    content: public ApplicationTrust (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> , Уникальным образом идентифицирует приложение."
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  id: '#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})'
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> класса с использованием предоставленного предоставленного набора и коллекции сборок с полным доверием."
  remarks: '`fullTrustAssemblies`Идентифицирует сборки со строгими именами в <xref:System.AppDomain>, которым будет предоставлено полное доверие.</xref:System.AppDomain> Этот конструктор вызывается <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName>метод для создания <xref:System.AppDomain>, которые будут использоваться как песочница.</xref:System.AppDomain> </xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> Дополнительные сведения о выполнении приложения в песочнице см. в разделе [как: выполнение частично доверенного кода в изолированной среде](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public ApplicationTrust (System.Security.PermissionSet defaultGrantSet, System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName> fullTrustAssemblies);
    parameters:
    - id: defaultGrantSet
      type: System.Security.PermissionSet
      description: "Набор разрешений по умолчанию, которые предоставляются всем сборкам, не имеющих специальных разрешений."
    - id: fullTrustAssemblies
      type: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
      description: "Массив строгих имен, представляющих сборки, которые следует учитывать полное доверие в домене приложения."
  overload: System.Security.Policy.ApplicationTrust.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fullTrustAssemblies</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fullTrustAssemblies</code>содержит сборку, которая не имеет <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает идентификатор приложения для объекта доверия приложения."
  remarks: "Свойство ApplicationIdentity однозначно идентифицирует приложение на основе манифеста необходимо активировать в новом домене."
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> Для объекта доверия приложения."
  overload: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.ApplicationIdentity&quot;></xref>Невозможно задать, поскольку он имеет значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Clone
  id: Clone
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Создает новый объект, который представляет полную копию текущего экземпляра."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Резервную копию этого объекта доверия приложения."
  overload: System.Security.Policy.ApplicationTrust.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  id: DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает инструкцию политики, определяющий набор разрешений по умолчанию."
  remarks: "Свойство DefaultGrantSet представляет разрешения, предоставленные приложению.       <xref:System.Security.Policy.PolicyStatement>Представляющий предоставление разрешений по умолчанию инициализируется с помощью <xref:System.Security.PermissionSet>и дополнительными атрибутами.</xref:System.Security.PermissionSet> </xref:System.Security.Policy.PolicyStatement>"
  syntax:
    content: public System.Security.Policy.PolicyStatement DefaultGrantSet { get; set; }
    return:
      type: System.Security.Policy.PolicyStatement
      description: "Объект <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref> предоставляет описания по умолчанию."
  overload: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  id: ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает дополнительную безопасность сведений о приложении."
  syntax:
    content: public object ExtraInfo { get; set; }
    return:
      type: System.Object
      description: "Объект, содержащий дополнительные сведения о приложении."
  overload: System.Security.Policy.ApplicationTrust.ExtraInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Восстанавливает <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> объект с заданным состоянием из кодировки XML."
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>И <xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>методы реализуются вносить <xref:System.Security.Policy.ApplicationTrust>объекты можно было кодировать XML для использования политики безопасности.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>"
  syntax:
    content: public void FromXml (System.Security.SecurityElement element);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "Кодировка, используемая для восстановления XML <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> объекта."
  overload: System.Security.Policy.ApplicationTrust.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Кодировка XML, используемая для <code> element </code> является недопустимым."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает список сборок с полным доверием для этого доверия приложения."
  remarks: "В списке перечислены сборки, которые должны быть предоставлено полное доверие в <xref:System.AppDomain>, связанного с данным <xref:System.Security.Policy.ApplicationTrust>экземпляра.</xref:System.Security.Policy.ApplicationTrust> </xref:System.AppDomain> Сборки идентифицируются по строгим именам."
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Policy.StrongName> FullTrustAssemblies { get; }
    return:
      type: System.Collections.Generic.IList{System.Security.Policy.StrongName}
      description: "Список сборок с полным доверием."
  overload: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  id: IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает значение, указывающее, является ли приложение имеет необходимые разрешения и является доверенным для выполнения."
  remarks: "Диспетчер доверия присваивает свойству IsApplicationTrustedToRun `true` при приложение было утверждено для выполнения."
  syntax:
    content: public bool IsApplicationTrustedToRun { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение является доверенным для выполнения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.Persist
  id: Persist
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает значение, указывающее, следует ли сохранять данные для доверия приложения."
  remarks: "Если свойство Persist не `true`, данные для доверия приложения сохраняется в хранилище приложения ClickOnce."
  syntax:
    content: public bool Persist { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные для доверия приложения сохраняется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationTrust.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrust.ToXml
  id: ToXml
  parent: System.Security.Policy.ApplicationTrust
  langs:
  - csharp
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Создает кодировку XML для <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> объекта и его текущего состояния."
  remarks: "<xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>И <xref:System.Security.ISecurityPolicyEncodable.FromXml%2A>методы реализуются вносить <xref:System.Security.Policy.ApplicationTrust>объекты можно было кодировать XML для использования политики безопасности.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.ISecurityPolicyEncodable.FromXml%2A> </xref:System.Security.ISecurityPolicyEncodable.ToXml%2A>"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Кодировка XML объекта безопасности, включая сведения о состоянии."
  overload: System.Security.Policy.ApplicationTrust.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.ApplicationTrust.#ctor
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust()
  nameWithType: ApplicationTrust.ApplicationTrust()
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust()
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(ApplicationIdentity)
  nameWithType: ApplicationTrust.ApplicationTrust(ApplicationIdentity)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  nameWithType: ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
  fullName: System.Security.Policy.ApplicationTrust.ApplicationTrust(PermissionSet,IEnumerable<StrongName>)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<StrongName>
  nameWithType: IEnumerable<StrongName>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
  fullName: System.Security.Policy.ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone()
  nameWithType: ApplicationTrust.Clone()
  fullName: System.Security.Policy.ApplicationTrust.Clone()
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
  fullName: System.Security.Policy.ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
  fullName: System.Security.Policy.ApplicationTrust.ExtraInfo
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ApplicationTrust.FromXml(SecurityElement)
  fullName: System.Security.Policy.ApplicationTrust.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
  fullName: System.Security.Policy.ApplicationTrust.FullTrustAssemblies
- uid: System.Collections.Generic.IList{System.Security.Policy.StrongName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<StrongName>
  nameWithType: IList<StrongName>
  fullName: System.Collections.Generic.IList<System.Security.Policy.StrongName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Policy.StrongName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Policy.StrongName
    name: StrongName
    nameWithType: StrongName
    fullName: StrongName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
  fullName: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrust.Persist
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
  fullName: System.Security.Policy.ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml()
  nameWithType: ApplicationTrust.ToXml()
  fullName: System.Security.Policy.ApplicationTrust.ToXml()
- uid: System.Security.Policy.ApplicationTrust.#ctor*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust.ApplicationIdentity*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationTrust.ApplicationIdentity
- uid: System.Security.Policy.ApplicationTrust.Clone*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Clone
  nameWithType: ApplicationTrust.Clone
- uid: System.Security.Policy.ApplicationTrust.DefaultGrantSet*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: DefaultGrantSet
  nameWithType: ApplicationTrust.DefaultGrantSet
- uid: System.Security.Policy.ApplicationTrust.ExtraInfo*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ExtraInfo
  nameWithType: ApplicationTrust.ExtraInfo
- uid: System.Security.Policy.ApplicationTrust.FromXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FromXml
  nameWithType: ApplicationTrust.FromXml
- uid: System.Security.Policy.ApplicationTrust.FullTrustAssemblies*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: ApplicationTrust.FullTrustAssemblies
- uid: System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: IsApplicationTrustedToRun
  nameWithType: ApplicationTrust.IsApplicationTrustedToRun
- uid: System.Security.Policy.ApplicationTrust.Persist*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: Persist
  nameWithType: ApplicationTrust.Persist
- uid: System.Security.Policy.ApplicationTrust.ToXml*
  parent: System.Security.Policy.ApplicationTrust
  isExternal: false
  name: ToXml
  nameWithType: ApplicationTrust.ToXml
