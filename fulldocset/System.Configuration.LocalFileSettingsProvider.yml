### YamlMime:ManagedReference
items:
- uid: System.Configuration.LocalFileSettingsProvider
  id: LocalFileSettingsProvider
  children:
  - System.Configuration.LocalFileSettingsProvider.#ctor
  - System.Configuration.LocalFileSettingsProvider.ApplicationName
  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider
  fullName: System.Configuration.LocalFileSettingsProvider
  type: Class
  summary: "Обеспечивает механизм сохраняемости для классов параметров приложения."
  remarks: "Поставщик параметров определяет механизм для хранения данных конфигурации, используемых в архитектуре параметров приложения. [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Содержит один поставщик параметров по умолчанию, LocalFileSettingsProvider, где хранятся данные конфигурации в локальной файловой системе. Свойства параметров приложения или группу свойств связаны с поставщиком определенные параметры при помощи <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Как правило клиентская программа не обращается к явным образом этого класса; Вместо этого архитектура параметров приложения автоматически вызывает соответствующие параметры поставщика, когда требуются его службы. Например, многие члены <xref:System.Configuration.ApplicationSettingsBase>Делегировать свою работу, поставщика связанные параметры.</xref:System.Configuration.ApplicationSettingsBase>       LocalFileSettingsProvider сохраняет параметры в файлах конфигурации, которые имеют расширение `.config`. Содержимое файлов конфигурации структурированы в форме XML-документов. В зависимости от того, является ли параметр действует на уровне приложения или уровня пользователя, данные конфигурации хранятся как элементы в `<applicationSettings>` или `<userSettings>` статьи группы, соответственно. Каждая из этих групп разделе представлен соответствующий <xref:System.Configuration.AppSettingsSection>или <xref:System.Configuration.ClientSettingsSection>соответственно.</xref:System.Configuration.ClientSettingsSection> </xref:System.Configuration.AppSettingsSection> Каждый раздел объект принадлежит и управляется обработчик раздела конфигурации, который представляет собой объект типа <xref:System.Configuration.IConfigurationSectionHandler>.</xref:System.Configuration.IConfigurationSectionHandler>       Параметры приложения и пользовательских параметров по умолчанию хранятся в файле с именем `application.exe.config`, который создается в том же каталоге, что и исполняемый файл. Параметры конфигурации приложения доступны только для чтения. Данные конкретного пользователя хранятся в файле с именем `user.config`, сохраненные в домашнем каталоге пользователя. Если включены перемещаемые профили, удалось существуют две версии файла конфигурации пользователя. В этом случае записи в версии с перемещаемым профилем имеют приоритет над повторяющихся значений в файле конфигурации локального пользователя.       Дополнительные сведения о параметрах приложений см. в разделе [параметры приложения для Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements:
  - System.Configuration.IApplicationSettingsProvider
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.LocalFileSettingsProvider&quot;> </xref> класса."
  remarks: "Конструктор по умолчанию устанавливает <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>Свойства <xref:System.String.Empty>.</xref:System.String.Empty> </xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>"
  syntax:
    content: public LocalFileSettingsProvider ();
    parameters: []
  overload: System.Configuration.LocalFileSettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает имя текущего выполняемого приложения."
  remarks: "ApplicationName и <xref:System.Configuration.Provider.ProviderBase.Name%2A>Свойства помогают устранить неоднозначность аналогично именованных параметров в разных приложениях.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая отображаемое имя приложения."
  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает значение именованного свойства параметров для более ранней версии того же приложения."
  remarks: "Метод GetPreviousVersion часто используется в сочетании с <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>метод при переносе параметров приложения во время установки новой версии приложения.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Дополнительные сведения см. в разделе <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>метод.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> , описывающее, где используются свойства параметров приложения."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> , Значение которого является должны быть возвращены."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> представляет параметр приложения, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию параметров свойства для указанного приложения экземпляра и параметры группы свойств."
  remarks: "Метод GetPropertyValues также управляет <xref:System.Configuration.SpecialSetting>.</xref:System.Configuration.SpecialSetting> тип параметров специальные приложения Строки подключения хранятся в специальном разделе файла конфигурации, разделенных элемент `<connectionstrings>`.      настроек [!CAUTION] настроек <xref:System.Configuration.LocalFileSettingsProvider>не использует шифрование для сохранения параметров.</xref:System.Configuration.LocalFileSettingsProvider> Таким образом не хранить пароли в открытом виде или другую конфиденциальную информацию, с помощью этого поставщика, без учета дополнительные меры предосторожности, таких как отдельно шифрование сведения в файле конфигурации. Дополнительные сведения см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> описания текущего использования приложений."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> содержащий группы свойств параметров, значения которых требуется получить."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> содержит значения для группы свойств указанные параметры."
  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Параметр уровня пользователя, но текущая конфигурация поддерживает только параметры приложения."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует поставщика."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);
    parameters:
    - id: name
      type: System.String
      description: "Понятное имя поставщика."
    - id: values
      type: System.Collections.Specialized.NameValueCollection
      description: "Коллекция пар имя значение, представляющих атрибуты поставщика, указанные в конфигурации для этого поставщика."
  overload: System.Configuration.LocalFileSettingsProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Сбрасывает все параметры приложения, связанные с указанным приложением к значениям по умолчанию."
  remarks: "Метод Reset восстанавливает хранимые значения группы параметров указанного приложения. Действие сброса служб зависит от области свойства параметров приложения:-параметры приложения не затрагиваются.      -Параметры пользователя сбрасываются в значения по умолчанию, которые хранятся в виде только для чтения записей в файле конфигурации приложения `application.exe.config`. Если используются перемещаемые профили, любые значения параметров приложения в перемещаемом профиле имеют приоритет над повторяющиеся значения, обнаруженные в локальный профиль.       Обратите внимание, что при использовании перемещаемых профилей может быть двух `user.config` файлы, один для локальных параметров и один для перемещаемого профиля."
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> описания текущего использования приложений."
  overload: System.Configuration.LocalFileSettingsProvider.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Параметр уровня пользователя, но текущая конфигурация поддерживает только параметры приложения."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Задает значения указанной группы параметров свойства."
  remarks: "Параметры класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>, содержит <xref:System.Configuration.ApplicationSettingsBase.Save%2A>метод, который вызывается для сохранения значений всех его свойств параметров.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> </xref:System.Configuration.ApplicationSettingsBase> Этот метод перечисляет все параметры поставщиков, связанных с параметрами свойства и вызывает <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>метод для каждого <xref:System.Configuration.SettingsProvider>для выполнения фактической сериализации операции.</xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       SetPropertyValues сериализует отдельно каждое свойство параметров приложений пользователя его соответствующий параметр в соответствующую приложения `user.config` файла конфигурации.       По умолчанию метод SetPropertyValues использует следующую последовательность логических для определения схемы сериализации, в зависимости от типа свойства параметров: 1.  Если тип имеет связанный <xref:System.ComponentModel.TypeConverter>с <xref:System.ComponentModel.TypeConverter.ConvertToString%2A>реализации метода, это преобразование используется.</xref:System.ComponentModel.TypeConverter.ConvertToString%2A> </xref:System.ComponentModel.TypeConverter>      2.  Используется XML-сериализации.       Тем не менее можно указать предпочтительный механизм сериализации с помощью <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> <xref:System.Configuration.LocalFileSettingsProvider>не поддерживает двоичную сериализацию в [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)].</xref:System.Configuration.LocalFileSettingsProvider>       Если свойство параметров пользователя снова установить значение по умолчанию явно, поставщик параметров локального файла удалит запись для связанного параметра из файла конфигурации пользователя. Далее доступ на чтение для этого свойства будет просто использовать значение по умолчанию.      настроек [!CAUTION] настроек <xref:System.Configuration.LocalFileSettingsProvider>не использует шифрование для сохранения параметров.</xref:System.Configuration.LocalFileSettingsProvider> Таким образом не хранить пароли в открытом виде или другую конфиденциальную информацию, с помощью этого поставщика, без учета дополнительные меры предосторожности, таких как отдельно шифрование сведения в файле конфигурации. Дополнительные сведения см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> описания текущего использования приложений."
    - id: values
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> представляющий группы свойств параметров для установки."
  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Параметр уровня пользователя, но текущая конфигурация поддерживает только параметры приложения.       - или - произошла общая ошибка при сохранении параметров в файле конфигурации."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Пытается выполнить миграцию предыдущих параметров пользователя из предыдущей версии того же приложения."
  remarks: "<xref:System.Configuration.LocalFileSettingsProvider>переносит локальные и перемещаемые параметры в отдельных операциях.</xref:System.Configuration.LocalFileSettingsProvider>       Метод обновления подавляется для каждого параметра приложения, который был <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>применен к нему, или для всей класс-оболочка параметров, производный от <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>       Таким образом, этот метод вызывается зависит от типа приложения, которая обновляется:-каждой версии [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения хранятся в собственном каталоге изолированной установки. После новой версии [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение будет установлено, и при запуске новой версии внутренней логики автоматически вызывает обновление, чтобы перенести все общие параметры приложения до новой версии. Дополнительные сведения см. в разделе [ClickOnce и параметры приложения](~/add/includes/ajax-current-ext-md.md).      -Стандартных форм Windows Forms и консольных приложений вручную необходимо вызвать обновление, так как не общие, автоматический способ определения при первом запуске такого приложения. Два обычных способа этого в программу установки или с помощью от самого приложения, с помощью свойств persisted, часто называемое как `IsFirstRun`.       Обратите внимание, для более новой версии для миграции параметров приложения, его необходимо также загрузить и читать старую версию параметры приложения. Таким образом он должен содержать классы-оболочки, совместимые с новой и с предыдущей версии приложения."
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> описания текущего использования приложений."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> содержащий группы свойств параметров, значения которых требуется получить."
  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Параметр уровня пользователя, но текущая конфигурация поддерживает только параметры приложения.       - или - предыдущей версии файла конфигурации будет недоступен."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.LocalFileSettingsProvider.#ctor*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: LocalFileSettingsProvider.GetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Initialize*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize
  nameWithType: LocalFileSettingsProvider.Initialize
- uid: System.Configuration.LocalFileSettingsProvider.Reset*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: LocalFileSettingsProvider.Reset
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: LocalFileSettingsProvider.SetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: LocalFileSettingsProvider.Upgrade
