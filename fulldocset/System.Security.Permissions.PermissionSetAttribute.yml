### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PermissionSetAttribute
  id: PermissionSetAttribute
  children:
  - System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.PermissionSetAttribute.CreatePermission
  - System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  - System.Security.Permissions.PermissionSetAttribute.File
  - System.Security.Permissions.PermissionSetAttribute.Hex
  - System.Security.Permissions.PermissionSetAttribute.Name
  - System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  - System.Security.Permissions.PermissionSetAttribute.XML
  langs:
  - csharp
  name: PermissionSetAttribute
  nameWithType: PermissionSetAttribute
  fullName: System.Security.Permissions.PermissionSetAttribute
  type: Class
  summary: "Разрешает выполнять действия по безопасности для <xref href=&quot;System.Security.PermissionSet&quot;> </xref> для применения в коде с помощью декларативной безопасности. Этот класс не наследуется."
  remarks: "Свойства PermissionSetAttribute <xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>, <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>, и <xref:System.Security.Permissions.PermissionSetAttribute.XML%2A>являются взаимоисключающими, это означает, что набор разрешений может иметь в качестве источника только один из следующих: именованный набор разрешений, файл, содержащий XML-представление набора разрешений или задать строку, содержащую XML-представление набора разрешений.</xref:System.Security.Permissions.PermissionSetAttribute.XML%2A> </xref:System.Security.Permissions.PermissionSetAttribute.File%2A> </xref:System.Security.Permissions.PermissionSetAttribute.Name%2A>       Зависит от области объявление, которое может быть <xref:System.Security.Permissions.SecurityAction>используемая.</xref:System.Security.Permissions.SecurityAction> Объект <xref:System.Security.Permissions.SecurityAction>блокировкой <xref:System.Security.PermissionSet>эквивалентно выполнению этого действия над каждым разрешением в наборе.</xref:System.Security.PermissionSet> </xref:System.Security.Permissions.SecurityAction>       Сведения безопасности, объявляемые атрибутом безопасности хранится в метаданных конечного объекта атрибута и доступен в системе во время выполнения. Атрибуты безопасности используются только для декларативной безопасности. Для принудительной безопасности используйте соответствующий класс разрешений."
  example:
  - "The following example shows the use of the PermissionSetAttribute Class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#1](~/add/codesnippet/visualbasic/t-system.security.permis_5_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#1](~/add/codesnippet/csharp/t-system.security.permis_5_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PermissionSetAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: PermissionSetAttribute(SecurityAction)
  nameWithType: PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  fullName: System.Security.Permissions.PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.PermissionSetAttribute&quot;> </xref> класса с заданными параметрами безопасности действием."
  syntax:
    content: public PermissionSetAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Одно из значений перечисления, указывающее действие по обеспечению безопасности."
  overload: System.Security.Permissions.PermissionSetAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: PermissionSetAttribute.CreatePermission()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Этот метод не используется."
  remarks: "Этот метод не используется. она включена только для поддержки наследования от <xref:System.Security.Permissions.SecurityAttribute>.</xref:System.Security.Permissions.SecurityAttribute>"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Пустая ссылка (<xref uid=&quot;langword_csharp_nothing&quot; name=&quot;nothing&quot; href=&quot;&quot;> </xref> в Visual Basic) во всех случаях."
  overload: System.Security.Permissions.PermissionSetAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  id: CreatePermissionSet
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: CreatePermissionSet()
  nameWithType: PermissionSetAttribute.CreatePermissionSet()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает новый набор разрешений, в зависимости от этого атрибута объект набора разрешений."
  remarks: "Этот метод должен вызываться только системой безопасности, вызывать в коде приложения.       Атрибуты используются во время компиляции для преобразования объявлений безопасности в сериализованную форму в метаданных. Данные декларативной безопасности в метаданных создаются из объекта разрешения, возвращаемого этим методом, и который соответствует экземпляру атрибута."
  syntax:
    content: public System.Security.PermissionSet CreatePermissionSet ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "Новый набор разрешений."
  overload: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.File
  id: File
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: File
  nameWithType: PermissionSetAttribute.File
  fullName: System.Security.Permissions.PermissionSetAttribute.File
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает файл, содержащий XML-представление набора пользовательских разрешений для объявления."
  remarks: "Если указанный файл Юникода, установите <xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A>Свойства `true`.</xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A>"
  example:
  - "The following code shows the use of the File property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#2](~/add/codesnippet/visualbasic/p-system.security.permis_27_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#2](~/add/codesnippet/csharp/p-system.security.permis_27_1.cs)]"
  syntax:
    content: public string File { get; set; }
    return:
      type: System.String
      description: "Задать физический путь к файлу, содержащему XML-представление разрешения."
  overload: System.Security.Permissions.PermissionSetAttribute.File*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.Hex
  id: Hex
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
  fullName: System.Security.Permissions.PermissionSetAttribute.Hex
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает шестнадцатеричное представление набора разрешений в кодировке XML."
  syntax:
    content: public string Hex { get; set; }
    return:
      type: System.String
      description: "Шестнадцатеричное представление XML в кодировке набор разрешений."
  overload: System.Security.Permissions.PermissionSetAttribute.Hex*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.Name
  id: Name
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: Name
  nameWithType: PermissionSetAttribute.Name
  fullName: System.Security.Permissions.PermissionSetAttribute.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает имя набора разрешений."
  remarks: "Так как именованные наборы могут различаться на разных компьютерах разрешений, использование именованных наборов разрешений для декларативной безопасности ограничен неизменяемый именованных наборов разрешений включены как часть политики по умолчанию. Это гарантирует, что разрешений, содержащихся в упоминаемом наборе разрешений будет таким же везде, где выполняется код. Ошибка компилятора возникает при использовании изменяемый или неизвестный именованный набор разрешений."
  example:
  - "The following code shows the use of the Name property. This code example is part of a larger example provided for the <xref:System.Security.Permissions.PermissionSetAttribute> class.  \n  \n [!code-vb[System.Security.Permissions.PermissionSetAttribute#3](~/add/codesnippet/visualbasic/p-system.security.permis_28_1.vb)]\n [!code-cs[System.Security.Permissions.PermissionSetAttribute#3](~/add/codesnippet/csharp/p-system.security.permis_28_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя доступного только для чтения <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> (один или несколько наборов разрешений, которые содержатся в политике по умолчанию и не могут быть изменены)."
  overload: System.Security.Permissions.PermissionSetAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  id: UnicodeEncoded
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
  fullName: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, является ли заданный файл <xref:System.Security.Permissions.PermissionSetAttribute.File*>имеет формат Юникода или в кодировке ASCII.</xref:System.Security.Permissions.PermissionSetAttribute.File*>"
  remarks: "Если это свойство не задано, предполагается, что файл быть ASCII.       Если <xref:System.Security.Permissions.PermissionSetAttribute.File%2A>является `null` это свойство не используется.</xref:System.Security.Permissions.PermissionSetAttribute.File%2A>"
  syntax:
    content: public bool UnicodeEncoded { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл представлен в Юникоде; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PermissionSetAttribute.XML
  id: XML
  parent: System.Security.Permissions.PermissionSetAttribute
  langs:
  - csharp
  name: XML
  nameWithType: PermissionSetAttribute.XML
  fullName: System.Security.Permissions.PermissionSetAttribute.XML
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает XML-представление набора разрешений."
  syntax:
    content: public string XML { get; set; }
    return:
      type: System.String
      description: "XML-представление набора разрешений."
  overload: System.Security.Permissions.PermissionSetAttribute.XML*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: PermissionSetAttribute(SecurityAction)
  nameWithType: PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
  fullName: System.Security.Permissions.PermissionSetAttribute.PermissionSetAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: PermissionSetAttribute.CreatePermission()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermissionSet()
  nameWithType: PermissionSetAttribute.CreatePermissionSet()
  fullName: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet()
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Permissions.PermissionSetAttribute.File
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: File
  nameWithType: PermissionSetAttribute.File
  fullName: System.Security.Permissions.PermissionSetAttribute.File
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.PermissionSetAttribute.Hex
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
  fullName: System.Security.Permissions.PermissionSetAttribute.Hex
- uid: System.Security.Permissions.PermissionSetAttribute.Name
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Name
  nameWithType: PermissionSetAttribute.Name
  fullName: System.Security.Permissions.PermissionSetAttribute.Name
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
  fullName: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.PermissionSetAttribute.XML
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: XML
  nameWithType: PermissionSetAttribute.XML
  fullName: System.Security.Permissions.PermissionSetAttribute.XML
- uid: System.Security.Permissions.PermissionSetAttribute.#ctor*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: PermissionSetAttribute
  nameWithType: PermissionSetAttribute.PermissionSetAttribute
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermission*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: PermissionSetAttribute.CreatePermission
- uid: System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: CreatePermissionSet
  nameWithType: PermissionSetAttribute.CreatePermissionSet
- uid: System.Security.Permissions.PermissionSetAttribute.File*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: File
  nameWithType: PermissionSetAttribute.File
- uid: System.Security.Permissions.PermissionSetAttribute.Hex*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Hex
  nameWithType: PermissionSetAttribute.Hex
- uid: System.Security.Permissions.PermissionSetAttribute.Name*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: Name
  nameWithType: PermissionSetAttribute.Name
- uid: System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: UnicodeEncoded
  nameWithType: PermissionSetAttribute.UnicodeEncoded
- uid: System.Security.Permissions.PermissionSetAttribute.XML*
  parent: System.Security.Permissions.PermissionSetAttribute
  isExternal: false
  name: XML
  nameWithType: PermissionSetAttribute.XML
