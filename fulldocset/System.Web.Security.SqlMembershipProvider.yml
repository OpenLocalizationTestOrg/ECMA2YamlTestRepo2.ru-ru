### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlMembershipProvider
  id: SqlMembershipProvider
  children:
  - System.Web.Security.SqlMembershipProvider.#ctor
  - System.Web.Security.SqlMembershipProvider.ApplicationName
  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GeneratePassword
  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  - System.Web.Security.SqlMembershipProvider.PasswordFormat
  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  langs:
  - csharp
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider
  fullName: System.Web.Security.SqlMembershipProvider
  type: Class
  summary: "Управляет хранением сведений о членстве для приложения ASP.NET в базе данных SQL Server."
  remarks: "This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a SqlMembershipProvider without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the SqlMembershipProvider object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \n  \n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\Microsoft.NET\\Framework\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \n  \n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file defines a default SqlMembershipProvider instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \n  \n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a SqlMembershipProvider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"  \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          maxInvalidPasswordAttempts=\"5\"  \n          passwordAttemptWindow=\"10\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'
  inheritance:
  - System.Web.Security.MembershipProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> класса."
  remarks: "Конструктор SqlMembershipProvider вызывается ASP.NET, чтобы создать экземпляр <xref:System.Web.Security.SqlMembershipProvider>класса, указанное в конфигурации для приложения.</xref:System.Web.Security.SqlMembershipProvider> Этот конструктор не предназначен для использования в коде."
  syntax:
    content: public SqlMembershipProvider ();
    parameters: []
  overload: System.Web.Security.SqlMembershipProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает или задает имя приложения, которые будут сохраняться и извлекаться сведения о членстве."
  remarks: "Используемые ApplicationName <xref:System.Web.Security.SqlMembershipProvider>для группирования сведений пользователя.</xref:System.Web.Security.SqlMembershipProvider> Уточнение информации пользователя с именем приложения, можно хранить информацию для нескольких приложений в одной базе данных без конфликтов между идентичными именами пользователей. Кроме того несколько приложений ASP.NET можно использовать одну и ту же базу данных пользователя, указав то же значение в свойство ApplicationName. Свойство ApplicationName могут устанавливаться программными средствами, или он может быть задано декларативно в файле конфигурации для веб-приложения с `applicationName` атрибута.       Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, то <xref:System.Web.HttpRequest.ApplicationPath%2A>используется значение свойства для первого запроса приложения.</xref:System.Web.HttpRequest.ApplicationPath%2A>      Настроек [!CAUTION] настроек, так как экземпляр по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication>объекта может быть несколько запросов, параллельном выполнении и попытка задать значение свойства ApplicationName.</xref:System.Web.HttpApplication> Свойство ApplicationName не является потокобезопасным для нескольких операций записи и изменение значения свойства ApplicationName может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется, чтобы избежать написания кода, чтобы пользователи могли задать свойство ApplicationName без крайней необходимости. Пример приложения, где может потребоваться задать свойство ApplicationName — административные приложения, в котором данные о членстве для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения, которые будут сохраняться и извлекаться сведения о членстве. Значение по умолчанию — <> </> *настроек значение свойства для текущего <> </> *настроек."
  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Была предпринята попытка задать свойство ApplicationName на пустую строку или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Была предпринята попытка задать свойство ApplicationName в строку, длина которого превышает 256 символов."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Изменяет пароль пользователя."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса, чтобы обновить пароль для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       Максимальная длина пароля составляет 128 символов.       Если указан неправильный пароль в метод ChangePassword, внутренний счетчик, который отслеживает попытки ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>метод.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Можно вызвать метод ChangePassword напрямую, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider>экземпляр с помощью <xref:System.Web.Security.Membership.Provider%2A>Свойства <xref:System.Web.Security.Membership>класса.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.Membership.Provider%2A>Предоставляет свойство `defaultProvider` указан в файле Web.config для приложения.</xref:System.Web.Security.Membership.Provider%2A> Настроенные поставщики, которые не являются поставщика по умолчанию, связанные с помощью <xref:System.Web.Security.Membership.Providers%2A>свойство.</xref:System.Web.Security.Membership.Providers%2A>       Можно также изменить пароли пользователей с помощью <xref:System.Web.Security.MembershipUser.ChangePassword%2A>метод.</xref:System.Web.Security.MembershipUser.ChangePassword%2A>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example modifies the password for the specified user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/csharp/baafd90e-fc24-4306-ac18-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/visualbasic/baafd90e-fc24-4306-ac18-_1.aspx)]"
  syntax:
    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: "Обновление пароля для пользователя."
    - id: oldPassword
      type: System.String
      description: "Текущий пароль для указанного пользователя."
    - id: newPassword
      type: System.String
      description: "Новый пароль для указанного пользователя."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пароль был успешно обновлен. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если предоставленный старый пароль недействителен, пользователь заблокирован или пользователь не существует в базе данных."
  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPassword</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The change-password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event, and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of <code>newPassword</code> is less than the minimum length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*> property.  \n  \n \\- or -  \n  \n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*> property.  \n  \n \\- or -  \n  \n <code>newPassword</code> does not pass the regular expression defined in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*> property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>username</code>не найден в базе данных."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Произошла ошибка при задании новое значение пароля в базе данных."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Произошло необработанное исключение."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Обновляет вопрос и ответ для пользователя в базе данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.MembershipUser>класса, чтобы обновить контрольный вопрос и ответ пользователя в базе данных SQL Server, который указан в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.MembershipUser> Ответ пароля шифруется с использованием формата, который указан в <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. Метод ChangePasswordQuestionAndAnswer обновлений контрольный вопрос и ответ на вопрос для авторизованного пользователя.       Если указан неправильный пароль в метод ChangePasswordQuestionAndAnswer, внутренняя счетчики, отслеживающие попыток ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>метод.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Максимальная длина контрольного вопроса пароля составляет 256 символов. Максимальная длина ответа пароля составляет 128 символов.       Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example updates the password question and answer for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/csharp/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/visualbasic/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]"
  syntax:
    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "Пользователю изменяется проверочный вопрос и ответ."
    - id: password
      type: System.String
      description: "Пароль для указанного пользователя."
    - id: newPasswordQuestion
      type: System.String
      description: "Новый проверочный вопрос для указанного пользователя."
    - id: newPasswordAnswer
      type: System.String
      description: "Новый ответ пароля для указанного пользователя."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если обновление выполнено успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> также возвращается, если <code> password </code> неверен, пользователь заблокирован или пользователь не существует в базе данных."
  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>password</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Произошла ошибка при изменении проверочный вопрос и ответ в базе данных."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет нового пользователя в базе данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса, чтобы создать нового пользователя в базе данных SQL Server, указанной в файле конфигурации приложения ASP.NET.</xref:System.Web.Security.Membership>       Новые пользователи идентифицируются с помощью настроенных <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>свойству `true`, и `null` или пустая строка (&quot;») указан для `email` параметра, не удастся создать пользователя.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Создание пользователя также завершится ошибкой, если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>свойству `true` и значения, указанного для `email` параметр является дубликатом адреса электронной почты для существующего пользователя в базе данных для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>       Максимальная длина имени пользователя составляет 256 символов. Максимальная длина для адреса электронной почты составляет 256 символов. Максимальная длина пароля открытым текстом или после хэширования или шифрования, составляет 128 символов.       Другие условия, которые приводят к сбою при создании пользователя: - `password` параметр `null`, или пустую строку после усечения.      — Длина `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>      — Число-неалфавитные символы в `password` параметра меньше значения, указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>      - `password` Параметра не проходит регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>      -Код проверки пользовательского пароля отменено Создание пользователя во время <xref:System.Web.Security.MembershipProvider.ValidatingPassword>событий.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>      - <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>Свойство `true` и `passwordAnswer` имеет значение `null` или пустую строку после усечения.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      - `passwordAnswer` Параметра является пустая строка.      - `passwordAnswer` Параметр имеет длину более 128 символов.      - <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>Свойство `true` и контрольный вопрос `null` или пустую строку после усечения.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      - `passwordQuestion` Параметра является пустая строка.      - `passwordQuestion` Параметр имеет длину более 256 символов.      - `providerUserKey` Параметр заданы для объекта, тип которого отличается от <xref:System.Guid?displayProperty=fullName>.</xref:System.Guid?displayProperty=fullName>      - `providerUserKey` Параметр является дубликатом существующего ключа пользователя.      - `username` Параметр является дубликатом существующего имени пользователя.       Начальные и конечные пробелы удаляются из значений всех строковых параметров."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для нового пользователя."
    - id: password
      type: System.String
      description: "Пароль для нового пользователя."
    - id: email
      type: System.String
      description: "Адрес электронной почты для нового пользователя."
    - id: passwordQuestion
      type: System.String
      description: "Проверочный вопрос для нового пользователя."
    - id: passwordAnswer
      type: System.String
      description: "Ответ пароля для нового пользователя."
    - id: isApproved
      type: System.Boolean
      description: "Для проверки утвержден ли новый пользователь."
    - id: providerUserKey
      type: System.Object
      description: "Объект <xref:System.Guid>, однозначно определяющий авторизованного пользователя в базе данных SQL Server.</xref:System.Guid>"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Один из <xref:System.Web.Security.MembershipCreateStatus>значений, указывающее, является ли пользователь создан успешно.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если пользователь не был создан, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет сведения о членстве пользователя из базы данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса, чтобы удалить пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET.</xref:System.Web.Security.Membership>       Удаленные пользователи удаляется только из настроенных <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Если `deleteAllRelatedData` равно `true`, затем все данные пользователя хранятся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart>возможность индивидуальной настройки также удаляется для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>       Если авторизованный пользователь не существует в базе данных, и `deleteAllRelatedData` — `true`, затем связанные данные и данные пользователя, сохраненные для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart>возможность индивидуальной настройки будут удалены по-прежнему для приложения, указанного в <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles> В результате DeleteUser, метод можно использовать для быстрого удаления сведений, связанных с пользователем, даже если <xref:System.Web.Security.SqlMembershipProvider>объект не используется для хранения сведений о авторизованного пользователя.</xref:System.Web.Security.SqlMembershipProvider>       Начальные и конечные пробелы удаляются из `username` значение параметра."
  example:
  - "The following code example deletes the currently logged-on user.  \n  \n> [!NOTE]\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/808bac53-4bf1-477e-8865-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/808bac53-4bf1-477e-8865-_1.aspx)]"
  syntax:
    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для удаления."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы удалить данные, связанные с пользователем в базе данных; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для сохранения данных, связанные с пользователем в базе данных."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь был удален; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> также возвращается, если пользователь не существует в базе данных."
  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>является пустой строкой (&quot;»), содержит запятую, или имеет длину более 256 символов."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроен ли поставщик членства SQL Server, чтобы разрешить пользователям сбрасывать свои пароли."
  remarks: "Сброс пароля позволяет поставщику членства заменить текущий пароль пароль для имени пользователя с новым, формируется случайным образом. Это особенно полезно при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству <xref:System.Web.Security.MembershipPasswordFormat>, как пользователи не смогут получить значения хэшированный пароль.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик членства поддерживает сброс пароля; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроен ли поставщик членства SQL Server, чтобы разрешить пользователям восстанавливать свои пароли."
  remarks: "Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству <xref:System.Web.Security.MembershipPasswordFormat>, пользователь не сможет получить свой существующий пароль из базы данных.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> <xref:System.Web.Security.MembershipPasswordFormat>Формат пароля обеспечивает одностороннего кодирование значений паролей.</xref:System.Web.Security.MembershipPasswordFormat> Пароли хэшируются с произвольно создаваемого случайного значения и сравниваются со значениями, сохраненными в базе данных для проверки подлинности. Хэшированные значения не может быть без кодировки для получения исходное значение пароля.       Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству <xref:System.Web.Security.MembershipPasswordFormat>, и имеет значение EnablePasswordRetrieval `true`, <xref:System.Configuration.Provider.ProviderException>вызывается при инициализации.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик членства поддерживает восстановление паролей. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, для которых в поле адреса электронной почты содержит указанный адрес электронной почты."
  remarks: "FindUsersByEmail возвращает список авторизованных пользователей, в которых адрес электронной почты содержит совпадают с указанным `emailToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Ищет имя пользователя, которое соответствует `emailToMatch` значение параметра, используя предложения LIKE.</xref:System.Web.Security.SqlMembershipProvider> Подстановочные знаки SQL Server могут быть включены в значении параметра. Например если `emailToMatch` параметр имеет значение «address@example.com», затем сведения для пользователей с адресом электронной почты &quot;address@example.com&quot; возвращается, если он существует. Если `emailToMatch` параметр имеет значение «%@example.com», затем сведения для пользователей с адресом электронной почты &quot;address@example.com«,»address2@example.com«,»admin@example.com» и так далее возвращается.       Ограниченные результаты, возвращенные FindUsersByEmail `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords` Параметр должен быть установлен до 13.       Начальные и конечные пробелы удаляются из `emailToMatch` значение параметра."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/2e443224-e510-47e7-9af2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/2e443224-e510-47e7-9af2-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Адрес электронной почты для поиска."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "Общее число соответствующих учетных записей пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий страницу <code> pageSize </code> <xref:System.Web.Security.MembershipUser>начиная страницы, указанной параметром <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emailToMatch</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, где имя пользователя содержит совпадают с именами указанного пользователя."
  remarks: "FindUsersByName возвращает список авторизованных пользователей, для которых имя пользователя содержит сопоставление с предоставленной `usernameToMatch` для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Ищет имя пользователя, которое соответствует `usernameToMatch` значение параметра, используя предложения LIKE.</xref:System.Web.Security.SqlMembershipProvider> Подстановочные знаки SQL Server могут быть включены со значением параметра. Например если `usernameToMatch` параметр имеет значение «user1», то возвращаются сведения о пользователе для пользователя с именем пользователя «user1», если он существует. Если `usernameToMatch` параметр имеет значение «user %», а затем сведения для пользователей с именем пользователя «user1», «user2», «user_admin» и возвращаются т. д.       Ограниченные результаты, возвращенные FindUsersByName `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords` Параметр должен быть установлен до 13.       Начальные и конечные пробелы удаляются из `usernameToMatch` значение параметра."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/492b000d-1abf-495e-82ba-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/492b000d-1abf-495e-82ba-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя для поиска."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "При возврате из этого метода содержит общее число соответствующих учетных записей пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий страницу <code> pageSize </code> <xref:System.Web.Security.MembershipUser>начиная страницы, указанной параметром <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  id: GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает случайный пароль длиной не менее 14 символов."
  remarks: "<xref:System.Web.Security.Membership>Класс предоставляет <xref:System.Web.Security.Membership.GeneratePassword%2A>метод, который создает пароль указанного размера с по крайней мере указанное количество неалфавитных символов.</xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.Membership> Метод GeneratePassword <xref:System.Web.Security.SqlMembershipProvider>вызывает <xref:System.Web.Security.Membership.GeneratePassword%2A>метод <xref:System.Web.Security.Membership>класса для извлечения случайный пароль, который является менее 14 символов.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.SqlMembershipProvider> Если <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>больше, чем 14, возвращаемый пароль будет использоваться длина, указанная в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       В частности, можно вызвать метод GeneratePassword с помощью ссылки на <xref:System.Web.Security.SqlMembershipProvider>класс непосредственно из <xref:System.Web.Security.Membership.Provider%2A>Свойства <xref:System.Web.Security.Membership>класса.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       Созданный пароль должен содержать только буквы, цифры и следующие знаки пунктуации: `!@#$%^&*()_-+=[{]};:<>|./?`. Не управления скрытые или непечатаемые символы, включенные в созданном пароле.      Настроек [!NOTE] настроек случайный пароль, созданным с помощью метода GeneratePassword не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example generates a random 10-character password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/csharp/m-system.web.security.sq_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/visualbasic/m-system.web.security.sq_2_1.aspx)]"
  syntax:
    content: public virtual string GeneratePassword ();
    parameters: []
    return:
      type: System.String
      description: "Случайный пароль длиной не менее 14 символов."
  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию всех пользователей в базе данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       Ограниченные результаты, возвращенные GetAllUsers `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, причем нуль указывает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords` Параметр должен быть установлен до 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/f02da845-c892-4dcc-aa15-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/f02da845-c892-4dcc-aa15-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "Общее число пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "<xref:System.Web.Security.MembershipUserCollection> <xref:System.Web.Security.MembershipUser>Объекты</xref:System.Web.Security.MembershipUser> представления всех пользователей в базе данных для настроенного <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName*> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает количество пользователей, которые в настоящее время доступа к приложению."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса для извлечения количество пользователей, считается в оперативном режиме, из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       GetNumberOfUsersOnline возвращает число пользователей, которых действие Дата и время последнего больше, чем текущая дата и время меньше значения текущего приложения <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>свойство в минутах.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>       Только пользователи, связанные с настроенным <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>включаются в счетчик.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>"
  example:
  - "The following code example returns a list of users with a count of the users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.sq_3_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.sq_3_1.aspx)]"
  syntax:
    content: public override int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Число пользователей, которые в настоящее время доступа к приложению."
  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает пароль для указанного имени пользователя из базы данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.MembershipUser>класса для извлечения пароля для пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.MembershipUser>       Если ответ неправильный пароль предоставляется методу GetPassword, внутренний счетчик, который отслеживает попытки ввода пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>метод.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Можно вызвать метод GetPassword напрямую, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider>экземпляр с помощью <xref:System.Web.Security.Membership.Provider%2A>Свойства <xref:System.Web.Security.Membership>класса.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству <xref:System.Web.Security.MembershipPasswordFormat>, метод GetPassword невозможно извлечь пароль.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Хэшированные пароли шифруются однонаправленно и не может быть расшифрован. Если <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству <xref:System.Web.Security.MembershipPasswordFormat>, и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>равно `true`, <xref:System.Configuration.Provider.ProviderException>вызывается при инициализации поставщика.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \n  \n> [!NOTE]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/66916cd5-cd17-4858-8835-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/66916cd5-cd17-4858-8835-_1.aspx)]"
  syntax:
    content: public override string GetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "Для извлечения пароля для пользователя."
    - id: passwordAnswer
      type: System.String
      description: "Ответ пароля для пользователя."
    return:
      type: System.String
      description: "Пароль для указанного имени пользователя."
  overload: System.Web.Security.SqlMembershipProvider.GetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The membership user identified by <code>username</code> is locked out."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the parameter values exceeds the maximum allowed length.  \n  \n \\- or -  \n  \n <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>passwordAnswer</code> is greater than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных для пользователя членства, связанного с указанным уникальным идентификатором и обновляет Отметка даты и времени последнего действия пользователя, если указано."
  remarks: "<xref:System.Web.Security.Membership.GetUser%2A>Получение сведений о пользователе из источника данных и создание <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.GetUser%2A> Пользователь идентифицируется с помощью уникального идентификатора, указанного с помощью `providerUserKey` параметра."
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Уникальный идентификатор пользователя."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для последней операции обновления метки даты и времени для указанного пользователя. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий пользователя, связанного с указанным уникальным идентификатором.</xref:System.Web.Security.MembershipUser> Если пользователь не найден в базе данных для указанного <code> providerUserKey </code> значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> возвращается."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerUserKey</code>не относится к типу <xref:System.Guid>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает сведения из базы данных SQL Server членства для пользователя и предоставляет параметр для обновления Отметка даты и времени последнего действия пользователя."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса для получения сведений о пользователе из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       Если `userIsOnline` — `true`, отметка даты и времени последнего действия пользователя обновляется до текущей даты и времени. Это отражено в <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>и <xref:System.Web.Security.MembershipUser.IsOnline%2A>Свойства и значения, возвращенного <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> </xref:System.Web.Security.MembershipUser.IsOnline%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A>       Начальные и конечные пробелы удаляются из `username` значение параметра."
  example:
  - "The following code example uses the GetUser method to determine whether a user exists before retrieving the password for the user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/08039896-5b29-4285-9a5a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/08039896-5b29-4285-9a5a-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для получения данных."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы обновить метку даты и времени последнего действия пользователя. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для возврата сведений о пользователе без обновления Отметка даты и времени последнего действия пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий указанного пользователя.</xref:System.Web.Security.MembershipUser> Если пользователь не найден в базе данных для указанного <code> username </code> значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> возвращается."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>username</code> contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает имя пользователя, связанное с указанным адресом электронной почты."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса с адресом электронной почты, который используется для получения связанного имени пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       Если более чем одним пользователем в базе данных членства имеют одинаковый адрес электронной почты, возвращается первое обнаруженное имя пользователя. Можно задать `requiresUniqueEmail` атрибут `true` в файле конфигурации приложения, чтобы гарантировать уникальность каждого адреса электронной почты в базе данных.       Начальные и конечные пробелы удаляются из `email` значение параметра."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.sq_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.sq_7_1.aspx)]"
  syntax:
    content: public override string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: "Адрес электронной почты для поиска."
    return:
      type: System.String
      description: "Имя пользователя, связанное с указанным адресом электронной почты. Если совпадение не найдено, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>email</code>превышает 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Существует более одного пользователя с тем же адресом электронной почты в базе данных и <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует поставщика членства SQL Server со значениями свойств, указанными в файле конфигурации приложения ASP.NET. Этот метод не предназначен для использования непосредственно из программного кода."
  remarks: "Этот метод инициализирует <xref:System.Web.Security.SqlMembershipProvider>со свойством значения, указанные в файле конфигурации приложения ASP.NET (Web.config) и не предназначен для использования непосредственно из программного кода.</xref:System.Web.Security.SqlMembershipProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Имя <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> инициализация экземпляра."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , содержащий имена и значения параметров конфигурации для поставщика членства."
  overload: System.Web.Security.SqlMembershipProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref>, <xref uid=\"langword_csharp_enablePasswordReset\" name=\"enablePasswordReset\" href=\"\"></xref>, <xref uid=\"langword_csharp_requiresQuestionAndAnswer\" name=\"requiresQuestionAndAnswer\" href=\"\"></xref>, or <xref uid=\"langword_csharp_requiresUniqueEmail\" name=\"requiresUniqueEmail\" href=\"\"></xref> attribute is set to a value other than a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_maxInvalidPasswordAttempts\" name=\"maxInvalidPasswordAttempts\" href=\"\"></xref> or the <xref uid=\"langword_csharp_passwordAttemptWindow\" name=\"passwordAttemptWindow\" href=\"\"></xref> attribute is set to a value other than a positive integer.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredPasswordLength\" name=\"minRequiredPasswordLength\" href=\"\"></xref> attribute is set to a value other than a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredNonalphanumericCharacters\" name=\"minRequiredNonalphanumericCharacters\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_passwordStrengthRegularExpression\" name=\"passwordStrengthRegularExpression\" href=\"\"></xref> attribute is not a valid regular expression.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref> attribute is set to a value that is greater than 256 characters.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute specified in the application configuration file is an invalid <xref:System.Web.Security.MembershipPasswordFormat> enumeration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref:System.Web.Security.MembershipPasswordFormat> and the <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in the application configuration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_Encrypted\" name=\"Encrypted\" href=\"\"></xref> and the  configuration element specifies <xref uid=\"langword_csharp_AutoGenerate\" name=\"AutoGenerate\" href=\"\"></xref> for the <xref uid=\"langword_csharp_decryptionKey\" name=\"decryptionKey\" href=\"\"></xref> attribute.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute is empty or does not exist in the application configuration.  \n  \n \\- or -  \n  \n The value of the connection string for the <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute value is empty, or the specified <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> does not exist in the application configuration file.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_commandTimeout\" name=\"commandTimeout\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Текущий уровень доверия меньше, чем <xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Поставщик уже был инициализирован до текущего вызова метода инициализации."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает число недействительного пароля или контрольного ответа попыток авторизованный пользователь блокируется."
  remarks: "<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>Работает в сочетании с <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>защититься от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством повторяющихся попыток.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Если количество ввода недействительных пароля или контрольного ответа для авторизованного пользователя больше или равно значению <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>свойство в пределах количества минут, определяемого значением <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>Свойства, а затем авторизованный пользователь блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>Свойства `true` пока пользователь разблокируется с <xref:System.Web.Security.MembershipUser.UnlockUser%2A>метод.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Если указан неверный пароль перед <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>при достижении значения, счетчики, отслеживающие число попыток ввода неправильного пароля и контрольного ответа, сбрасываются в нуль.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Если ответ правильный пароль для пароля до <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>при достижении значения, счетчик, который отслеживает количество попыток ввода пароля будет сброшено в ноль.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       <xref:System.Web.Security.SqlMembershipProvider>Отслеживает количество попыток ввода неверного пароля и контрольного ответа попыток отдельно.</xref:System.Web.Security.SqlMembershipProvider> Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.       <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>Значение свойства задается в конфигурации приложения с помощью `maxInvalidPasswordAttempts` атрибут раздела конфигурации.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>свойству `false`, попыток ввода пароля не отслеживаются.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Число недействительного пароля или контрольного ответа попыток авторизованный пользователь блокируется."
  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает минимальное количество специальных символов, которые должны присутствовать в допустимом пароле."
  remarks: "Свойство MinRequiredNonAlphanumericCharacters возвращает минимальное количество специальных небуквенных символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider>объекта.</xref:System.Web.Security.SqlMembershipProvider>       Значение свойства MinRequiredNonAlphanumericCharacters задается в конфигурации приложения с помощью `minRequiredNonalphanumericCharacters` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.       Не алфавитно-цифровой символ является символ, для которого <xref:System.Char.IsLetterOrDigit%2A>возвращает `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonalphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Минимальное количество специальных символов, которые должны присутствовать в допустимом пароле."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает минимальную длину пароля."
  remarks: "Свойство значения MinRequiredPasswordLength возвращает минимальное число символов, которое необходимо ввести правильный пароль для создания <xref:System.Web.Security.SqlMembershipProvider>объекта.</xref:System.Web.Security.SqlMembershipProvider>       <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>Значение свойства задается в конфигурации приложения с помощью `minRequiredPasswordLength` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n    <providers>  \n      <add  \n        name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        minRequiredPasswordLength=\"7\"  \n        />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "Минимальная длина пароля."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает интервал времени между которыми последовательные попытки ввода недействительного пароля или контрольного ответа отслеживаются."
  remarks: "Свойство PasswordAttemptWindow работает в сочетании с <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>Свойства защиту от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством повторяющихся попыток.</xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> Если пользователей пытаются вход, изменить свой пароль или сброса пароля, только определенные число последовательных попыток допустимы в течение указанного интервала времени. Длина периода, задается свойством PasswordAttemptWindow, которое определяет количество минут между попытками недопустимый. Если количество последовательных неудачных попыток, которые пользователь вносит в сбросить его или ее пароль имеет значение, хранящееся в <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>свойство и время, истекшее с момента последней попытки недопустимый меньше, чем время в минутах, заданное для свойства PasswordAttemptWindow затем авторизованный пользователь блокируется, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>Свойства `true`.</xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> Можно разблокировать пользователя путем вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A>метод.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> Если интервал между текущей неудавшихся попыток и последней неудачной попытки больше, чем значение свойства PasswordAttemptWindow, текущий Недопустимая попытка считается первый. Если ответ правильный пароль предоставляется достигнуто максимальное количество разрешенных попыток, количество попыток ввода пароля равно нулю. Если указан неверный пароль до максимальное количество разрешенных попыток достигается, количество попыток ввода неверного пароля и контрольного ответа, присваивается значение ноль.       <xref:System.Web.Security.SqlMembershipProvider>Отслеживает число попыток ввода неверного пароля и контрольного ответа попыток отдельно.</xref:System.Web.Security.SqlMembershipProvider> Недопустимый пароль попыток результат в только значения счетчика попытки ввода пароля. Контрольного ответа попыток результат в только значения счетчика ответ пароль.       <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>Значение свойства задается в конфигурации приложения с помощью `passwordAttemptWindow` атрибут раздела конфигурации.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>свойству `false`, попыток ввода пароля не отслеживаются.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "Интервал времени в минутах, в течение которого последовательных неудачных попыток ввода пароля или контрольного ответа отслеживаются. Значение по умолчанию составляет 10 минут. Если интервал между текущей неудачной попытки и последней неудачной попытки больше, чем значение свойства PasswordAttemptWindow, каждой неудачной попытки рассматривается, как если бы это был первый неудачной попытки."
  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее формат хранения паролей в базе данных членства SQL Server."
  remarks: "Используйте `Hashed` только `Clear` и `Encrypted` не являются безопасными. `Hashed`пароли хэшируются с помощью одностороннего алгоритма хеширования и произвольно создаваемого случайного значения при сохранении в базе данных. Когда проверяется пароль, он хэшируется с начальным значением в базе данных для проверки. Хешированные пароли нельзя восстановить. `Encrypted`пароли не считаются безопасными, как нарушения безопасности, отображающую содержимое вашего базы данных может предоставить ключ шифрования. Это означает, что зашифрованные пароли может быть расшифрован и представлены.       Значение PasswordFormat указывается в разделе файла Web.config для приложения ASP.NET.       `Encrypted`и `Hashed` хэшируются по умолчанию на основе сведений, предоставленных в элемент в конфигурации или зашифрованные пароли. Обратите внимание, что если указать значение `3DES` для `validation` атрибут, или если значение не указано, хэшированные пароли хэшируется с помощью <xref:System.Security.Cryptography.SHA1>алгоритма.</xref:System.Security.Cryptography.SHA1>       Пользовательские хэш-алгоритм, можно определить при помощи `hashAlgorithmType` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации. При выборе шифрования используется по умолчанию пароль шифрования AES. Можно изменить алгоритм шифрования, задав `decryption` атрибута элемента конфигурации. При шифровании паролей, необходимо указать явное значение `decryptionKey` атрибута в элементе. Значение по умолчанию `AutoGenerate` для `decryptionKey` атрибут не поддерживается, если с помощью зашифрованных паролей с помощью членства ASP.NET."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: "Один из <xref:System.Web.Security.MembershipPasswordFormat>значений, указывающее формат хранения паролей в базе данных SQL Server.</xref:System.Web.Security.MembershipPasswordFormat>"
  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает регулярное выражение, используемое для оценки пароля."
  remarks: "Свойство PasswordStrengthRegularExpression возвращает регулярное выражение, используемое для оценки сложности пароля для <xref:System.Web.Security.SqlMembershipProvider>объекта.</xref:System.Web.Security.SqlMembershipProvider>       <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>Свойство задается в конфигурации приложения с помощью `passwordStrengthRegularExpression` атрибут [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) элемента конфигурации.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is at least seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Регулярное выражение, используемое для оценки пароля."
  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроен ли поставщик членства SQL Server, чтобы требовать от пользователя ответ на контрольный вопрос для изменения или извлечения пароля."
  remarks: "Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. При создании имени пользователя, пользователи могут вводить вопрос и ответ, который позже может использоваться для извлечения или сброса забытого пароля. Если <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>свойство и <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>находятся свойства `false`, значение свойства RequiresQuestionAndAnswer несущественно.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>       Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>и <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ответ-пароль необходим для сброса и извлечения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроен ли поставщик членства SQL Server, чтобы требовать уникальный адрес электронной почты для каждого имени пользователя."
  remarks: ''
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      requiresUniqueEmail=\"true\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик членства требует уникальный адрес электронной почты; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Сбрасывает пароль пользователя на новый, автоматически сгенерированный пароль."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса для сброса пароля для пользователя в базе данных SQL Server, указанный в файле конфигурации приложения ASP.NET (Web.config) в новый формируется случайным образом значение.</xref:System.Web.Security.Membership> Возвращается новый пароль.      Настроек [!NOTE] настроек случайный пароль, созданный методом ResetPassword не обязательно передать регулярное выражение в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>и <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       Метод ResetPassword большинства часто используемых при <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>свойству `Hashed`.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Если пользователь забыл пароль, который хэшируется, невозможно извлечь пароль. Однако поставщик можно сбросить пароль на новый, автоматически сгенерированный пароль, если пользователь предоставляет ответ правильный пароль.       Если ответ неправильный пароль предоставляется методу ResetPassword, внутренний счетчик, который отслеживает попытки ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>метод.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Если ответ правильный пароль, а пользователь имеет не заблокирован, то внутренний счетчик, который отслеживает попытки ввода пароля будет сброшено в ноль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Можно вызвать метод ResetPassword напрямую, получив ссылку на <xref:System.Web.Security.SqlMembershipProvider>экземпляр из <xref:System.Web.Security.Membership.Provider%2A>Свойства <xref:System.Web.Security.Membership>класса.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> Созданный пароль будет менее 14 символов или длина указанного в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>свойство и будет содержать число не буквенно-цифровых символов, указанных в <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>свойство.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> Пароль не обязательно передать регулярное выражение, содержащееся в <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>Свойства, если она указана.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example resets a user's password and returns the new, automatically generated password.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/16c2d8e3-05dc-453f-b1c3-_1.aspx)]"
  syntax:
    content: public override string ResetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "Сброс пароля для пользователя."
    - id: passwordAnswer
      type: System.String
      description: "Ответ пароля для указанного пользователя."
    return:
      type: System.String
      description: "Новый пароль для указанного пользователя."
  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The user account is currently locked."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n The change password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is longer than 128 characters after encoding."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Произошло необработанное исключение."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Очищает заблокированное состояние пользователя, чтобы можно было проверить авторизованного пользователя."
  remarks: "Пользователи чаще всего заблокирован и не могут быть проверены <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>метод при <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>превышении внутри <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> </xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>       Начальные и конечные пробелы удаляются из `username` значение параметра."
  syntax:
    content: public override bool UnlockUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя членства, для которого снимается заблокированной."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если авторизованный пользователь успешно разблокирован; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> также возвращается, если пользователь не существует в базе данных."
  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>является пустой строкой, его длина превышает 256 символов или содержит запятую."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Обновляет сведения о пользователе в базе данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса, чтобы обновить информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership> <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, И <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>обновляются значения свойств для указанного пользователя членства.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.MembershipUser.LastLoginDate%2A> </xref:System.Web.Security.MembershipUser.IsApproved%2A> </xref:System.Web.Security.MembershipUser.Comment%2A> </xref:System.Web.Security.MembershipUser.Email%2A>       Максимальная длина <xref:System.Web.Security.MembershipUser.UserName%2A>свойства составляет 256 символов.</xref:System.Web.Security.MembershipUser.UserName%2A> Максимальная длина <xref:System.Web.Security.MembershipUser.Email%2A>свойства составляет 256 символов.</xref:System.Web.Security.MembershipUser.Email%2A>       Не удается обновить пароль для авторизованного пользователя с помощью метода UpdateUser. Чтобы обновить пароль для пользователя членства, используйте <xref:System.Web.Security.MembershipUser.ChangePassword%2A>метод <xref:System.Web.Security.MembershipUser>класса.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.ChangePassword%2A>"
  example:
  - "The following code example updates the e-mail address for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/81f685ac-1799-4589-b9a2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/81f685ac-1799-4589-b9a2-_1.aspx)]"
  syntax:
    content: public override void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий пользователя для обновления и новые сведения для пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> was not found in the database.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> was equal to an existing e-mail address in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to true.  \n  \n \\- or -  \n  \n The user update failed."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Проверяет существование указанного имени пользователя и пароля в базе данных членства SQL Server."
  remarks: "Этот метод вызывается методом <xref:System.Web.Security.Membership>класса, чтобы проверить пользовательскую информацию для пользователя в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Membership>       После успешной проверки пользователя, Дата последнего действия и последнего значения даты вход обновляются текущей даты и времени в базе данных.       Если указан неправильный пароль методу ValidateUser, внутренний счетчик, который отслеживает попытки ввода неверного пароля увеличивается на единицу. Это может привести к пользователю блокируемого и недоступен для войти в систему, пока не будет очищен состояние блокировки путем вызова <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>метод.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Если предоставляется правильный пароль и пользователь является не заблокирован, то внутренние счетчики неправильный пароль, отслеживания и пытается контрольный ответ сбрасываются в нуль. Дополнительные сведения см. в разделе <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>и <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>Свойства.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/12603449-9667-4437-88bc-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/12603449-9667-4437-88bc-_1.aspx)]"
  syntax:
    content: public override bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для проверки."
    - id: password
      type: System.String
      description: "Пароль для указанного пользователя."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное имя пользователя и пароль являются допустимыми; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> также возвращается, если пользователь не существует в базе данных."
  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.MembershipProvider
  isExternal: false
  name: System.Web.Security.MembershipProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.MembershipPasswordException
  isExternal: true
  name: System.Web.Security.MembershipPasswordException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: true
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
- uid: System.Web.Security.SqlMembershipProvider.#ctor*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider.SqlMembershipProvider
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: SqlMembershipProvider.ChangePassword
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.CreateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: SqlMembershipProvider.CreateUser
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: SqlMembershipProvider.DeleteUser
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: SqlMembershipProvider.FindUsersByEmail
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: SqlMembershipProvider.FindUsersByName
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword
  nameWithType: SqlMembershipProvider.GeneratePassword
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: SqlMembershipProvider.GetAllUsers
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline
- uid: System.Web.Security.SqlMembershipProvider.GetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: SqlMembershipProvider.GetPassword
- uid: System.Web.Security.SqlMembershipProvider.GetUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: SqlMembershipProvider.GetUser
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: SqlMembershipProvider.GetUserNameByEmail
- uid: System.Web.Security.SqlMembershipProvider.Initialize*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlMembershipProvider.Initialize
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: SqlMembershipProvider.ResetPassword
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: SqlMembershipProvider.UnlockUser
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: SqlMembershipProvider.UpdateUser
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: SqlMembershipProvider.ValidateUser
