### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingBase
  id: BindingBase
  children:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  langs:
  - csharp
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
  type: Class
  summary: "Определяет общие характеристики <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>, <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>, и <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> классы."
  remarks: "Поскольку <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>метод запечатан, класс пользовательской привязки, производный от BindingBase не будет правильно функционировать как [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] расширения разметки.</xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))]

      public abstract class BindingBase : System.Windows.Markup.MarkupExtension
  inheritance:
  - System.Windows.Markup.MarkupExtension
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.BindingGroupName
  id: BindingGroupName
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает или задает имя <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> , которому принадлежит эта привязка."
  remarks: "Если BindingGroupName не задано, принадлежит данная привязка <xref:System.Windows.Data.BindingGroup>только если источник привязки и <xref:System.Windows.FrameworkElement.DataContext%2A>родительского элемента, который имеет <xref:System.Windows.Data.BindingGroup>объекта являются.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup>       Если BindingGroupName присвоено значение, принадлежит данная привязка <xref:System.Windows.Data.BindingGroup>Если выполняются следующие условия: - <xref:System.Windows.Data.BindingGroup.Name%2A>из <xref:System.Windows.Data.BindingGroup>и BindingGroupName равны.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup>      - <xref:System.Windows.Data.BindingGroup>Относится к целевому элементу привязки родительским элементом.</xref:System.Windows.Data.BindingGroup>       Если имеет значение BindingGroupName `null`, привязка никогда не является частью <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup>       Можно включить привязки, в которых источник, отличный от <xref:System.Windows.FrameworkElement.DataContext%2A>родительского элемента, который имеет <xref:System.Windows.Data.BindingGroup>, установив <xref:System.Windows.Data.BindingGroup.Name%2A>из <xref:System.Windows.Data.BindingGroup>и BindingGroupName свойства привязки, то же значение.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>  Вы можете исключить привязки, в которых один и тот же источник как <xref:System.Windows.FrameworkElement.DataContext%2A>родительского элемента, который имеет <xref:System.Windows.Data.BindingGroup>, установив <xref:System.Windows.Data.BindingGroup.Name%2A>из <xref:System.Windows.Data.BindingGroup>и свойство BindingGroupName привязки в разные значения.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the BindingGroupName of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.  In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string BindingGroupName { get; set; }
    return:
      type: System.String
      description: "Имя <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> , которому принадлежит эта привязка."
  overload: System.Windows.Data.BindingBase.BindingGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.Delay
  id: Delay
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает или задает количество времени, в миллисекундах для ожидания перед обновлением после изменения целевого значения источника привязки."
  remarks: "При использовании привязки для обновления источника привязки, каждый раз, когда изменяется значение свойства на целевом сервере, задать для <xref:System.Windows.Data.Binding.Mode%2A>Свойства и <xref:System.Windows.Data.BindingMode> <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding.Mode%2A>  В этом случае задержка свойство используется для указания, следует ли задержки между при изменении целевой объект и при обновлении источника.  Это полезно в том случае, если требуется дать пользователям возможность менять свойства в объекте источника, но не каждое изменение немедленно фиксируются в источнике.  Например предположим, что имеется текстовое поле, является двусторонней данными, привязанными к свойству объекта данных.  Когда пользователь изменяет значение в текстовом поле, обновляется источник.  Чтобы реализовать этот сценарий, необходимо задать <xref:System.Windows.Data.Binding.Mode%2A>свойство <xref:System.Windows.Data.Binding>и <xref:System.Windows.Data.BindingMode> <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Mode%2A>  Чтобы избежать обновление исходного объекта с каждого нажатия клавиши, свойства задержки разумное значение привязки для обновления только по истечении этого времени, поскольку пользователь остановил ввода."
  syntax:
    content: public int Delay { get; set; }
    return:
      type: System.Int32
      description: "Количество времени, в миллисекундах для ожидания перед обновлением источника привязки."
  overload: System.Windows.Data.BindingBase.Delay*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.FallbackValue
  id: FallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает или задает значение, используемое, когда привязка не может вернуть значение."
  remarks: "Привязка успешно возвращает значение, если: 1.  Путь к источнику привязки разрешен.      2.  Преобразователь значений, если таковые имеются, способен преобразовать полученное значение.      3.  Полученное значение является допустимым для свойства привязки (цели).       Если 1 и 2 Возвращает <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>, целевое свойство присвоено значение FallbackValue, если он доступен.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> Если не FallbackValue, используется значение по умолчанию для целевого свойства.       Значение <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>не считается успешной возвращаемое значение.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlTextUsage_FallbackValue&quot;></a>## Использование текста XAML ```   <object FallbackValue=&quot;fallbackValue&quot; />   ``` **- или –** ```   <object>     <object.FallbackValue>       fallbackValue       </object.FallbackValue>   </object>   ``` <a name=&quot;xamlValues_FallbackValue&quot;> </a> ## значений XAML *fallbackValue* значение элемента или атрибута объекта того же типа, что целевое свойство.                    В разделе документации по этим типам сведения об использовании XAML. Этот тип может или могут не поддерживать синтаксис атрибутов для его значения, или может или могут не поддерживать синтаксис элемента объекта (для которого требуется конструктор по умолчанию для данного типа). Следовательно, целевому типу свойств будет влияет на синтаксисе для значения свойства FallbackValue."
  syntax:
    content: public object FallbackValue { get; set; }
    return:
      type: System.Object
      description: "Значение по умолчанию — <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>."
  overload: System.Windows.Data.BindingBase.FallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает объект, который следует задать в свойстве применении данной привязки и расширения."
  remarks: "Эта реализация поддерживает следующий базовый синтаксис для привязки через [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] для всех предоставленных практические производные классы (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, и <xref:System.Windows.Data.MultiBinding>).</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>       <xref:System.Windows.Data.BindingBase>Реализации класса этот метод должен вернуть объект выражение, результат привязки.</xref:System.Windows.Data.BindingBase> Привязка работает свойств, обращаясь к данной <xref:System.Windows.DependencyProperty>данного <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> Эти два блока данных передаются с помощью запроса для <xref:System.Windows.Markup.IProvideValueTarget>реализацию на `serviceProvider`, который [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] чтения делает доступными во время синтаксического разбора привязки.</xref:System.Windows.Markup.IProvideValueTarget> Эта реализация базового класса отвечает за проверку действительные <xref:System.Windows.DependencyProperty>и <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyProperty> Если они найдены, как осуществляется вызов внутреннего абстрактного метода базового класса, задав различные производные классы продолжится фактическую реализацию возврата выражения привязки. В противном случае модуль возвращает сам объект привязки. Возврат самой привязки приводит ошибки несоответствия типов, но это не должно происходить в обычных условиях.      Настроек [!IMPORTANT] настроек так как синтаксис для привязки через [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] реализованное в этот метод зависит от реализации внутреннего переопределения и запечатан ProvideValue сам класс пользовательской привязки, производный от <xref:System.Windows.Data.BindingBase>не будет правильно функционировать как [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] расширения разметки.</xref:System.Windows.Data.BindingBase>"
  syntax:
    content: public override sealed object ProvideValue (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Объект, способный предоставлять службы для расширения разметки. Возможно, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; Дополнительные сведения см."
    return:
      type: System.Object
      description: "Значение, задаваемое для целевого свойства привязки."
  overload: System.Windows.Data.BindingBase.ProvideValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  id: ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает значение, указывающее, должны ли процессы сериализации сериализовать действующее значение <xref:System.Windows.Data.BindingBase.FallbackValue*>Свойства для экземпляров этого класса.</xref:System.Windows.Data.BindingBase.FallbackValue*>"
  syntax:
    content: public bool ShouldSerializeFallbackValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Windows.Data.BindingBase.FallbackValue*>значение свойства должно быть сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.FallbackValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  id: ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает значение, указывающее, является ли <xref:System.Windows.Data.BindingBase.TargetNullValue*>свойство должно быть сериализовано.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  syntax:
    content: public bool ShouldSerializeTargetNullValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Windows.Data.BindingBase.TargetNullValue*>свойства необходимо сериализовать; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.BindingBase.TargetNullValue*>"
  overload: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.StringFormat
  id: StringFormat
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает или задает строку, которая определяет способ форматирования привязки при отображении связанного значения в виде строки."
  remarks: "StringFormat может быть составной, стандартные или настраиваемые строковом формате. Дополнительные сведения о форматах строки см. в разделе [типы форматирования](~/add/includes/ajax-current-ext-md.md).       Если задать <xref:System.Windows.Data.Binding.Converter%2A>и свойства StringFormat преобразователь сначала применяется к значению, а затем применяется StringFormat.</xref:System.Windows.Data.Binding.Converter%2A>       При установке StringFormat на <xref:System.Windows.Data.Binding>составной строковый формат, можно указать только один параметр.</xref:System.Windows.Data.Binding>       При использовании <xref:System.Windows.Data.MultiBinding>StringFormat свойство применяется, только если это свойство установлено <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>  Значение устанавливается для всех дочерних StringFormat <xref:System.Windows.Data.Binding>объектов учитывается.</xref:System.Windows.Data.Binding>  Число параметров в формате составные строки не может превышать число дочерних <xref:System.Windows.Data.Binding>объектов в списке <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding>       При использовании <xref:System.Windows.Data.PriorityBinding>, можно задать StringFormat <xref:System.Windows.Data.PriorityBinding>, на дочерние объекты привязки, или оба.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.PriorityBinding>  Если StringFormat для дочернего элемента привязки, который применяется, используется это значение.  Если не задано StringFormat для дочернего элемента привязки, применяется, StringFormat из <xref:System.Windows.Data.PriorityBinding>применяется, если он задан.</xref:System.Windows.Data.PriorityBinding>"
  example:
  - "The following example uses the StringFormat property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.  \n  \n [!code-xml[ContentStringSnippets#Binding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#binding)]  \n  \n The following example uses the StringFormat property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.  \n  \n [!code-xml[ContentStringSnippets#MultiBinding](~/add/codesnippet/xaml/ContentStringSnippets/Window1.xaml#multibinding)]"
  syntax:
    content: public string StringFormat { get; set; }
    return:
      type: System.String
      description: "Строка, которая определяет способ форматирования привязки при отображении связанного значения в виде строки."
  overload: System.Windows.Data.BindingBase.StringFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingBase.TargetNullValue
  id: TargetNullValue
  parent: System.Windows.Data.BindingBase
  langs:
  - csharp
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает или задает значение, которое используется в целевом объекте, при значении источника <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_TargetNullValue&quot;></a>## Использование текста XAML ```   <object TargetNullValue=&quot;nullValue&quot; />   ``` **- или –** ```   <object>     <object.TargetNullValue>       nullValue       </object.TargetNullValue>   </object>   ``` <a name=&quot;xamlValues_TargetNullValue&quot;> </a> ## значений XAML *nullValue* значение элемента или атрибута объекта того же типа, что целевое свойство.                    В разделе документации по этим типам сведения об использовании XAML. Этот тип может или могут не поддерживать синтаксис атрибутов для его значения, или может или могут не поддерживать синтаксис элемента объекта (для которого требуется конструктор по умолчанию для данного типа)."
  example:
  - "The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.  If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays \"please enter a string.\"  \n  \n [!code-xml[BindingGroupSnippets#TargetNullValue](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#targetnullvalue)]"
  syntax:
    content: public object TargetNullValue { get; set; }
    return:
      type: System.Object
      description: "Значение, которое используется в целевом объекте, когда значение источника <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingBase.TargetNullValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.MarkupExtension
  isExternal: false
  name: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase.BindingGroupName
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
  fullName: System.Windows.Data.BindingBase.BindingGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingBase.Delay
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
  fullName: System.Windows.Data.BindingBase.Delay
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue()
  nameWithType: BindingBase.ShouldSerializeFallbackValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue()
  nameWithType: BindingBase.ShouldSerializeTargetNullValue()
  fullName: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue()
- uid: System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.BindingGroupName*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: BindingGroupName
  nameWithType: BindingBase.BindingGroupName
- uid: System.Windows.Data.BindingBase.Delay*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: Delay
  nameWithType: BindingBase.Delay
- uid: System.Windows.Data.BindingBase.FallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.ProvideValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ProvideValue
  nameWithType: BindingBase.ProvideValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeFallbackValue
  nameWithType: BindingBase.ShouldSerializeFallbackValue
- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: ShouldSerializeTargetNullValue
  nameWithType: BindingBase.ShouldSerializeTargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: StringFormat
  nameWithType: BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.TargetNullValue*
  parent: System.Windows.Data.BindingBase
  isExternal: false
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
