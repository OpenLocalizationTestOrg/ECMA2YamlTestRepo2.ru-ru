### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelListenerBase
  id: ChannelListenerBase
  children:
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelListenerBase.Uri
  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase
  fullName: System.ServiceModel.Channels.ChannelListenerBase
  type: Class
  summary: "Предоставляет общую базовую реализацию для прослушивателей каналов службы."
  remarks: "Прослушиватели каналов службы ожидания, а затем принимают каналы, созданные фабриками на стороне клиента. После установки подключения между клиентом и службой, допускающем дальнейшего обмена сообщениями и распределенные приложения могут взаимодействовать. Предоставляемые прослушивателем функциональные возможности обработки имеют несколько уровней в стеках прослушиватели каналов, что позволяет добиться модульности при выборе [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] компоненты для развертывания. Каждому прослушивателю каналов в стеке службы соответствует фабрика каналов в стеке клиента. Канал, созданный фабрикой фактически представляет собой стек каналов, которые принимаются и обрабатываются стеком прослушивателей службы."
  syntax:
    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'
  inheritance:
  - System.ServiceModel.Channels.ChannelManagerBase
  implements:
  - System.ServiceModel.Channels.IChannelListener
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> класса."
  remarks: "Конструктор по умолчанию инициализирует свойства времени ожидания со значениями времени ожидания модели службы при обмене сообщениями. Значение по умолчанию — 1 минута для открытия, отправки и закрытия операций, 10 минут для операции получения. Используйте <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>требуется задать другие значения для времени ожидания операции.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected ChannelListenerBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> класса с указанного времени ожидания связи."
  remarks: "Используйте ChannelListenerBase вместо конструктор по умолчанию, если требуется указать пользовательские значения для открытия, отправки, получения и закрытия время ожидания операции вместо значений по умолчанию модели службы."
  syntax:
    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>, Укажите время ожидания по умолчанию для открытия, отправки, получения и закрытия операций при обмене сообщениями.</xref:System.ServiceModel.IDefaultCommunicationTimeouts>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе начинает асинхронную операцию ожидания прихода канала."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающий, что время ожидания операции канала, выделенное для завершения до истечения времени ожидания.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление об асинхронном завершении операции канала.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, приложением, который содержит сведения о состоянии, связанные с асинхронной ожидания операции канала."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную ожидания операции канала.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Прослушиватель канала не был открыт и поэтому не может использоваться."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Возвращает интервал времени, предоставляемый для завершения операции закрытия по умолчанию."
  remarks: "Это значение устанавливается при создании нового <xref:System.ServiceModel.Channels.ChannelListenerBase>объекта.</xref:System.ServiceModel.Channels.ChannelListenerBase> Значение по умолчанию <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>конструктор задает для свойства DefaultCloseTimeout значение — 1 минута.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Используйте <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>требуется указать другое значение этого времени ожидания.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение по умолчанию <xref:System.TimeSpan>, указывающее, как долго должно завершиться до истечения времени ожидания операции закрытия.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Возвращает интервал времени, предоставляемый для завершения операции открытия по умолчанию."
  remarks: "Это значение устанавливается при создании нового <xref:System.ServiceModel.Channels.ChannelListenerBase>объекта.</xref:System.ServiceModel.Channels.ChannelListenerBase> Значение по умолчанию <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>конструктор задает для свойства DefaultOpenTimeout значение — 1 минута.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Используйте <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>требуется указать другое значение этого времени ожидания.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение по умолчанию <xref:System.TimeSpan>, указывающее, как долго должно завершиться до истечения времени ожидания операции открытия.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Возвращает интервал времени, предоставляемый для завершения операции получения по умолчанию."
  remarks: "Это значение устанавливается при создании нового <xref:System.ServiceModel.Channels.ChannelListenerBase>объекта.</xref:System.ServiceModel.Channels.ChannelListenerBase> Значение по умолчанию <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>конструктор задает для свойства DefaultReceiveTimeout значение 10 минут.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Используйте <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>требуется указать другое значение этого времени ожидания.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultReceiveTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение по умолчанию <xref:System.TimeSpan>, указывающее, как долго должно завершиться до истечения времени ожидания операции получения.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Возвращает интервал времени, предоставляемый для завершения операции отправки по умолчанию."
  remarks: "Это значение устанавливается при создании нового <xref:System.ServiceModel.Channels.ChannelListenerBase>объекта.</xref:System.ServiceModel.Channels.ChannelListenerBase> Значение по умолчанию <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>конструктор задает для свойства DefaultSendTimeout значение — 1 минута.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Используйте <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>требуется указать другое значение этого времени ожидания.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultSendTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение по умолчанию <xref:System.TimeSpan>, указывающее, как долго должно завершиться до истечения времени ожидания операции отправки.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе завершает асинхронную операцию ожидания прихода каналов."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова метода EndWaitForChannel.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сообщение пришло; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public virtual T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "Для добавления."
  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе предоставляет точку расширения при запуске ожидания прихода канала."
  syntax:
    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающий на начало операции ожидания, выделенное для завершения до истечения времени ожидания.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление об асинхронной операции на начать завершения ожидания.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной начать операцию ожидания."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылки на асинхронного начала операции ожидания.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  id: OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе предоставляет точку расширения при завершения ожидания прихода канала."
  syntax:
    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; метод.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выполнение метода завершилось до истечения интервала времени, заданного параметром <code> timeout </code> истекшим сроком действия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  id: OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При переопределении в производном классе предоставляет точку расширения во время ожидания прихода канала."
  syntax:
    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающий, что на время ожидания операции канала, выделенное для выполнения до истечения времени ожидания.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выполнение метода завершилось до истечения интервала времени, заданного параметром <code> timeout </code> истекшим сроком действия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  id: Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе, возвращает URI, который прослушиватель каналов прослушивает на предмет входящих каналов."
  syntax:
    content: public abstract Uri Uri { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>На прослушиватель каналов прослушивает для входящих каналов.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "При реализации в производном классе, ожидает прихода канала."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающий, что время ожидания операции канала, выделенное для завершения до истечения времени ожидания.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если канал получен до истечения интервала времени, заданного параметром <code> timeout </code> истекшим сроком действия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase.ChannelListenerBase
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: ChannelListenerBase.BeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel
  nameWithType: ChannelListenerBase.EndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>
  nameWithType: ChannelListenerBase.GetProperty<T>
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel
  nameWithType: ChannelListenerBase.OnEndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel
  nameWithType: ChannelListenerBase.OnWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel
  nameWithType: ChannelListenerBase.WaitForChannel
