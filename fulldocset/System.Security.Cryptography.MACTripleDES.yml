### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MACTripleDES
  id: MACTripleDES
  children:
  - System.Security.Cryptography.MACTripleDES.#ctor
  - System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  - System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  - System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.MACTripleDES.HashFinal
  - System.Security.Cryptography.MACTripleDES.Initialize
  - System.Security.Cryptography.MACTripleDES.Padding
  langs:
  - csharp
  name: MACTripleDES
  nameWithType: MACTripleDES
  fullName: System.Security.Cryptography.MACTripleDES
  type: Class
  summary: "Вычисляет код проверки подлинности сообщения (MAC) с помощью <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> для входных данных <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref>."
  remarks: "MAC можно использовать для определения факта подделки сообщения, передаваемого по незащищенному каналу, при условии, что отправитель и получатель общий секретный ключ. Отправитель вычисляет код MAC для исходных данных и отправляет обоих в одном сообщении. Получатель повторных вычислений MAC для полученного сообщения и проверяет, что вычисляемые MAC соответствует переданным.       Любые изменения в данные или результаты MAC несовпадение, поскольку требуется знание секретного ключа, чтобы изменить сообщение и воспроизвести правильный MAC. Таким образом Если коды совпадают, сообщение проходит проверку подлинности.       MACTripleDES использует ключ, который является long 16 или 24 байта и создает хеш-последовательность длиной 8 байт."
  example:
  - "The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable. The MAC and the original text are written to a file named `encrypted.hsh` in the same folder. The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.  \n  \n [!code-vb[MAC3DES#1](~/add/codesnippet/visualbasic/t-system.security.crypto_8_1.vb)]\n [!code-cs[MAC3DES#1](~/add/codesnippet/csharp/t-system.security.crypto_8_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.KeyedHashAlgorithm.Create
  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  - System.Security.Cryptography.KeyedHashAlgorithm.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES()
  nameWithType: MACTripleDES.MACTripleDES()
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> класса."
  remarks: "Этот конструктор использует реализацию по умолчанию <xref:System.Security.Cryptography.TripleDES>.</xref:System.Security.Cryptography.TripleDES>"
  syntax:
    content: public MACTripleDES ();
    parameters: []
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES(Byte[])
  nameWithType: MACTripleDES.MACTripleDES(Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> класса с указанными данными ключа."
  remarks: "Этот конструктор использует реализацию по умолчанию <xref:System.Security.Cryptography.TripleDES>.</xref:System.Security.Cryptography.TripleDES> `rgbKey` Параметр должен иметь длину 16 или 24 байта."
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.
  syntax:
    content: public MACTripleDES (byte[] rgbKey);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "Секретный ключ для <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> шифрования."
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: MACTripleDES(String,Byte[])
  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> класса с указанными данными ключа и с помощью заданной реализации <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref>."
  remarks: "`strTripleDES` Параметр — понятное имя <xref:System.Security.Cryptography.TripleDES>Тип реализации.</xref:System.Security.Cryptography.TripleDES> Реализация по умолчанию является System.Security.Cryptography.TripleDES.       `rgbKey` Параметр должен иметь длину 16 или 24 байта."
  syntax:
    content: public MACTripleDES (string strTripleDES, byte[] rgbKey);
    parameters:
    - id: strTripleDES
      type: System.String
      description: "Имя <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> реализации для использования."
    - id: rgbKey
      type: System.Byte[]
      description: "Секретный ключ для <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> шифрования."
  overload: System.Security.Cryptography.MACTripleDES.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbKey</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "<code> strTripleDES </code> Параметр не является допустимым именем <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> реализации."
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MACTripleDES.Dispose(Boolean)
  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Освобождает ресурсы, используемые <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref> экземпляра."
  remarks: "Этот метод вызывается методом открытые `Dispose()` метод и `Finalize` метод. `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром disposing установлено значение `true`. `Finalize`вызывает `Dispose` с disposing равен `false`.       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Security.Cryptography.MACTripleDES>ссылки.</xref:System.Security.Cryptography.MACTripleDES> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если метод вызывается из &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; реализацию; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.MACTripleDES.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Передает данные, записанные в объект, в <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> шифратор для вычисления кода проверки подлинности сообщения (MAC)."
  syntax:
    content: protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);
    parameters:
    - id: rgbData
      type: System.Byte[]
      description: "Входные данные."
    - id: ibStart
      type: System.Int32
      description: "Смещение в массиве байтов, из которого следует использовать данные."
    - id: cbSize
      type: System.Int32
      description: "Число байтов в массиве для использования в качестве данных."
  overload: System.Security.Cryptography.MACTripleDES.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: HashFinal()
  nameWithType: MACTripleDES.HashFinal()
  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает вычисленный код проверки подлинности сообщения (MAC) после всех данных записывается в объект."
  remarks: "Это значение можно считывать только после записи всех данных, впоследствии нельзя записывать дополнительные данные. Создать новый экземпляр <xref:System.Security.Cryptography.MACTripleDES>для каждого отдельного сегмента данных для вычисления MAC для этих данных.</xref:System.Security.Cryptography.MACTripleDES>"
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Вычисленный код MAC."
  overload: System.Security.Cryptography.MACTripleDES.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Initialize
  id: Initialize
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Initialize()
  nameWithType: MACTripleDES.Initialize()
  fullName: System.Security.Cryptography.MACTripleDES.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;> </xref>."
  remarks: "Этот метод вызывает конструктор по умолчанию для класса."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.MACTripleDES.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MACTripleDES.Padding
  id: Padding
  parent: System.Security.Cryptography.MACTripleDES
  langs:
  - csharp
  name: Padding
  nameWithType: MACTripleDES.Padding
  fullName: System.Security.Cryptography.MACTripleDES.Padding
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает режим заполнения, используемый в хэш-алгоритме."
  remarks: "Сообщения с открытым текстом состоит из число байтов, которые полностью заполнить блоки. Часто нет достаточного количества байтов для заполнения последнего блока. В этом случае строка заполнения добавляется к тексту. Например если длина блока составляет 64 бита, а последний блок содержит только 40 бит, добавляются 24 бита дополнения. В разделе <xref:System.Security.Cryptography.PaddingMode>Описание конкретных.</xref:System.Security.Cryptography.PaddingMode>       Это поле можно получить с помощью <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>свойство.</xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>"
  syntax:
    content: public System.Security.Cryptography.PaddingMode Padding { get; set; }
    return:
      type: System.Security.Cryptography.PaddingMode
      description: "Режим заполнения, используемый в хэш-алгоритме."
  overload: System.Security.Cryptography.MACTripleDES.Padding*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удается задать свойство, поскольку указан недопустимый режим заполнения."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.MACTripleDES.#ctor
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES()
  nameWithType: MACTripleDES.MACTripleDES()
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES(Byte[])
  nameWithType: MACTripleDES.MACTripleDES(Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES(String,Byte[])
  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])
  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MACTripleDES.Dispose(Boolean)
  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.MACTripleDES.HashFinal
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashFinal()
  nameWithType: MACTripleDES.HashFinal()
  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()
- uid: System.Security.Cryptography.MACTripleDES.Initialize
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Initialize()
  nameWithType: MACTripleDES.Initialize()
  fullName: System.Security.Cryptography.MACTripleDES.Initialize()
- uid: System.Security.Cryptography.MACTripleDES.Padding
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Padding
  nameWithType: MACTripleDES.Padding
  fullName: System.Security.Cryptography.MACTripleDES.Padding
- uid: System.Security.Cryptography.PaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: PaddingMode
  nameWithType: PaddingMode
  fullName: System.Security.Cryptography.PaddingMode
- uid: System.Security.Cryptography.MACTripleDES.#ctor*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: MACTripleDES
  nameWithType: MACTripleDES.MACTripleDES
- uid: System.Security.Cryptography.MACTripleDES.Dispose*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Dispose
  nameWithType: MACTripleDES.Dispose
- uid: System.Security.Cryptography.MACTripleDES.HashCore*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashCore
  nameWithType: MACTripleDES.HashCore
- uid: System.Security.Cryptography.MACTripleDES.HashFinal*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: HashFinal
  nameWithType: MACTripleDES.HashFinal
- uid: System.Security.Cryptography.MACTripleDES.Initialize*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Initialize
  nameWithType: MACTripleDES.Initialize
- uid: System.Security.Cryptography.MACTripleDES.Padding*
  parent: System.Security.Cryptography.MACTripleDES
  isExternal: false
  name: Padding
  nameWithType: MACTripleDES.Padding
