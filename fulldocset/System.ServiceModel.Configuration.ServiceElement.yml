### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ServiceElement
  id: ServiceElement
  children:
  - System.ServiceModel.Configuration.ServiceElement.#ctor
  - System.ServiceModel.Configuration.ServiceElement.#ctor(System.String)
  - System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration
  - System.ServiceModel.Configuration.ServiceElement.Endpoints
  - System.ServiceModel.Configuration.ServiceElement.Host
  - System.ServiceModel.Configuration.ServiceElement.Name
  - System.ServiceModel.Configuration.ServiceElement.Properties
  - System.ServiceModel.Configuration.ServiceElement.Reset(System.Configuration.ConfigurationElement)
  langs:
  - csharp
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
  type: Class
  summary: "Представляет элемент XML, содержащий параметры для [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] службы, а также конечные точки, которые предоставляют службу. Этот класс не наследуется."
  syntax:
    content: 'public sealed class ServiceElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: ServiceElement()
  nameWithType: ServiceElement.ServiceElement()
  fullName: System.ServiceModel.Configuration.ServiceElement.ServiceElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref> класса."
  syntax:
    content: public ServiceElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ServiceElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: ServiceElement(String)
  nameWithType: ServiceElement.ServiceElement(String)
  fullName: System.ServiceModel.Configuration.ServiceElement.ServiceElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref> тип службы для создания экземпляра класса."
  syntax:
    content: public ServiceElement (string serviceName);
    parameters:
    - id: serviceName
      type: System.String
      description: "Тип службы для создания экземпляра."
  overload: System.ServiceModel.Configuration.ServiceElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration
  id: BehaviorConfiguration
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: BehaviorConfiguration
  nameWithType: ServiceElement.BehaviorConfiguration
  fullName: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает строку, содержащую имя поведения, используемого для создания экземпляра службы."
  syntax:
    content: public string BehaviorConfiguration { get; set; }
    return:
      type: System.String
      description: "Имя поведения, используемого для создания экземпляра службы. Имя поведения должно входить в область в точке определения службы. Значение по умолчанию — пустая строка."
  overload: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.Endpoints
  id: Endpoints
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: Endpoints
  nameWithType: ServiceElement.Endpoints
  fullName: System.ServiceModel.Configuration.ServiceElement.Endpoints
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает коллекцию конечных точек, предоставляемых этой службой."
  remarks: "Каждая конечная точка имеет свой адрес и привязку. Все привязки в файле конфигурации должны быть определены в области файла."
  syntax:
    content: public System.ServiceModel.Configuration.ServiceEndpointElementCollection Endpoints { get; }
    return:
      type: System.ServiceModel.Configuration.ServiceEndpointElementCollection
      description: "Объект <xref href=&quot;System.ServiceModel.Configuration.ServiceEndpointElementCollection&quot;> </xref> , содержащий один или несколько конечных точек, предоставляемых этой службой."
  overload: System.ServiceModel.Configuration.ServiceElement.Endpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.Host
  id: Host
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: Host
  nameWithType: ServiceElement.Host
  fullName: System.ServiceModel.Configuration.ServiceElement.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает элемент конфигурации, в котором указывается узел данного экземпляра службы."
  syntax:
    content: public System.ServiceModel.Configuration.HostElement Host { get; }
    return:
      type: System.ServiceModel.Configuration.HostElement
      description: "Объект <xref href=&quot;System.ServiceModel.Configuration.HostElement&quot;> </xref> , указывается узел данного экземпляра службы."
  overload: System.ServiceModel.Configuration.ServiceElement.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.Name
  id: Name
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: Name
  nameWithType: ServiceElement.Name
  fullName: System.ServiceModel.Configuration.ServiceElement.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает уникальное имя данной службы."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Уникальное имя данной службы."
  overload: System.ServiceModel.Configuration.ServiceElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: Properties
  nameWithType: ServiceElement.Properties
  fullName: System.ServiceModel.Configuration.ServiceElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Для добавления."
  overload: System.ServiceModel.Configuration.ServiceElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ServiceElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.ServiceElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ServiceElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.ServiceElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Для добавления."
  overload: System.ServiceModel.Configuration.ServiceElement.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.ServiceElement.#ctor
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: ServiceElement()
  nameWithType: ServiceElement.ServiceElement()
  fullName: System.ServiceModel.Configuration.ServiceElement.ServiceElement()
- uid: System.ServiceModel.Configuration.ServiceElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: ServiceElement(String)
  nameWithType: ServiceElement.ServiceElement(String)
  fullName: System.ServiceModel.Configuration.ServiceElement.ServiceElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: BehaviorConfiguration
  nameWithType: ServiceElement.BehaviorConfiguration
  fullName: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration
- uid: System.ServiceModel.Configuration.ServiceElement.Endpoints
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Endpoints
  nameWithType: ServiceElement.Endpoints
  fullName: System.ServiceModel.Configuration.ServiceElement.Endpoints
- uid: System.ServiceModel.Configuration.ServiceEndpointElementCollection
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceEndpointElementCollection
  nameWithType: ServiceEndpointElementCollection
  fullName: System.ServiceModel.Configuration.ServiceEndpointElementCollection
- uid: System.ServiceModel.Configuration.ServiceElement.Host
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Host
  nameWithType: ServiceElement.Host
  fullName: System.ServiceModel.Configuration.ServiceElement.Host
- uid: System.ServiceModel.Configuration.HostElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: HostElement
  nameWithType: HostElement
  fullName: System.ServiceModel.Configuration.HostElement
- uid: System.ServiceModel.Configuration.ServiceElement.Name
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Name
  nameWithType: ServiceElement.Name
  fullName: System.ServiceModel.Configuration.ServiceElement.Name
- uid: System.ServiceModel.Configuration.ServiceElement.Properties
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Properties
  nameWithType: ServiceElement.Properties
  fullName: System.ServiceModel.Configuration.ServiceElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ServiceElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ServiceElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.ServiceElement.Reset(ConfigurationElement)
- uid: System.ServiceModel.Configuration.ServiceElement.#ctor*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement.ServiceElement
- uid: System.ServiceModel.Configuration.ServiceElement.BehaviorConfiguration*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: BehaviorConfiguration
  nameWithType: ServiceElement.BehaviorConfiguration
- uid: System.ServiceModel.Configuration.ServiceElement.Endpoints*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Endpoints
  nameWithType: ServiceElement.Endpoints
- uid: System.ServiceModel.Configuration.ServiceElement.Host*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Host
  nameWithType: ServiceElement.Host
- uid: System.ServiceModel.Configuration.ServiceElement.Name*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Name
  nameWithType: ServiceElement.Name
- uid: System.ServiceModel.Configuration.ServiceElement.Properties*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Properties
  nameWithType: ServiceElement.Properties
- uid: System.ServiceModel.Configuration.ServiceElement.Reset*
  parent: System.ServiceModel.Configuration.ServiceElement
  isExternal: false
  name: Reset
  nameWithType: ServiceElement.Reset
