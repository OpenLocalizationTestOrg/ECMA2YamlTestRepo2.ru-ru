### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DpapiDataProtector
  id: DpapiDataProtector
  children:
  - System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  - System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  - System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  - System.Security.Cryptography.DpapiDataProtector.Scope
  langs:
  - csharp
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector
  fullName: System.Security.Cryptography.DpapiDataProtector
  type: Class
  summary: "Предоставляет методы защиты данных."
  remarks: "Класс DpapiDataProtector предоставляет структурированный способ защиты данных с помощью <xref:System.Security.Cryptography.ProtectedData>класса.</xref:System.Security.Cryptography.ProtectedData> Конструктор класса имеет параметры целей, обслуживающих подобно паролю для определения защищенных данных. Все три параметра хэшируются и включается как часть строки зашифрованные данные. Необходимо знать параметры целей для снятия защиты данных. <xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName>Имеет метод, вызываемый для шифрования данных `optionalEntropy` параметр, который позволяет добавлять соответствующие сведения для более безопасного шифрования данных.</xref:System.Security.Cryptography.ProtectedData.Protect%2A?displayProperty=fullName> Хэш-значение для назначения параметров используется для необязательно энтропии. Так как ключ для расшифровки данных не требуется, тщательный выбор цели данных добавляет еще один уровень безопасности для защиты данных.       Если вы используете <xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>параметра <xref:System.Security.Cryptography.DataProtectionScope>только для пользователя по учетным данным входа, которые совпадают с пользователя, зашифрованные данные можно расшифровать данные.</xref:System.Security.Cryptography.DataProtectionScope> </xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A> Кроме того расшифровки обычно может выполняться только на компьютере, где данные были зашифрованы. Функции Windows, который шифрует данные создает ключ сеанса для шифрования. Сеансовый ключ является производным еще раз, когда данные для расшифровки. Подробную информацию о защите данных с помощью ключей сеанса, в разделе [защиты данных Windows](http://go.microsoft.com/fwlink/?LinkId=224686).       Если вы используете <xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>параметра <xref:System.Security.Cryptography.DataProtectionScope>при защите данных и тщательно параметры целей, не определяют, доступ и снимать защиту с данных любого другого приложения на компьютере, который знает целей.</xref:System.Security.Cryptography.DataProtectionScope> </xref:System.Security.Cryptography.DpapiDataProtector.Scope%2A>"
  syntax:
    content: 'public sealed class DpapiDataProtector : System.Security.Cryptography.DataProtector'
  inheritance:
  - System.Object
  - System.Security.Cryptography.DataProtector
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.DataProtector.ApplicationName
  - System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])
  - System.Security.Cryptography.DataProtector.GetHashedPurpose
  - System.Security.Cryptography.DataProtector.PrimaryPurpose
  - System.Security.Cryptography.DataProtector.Protect(System.Byte[])
  - System.Security.Cryptography.DataProtector.SpecificPurposes
  - System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  id: '#ctor(System.String,System.String,System.String[])'
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Создает новый экземпляр <xref href=&quot;System.Security.Cryptography.DpapiDataProtector&quot;> </xref> , используя указанное имя приложения, Главное назначение и определенных целей."
  remarks: "Имя приложения, указанное параметром `appName` параметр рассматривается как часть цели для защищенных данных. Три параметра хэшируются и хэш используется для защиты и снятие защиты данных. Примеры `primaryPurpose` и `specificPurposes` значения **Giftcard** и ** \\<подарков номер карты настроек** или **счета** и ** \\<номер счета настроек**."
  syntax:
    content: public DpapiDataProtector (string appName, string primaryPurpose, string[] specificPurpose);
    parameters:
    - id: appName
      type: System.String
      description: "Имя приложения."
    - id: primaryPurpose
      type: System.String
      description: "Основная цель предохранителя данных."
    - id: specificPurpose
      type: System.String[]
      description: "Определенные предназначается для защиты данных."
  overload: System.Security.Cryptography.DpapiDataProtector.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>appName</code>является пустой строкой или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - или - <code>primaryPurpose</code> является пустой строкой или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - или - <code>specificPurposes</code> содержит пустую строку или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  id: IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Определяет, если данные должны быть повторно зашифрован."
  remarks: "Этот метод всегда возвращает `true`."
  syntax:
    content: public override bool IsReprotectRequired (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "Зашифрованные данные для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если необходимо заново зашифровать данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  id: PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override bool PrependHashedPurposeToPlaintext { get; }
    return:
      type: System.Boolean
      description: "Для добавления."
  overload: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  id: ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderProtect (byte[] userData);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "Для добавления."
    return:
      type: System.Byte[]
      description: "Для добавления."
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  id: ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] ProviderUnprotect (byte[] encryptedData);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "Для добавления."
    return:
      type: System.Byte[]
      description: "Для добавления."
  overload: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  id: Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  langs:
  - csharp
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает область защиты данных."
  remarks: "Защита данных шифрует данные на диске, не может быть прочитан другими программами.  Ключ для защиты или снимать защиту с данных не требуется. При выборе области <xref:System.Security.Cryptography.DataProtectionScope>, только для приложений, выполняющихся на учетных данных можно снимать защиту с данных; тем не менее, это означает любое приложение, запущенное на учетные данные можно получить доступ к защищенных данных.</xref:System.Security.Cryptography.DataProtectionScope>  При выборе области <xref:System.Security.Cryptography.DataProtectionScope>, любого полного доверия приложения на компьютере, можно снять защиту, доступ и изменение данных, если известно имя приложения, предназначены в первую очередь и определенной цели.</xref:System.Security.Cryptography.DataProtectionScope>"
  syntax:
    content: public System.Security.Cryptography.DataProtectionScope Scope { get; set; }
    return:
      type: System.Security.Cryptography.DataProtectionScope
      description: "Одно из значений перечисления, определяющее область действия защиты данных (текущего пользователя или локального компьютера). Значение по умолчанию — <xref href=&quot;System.Security.Cryptography.DataProtectionScope&quot;> </xref>."
  overload: System.Security.Cryptography.DpapiDataProtector.Scope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DataProtector
  isExternal: false
  name: System.Security.Cryptography.DataProtector
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector(String,String,String[])
  nameWithType: DpapiDataProtector.DpapiDataProtector(String,String,String[])
  fullName: System.Security.Cryptography.DpapiDataProtector.DpapiDataProtector(String,String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired(Byte[])
  nameWithType: DpapiDataProtector.IsReprotectRequired(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
  fullName: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect(Byte[])
  nameWithType: DpapiDataProtector.ProviderProtect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderProtect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(System.Byte[])
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect(Byte[])
  nameWithType: DpapiDataProtector.ProviderUnprotect(Byte[])
  fullName: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect(Byte[])
- uid: System.Security.Cryptography.DpapiDataProtector.Scope
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
  fullName: System.Security.Cryptography.DpapiDataProtector.Scope
- uid: System.Security.Cryptography.DataProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtectionScope
  nameWithType: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
- uid: System.Security.Cryptography.DpapiDataProtector.#ctor*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: DpapiDataProtector
  nameWithType: DpapiDataProtector.DpapiDataProtector
- uid: System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: IsReprotectRequired
  nameWithType: DpapiDataProtector.IsReprotectRequired
- uid: System.Security.Cryptography.DpapiDataProtector.PrependHashedPurposeToPlaintext*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: PrependHashedPurposeToPlaintext
  nameWithType: DpapiDataProtector.PrependHashedPurposeToPlaintext
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderProtect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderProtect
  nameWithType: DpapiDataProtector.ProviderProtect
- uid: System.Security.Cryptography.DpapiDataProtector.ProviderUnprotect*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: ProviderUnprotect
  nameWithType: DpapiDataProtector.ProviderUnprotect
- uid: System.Security.Cryptography.DpapiDataProtector.Scope*
  parent: System.Security.Cryptography.DpapiDataProtector
  isExternal: false
  name: Scope
  nameWithType: DpapiDataProtector.Scope
