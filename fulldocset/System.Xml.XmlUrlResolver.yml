### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Разрешает внешние ресурсы XML, с именем универсальный код ресурса (URI)."
  remarks: "XmlUrlResolver используется для разрешения внешних ресурсов XML, например сущностей, определения типа документа (DTD) или схемы. Он также используется для обработки, добавления и импорта элементов, найденных в таблицы стилей Extensible StyleSheet Language (XSL) или параметров (XSD) языка определения схемы XML.       XmlUrlResolver является арбитром по умолчанию для всех классов в <xref:System.Xml>пространства имен.</xref:System.Xml> Он поддерживает `file://` и `http://` протоколы и запросы из <xref:System.Net.WebRequest>класса.</xref:System.Net.WebRequest>      Настроек [!IMPORTANT] настроек XmlUrlResolver объекты могут содержать конфиденциальные сведения, например учетные данные пользователя. Следует соблюдать осторожность при кэшировать объекты XmlUrlResolver и не должны передавать объекты XmlUrlResolver недоверенному компоненту.      ## Разрешение определения DTD, если средство чтения XML (<xref:System.Xml.XmlReader>) выполняет чтение XML-файл, содержащий внешний DTD, он вызывает метод <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName>метод, чтобы представить поток DTD.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Если URI DTD является относительным URI, средство чтения XML вызывает <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName>метод и возвращает абсолютный URI для данного `relativeUri` и `baseURi` параметров.</xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> Если XmlUrlResolver не знает, как для разрешения URI, она возвращает `null`.       <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>Метод использует эти сведения в <xref:System.Xml.XmlUrlResolver.Credentials%2A>свойство подходит для получения доступа к ресурсу.</xref:System.Xml.XmlUrlResolver.Credentials%2A> </xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> Имеется не `get` доступа к этому свойству, по соображениям безопасности. При перезаписи <xref:System.Xml.XmlResolver>, **GetEntity** — метод, который использует учетные данные в **учетные данные** свойство.</xref:System.Xml.XmlResolver>       Разрешение всех XML-ресурсов выполняется аналогично разрешению DTD. <xref:System.Xml.XmlResolver>согласовывает подключение к внешнему ресурсу и возвращает <xref:System.IO.Stream>представление содержимого.</xref:System.IO.Stream></xref:System.Xml.XmlResolver> Объект, который выполняет вызов <xref:System.Xml.XmlResolver>интерпретирует потока.</xref:System.Xml.XmlResolver>      ## Расширения класса XmlUrlResolver поведение по умолчанию класса XmlUrlResolver является преобразование XML-ресурса данных из источника, не из кэша. В некоторых случаях разрешение ресурса данных из кэша можно повысить производительность приложения, исключив время на сервер ресурсов данных. Выигрыш в производительности должны быть оценены с необходимостью обновление содержимого.       Следующий пример создает новый класс и расширяет их возможности XmlUrlResolver `XmlCachingResolver`, для извлечения ресурсов из кэша. Это делается путем переопределения <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>свойство и <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>метод.</xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>       [!code-vb[XmlCachingResolver_ex&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)][!code-cs[XmlCachingResolver_ex&#1;](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs) ] поведение кэширования `XmlCachingResolver` класс реализован в `GetEntity` метод.   Это делается путем создания новых <xref:System.Net.WebRequest>и <xref:System.Net.Cache.HttpRequestCachePolicy>объекты.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> <xref:System.Net.Cache.HttpRequestCachePolicy>Объект создается с помощью <xref:System.Net.Cache.HttpRequestCacheLevel>членом <xref:System.Net.Cache.HttpRequestCacheLevel>перечисления.</xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCachePolicy>       <xref:System.Net.WebRequest.CachePolicy%2A>Свойство <xref:System.Net.WebRequest>устанавливается <xref:System.Net.Cache.HttpRequestCachePolicy>объекта.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A>       Экземпляр `XmlCachingResolver` создается класс с `Boolean``enableHttpCaching`. Если это значение равно `true`, экземпляр преобразует ресурс из кэша по умолчанию, если это возможно. Когда `enableHttpCaching` имеет значение `false`, экземпляр использует поведение по умолчанию и разрешает ресурсы от их источника.      Настроек [!NOTE] настроек в этом примере использует расширяемость классы XML в .NET Framework. Другие классы можно расширять и настраивать в соответствии с требованиями конкретного приложения."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> класса."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Возвращает или задает политику кэширования для базового <xref:System.Net.WebRequest>объекта.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Политику кэширования для базового веб-запроса."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Задает учетные данные, используемые для проверки подлинности веб-запросов."
  remarks: "Если виртуальный каталог не требует проверки подлинности, это свойство необходимо задать. В противном случае необходимо указать учетные данные пользователя.       Можно связать другие учетные данные с различными URI и добавление их в кэш. Затем можно использовать учетные данные для проверки подлинности для различных URI независимо от исходного источника XML.       Следующий код C# показано, как задать свойство учетных данных в кэш учетных данных.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Учетные данные, используемые для проверки подлинности веб-запросов. Если это свойство не задано, используется значение по умолчанию <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, то есть <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;> </xref> имеет без учетных данных пользователя."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Сопоставляет URI с объектом, содержащим фактический ресурс."
  remarks: "Этот метод используется, когда вызывающий объект хочет отобразить заданный URI с объектом, содержащим ресурс, представленный этим URI.       Асинхронная версия данного метода в разделе <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>      Настроек [!IMPORTANT] настроек приложения может уменьшить отказ памяти службы угроз в метод GetEntity путем реализации IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> позволяет ограничить число считанных байтов.</xref:System.Runtime.InteropServices.ComTypes.IStream> Это помогает защититься от ситуации, когда вредоносный код пытается передается методу GetEntity бесконечный поток байтов."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, возвращаемый методом <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. Текущая реализация возвращает только <xref:System.IO.Stream>объектов.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Объект потока или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если указан тип, отличный от потока."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>не является ни <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не является <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> типа."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Указанный URI не является абсолютным URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Есть ошибка среды выполнения (например, прервано подключение к серверу)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Асинхронно сопоставляет URI с объектом, содержащим фактический ресурс."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, возвращаемый методом <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. Текущая реализация возвращает только <xref:System.IO.Stream>объектов.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Объект потока или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если указан тип, отличный от потока."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Возвращает или задает сетевой прокси-сервер для базового <xref:System.Net.WebRequest>объекта.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "<xref:System.Net.IWebProxy>Для доступа к Интернет-ресурса.</xref:System.Net.IWebProxy>"
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Разрешает абсолютный URI на основе базового и относительного URI."
  remarks: "Абсолютный URI может использоваться как базовый URI для последующих запросов для сущностей, которые относятся к данному URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Базовый URI, используемый для разрешения относительного URI."
    - id: relativeUri
      type: System.String
      description: "URI для решения. URI может быть абсолютным или относительным. Если абсолютным, данное значение замещает `baseUri` значение. Если относительным, в нем сочетаются с `baseUri` в абсолютный URI."
    return:
      type: System.Uri
      description: "Абсолютный URI или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если невозможно разрешить относительный URI."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
