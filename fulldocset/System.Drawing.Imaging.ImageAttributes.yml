### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.ImageAttributes
  id: ImageAttributes
  children:
  - System.Drawing.Imaging.ImageAttributes.#ctor
  - System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  - System.Drawing.Imaging.ImageAttributes.ClearColorKey
  - System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  - System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearGamma
  - System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearNoOp
  - System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  - System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  - System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.ClearThreshold
  - System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.Clone
  - System.Drawing.Imaging.ImageAttributes.Dispose
  - System.Drawing.Imaging.ImageAttributes.Finalize
  - System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  - System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  - System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetNoOp
  - System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  - System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  - System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  - System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  - System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  langs:
  - csharp
  name: ImageAttributes
  nameWithType: ImageAttributes
  fullName: System.Drawing.Imaging.ImageAttributes
  type: Class
  summary: "Содержит сведения о том, как обрабатываются цвета точечных рисунков и метафайлов во время визуализации."
  remarks: "Объект ImageAttributes обслуживает несколько параметров настройки цвета, включая матрицы настройки цвета, матрицы настройки оттенков серого, значения гамма коррекции, таблицы карт цвета и цвета пороговые значения. Во время подготовки к просмотру, цвета могут быть исправлены, затемнены, светлее и удалены. Чтобы применить подобную обработку, инициализируйте объект ImageAttributes и передайте путь объекта ImageAttributes (и путь <xref:System.Drawing.Image>) для <xref:System.Drawing.Graphics.DrawImage%2A>метод.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Image>"
  example:
  - "The following example takes an image that is all one color (0.2, 0.0, 0.4, 1.0) and doubles the red component adds 0.2 to the red, green, and blue components  \n  \n The following illustration shows the original image on the left and the transformed image on the right.  \n  \n ![Colors](~/add/media/colortrans1.png \"Colors\")  \n  \n The code in the following example uses the following steps to perform the recoloring:  \n  \n1.  Initialize a <xref:System.Drawing.Imaging.ColorMatrix> object.  \n  \n2.  Create an ImageAttributes object and pass the <xref:System.Drawing.Imaging.ColorMatrix> object to the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method of the ImageAttributes object.  \n  \n3.  Pass the ImageAttributes object to the <xref:System.Drawing.Graphics.DrawImage%2A> method of a <xref:System.Drawing.Graphics> object.  \n  \n [!code-vb[System.Drawing.RecoloringImages#21](~/add/codesnippet/visualbasic/t-system.drawing.imaging_5_1.vb)]\n [!code-cs[System.Drawing.RecoloringImages#21](~/add/codesnippet/csharp/t-system.drawing.imaging_5_1.cs)]"
  syntax:
    content: 'public sealed class ImageAttributes : ICloneable, IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.#ctor
  id: '#ctor'
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ImageAttributes()
  nameWithType: ImageAttributes.ImageAttributes()
  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> класса."
  syntax:
    content: public ImageAttributes ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  id: ClearBrushRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearBrushRemapTable()
  nameWithType: ImageAttributes.ClearBrushRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает таблицу преобразования цветов кисти этого <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> объекта."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать одну таблицу преобразования цветов для категории по умолчанию, таблицу различные преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории кистей.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если не указать параметры настройки для категории кистей, параметры по умолчанию применяются для категории кистей.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например, предположим, что таблицу преобразования по умолчанию, которая преобразует красный, зеленый, и указать значение по умолчанию гамма 1.8. При вызове <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A>метода, таблица преобразования по умолчанию (красный, зеленый цвет) и гамма-значение по умолчанию (1,8) не будут применяться к кистям.</xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> Если после этого вызвать метод ClearBrushRemapTable, категория кистей не вернется к таблице преобразования по умолчанию; точнее категория кистей будет иметь таблицу без преобразования. Аналогичным образом категория кистей не вернется к гамма-значение по умолчанию; точнее категория кистей будет иметь не гамма-значение."
  syntax:
    content: public void ClearBrushRemapTable ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey
  id: ClearColorKey
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorKey()
  nameWithType: ImageAttributes.ClearColorKey()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает цветовой ключ (диапазон прозрачности) для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать один ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  syntax:
    content: public void ClearColorKey ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  id: ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorKey(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает цветовой ключ (диапазон прозрачности) для определенной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать один ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например, предположим, что цветовой ключ по умолчанию, который делает любой цвет с красного компонента от 200 до 255 прозрачным и указать значение по умолчанию гамма 1.8. Если установить ключ цвета для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A>метод, цветовой ключ по умолчанию и гамма-значение по умолчанию не будет применяться к перья.</xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> Если после этого цветовой ключ путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A>метод, категория перьев не вернется к цветовой ключ по умолчанию; вместо этого пера категории будет иметь не цветовой ключ.</xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение."
  syntax:
    content: public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается цветовой ключ."
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  id: ClearColorMatrix
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorMatrix()
  nameWithType: ImageAttributes.ClearColorMatrix()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает матрицу настройки цвета для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера."
  syntax:
    content: public void ClearColorMatrix ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  id: ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearColorMatrix(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает матрицу настройки цвета для определенной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что матрица настройки цвета и гамма-значение для категории по умолчанию. Если установить матрицу настройки цвета для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>метод, матрица настройки цвета по умолчанию не будет применяться к перья.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> Если после этого очистить матрицу настройки цвета пера путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A>метод, категория перьев не вернется к матрице настройки по умолчанию; вместо этого пера категории будет иметь не матрицу настройки.</xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение."
  syntax:
    content: public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается матрица настройки цвета."
  overload: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma
  id: ClearGamma
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearGamma()
  nameWithType: ImageAttributes.ClearGamma()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Отключает гамма-коррекцию для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  syntax:
    content: public void ClearGamma ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  id: ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearGamma(ColorAdjustType)
  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Отключает гамма-коррекцию для определенной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что гамма-значение и матрицу настройки цвета для категории по умолчанию. Если установить гамма-значение для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A>метода гамма-значение по умолчанию не будет применяться к перья.</xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> Если после этого пера гамма-значение путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A>метод, категория перьев не вернется к гамма-значение по умолчанию; вместо этого пера категории будет иметь не гамма-значение.</xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> Аналогичным образом категория перьев не вернется к матрица настройки цвета по умолчанию; точнее категория перьев будет иметь не матрица настройки цвета."
  syntax:
    content: public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которого гамма коррекция отключена."
  overload: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp
  id: ClearNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearNoOp()
  nameWithType: ImageAttributes.ClearNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Можно отключить настройку цвета для категории по умолчанию путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>метод.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Позже можно восстановить настройку цвета для категории по умолчанию путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A>метод.</xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Настройка цвета возвращает была перед вызовом <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>"
  syntax:
    content: public void ClearNoOp ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  id: ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> для указанной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Можно отключить настройку цвета для определенной категории, вызвав <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>метод.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> Позже можно восстановить настройку цвета для категории, вызвав <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A>метод.</xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> Настройка цвета возвращает была перед вызовом <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.</xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>"
  syntax:
    content: public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой <xref uid=&quot;langword_csharp_NoOp&quot; name=&quot;NoOp&quot; href=&quot;&quot;> </xref> этот параметр установлен."
  overload: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  id: ClearOutputChannel
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannel()
  nameWithType: ImageAttributes.ClearOutputChannel()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает параметр CMYK (голубой пурпурный желтый черный) выходного канала для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения."
  syntax:
    content: public void ClearOutputChannel ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  id: ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannel(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает параметр (голубой пурпурный желтый черный) выходного канала для указанной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что исходящий канал и матрицу настройки для категории по умолчанию. Если установить канал вывода для категории точечных рисунков путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>метод, по умолчанию выходной канал не будет применяться к точечным рисункам.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Если после этого точечного рисунка выходной канал, вызвав <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A>метод, категория точечных рисунков не вернется к каналу вывода по умолчанию; вместо этого категории растровое изображение будет иметь не канала вывода.</xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> Аналогичным образом категория точечных рисунков не вернется к матрица настройки цвета по умолчанию; точнее категория точечных рисунков будет иметь не матрица настройки цвета."
  syntax:
    content: public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается параметр выходного канала."
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  id: ClearOutputChannelColorProfile
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannelColorProfile()
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает профиль цвета канала вывода для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать профиль канала вывода для категории по умолчанию и другие выходные профиля канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения."
  syntax:
    content: public void ClearOutputChannelColorProfile ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  id: ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearOutputChannelColorProfile(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает профиль цвета канала вывода для указанной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать профиль канала вывода для категории по умолчанию и другие выходные профиля канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что профиль канала вывода и матрицу настройки для категории по умолчанию. Если установить профиль канала вывода для категории точечных рисунков путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>метод, по умолчанию профиля канала вывода не будет применяться к точечным рисункам.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> Если после этого точечного рисунка выходных данных профиля канала путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A>метод, категория точечных рисунков не вернется к профиля канала вывода по умолчанию; вместо этого категории растровое изображение будет иметь нет профиля канала вывода.</xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> Аналогичным образом категория точечных рисунков не вернется к матрица настройки цвета по умолчанию; точнее категория точечных рисунков будет иметь не матрица настройки цвета."
  syntax:
    content: public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается параметр профиля канала вывода."
  overload: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  id: ClearRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearRemapTable()
  nameWithType: ImageAttributes.ClearRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает таблицу преобразования цветов для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать таблицу преобразования для категории по умолчанию, другую таблицу для категории точечных рисунков и по-прежнему другую таблицу для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  syntax:
    content: public void ClearRemapTable ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  id: ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearRemapTable(ColorAdjustType)
  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает таблицу преобразования цветов для определенной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать таблицу преобразования для категории по умолчанию, другую таблицу для категории точечных рисунков и по-прежнему другую таблицу для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, параметры по умолчанию применяются для категории пера.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что таблица преобразования и гамма-значение для категории по умолчанию. Если установить таблица преобразования цветов для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A>метод, таблица преобразования по умолчанию не будет применяться к перья.</xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> Если после этого таблицу путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A>метод, категория перьев не вернется к таблице преобразования по умолчанию; вместо этого пера категории будет иметь таблицу без преобразования.</xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение."
  syntax:
    content: public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается таблица преобразования цветов."
  overload: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold
  id: ClearThreshold
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearThreshold()
  nameWithType: ImageAttributes.ClearThreshold()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает пороговое значение для категории по умолчанию."
  remarks: "Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать пороговое значение для категории по умолчанию, различные пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  syntax:
    content: public void ClearThreshold ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  id: ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: ClearThreshold(ColorAdjustType)
  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Очищает пороговое значение для указанной категории."
  remarks: "Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x55, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать пороговое значение для категории по умолчанию, различные пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что пороговое значение и гамма-значение для категории по умолчанию. Если установить пороговое значение для категории перьев путем вызова <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A>метод, пороговое значение по умолчанию не будет применяться к перья.</xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> Если после этого порогового значения пера путем вызова <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A>метод, категория перьев не вернется к пороговое значение по умолчанию; вместо этого категория перьев не будет иметь порога.</xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> Аналогичным образом категория перьев не вернется к гамма-значение по умолчанию; точнее категория перьев будет иметь не гамма-значение."
  syntax:
    content: public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой очищается пороговое значение."
  overload: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Clone
  id: Clone
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Clone()
  nameWithType: ImageAttributes.Clone()
  fullName: System.Drawing.Imaging.ImageAttributes.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Создает точную копию данного объекта <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> объекта."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> Объект создает этот класс, приводится к объекту."
  overload: System.Drawing.Imaging.ImageAttributes.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Dispose()
  nameWithType: ImageAttributes.Dispose()
  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Освобождает все ресурсы, используемые этим <xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> объекта."
  remarks: "После использования <xref:System.Drawing.Imaging.ImageAttributes>.</xref:System.Drawing.Imaging.ImageAttributes> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Drawing.Imaging.ImageAttributes>окажется в неработоспособном состоянии.</xref:System.Drawing.Imaging.ImageAttributes> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Drawing.Imaging.ImageAttributes>, сборщик мусора мог освободить память, <xref:System.Drawing.Imaging.ImageAttributes>занимаемую.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Drawing.Imaging.ImageAttributes>.</xref:System.Drawing.Imaging.ImageAttributes> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Drawing.Imaging.ImageAttributes>объекта `Finalize` метод.</xref:System.Drawing.Imaging.ImageAttributes>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: Finalize()
  nameWithType: ImageAttributes.Finalize()
  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~ImageAttributes ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  id: GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)
  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Настраивает цвета в палитре согласно параметрам настройки указанной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать таблицу преобразования цветов для категории по умолчанию, таблицу различные преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.       При вызове метода GetAdjustedPalette можно указать категорию настройки, которая используется для настройки цветов палитры. Например, если передать <xref:System.Drawing.Imaging.ColorAdjustType>методу GetAdjustedPalette, параметрам настройки для категории точечных рисунков используются для настройки цветов палитры.</xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: palette
      type: System.Drawing.Imaging.ColorPalette
      description: "Объект <xref href=&quot;System.Drawing.Imaging.ColorPalette&quot;> </xref> на входе содержит палитра для настройки, а в выходных данных — настроенная палитра."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, параметры настройки будут применяться к палитре."
  overload: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  id: SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetBrushRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает таблицу преобразования цветов для категории кистей."
  remarks: "Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap>структуры.</xref:System.Drawing.Imaging.ColorMap> Каждый <xref:System.Drawing.Imaging.ColorMap>структуры имеет два <xref:System.Drawing.Color>объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.       Вызов метода SetBrushRemapTable действует так же, как передача <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A>метод.</xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> </xref:System.Drawing.Imaging.ColorAdjustType> Указанная таблица преобразования применяется к элементам в метафайлах, которые заполнены с помощью кисти.       Этот метод предназначен для использования только с векторными изображениями."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates a single-element <xref:System.Drawing.Imaging.ColorMap> array that holds red as the old color and green as the new color.  \n  \n2.  Passes this array to a newly created <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/cpp/03cb420b-6413-4b57-9e9e-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/csharp/03cb420b-6413-4b57-9e9e-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/add/codesnippet/visualbasic/03cb420b-6413-4b57-9e9e-_1.vb)]"
  syntax:
    content: public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Массив <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref> объектов."
  overload: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  id: SetColorKey(System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorKey(Color,Color)
  nameWithType: ImageAttributes.SetColorKey(Color,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает ключ цвета для категории по умолчанию."
  remarks: "Этот метод задает значения высокой и низкой цветовой ключ, так что можно сделать прозрачным диапазон цветов. Любой цвет, все три составляющие (красный, зеленый, синий) между соответствующими составляющими максимального и минимального цветовых ключей, становится прозрачным.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> method.
  syntax:
    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);
    parameters:
    - id: colorLow
      type: System.Drawing.Color
      description: "Низкое значение цветового ключа."
    - id: colorHigh
      type: System.Drawing.Color
      description: "Высокое значение цветового ключа."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorKey(Color,Color,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает цветовой ключ (диапазон прозрачности) для определенной категории."
  remarks: "Этот метод задает значения высокой и низкой цветовой ключ, так что можно сделать прозрачным диапазон цветов. Любой цвет, все три составляющие (красный, зеленый, синий) между соответствующими составляющими максимального и минимального цветовых ключей, становится прозрачным.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать ключ цвета для категории по умолчанию, другой — для категории точечных рисунков и по-прежнему для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать ключ цвета для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A>, ни один из параметров настройки по умолчанию применяется ко перья.</xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Circle.bmp and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its color key by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> method.  \n  \n3.  Draws the image to the screen using the color key of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/cpp/71066d96-794d-4f7b-950a-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/csharp/71066d96-794d-4f7b-950a-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/add/codesnippet/visualbasic/71066d96-794d-4f7b-950a-_1.vb)]"
  syntax:
    content: public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: colorLow
      type: System.Drawing.Color
      description: "Низкое значение цветового ключа."
    - id: colorHigh
      type: System.Drawing.Color
      description: "Высокое значение цветового ключа."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой устанавливается цветовой ключ."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета и матрицу настройки оттенков серого для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Вызов метода SetColorMatrices эквивалентно вызову <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName>метода и передача <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>для `flags` параметр.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>Указывает, что все цвета (включая оттенки серого) настраиваются с помощью матрицы настройки цвета, не матрицу настройки оттенков серого.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> Таким образом матрица настройки оттенков серого, переданного этому методу не делает ничего."
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки оттенков серого."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета и матрицу настройки оттенков серого для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки оттенков серого."
    - id: flags
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> , указывающий тип изображения и цвета, которые будут влиять матрицы настройки цвета и настройки оттенков серого."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета и матрицу настройки оттенков серого для указанной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать — для категории по умолчанию, другие — для категории точечных рисунков и по-прежнему другие — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать матрицы настройки цвета и настройки оттенков серого для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A>, ни один из параметров настройки по умолчанию применяется ко перья.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
    - id: grayMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки оттенков серого."
    - id: mode
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> , указывающий тип изображения и цвета, которые будут влиять матрицы настройки цвета и настройки оттенков серого."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задаются матрицы настройки цвета и настройки оттенков серого."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Вызов метода SetColorMatrix эквивалентно вызову <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName>метода и передача <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>для `flags` параметр.</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=fullName> <xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>Указывает, что все цвета (включая оттенки серого) настраиваются с помощью матрицы настройки цвета</xref:System.Drawing.Imaging.ColorMatrixFlag?displayProperty=fullName>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates a rectangle image that has all the color values set to 128, producing a rectangle that is filled with a solid medium-gray color. The code then draws this rectangle image to the screen.  \n  \n2.  Creates a <xref:System.Drawing.Imaging.ColorMatrix> and sets its <xref:System.Drawing.Drawing2D.Matrix> location to 1.75, which emphasizes the red component of the image.  \n  \n3.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and calls the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> method.  \n  \n4.  Draws the image (a second rectangle) to the screen using the <xref:System.Drawing.Imaging.ColorMatrix> just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n Note that the second rectangle has the color red emphasized.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/cpp/177ae5c1-d9d6-4cf6-ac7b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/csharp/177ae5c1-d9d6-4cf6-ac7b-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/add/codesnippet/visualbasic/177ae5c1-d9d6-4cf6-ac7b-_1.vb)]"
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета для категории по умолчанию."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> method.
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
    - id: flags
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> , указывающий тип изображения и цвет, который будет влиять матрица настройки цвета."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает матрицу настройки цвета для определенной категории."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать матрицу настройки цвета для категории по умолчанию матрицу различные настройки цвета для категории точечных рисунков и по-прежнему матрицу различные настройки цвета для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать матрицу настройки цвета для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>, ни один из параметров настройки по умолчанию применяется ко перья.</xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example demonstrates how to use the SetColorMatrix method. To run this example, paste the code into a Windows Form and call `RotateColors` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.RotateColors#1](~/add/codesnippet/visualbasic/90629bc4-1375-4e58-926d-_1.vb)]\n [!code-cs[System.Drawing.RotateColors#1](~/add/codesnippet/csharp/90629bc4-1375-4e58-926d-_1.cs)]"
  syntax:
    content: public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: newColorMatrix
      type: System.Drawing.Imaging.ColorMatrix
      description: "Матрица настройки цвета."
    - id: mode
      type: System.Drawing.Imaging.ColorMatrixFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorMatrixFlag&quot;> </xref> , указывающий тип изображения и цвет, который будет влиять матрица настройки цвета."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задается матрица настройки цвета."
  overload: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  id: SetGamma(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetGamma(Single)
  nameWithType: ImageAttributes.SetGamma(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает гамма-значение для категории по умолчанию."
  remarks: "Типичные значения `gamma` параметра — от 1.0 до 2.2; Тем не менее, могут оказаться полезными в некоторых случаях значения от 0,1 до 5.0.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Гамма значения за пределы обычного диапазона могут быть полезны для старых CRT мониторы и мониторы в особых условиях освещенности, например промышленных средах или витринах."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. In addition, you need to change the image file path to a path and image name valid on your system. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg and draws it to the screen using the default value for gamma.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its gamma to 2.2 by calling the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> method.  \n  \n3.  Draws the image (a second camera) to the screen using the gamma value just set in the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/cpp/m-system.drawing.imaging_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/csharp/m-system.drawing.imaging_4_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/add/codesnippet/visualbasic/m-system.drawing.imaging_4_1.vb)]"
  syntax:
    content: public void SetGamma (float gamma);
    parameters:
    - id: gamma
      type: System.Single
      description: "Значение гамма-коррекции."
  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  id: SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetGamma(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает гамма-значение для указанной категории."
  remarks: "Типичные значения `gamma` параметра — от 1.0 до 2.2; Тем не менее, могут оказаться полезными в некоторых случаях значения от 0,1 до 5.0.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать гамма-значение для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A>, ни один из параметров настройки по умолчанию применяется ко перья.</xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> </xref:System.Drawing.Imaging.ColorAdjustType>       Гамма значения за пределы обычного диапазона могут быть полезны для старых CRT мониторы и мониторы в особых условиях освещенности, например промышленных средах или витринах."
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> method.
  syntax:
    content: public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: gamma
      type: System.Single
      description: "Значение гамма-коррекции."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> перечисления, указывающее категорию, для которой задается гамма-значение."
  overload: System.Drawing.Imaging.ImageAttributes.SetGamma*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp
  id: SetNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetNoOp()
  nameWithType: ImageAttributes.SetNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Отключает настройку цвета для категории по умолчанию. Можно вызвать <> </> *настроек метод, чтобы восстановить параметры настройки цвета, использовавшиеся до вызова метода <> </> *настроек метод."
  remarks: "<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> that uses the file Camera.jpg.  \n  \n2.  Sets the gamma value of the <xref:System.Drawing.Imaging.ImageAttributes> object to 0.25.  \n  \n3.  Draws the image to the screen.  \n  \n4.  Calls the SetNoOp method.  \n  \n5.  Draws the image (a second camera) to the screen; however, because the SetNoOp method was called, the gamma setting defaults to a value of 1.0 and the image is drawn to the screen with the default gamma setting.  \n  \n Note that the image on the left is very washed out (gamma of 0.25) and the image on the right has more contrast (gamma of 1.0).  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/cpp/m-system.drawing.imaging_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/csharp/m-system.drawing.imaging_0_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/add/codesnippet/visualbasic/m-system.drawing.imaging_0_1.vb)]"
  syntax:
    content: public void SetNoOp ();
    parameters: []
  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  id: SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Отключает настройку цвета для определенной категории. Можно вызвать <> </> *настроек метод, чтобы восстановить параметры настройки цвета, использовавшиеся до вызова метода <> </> *настроек метод."
  remarks: '<xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать гамма-значение для категории по умолчанию, другое — для категории точечных рисунков и другое — — для категории перьев.'
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> method.
  syntax:
    content: public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для какой цвет отключить исправления."
  overload: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannel(ColorChannelFlag)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Устанавливает выходной канал CMYK (голубой пурпурный желтый черный) для категории по умолчанию."
  remarks: "Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>метод преобразование изображения в цветовое пространство CMYK и изучить интенсивности цветовых каналов CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Например предположим, что можно создать <xref:System.Drawing.Imaging.ImageAttributes>и задайте его растровое изображение исходящего канала <xref:System.Drawing.Imaging.ColorChannelFlag>.</xref:System.Drawing.Imaging.ColorChannelFlag> </xref:System.Drawing.Imaging.ImageAttributes> Если вы передаете путь, <xref:System.Drawing.Imaging.ImageAttributes>объект <xref:System.Drawing.Graphics.DrawImage%2A>, метод вычисляется голубой составляющей каждой точки, и каждая точка в готовом для просмотра изображений — оттенок серого, что определяет интенсивность ее голубого канала.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> Аналогичным образом можно вывести изображения, которые определяют интенсивность magenta, желтого и черного каналов.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/9ad3adf3-ee86-4369-8698-_1.vb)]\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/9ad3adf3-ee86-4369-8698-_1.cs)]"
  syntax:
    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);
    parameters:
    - id: flags
      type: System.Drawing.Imaging.ColorChannelFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorChannelFlag&quot;> </xref> , задает выходной канал."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  id: SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Устанавливает выходной канал CMYK (голубой пурпурный желтый черный) для указанной категории."
  remarks: "Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>метод преобразование изображения в цветовое пространство CMYK и изучить интенсивности цветовых каналов CMYK.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Например предположим, что можно создать <xref:System.Drawing.Imaging.ImageAttributes>и задайте его растровое изображение исходящего канала <xref:System.Drawing.Imaging.ColorChannelFlag>.</xref:System.Drawing.Imaging.ColorChannelFlag> </xref:System.Drawing.Imaging.ImageAttributes> Если вы передаете путь, <xref:System.Drawing.Imaging.ImageAttributes>объект <xref:System.Drawing.Graphics.DrawImage%2A>, метод вычисляется голубой составляющей каждой точки, и каждая точка в готовом для просмотра изображений — оттенок серого, что определяет интенсивность ее голубого канала.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> Аналогичным образом можно вывести изображения, которые определяют интенсивность magenta, желтого и черного каналов.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать канал вывода для категории по умолчанию и другие выходные канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать канал вывода для категории точечных рисунков, передав <xref:System.Drawing.Imaging.ColorAdjustType>методу SetOutputChannel, ни один из параметров настройки по умолчанию будет применяться к точечным рисункам.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - "The following code example demonstrates how to use the SetOutputChannel method. To run this example, paste the following code into a Windows Form. Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `ShowOutputChannels`, passing `e` as<xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#4](~/add/codesnippet/visualbasic/980f8f9a-f561-44e4-94f4-_1.vb)]\n [!code-cs[System.Drawing.Misc3#4](~/add/codesnippet/csharp/980f8f9a-f561-44e4-94f4-_1.cs)]"
  syntax:
    content: public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: flags
      type: System.Drawing.Imaging.ColorChannelFlag
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorChannelFlag&quot;> </xref> , задает выходной канал."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задается выходной канал."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  id: SetOutputChannelColorProfile(System.String)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannelColorProfile(String)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает файл цветового профиля выходного канала для категории по умолчанию."
  remarks: "Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>и <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>методы для преобразования изображения в цветовое пространство CMYK (голубой пурпурный желтый черный) и просмотрите интенсивности CMYK цветовых каналов.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Предположим, например, можно написать код, который выполняет следующие действия: 1.  Создание <xref:System.Drawing.Image>.</xref:System.Drawing.Image>      2.  Создание <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes>      3.  Передайте <xref:System.Drawing.Imaging.ColorChannelFlag>для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>метод <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> </xref:System.Drawing.Imaging.ColorChannelFlag>      4.  Передайте имя пути к файлу профиля цвета <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>метод <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>      5.  Передайте пути <xref:System.Drawing.Image>и <xref:System.Drawing.Imaging.ImageAttributes>объектов <xref:System.Drawing.Graphics.DrawImage%2A>метод.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Image>       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]файл цветового профиля будет использоваться для вычисления голубой составляющей каждой точки изображения и каждого пикселя в готовом для просмотра изображений будет оттенок серого, что определяет интенсивность ее голубого канала.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать файл цветового профиля выходного канала для категории по умолчанию и в другом выходном файле цветового профиля канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения."
  syntax:
    content: public void SetOutputChannelColorProfile (string colorProfileFilename);
    parameters:
    - id: colorProfileFilename
      type: System.String
      description: "Имя пути файл цветового профиля. Если файл цветового профиля находится в каталоге %SystemRoot%\\System32\\Spool\\Drivers\\Color, этот параметр может иметь имя файла. В противном случае этот параметр должен быть полным путем к файлу."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  id: SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetOutputChannelColorProfile(String,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает файл цветового профиля выходного канала для указанной категории."
  remarks: "Можно использовать <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>и <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>методы для преобразования изображения в цветовое пространство CMYK (голубой пурпурный желтый черный) и просмотрите интенсивности CMYK цветовых каналов.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> Предположим, например, можно написать код, который выполняет следующие действия: 1.  Создание <xref:System.Drawing.Image>.</xref:System.Drawing.Image>      2.  Создание <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes>      3.  Передайте <xref:System.Drawing.Imaging.ColorChannelFlag>для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>метод <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> </xref:System.Drawing.Imaging.ColorChannelFlag>      4.  Передайте имя пути к файлу профиля цвета <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>метод <xref:System.Drawing.Imaging.ImageAttributes>объекта.</xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>      5.  Передайте пути <xref:System.Drawing.Image>и <xref:System.Drawing.Imaging.ImageAttributes>объектов <xref:System.Drawing.Graphics.DrawImage%2A>метод.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Imaging.ImageAttributes> </xref:System.Drawing.Image>       [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)]файл цветового профиля будет использоваться для вычисления голубой составляющей каждой точки изображения и каждого пикселя в готовом для просмотра изображений будет оттенок серого, что определяет интенсивность ее голубого канала.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать файл цветового профиля выходного канала для категории по умолчанию и в другом выходном файле цветового профиля канала для категории точечных рисунков.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории точечных рисунков, параметры по умолчанию применяемые категории растрового изображения.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать файл цветового профиля выходного канала для категории точечных рисунков, передав <xref:System.Drawing.Imaging.ColorAdjustType>для <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A>метода, ни один из параметров настройки по умолчанию будет применяться к точечным рисункам.</xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> </xref:System.Drawing.Imaging.ColorAdjustType>"
  syntax:
    content: public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: colorProfileFilename
      type: System.String
      description: "Имя пути файл цветового профиля. Если файл цветового профиля находится в каталоге %SystemRoot%\\System32\\Spool\\Drivers\\Color, этот параметр может иметь имя файла. В противном случае этот параметр должен быть полным путем к файлу."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задается файл цветового профиля канала вывода."
  overload: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  id: SetRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает таблицу преобразования цветов для категории по умолчанию."
  remarks: "Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap>структуры.</xref:System.Drawing.Imaging.ColorMap> Каждый <xref:System.Drawing.Imaging.ColorMap>структуры имеет два <xref:System.Drawing.Color>объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать Переназначение цветов для категории по умолчанию, таблицу преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Creates an image (a red circle), saves it as Circle2.jpg, opens that image, and draws it to the screen.  \n  \n2.  Creates a color map that maps the color red to the color green.  \n  \n3.  Draws the image created earlier to the screen again, but this time using the color map.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/cpp/de604fe6-6d67-4cfb-bb54-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/csharp/de604fe6-6d67-4cfb-bb54-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/add/codesnippet/visualbasic/de604fe6-6d67-4cfb-bb54-_1.vb)]"
  syntax:
    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Массив пар цветов типа <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref>. Каждая пара цветов содержит существующий цвет (первое значение) и цвет, что он будет преобразован (второе значение)."
  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  id: SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetRemapTable(ColorMap[],ColorAdjustType)
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает таблицу преобразования цветов для определенной категории."
  remarks: "Таблицы преобразования цветов представляет собой массив <xref:System.Drawing.Imaging.ColorMap>структуры.</xref:System.Drawing.Imaging.ColorMap> Каждый <xref:System.Drawing.Imaging.ColorMap>структуры имеет два <xref:System.Drawing.Color>объектов: один задает со старым цветом, а второй указывает соответствующий новый цвет.</xref:System.Drawing.Color> </xref:System.Drawing.Imaging.ColorMap> Во время подготовки к просмотру, любой цвет, соответствующий одному из старых цветов в таблице преобразования меняется на соответствующий новый цвет.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать Переназначение цветов для категории по умолчанию, таблицу преобразования цветов для категории точечных рисунков и по-прежнему таблицы различные преобразования цветов для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если задать таблицу преобразования цветов для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>методу SetRemapTable, ни один из параметров настройки по умолчанию применяются к перья.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - For a code example, see the [SetRemapTable(ColorMap\[\])](assetId:///M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])?qualifyHint=False&autoUpgrade=False) method.
  syntax:
    content: public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: map
      type: System.Drawing.Imaging.ColorMap[]
      description: "Массив пар цветов типа <xref href=&quot;System.Drawing.Imaging.ColorMap&quot;> </xref>. Каждая пара цветов содержит существующий цвет (первое значение) и цвет, что он будет преобразован (второе значение)."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задается таблица преобразования цветов."
  overload: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  id: SetThreshold(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetThreshold(Single)
  nameWithType: ImageAttributes.SetThreshold(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает пороговое значение (диапазон прозрачности) для категории по умолчанию."
  remarks: "Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать пороговое значение для категории по умолчанию пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets its threshold by using the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> method.  \n  \n3.  Draws the image to the screen by using the threshold of the <xref:System.Drawing.Imaging.ImageAttributes> object.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/cpp/m-system.drawing.imaging_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/csharp/m-system.drawing.imaging_1_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/add/codesnippet/visualbasic/m-system.drawing.imaging_1_1.vb)]"
  syntax:
    content: public void SetThreshold (float threshold);
    parameters:
    - id: threshold
      type: System.Single
      description: "Вещественное число, задающее пороговое значение."
  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  id: SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetThreshold(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает пороговое значение (диапазон прозрачности) для определенной категории."
  remarks: "Пороговое значение представляет собой значение от 0 до 1, определяющая точку отсечки для каждого компонента цвета. Например предположим, задано пороговое значение 0,7 и происходит отображение цвета, красный, зеленый и синий компоненты являются 230, 50 и 220 соответственно. Красного компонента (230) больше, чем 0.7x255, поэтому красного компонента будет изменена на 255 (полная насыщенность). Зеленый компонент (50) меньше, чем 0.7x255, поэтому будет изменена на 0. Синяя составляющая (220) превышает 0.7x255, поэтому синего компонента будет изменена на 255.       <xref:System.Drawing.Imaging.ImageAttributes>Сохраняет параметры цвета и оттенки серого для пяти категорий настройки: по умолчанию, точечный рисунок, кисть, перо и текст.</xref:System.Drawing.Imaging.ImageAttributes> Например можно указать пороговое значение для категории по умолчанию пороговое значение для категории точечных рисунков и по-прежнему различных пороговое значение для категории пера.       Настройки цвета и настройки оттенков серого применяются параметры по умолчанию для всех категорий, которые не имеют своих собственных параметров настройки. Например если вы никогда не указывайте параметры настройки для категории перьев, к категории пера применяются параметры по умолчанию.       Как только задать настройки цвета или параметр настройки оттенков серого для определенной категории, параметров настройки по умолчанию больше не применяются к этой категории. Например предположим, что указана коллекция параметров настройки для категории по умолчанию. Если установить пороговое значение для категории перьев, передав <xref:System.Drawing.Imaging.ColorAdjustType>методу SetThreshold, ни один из параметров настройки по умолчанию применяются к перья.</xref:System.Drawing.Imaging.ColorAdjustType>"
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> method.
  syntax:
    content: public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);
    parameters:
    - id: threshold
      type: System.Single
      description: "Значение порогового значения от 0,0 до 1,0, которое используется в качестве контрольной точки для сортировки цветов, которые будут сопоставлены максимальное или минимальное значение."
    - id: type
      type: System.Drawing.Imaging.ColorAdjustType
      description: "Элемент <xref href=&quot;System.Drawing.Imaging.ColorAdjustType&quot;> </xref> , определяющий категорию, для которой задается пороговое значение цвета."
  overload: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает режим переноса, который используется для определения метода мозаичного наложения текстуры по всей фигуре или на краях фигуры. Текстура накладывается по всей фигуре, заполняя ее, если текстура меньше заполняемой фигуры."
  remarks: "Вызов метода SetWrapMode эквивалентно вызову метода <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29>и передачи <xref:System.Drawing.Color.Black%2A?displayProperty=fullName>для `color` параметр.</xref:System.Drawing.Color.Black%2A?displayProperty=fullName> </xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> <xref:System.Drawing.Color.Black%2A?displayProperty=fullName>Задает цвет пикселей за пределами отрисованного изображения.</xref:System.Drawing.Color.Black%2A?displayProperty=fullName> Данный цвет является видимым, если параметр mode имеет значение <xref:System.Drawing.Drawing2D.WrapMode>и исходный прямоугольник, переданный <xref:System.Drawing.Graphics.DrawImage%2A>метод больше, чем само изображение.</xref:System.Drawing.Graphics.DrawImage%2A> </xref:System.Drawing.Drawing2D.WrapMode>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n1.  Opens an <xref:System.Drawing.Image> from the Circle3.jpg file (a small, red-filled circle) and draws it to the screen.  \n  \n2.  Creates an <xref:System.Drawing.Imaging.ImageAttributes> object and sets the <xref:System.Drawing.Drawing2D.WrapMode> enumeration to <xref:System.Drawing.Drawing2D.WrapMode>.  \n  \n3.  Creates a <xref:System.Drawing.TextureBrush> using the image from the Circle3.jpg file.  \n  \n4.  Draws a rectangle to the screen that is filled with the small, red-filled circles.  \n  \n [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/cpp/1dc37210-933f-4e57-8209-_1.cpp)]\n [!code-cs[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/csharp/1dc37210-933f-4e57-8209-_1.cs)]\n [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/add/codesnippet/visualbasic/1dc37210-933f-4e57-8209-_1.vb)]"
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Элемент <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , указывающий, как повторяющиеся копии изображения используются для мозаичного заполнения области."
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode,Color)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает режим переноса и цвет, используемый для определения метода мозаичного наложения текстуры по всей фигуре или на краях фигуры. Текстура накладывается по всей фигуре, заполняя ее, если текстура меньше заполняемой фигуры."
  remarks: ''
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Элемент <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , указывающий, как повторяющиеся копии изображения используются для мозаичного заполнения области."
    - id: color
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Imaging.ImageAttributes&quot;> </xref> Объект, определяющий цвет пикселей за пределами отрисованного изображения. Данный цвет является видимым, если параметр mode имеет значение <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> и исходный прямоугольник, переданный <xref:System.Drawing.Graphics.DrawImage*>больше, чем само изображение.</xref:System.Drawing.Graphics.DrawImage*>"
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  id: SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  parent: System.Drawing.Imaging.ImageAttributes
  langs:
  - csharp
  name: SetWrapMode(WrapMode,Color,Boolean)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Задает режим переноса и цвет, используемый для определения метода мозаичного наложения текстуры по всей фигуре или на краях фигуры. Текстура накладывается по всей фигуре, заполняя ее, если текстура меньше заполняемой фигуры."
  remarks: ''
  example:
  - For a code example, see the <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> method.
  syntax:
    content: public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);
    parameters:
    - id: mode
      type: System.Drawing.Drawing2D.WrapMode
      description: "Элемент <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , указывающий, как повторяющиеся копии изображения используются для мозаичного заполнения области."
    - id: color
      type: System.Drawing.Color
      description: "Объект color, определяющий цвет пикселей за пределами отрисованного изображения. Данный цвет является видимым, если параметр mode имеет значение <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> и исходный прямоугольник, переданный <xref:System.Drawing.Graphics.DrawImage*>больше, чем само изображение.</xref:System.Drawing.Graphics.DrawImage*>"
    - id: clamp
      type: System.Boolean
      description: "Этот параметр не оказывает влияния. Set it to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Imaging.ImageAttributes.#ctor
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ImageAttributes()
  nameWithType: ImageAttributes.ImageAttributes()
  fullName: System.Drawing.Imaging.ImageAttributes.ImageAttributes()
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearBrushRemapTable()
  nameWithType: ImageAttributes.ClearBrushRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey()
  nameWithType: ImageAttributes.ClearColorKey()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorKey(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorKey(ColorAdjustType)
- uid: System.Drawing.Imaging.ColorAdjustType
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorAdjustType
  nameWithType: ColorAdjustType
  fullName: System.Drawing.Imaging.ColorAdjustType
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix()
  nameWithType: ImageAttributes.ClearColorMatrix()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix()
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix(ColorAdjustType)
  nameWithType: ImageAttributes.ClearColorMatrix(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma()
  nameWithType: ImageAttributes.ClearGamma()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma()
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma(ColorAdjustType)
  nameWithType: ImageAttributes.ClearGamma(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearGamma(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp()
  nameWithType: ImageAttributes.ClearNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp()
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.ClearNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearNoOp(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel()
  nameWithType: ImageAttributes.ClearOutputChannel()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel()
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannel(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile()
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile()
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile(ColorAdjustType)
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable()
  nameWithType: ImageAttributes.ClearRemapTable()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable()
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable(ColorAdjustType)
  nameWithType: ImageAttributes.ClearRemapTable(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearRemapTable(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold()
  nameWithType: ImageAttributes.ClearThreshold()
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold()
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold(ColorAdjustType)
  nameWithType: ImageAttributes.ClearThreshold(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.ClearThreshold(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.Clone
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Clone()
  nameWithType: ImageAttributes.Clone()
  fullName: System.Drawing.Imaging.ImageAttributes.Clone()
- uid: System.Drawing.Imaging.ImageAttributes.Dispose
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Dispose()
  nameWithType: ImageAttributes.Dispose()
  fullName: System.Drawing.Imaging.ImageAttributes.Dispose()
- uid: System.Drawing.Imaging.ImageAttributes.Finalize
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Finalize()
  nameWithType: ImageAttributes.Finalize()
  fullName: System.Drawing.Imaging.ImageAttributes.Finalize()
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: GetAdjustedPalette(ColorPalette,ColorAdjustType)
  nameWithType: ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(ColorPalette,ColorAdjustType)
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetBrushRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetBrushRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(ColorMap[])
- uid: System.Drawing.Imaging.ColorMap[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMap
  nameWithType: ColorMap
  fullName: System.Drawing.Imaging.ColorMap[]
  spec.csharp:
  - uid: System.Drawing.Imaging.ColorMap
    name: ColorMap
    nameWithType: ColorMap
    fullName: ColorMap[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey(Color,Color)
  nameWithType: ImageAttributes.SetColorKey(Color,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey(Color,Color,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorKey(Color,Color,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix)
- uid: System.Drawing.Imaging.ColorMatrix
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMatrix
  nameWithType: ColorMatrix
  fullName: System.Drawing.Imaging.ColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag)
- uid: System.Drawing.Imaging.ColorMatrixFlag
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorMatrixFlag
  nameWithType: ColorMatrixFlag
  fullName: System.Drawing.Imaging.ColorMatrixFlag
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrices(ColorMatrix,ColorMatrix,ColorMatrixFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag)
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetColorMatrix(ColorMatrix,ColorMatrixFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma(Single)
  nameWithType: ImageAttributes.SetGamma(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetGamma(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetGamma(Single,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp()
  nameWithType: ImageAttributes.SetNoOp()
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp()
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp(ColorAdjustType)
  nameWithType: ImageAttributes.SetNoOp(ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetNoOp(ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel(ColorChannelFlag)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag)
- uid: System.Drawing.Imaging.ColorChannelFlag
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorChannelFlag
  nameWithType: ColorChannelFlag
  fullName: System.Drawing.Imaging.ColorChannelFlag
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannel(ColorChannelFlag,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile(String)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile(String,ColorAdjustType)
  nameWithType: ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(String,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable(ColorMap[])
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[])
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[])
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable(ColorMap[],ColorAdjustType)
  nameWithType: ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetRemapTable(ColorMap[],ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold(Single)
  nameWithType: ImageAttributes.SetThreshold(Single)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single)
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold(Single,ColorAdjustType)
  nameWithType: ImageAttributes.SetThreshold(Single,ColorAdjustType)
  fullName: System.Drawing.Imaging.ImageAttributes.SetThreshold(Single,ColorAdjustType)
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode)
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode,Color)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color)
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode(WrapMode,Color,Boolean)
  nameWithType: ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
  fullName: System.Drawing.Imaging.ImageAttributes.SetWrapMode(WrapMode,Color,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.ImageAttributes.#ctor*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ImageAttributes
  nameWithType: ImageAttributes.ImageAttributes
- uid: System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearBrushRemapTable
  nameWithType: ImageAttributes.ClearBrushRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorKey*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorKey
  nameWithType: ImageAttributes.ClearColorKey
- uid: System.Drawing.Imaging.ImageAttributes.ClearColorMatrix*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearColorMatrix
  nameWithType: ImageAttributes.ClearColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.ClearGamma*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearGamma
  nameWithType: ImageAttributes.ClearGamma
- uid: System.Drawing.Imaging.ImageAttributes.ClearNoOp*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearNoOp
  nameWithType: ImageAttributes.ClearNoOp
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannel*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannel
  nameWithType: ImageAttributes.ClearOutputChannel
- uid: System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearOutputChannelColorProfile
  nameWithType: ImageAttributes.ClearOutputChannelColorProfile
- uid: System.Drawing.Imaging.ImageAttributes.ClearRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearRemapTable
  nameWithType: ImageAttributes.ClearRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.ClearThreshold*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: ClearThreshold
  nameWithType: ImageAttributes.ClearThreshold
- uid: System.Drawing.Imaging.ImageAttributes.Clone*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Clone
  nameWithType: ImageAttributes.Clone
- uid: System.Drawing.Imaging.ImageAttributes.Dispose*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Dispose
  nameWithType: ImageAttributes.Dispose
- uid: System.Drawing.Imaging.ImageAttributes.Finalize*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: Finalize
  nameWithType: ImageAttributes.Finalize
- uid: System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: GetAdjustedPalette
  nameWithType: ImageAttributes.GetAdjustedPalette
- uid: System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetBrushRemapTable
  nameWithType: ImageAttributes.SetBrushRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.SetColorKey*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorKey
  nameWithType: ImageAttributes.SetColorKey
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrices*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrices
  nameWithType: ImageAttributes.SetColorMatrices
- uid: System.Drawing.Imaging.ImageAttributes.SetColorMatrix*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetColorMatrix
  nameWithType: ImageAttributes.SetColorMatrix
- uid: System.Drawing.Imaging.ImageAttributes.SetGamma*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetGamma
  nameWithType: ImageAttributes.SetGamma
- uid: System.Drawing.Imaging.ImageAttributes.SetNoOp*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetNoOp
  nameWithType: ImageAttributes.SetNoOp
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannel*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannel
  nameWithType: ImageAttributes.SetOutputChannel
- uid: System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetOutputChannelColorProfile
  nameWithType: ImageAttributes.SetOutputChannelColorProfile
- uid: System.Drawing.Imaging.ImageAttributes.SetRemapTable*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetRemapTable
  nameWithType: ImageAttributes.SetRemapTable
- uid: System.Drawing.Imaging.ImageAttributes.SetThreshold*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetThreshold
  nameWithType: ImageAttributes.SetThreshold
- uid: System.Drawing.Imaging.ImageAttributes.SetWrapMode*
  parent: System.Drawing.Imaging.ImageAttributes
  isExternal: false
  name: SetWrapMode
  nameWithType: ImageAttributes.SetWrapMode
