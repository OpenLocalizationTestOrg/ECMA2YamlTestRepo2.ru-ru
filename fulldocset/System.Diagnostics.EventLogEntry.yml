### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogEntry
  id: EventLogEntry
  children:
  - System.Diagnostics.EventLogEntry.Category
  - System.Diagnostics.EventLogEntry.CategoryNumber
  - System.Diagnostics.EventLogEntry.Data
  - System.Diagnostics.EventLogEntry.EntryType
  - System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  - System.Diagnostics.EventLogEntry.EventID
  - System.Diagnostics.EventLogEntry.Index
  - System.Diagnostics.EventLogEntry.InstanceId
  - System.Diagnostics.EventLogEntry.MachineName
  - System.Diagnostics.EventLogEntry.Message
  - System.Diagnostics.EventLogEntry.ReplacementStrings
  - System.Diagnostics.EventLogEntry.Source
  - System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Diagnostics.EventLogEntry.TimeGenerated
  - System.Diagnostics.EventLogEntry.TimeWritten
  - System.Diagnostics.EventLogEntry.UserName
  langs:
  - csharp
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
  type: Class
  summary: "Инкапсулирует единичную запись в журнале событий. Этот класс не наследуется."
  remarks: "Обычно не нужно создавать экземпляры EventLogEntry непосредственно при работе с <xref:System.Diagnostics.EventLog>классом.</xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Entries%2A>Членом <xref:System.Diagnostics.EventLog>класс содержит коллекцию экземпляров EventLogEntry, по которым производится итерация при чтении с помощью <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName>индекса члена класса.</xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Entries%2A>      Настроек [!IMPORTANT] настроек этот тип реализует <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> После завершения с помощью типа следует освободить его прямо или косвенно. Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A>метод в `try` / `catch` блока.</xref:System.IDisposable.Dispose%2A> Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable>разделе интерфейса.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of the EventLogEntry class. In this example, a `switch` statement uses console input to search for event log entries for the specified event type.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Category
  id: Category
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает текст, связанный с <xref:System.Diagnostics.EventLogEntry.CategoryNumber*>Свойства для этой операции.</xref:System.Diagnostics.EventLogEntry.CategoryNumber*>"
  remarks: "Для каждого приложения (источника события) можно определить собственные нумерованные категории и текстовые строки, с которыми они сопоставляются. Средство просмотра событий можно использовать категории для фильтрации событий в журнале."
  syntax:
    content: public string Category { get; }
    return:
      type: System.String
      description: "Текст категории конкретного приложения."
  overload: System.Diagnostics.EventLogEntry.Category*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Не удалось выделить пространство для одной из строк вставки, связанной с категорией."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  id: CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает номер категории для записи в журнале событий."
  remarks: "Для каждого приложения (источника события) можно определить собственные нумерованные категории и текстовые строки, с которыми они сопоставляются. Средство просмотра событий можно использовать категории для фильтрации событий в журнале. Категории должны быть пронумерованы последовательно начиная с номера 1. Задаваемый номер категории <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName>свойство.</xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> Категория может отображаться в средстве просмотра событий в виде числового значения или его можно использовать категорию как идентификатор ресурсов для отображения локализованной строки категории. Дополнительные сведения см. в разделе <xref:System.Diagnostics.EventInstance>.</xref:System.Diagnostics.EventInstance>"
  syntax:
    content: public short CategoryNumber { get; }
    return:
      type: System.Int16
      description: "Номер специфической для приложения категории для этой операции."
  overload: System.Diagnostics.EventLogEntry.CategoryNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Data
  id: Data
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает двоичные данные, связанные с записью."
  remarks: "При получении этого свойства создается массив, содержащий копию записи конкретного события двоичные данные, которые средство просмотра событий отображаются в комбинированном шестнадцатеричном и текстовом формате. Данные конкретного события могут использоваться для хранения сведений, приложение будет обрабатывать независимо от просмотра событий, например, создание отчетов из файла журнала."
  syntax:
    content: public byte[] Data { get; }
    return:
      type: System.Byte[]
      description: "Массив байтов, содержащий двоичные данные, связанные с записью."
  overload: System.Diagnostics.EventLogEntry.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EntryType
  id: EntryType
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает тип события этой записи."
  remarks: "Все типы событий являются четко определенных общих данных и при необходимости можно включить данные событий. Каждое событие имеет одного типа, определяемый приложением при записи этого события. Средство просмотра событий использует тип события для определения значка, отображаемого в представлении списка журнала событий."
  example:
  - "The following code example demonstrates the use of the EntryType property. In this example, a `switch` statement uses console input to search for event log entries for the specified EntryType.  If a match is found, log entry source information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_4_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_4_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_4_1.vb)]"
  syntax:
    content: public System.Diagnostics.EventLogEntryType EntryType { get; }
    return:
      type: System.Diagnostics.EventLogEntryType
      description: "Тип события, связанного с записью в журнале событий."
  overload: System.Diagnostics.EventLogEntry.EntryType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  id: Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Сравнивает две записи журнала событий."
  remarks: "Этот метод выполняет сравнение байт за байтом между двумя объектами. Не определяется ли два <xref:System.Diagnostics.EventLogEntry>экземпляры ссылаются на один объект.</xref:System.Diagnostics.EventLogEntry>"
  syntax:
    content: public bool Equals (System.Diagnostics.EventLogEntry otherEntry);
    parameters:
    - id: otherEntry
      type: System.Diagnostics.EventLogEntry
      description: "<xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> Для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> объекты совпадают; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLogEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.EventID
  id: EventID
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает идентификатор события конкретного приложения для текущей записи события."
  remarks: "Это значение представляет идентификатор события для записи в журнал с два разряда верхнего уровня исключены событий. <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>Свойство для записи в журнале событий представляет собой идентификатор 32-разрядных ресурсов для событий в файле ресурсов сообщения для источника событий.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A> Две записи журнала событий из одного источника могут иметь совпадающие значения EventID, но имеют различные <xref:System.Diagnostics.EventLogEntry.InstanceId%2A>значения из-за различий в два разряда верхнего уровня идентификатор события.</xref:System.Diagnostics.EventLogEntry.InstanceId%2A>       Если приложение написал записи событий, с помощью одного из <xref:System.Diagnostics.EventLog.WriteEntry%2A>методы, свойства EventID соответствует дополнительному `eventId` параметр.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Если приложение написал события с помощью <xref:System.Diagnostics.EventLog.WriteEvent%2A>или API-интерфейса Win32 `ReportEvent`свойства EventID соответствует идентификатору ресурса для события, с верхней два bits маскированные off.</xref:System.Diagnostics.EventLog.WriteEvent%2A>"
  syntax:
    content: public int EventID { get; }
    return:
      type: System.Int32
      description: "Идентификатор конкретного приложения для сообщения о событии."
  overload: System.Diagnostics.EventLogEntry.EventID*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Index
  id: Index
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает индекс данной записи в журнале событий."
  remarks: "Это число не обязательно отсчитываемый от нуля."
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "Индекс данной записи в журнале событий."
  overload: System.Diagnostics.EventLogEntry.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.InstanceId
  id: InstanceId
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает идентификатор ресурса, определяющий текст сообщения для записи событий."
  remarks: "Свойство InstanceId однозначно определяет запись событий для источника событий. InstanceId для записи в журнале событий представляет идентификатор полного 32-разрядных ресурсов для событий в файле ресурсов сообщения для источника событий. <xref:System.Diagnostics.EventLogEntry.EventID%2A>Свойство равно с два разряда верхнего уровня маскируется off. InstanceId</xref:System.Diagnostics.EventLogEntry.EventID%2A> Две записи журнала событий из одного источника могут иметь совпадающие <xref:System.Diagnostics.EventLogEntry.EventID%2A>значения, но имеют разные значения InstanceId из-за различий в два разряда верхнего уровня идентификатор ресурса.</xref:System.Diagnostics.EventLogEntry.EventID%2A>       Если приложение написал записи событий, с помощью одного из <xref:System.Diagnostics.EventLog.WriteEntry%2A>методы свойство InstanceId соответствует дополнительному `eventId` параметр.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Если приложение написал события с помощью <xref:System.Diagnostics.EventLog.WriteEvent%2A>, свойство InstanceId соответствующий идентификатор ресурса, указанного в <xref:System.Diagnostics.EventInstance.InstanceId%2A>из `instance` параметр.</xref:System.Diagnostics.EventInstance.InstanceId%2A> </xref:System.Diagnostics.EventLog.WriteEvent%2A> Если приложение записано событие, используя API-интерфейса Win32 `ReportEvent`, свойство InstanceId соответствующий идентификатор ресурса, указанного в `dwEventID` параметра.       Дополнительные сведения об определении сообщения о событиях и создание файлов ресурсов журналов событий, см. в разделе «Сообщения компилятора» в документации Platform SDK в [http://msdn.microsoft.com](http://msdn.microsoft.com/). Дополнительные сведения об идентификаторах журнала событий см. в разделе «Идентификаторы событий» в пакете SDK для платформы."
  example:
  - "The following code example searches an event log for entries with a particular resource identifier. The code example displays the event message for each matching entry, and counts the total number of matching entries in the log. The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.  \n  \n [!code-cpp[EventLog_WriteEvent#10](~/add/codesnippet/cpp/p-system.diagnostics.eve_20_1.cpp)]\n [!code-vb[EventLog_WriteEvent#10](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_20_1.vb)]\n [!code-cs[EventLog_WriteEvent#10](~/add/codesnippet/csharp/p-system.diagnostics.eve_20_1.cs)]"
  syntax:
    content: public long InstanceId { get; }
    return:
      type: System.Int64
      description: "Идентификатор ресурса, соответствующий определению строки в файле ресурсов сообщения для источника событий."
  overload: System.Diagnostics.EventLogEntry.InstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.MachineName
  id: MachineName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя компьютера, на котором было создано данное событие."
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "Имя компьютера, содержащего журнал событий."
  overload: System.Diagnostics.EventLogEntry.MachineName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Message
  id: Message
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает локализованное сообщение, связанное с этой записью о событии."
  remarks: "При получении этого свойства открывает реестр, чтобы определить имя файла DLL-файл, содержащий локализованный текст. Если при проверке исходного кода была получена ошибка реестра, убедитесь, что DLL-файл существует на компьютере. Если вставка строки в сообщении, найдите ошибки в их распределении."
  syntax:
    content: public string Message { get; }
    return:
      type: System.String
      description: "Форматированный, локализованный текст сообщения. Это включает в себя связанные строки замены."
  overload: System.Diagnostics.EventLogEntry.Message*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Не удалось выделить пространство для одной из строк вставки, связанные с данным сообщением."
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  id: ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает строки замены, связанные с записью в журнале событий."
  remarks: "Это свойство получает строки замены только для записи. Для получения полного сообщения, чтения <xref:System.Diagnostics.EventLogEntry.Message%2A>свойство.</xref:System.Diagnostics.EventLogEntry.Message%2A>       Свойство ReplacementStrings содержит локализованные версии строки замены, используемые в записи в журнале событий. Если файлы ресурсов, которые содержат строки на каждом целевом языке для вашего приложения, можно выдавать сообщения журнала событий на языке, который используется на этом компьютере. Чтобы сделать это, создайте экземпляр <xref:System.Resources.ResourceManager>класс для ресурса сборки, содержащей строки замены.</xref:System.Resources.ResourceManager> Первый параметр <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>Конструктор идентифицирует сборку ресурса для использования.</xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> Используйте <xref:System.Resources.ResourceManager.GetString%2A>метод экземпляра для предоставления локализованных сообщений для журнала событий.</xref:System.Resources.ResourceManager.GetString%2A> Следующий код автоматически задает сообщение для языка текущего языка и региональных параметров.      ```   ResourceManager LocRM = new ResourceManager(&quot;ReplacementStrings.TestStrings&quot;,          typeof(Program).Assembly);   EventLog e1 = new EventLog(&quot;LocTest&quot;, &quot;MyMachine&quot;, &quot;LocTest&quot;);   // Get the string associated with the current culture.   e1.WriteEntry(LocRM.GetString(&quot;strMessage&quot;),      EventLogEntryType.Information);   ```"
  syntax:
    content: public string[] ReplacementStrings { get; }
    return:
      type: System.String[]
      description: "Массив, содержащий строки замены, хранящиеся в событии запись."
  overload: System.Diagnostics.EventLogEntry.ReplacementStrings*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.Source
  id: Source
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя приложения, создавшего это событие."
  remarks: "Источник события указывает, что в журнал событие. Часто бывает имя приложения или имя подкомпонента приложения при большом приложения. Приложения и службы обычно записи (и следовательно, являются источниками) в журнале приложений или имя пользовательского журнала. Драйверы устройств обычно записи в системный журнал."
  example:
  - "The following code example demonstrates the use of the Source property. In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  If a match is found, the Source property information is displayed at the console.  \n  \n [!code-cpp[EventLogEntry_Source#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_27_1.cpp)]\n [!code-cs[EventLogEntry_Source#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_27_1.cs)]\n [!code-vb[EventLogEntry_Source#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_27_1.vb)]"
  syntax:
    content: public string Source { get; }
    return:
      type: System.String
      description: "Имя, регистрируются в журнале событий как источника этого события."
  overload: System.Diagnostics.EventLogEntry.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Заполняет <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> с данными, необходимыми для сериализации целевого объекта."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Требуется заполнить данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Назначение (см. <xref:System.Runtime.Serialization.StreamingContext>) для этой сериализации.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  id: TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает местное время создания события."
  remarks: "Этот член содержит время создания события. Это не может быть таким же, как время, когда записи сведения о событии в журнал событий. Для последнего чтения <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>свойство.</xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>       Обычно является промежуток между время возникновения события и временем его записи в журнал. Более важно знать, когда было создано событие, если не требуется увидеть, существует ли значительные задержки при ведении журнала. Что может произойти, если файлы журнала находятся на разных серверах, и вы испытываете узким местом."
  syntax:
    content: public DateTime TimeGenerated { get; }
    return:
      type: System.DateTime
      description: "Местное время создания события."
  overload: System.Diagnostics.EventLogEntry.TimeGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  id: TimeWritten
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает местное время записи события журнала."
  remarks: "Этот член содержит время, данные о событии записываются в журнал событий. Это может оказаться в то же время создания события. Для последнего чтения <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>свойство.</xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>"
  syntax:
    content: public DateTime TimeWritten { get; }
    return:
      type: System.DateTime
      description: "Местное время записи события журнала."
  overload: System.Diagnostics.EventLogEntry.TimeWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogEntry.UserName
  id: UserName
  parent: System.Diagnostics.EventLogEntry
  langs:
  - csharp
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя пользователя, который является инициатором этого события."
  remarks: "Это свойство является пустым для событий в журналах, отличный от журнала безопасности."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "Идентификатор безопасности (SID), однозначно определяющий пользователя или группу."
  overload: System.Diagnostics.EventLogEntry.UserName*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Не удалось получить сведения об учетной записи для идентификатора безопасности пользователя."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Diagnostics.EventLogEntry.Category
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
  fullName: System.Diagnostics.EventLogEntry.Category
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogEntry.CategoryNumber
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
  fullName: System.Diagnostics.EventLogEntry.CategoryNumber
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Diagnostics.EventLogEntry.Data
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
  fullName: System.Diagnostics.EventLogEntry.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.EntryType
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
  fullName: System.Diagnostics.EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals(EventLogEntry)
  nameWithType: EventLogEntry.Equals(EventLogEntry)
  fullName: System.Diagnostics.EventLogEntry.Equals(EventLogEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogEntry
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntry
  nameWithType: EventLogEntry
  fullName: System.Diagnostics.EventLogEntry
- uid: System.Diagnostics.EventLogEntry.EventID
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
  fullName: System.Diagnostics.EventLogEntry.EventID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogEntry.Index
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
  fullName: System.Diagnostics.EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
  fullName: System.Diagnostics.EventLogEntry.InstanceId
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.EventLogEntry.MachineName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
  fullName: System.Diagnostics.EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
  fullName: System.Diagnostics.EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
  fullName: System.Diagnostics.EventLogEntry.ReplacementStrings
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogEntry.Source
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
  fullName: System.Diagnostics.EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Diagnostics.EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Diagnostics.EventLogEntry.TimeGenerated
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
  fullName: System.Diagnostics.EventLogEntry.TimeGenerated
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.EventLogEntry.TimeWritten
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
  fullName: System.Diagnostics.EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
  fullName: System.Diagnostics.EventLogEntry.UserName
- uid: System.Diagnostics.EventLogEntry.Category*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Category
  nameWithType: EventLogEntry.Category
- uid: System.Diagnostics.EventLogEntry.CategoryNumber*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: CategoryNumber
  nameWithType: EventLogEntry.CategoryNumber
- uid: System.Diagnostics.EventLogEntry.Data*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Data
  nameWithType: EventLogEntry.Data
- uid: System.Diagnostics.EventLogEntry.EntryType*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EntryType
  nameWithType: EventLogEntry.EntryType
- uid: System.Diagnostics.EventLogEntry.Equals*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Equals
  nameWithType: EventLogEntry.Equals
- uid: System.Diagnostics.EventLogEntry.EventID*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: EventID
  nameWithType: EventLogEntry.EventID
- uid: System.Diagnostics.EventLogEntry.Index*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Index
  nameWithType: EventLogEntry.Index
- uid: System.Diagnostics.EventLogEntry.InstanceId*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: InstanceId
  nameWithType: EventLogEntry.InstanceId
- uid: System.Diagnostics.EventLogEntry.MachineName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: MachineName
  nameWithType: EventLogEntry.MachineName
- uid: System.Diagnostics.EventLogEntry.Message*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Message
  nameWithType: EventLogEntry.Message
- uid: System.Diagnostics.EventLogEntry.ReplacementStrings*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: ReplacementStrings
  nameWithType: EventLogEntry.ReplacementStrings
- uid: System.Diagnostics.EventLogEntry.Source*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: Source
  nameWithType: EventLogEntry.Source
- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Diagnostics.EventLogEntry.TimeGenerated*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeGenerated
  nameWithType: EventLogEntry.TimeGenerated
- uid: System.Diagnostics.EventLogEntry.TimeWritten*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: TimeWritten
  nameWithType: EventLogEntry.TimeWritten
- uid: System.Diagnostics.EventLogEntry.UserName*
  parent: System.Diagnostics.EventLogEntry
  isExternal: false
  name: UserName
  nameWithType: EventLogEntry.UserName
