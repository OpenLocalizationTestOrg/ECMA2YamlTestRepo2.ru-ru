### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ControlTemplate
  id: ControlTemplate
  children:
  - System.Windows.Controls.ControlTemplate.#ctor
  - System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  - System.Windows.Controls.ControlTemplate.TargetType
  - System.Windows.Controls.ControlTemplate.Triggers
  - System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: ControlTemplate
  nameWithType: ControlTemplate
  fullName: System.Windows.Controls.ControlTemplate
  type: Class
  summary: "Указывает визуальную структуру и аспекты поведения <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> , могут совместно использоваться несколько экземпляров элемента управления."
  remarks: "Элемент ControlTemplate позволяет указать визуальная структура элемента управления. Автор элемента управления может определить значение по умолчанию шаблона элемента управления и разработчик приложения может переопределить ControlTemplate для воссоздания визуальная структура элемента управления.       Создание шаблонов элементов управления является одним из многих функций, предоставляемых [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] модель стилей и шаблонов. Модель стилей и шаблонов обеспечивает такую гибкость, что во многих случаях вам не обязательно должны написать собственные элементы управления. Если вы являетесь автора приложения, в которой необходимо изменить визуализацию элемента управления или замените ControlTemplate существующего элемента управления, см. [Стилизация и использование шаблонов](~/add/includes/ajax-current-ext-md.md) статьи, примеры и подробное рассмотрение.       При создании собственного элемента управления в разделе «Создание пользовательского элемента управления» в [элементах](~/add/includes/ajax-current-ext-md.md).       ControlTemplate предполагается использовать это автономная единица информации о реализации, невидимой внешним пользователям и объектам, включая стили. Единственный способ обработки содержимого шаблона элемента управления — тот же шаблон элемента управления.      <a name=&quot;xamlObjectElementUsage_VisualTree&quot;></a>## Использование элемента свойства XAML ```   <ControlTemplate>     <VisualTreeRootNode > VisualTreeNodeContents     </VisualTreeRootNode >   </ControlTemplate>   ``` <a name=&quot;xamlValues_VisualTree&quot;> </a> ## значений XAML *ControlTemplate* объектный элемент для шаблона элемента управления или производного класса.             *VisualTreeRootNode* один [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] элемента в качестве непосредственного дочернего объекта ControlTemplate (или в производном классе). Шаблоны должны иметь один корневой узел. Для создания полезного шаблона элемента, выбранного как *VisualTreeRootNode* ожидается поддержка собственной, содержимого модели часто модель, которая поддерживает несколько дочерних элементов.       *VisualTreeNodeContents* один или несколько элементов, составляющие целевой шаблон. Если элемент выбран в качестве *VisualTreeRootNode* поддерживает только один из дочерних элементов, затем можно только один элемент объявляться как *VisualTreeNodeContents*. Это возможно (хотя редко) также для предоставления текстового содержимого, если выбранный *VisualTreeRootNode* поддерживает свойство текстового содержимого."
  example:
  - "The following shows a <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> that sets the ControlTemplate of a <xref:System.Windows.Controls.Button>:  \n  \n [!code-xml[StylingIntroSample_snip#ButtonCT](~/add/codesnippet/xaml/t-system.windows.control_3_1.xaml)]  \n  \n When this gets applied, the <xref:System.Windows.Controls.Button> appears as an <xref:System.Windows.Shapes.Ellipse>:  \n  \n ![Button ControlTemplate sample](~/add/media/stylingintro-buttoncontroltemplate.png \"Button ControlTemplate sample\")  \n  \n When you set the <xref:System.Windows.Controls.Control.Template%2A> property of a <xref:System.Windows.Controls.Control> to a new ControlTemplate as in the above example, you are replacing the entire template. What the <xref:System.Windows.Controls.Button> looks like when it is in focus or pressed is all part of the default appearance of the button that you are replacing. Therefore, depending on your needs, you may want to put in your definition what your button should look like when it is pressed, and so on, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#1](~/add/codesnippet/xaml/controltemplateexamples/resources/button.xaml#1)]  \n  \n Note that this example references resources that are not shown here. For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041). That sample provides examples of control templates for many controls and is the best way for you to get started with creating control templates."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.DictionaryKeyProperty("TargetType")]

      public class ControlTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> класса."
  syntax:
    content: public ControlTemplate ();
    parameters: []
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> класса с указанным целевым типом."
  syntax:
    content: public ControlTemplate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Тип, для которого предназначен этот шаблон."
  overload: System.Windows.Controls.ControlTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.TargetType
  id: TargetType
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Возвращает или задает тип, для которого данный <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> предназначен."
  remarks: "Если у вас есть автономный <xref:System.Windows.Controls.ControlTemplate>в раздел ресурсов свойство TargetType значение к типу, <xref:System.Windows.Controls.ControlTemplate>не применяется к этому типу автоматически.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.ControlTemplate> Вместо этого необходимо указать `x:Key` и применить шаблон явно.       Также Обратите внимание, что свойства TargetType требуется на <xref:System.Windows.Controls.ControlTemplate>наличие <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> определение шаблона</xref:System.Windows.Controls.ControlTemplate>      <a name=&quot;xamlAttributeUsage_TargetType&quot;></a>## Использование атрибута XAML ```   <object  TargetType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_TargetType&quot;> </a> ## значений XAML *typeName* имя типа класса.       Для ссылки на <xref:System.Type>имя класса, используйте [расширения разметки и WPF XAML](~/add/includes/ajax-current-ext-md.md).</xref:System.Type>"
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#Label](~/add/codesnippet/xaml/controltemplateexamples/resources/label.xaml#label)]  \n  \n The above example uses the following resource:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.TargetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Свойство TargetType не должно быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при определении шаблона имеет <xref href=&quot;System.Windows.Controls.ContentPresenter&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Указанные типы являются недопустимыми. TargetType для <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> должен иметь или наследоваться от <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>, <xref href=&quot;System.Windows.Controls.Page&quot;> </xref>, или <xref href=&quot;System.Windows.Navigation.PageFunctionBase&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.Triggers
  id: Triggers
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Возвращает коллекцию <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> объекты, применить изменения свойств или выполнения действий на основе указанных условий."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## Использование элемента свойства XAML ```   <object>     <object.Triggers>       oneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## значений XAML *oneOrMoreTriggers* один или несколько <xref:System.Windows.TriggerBase>объекты (обычно это <xref:System.Windows.Trigger>).</xref:System.Windows.Trigger> </xref:System.Windows.TriggerBase>      "
  example:
  - "The following example demonstrates the use of this property:  \n  \n [!code-xml[ControlTemplateExamples#ToolTip](~/add/codesnippet/xaml/controltemplateexamples/resources/tooltip.xaml#tooltip)]  \n  \n The above example uses the following resources:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Коллекция <xref href=&quot;System.Windows.TriggerBase&quot;> </xref> объектов. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ControlTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Проверяет шаблонного родителя на соответствие набору правил."
  remarks: "Метод использует следующие правила: 1. `templatedParent` Не может иметь тип <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement>       2. `templatedParent` Не может иметь тип, <xref:System.Windows.FrameworkElement>то есть не <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.FrameworkElement>       3. `templatedParent` Не может быть, <xref:System.Windows.Controls.Control>который не связан с <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.Controls.Control>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Элемент, с которым применяется этот шаблон."
  overload: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>templatedParent</code> must not be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Необходимо связать <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> с <xref href=&quot;System.Windows.Controls.Control&quot;> </xref> , установив &lt;xref:System.Windows.Controls.Control.Template%2A?displayProperty=fullName&gt; свойство перед использованием <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref> на <xref href=&quot;System.Windows.Controls.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.ControlTemplate.#ctor
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate()
  nameWithType: ControlTemplate.ControlTemplate()
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate()
- uid: System.Windows.Controls.ControlTemplate.#ctor(System.Type)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate(Type)
  nameWithType: ControlTemplate.ControlTemplate(Type)
  fullName: System.Windows.Controls.ControlTemplate.ControlTemplate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Controls.ControlTemplate.TargetType
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
  fullName: System.Windows.Controls.ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
  fullName: System.Windows.Controls.ControlTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: ControlTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.ControlTemplate.#ctor*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ControlTemplate
  nameWithType: ControlTemplate.ControlTemplate
- uid: System.Windows.Controls.ControlTemplate.TargetType*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: TargetType
  nameWithType: ControlTemplate.TargetType
- uid: System.Windows.Controls.ControlTemplate.Triggers*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: Triggers
  nameWithType: ControlTemplate.Triggers
- uid: System.Windows.Controls.ControlTemplate.ValidateTemplatedParent*
  parent: System.Windows.Controls.ControlTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: ControlTemplate.ValidateTemplatedParent
