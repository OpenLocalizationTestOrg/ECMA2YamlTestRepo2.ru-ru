### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermission
  id: RegistryPermission
  children:
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.Copy
  - System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  - System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsUnrestricted
  - System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.ToXml
  - System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: RegistryPermission
  nameWithType: RegistryPermission
  fullName: System.Security.Permissions.RegistryPermission
  type: Class
  summary: "Управляет возможностью доступа к переменным реестра. Этот класс не наследуется."
  remarks: "RegistryPermission описывает защищенные действия над переменным реестра. Переменных реестра не должны храниться в памяти местах, где они доступны без RegistryPermission кода. Если объект реестра передается в вызывающий объект ненадежных его неправильного использования.       Типы доступа разрешенных реестра определяются <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> Если требуется более чем один тип доступа, они могут объединяться с помощью битовой операции или, как показано в следующем образце кода.       Разрешения для реестра определены в терминах канонических абсолютных путей; проверки должны быть выполнены с использованием канонических путей. Доступ к ключу подразумевает доступ ко всем значениям, содержащимся в ней и все переменные в нем.      Настроек [!NOTE] настроек в версиях .NET Framework перед [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], можно использовать <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName>метод, чтобы предотвратить случайный доступ к системным ресурсам в доверенном коде.</xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> <xref:System.Security.CodeAccessPermission.Deny%2A>Теперь является устаревшим, и доступ к ресурсам теперь определяется только предоставленный набор разрешений для сборки.</xref:System.Security.CodeAccessPermission.Deny%2A> Чтобы ограничить доступ к файлам, необходимо запустить частично доверенный код в изолированной среде и назначить разрешения только к которым код может получить доступ к ресурсам. Сведения о выполнении приложения в песочнице см. в разделе [как: выполнение частично доверенного кода в изолированной среде](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> класса с указанным состоянием разрешения: полностью ограниченное или неограниченное."
  remarks: "Создает либо полностью ограниченный (`None`) или `Unrestricted` доступ к переменным реестра."
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/visualbasic/85dea953-f2a8-49bc-b863-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/csharp/85dea953-f2a8-49bc-b863-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> класса с заданным доступом к указанным переменным реестра."
  remarks: "Этот конструктор позволяет только один из <xref:System.Security.Permissions.RegistryPermissionAccess>указывать значения.</xref:System.Security.Permissions.RegistryPermissionAccess> Этот доступ применяется ко всем переменным реестра перечисленных. Используйте <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>для определения более сложных разрешений.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>"
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/visualbasic/a1e0cfb2-93bc-4e55-9235-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/csharp/a1e0cfb2-93bc-4e55-9235-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения."
    - id: pathList
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой) предоставил доступ."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code> pathList </code> параметр не является допустимой строкой."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> класс с указанным доступом к указанным переменным реестра и указанными правами доступа к сведениям об управлении реестра."
  remarks: "Этот конструктор позволяет только один из <xref:System.Security.Permissions.RegistryPermissionAccess>указывать значения.</xref:System.Security.Permissions.RegistryPermissionAccess> Этот доступ применяется ко всем переменным реестра перечисленных. Используйте <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>для определения более сложных разрешений.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>       `control` Указывает ли управления списка управления Доступом для разделов реестра, определяемое `pathList` можно изменять, просматривать, или недоступен.      Настроек [!IMPORTANT] настроек управления доступом (ACL) описываются отдельные пользователи или группы, имеющие или не имеющие права на выполнение определенных действий на указанных разделов реестра.  Возможность изменять или просматривать ACL — это важное разрешение и должен быть предоставлен с осторожностью."
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Побитовое сочетание <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> значения."
    - id: pathList
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой) предоставил доступ."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code> pathList </code> параметр не является допустимой строкой."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Добавляет доступ для указанных переменных реестра к существующему состоянию разрешения."
  remarks: "Используйте этот метод для изменения доступа к переменным реестра путем добавления к состоянию текущего объекта разрешения."
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/4576855b-6757-4ec9-971b-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/4576855b-6757-4ec9-971b-_1.cs)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения."
    - id: pathList
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code> pathList </code> параметр не является допустимой строкой."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Добавляет доступ для указанных переменных реестра к существующему состоянию разрешения, задавая уровень доступа разрешения реестра и действия по управлению доступом."
  remarks: "Используйте этот метод для изменения доступа к переменным реестра путем добавления набора их путей к состоянию текущего объекта разрешения. Эта перегрузка позволяет указать действие по управлению доступом будет как уровень доступа разрешения реестра.       `control` Указывает ли управления списка управления Доступом для разделов реестра, определяемое `pathList` можно изменять, просматривать, или недоступен.      Настроек [!IMPORTANT] настроек управления доступом (ACL) описываются отдельные пользователи или группы, имеющие или не имеющие права на выполнение определенных действий на указанных разделов реестра.  Возможность изменять или просматривать ACL — это важное разрешение и должен быть предоставлен с осторожностью."
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Один из <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> значения."
    - id: pathList
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code> pathList </code> параметр не является допустимой строкой."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Copy
  id: Copy
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает идентичную копию текущего разрешения."
  remarks: "Копия разрешения предоставляет такой же доступ к ресурсам, что само разрешение."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего разрешения."
  overload: System.Security.Permissions.RegistryPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Восстанавливает разрешение с указанным состоянием из кодировки XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления разрешения."
  overload: System.Security.Permissions.RegistryPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code> Параметр не является допустимым элементом разрешения.       - или - <code> esd </code> номер версии параметра не является допустимым."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  id: GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Получает пути для всех переменных реестра с заданным <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  remarks: "Используйте этот метод для получения состояния текущего разрешения. Этот метод необходимо вызвать отдельно для каждого типа доступа.      Настроек [!NOTE] настроек `access` ограничен значения <xref:System.Security.Permissions.RegistryPermissionAccess>, которые представляют отдельные типы доступа к переменным реестра.</xref:System.Security.Permissions.RegistryPermissionAccess> Эти значения являются <xref:System.Security.Permissions.RegistryPermissionAccess>, <xref:System.Security.Permissions.RegistryPermissionAccess>и <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> Применимые значения `access` не включают <xref:System.Security.Permissions.RegistryPermissionAccess>и <xref:System.Security.Permissions.RegistryPermissionAccess>, которые не представляют отдельные типы доступа к переменным реестра.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess>"
  example:
  - "The following code example shows the use of the GetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/2854e98a-b1b4-43c0-ac49-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/2854e98a-b1b4-43c0-ac49-_1.cs)]"
  syntax:
    content: public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения, которые представляет один тип доступа к переменным реестра."
    return:
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой) с указанным <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code>access</code> — <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, который представляет более чем один тип доступа к переменным реестра, или <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, которое не представляет любой тип доступа к переменным реестра."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений."
  remarks: "Пересечение двух разрешений является разрешением, которое описывает набор операций, в обоих разрешениях. Только запрос, передающий оба исходных разрешения, передает их пересечение."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, пересекающееся с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой пересечение текущего и указанного разрешений. Это новое разрешение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пересечение является пустым."
  overload: System.Security.Permissions.RegistryPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Определяет, является ли текущее разрешение подмножеством указанного разрешения."
  remarks: "Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении. Например, разрешение, которое предоставляет доступ к C:\\example.txt является подмножеством разрешения, предоставляющего доступ к C:\\\\. Если этот метод возвращает `true`, текущее разрешение не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, для которого требуется проверить отношение подмножества. Это разрешение должно быть того же типа, что и текущее разрешение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является подмножеством указанного разрешения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает значение, указывающее, является ли текущее разрешение является неограниченным."
  remarks: "Неограниченное разрешение представляет доступ ко всем ресурсам, защищенным с помощью разрешений."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является неограниченным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Задает новый доступ для указанного раздела имена переменных в существующее состояние разрешения."
  remarks: "Предыдущее состояние текущего разрешения будет перезаписан."
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/8dc9769e-4e08-4ebe-9109-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/8dc9769e-4e08-4ebe-9109-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Один из <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> значения."
    - id: pathList
      type: System.String
      description: "Список переменных реестра (разделенных точкой с запятой)."
  overload: System.Security.Permissions.RegistryPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> access </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - или - <code> pathList </code> параметр не является допустимой строкой."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает кодировку XML для разрешения и его текущего состояния."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Кодировка XML разрешения, включающая сведения о состоянии."
  overload: System.Security.Permissions.RegistryPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает разрешение, представляющее собой объединение текущего и указанного разрешений."
  remarks: "Результатом вызова на объединение является разрешение, представляющее все действия, представленные текущего разрешения и указанного разрешений. Любой запрос, передающий любое разрешение, передает их объединение."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "Разрешение для объединения с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой объединение текущего и указанного разрешений."
  overload: System.Security.Permissions.RegistryPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> other </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: RegistryPermissionAccess
  nameWithType: RegistryPermissionAccess
  fullName: System.Security.Permissions.RegistryPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.Permissions.RegistryPermission.Copy
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.ToXml
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
- uid: System.Security.Permissions.RegistryPermission.#ctor*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission
  nameWithType: RegistryPermission.RegistryPermission
- uid: System.Security.Permissions.RegistryPermission.AddPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList
  nameWithType: RegistryPermission.AddPathList
- uid: System.Security.Permissions.RegistryPermission.Copy*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy
  nameWithType: RegistryPermission.Copy
- uid: System.Security.Permissions.RegistryPermission.FromXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml
  nameWithType: RegistryPermission.FromXml
- uid: System.Security.Permissions.RegistryPermission.GetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList
  nameWithType: RegistryPermission.GetPathList
- uid: System.Security.Permissions.RegistryPermission.Intersect*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect
  nameWithType: RegistryPermission.Intersect
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: RegistryPermission.IsSubsetOf
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: RegistryPermission.IsUnrestricted
- uid: System.Security.Permissions.RegistryPermission.SetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList
  nameWithType: RegistryPermission.SetPathList
- uid: System.Security.Permissions.RegistryPermission.ToXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml
  nameWithType: RegistryPermission.ToXml
- uid: System.Security.Permissions.RegistryPermission.Union*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union
  nameWithType: RegistryPermission.Union
