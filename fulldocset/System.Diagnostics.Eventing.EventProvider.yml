### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProvider
  id: EventProvider
  children:
  - System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  - System.Diagnostics.Eventing.EventProvider.Close
  - System.Diagnostics.Eventing.EventProvider.CreateActivityId
  - System.Diagnostics.Eventing.EventProvider.Dispose
  - System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.EventProvider.Finalize
  - System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  - System.Diagnostics.Eventing.EventProvider.IsEnabled
  - System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  langs:
  - csharp
  name: EventProvider
  nameWithType: EventProvider
  fullName: System.Diagnostics.Eventing.EventProvider
  type: Class
  summary: "Этот класс используется для записи событий."
  remarks: "Использование событий, написанные с использованием <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>и <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>методы, события должны быть определены в манифесте; события, записанные с помощью <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>метод не требуется манифест.</xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       События могут содержать следующие управляемые типы данных: - bool - логического - байтовый - символ — десятичное - дважды - float - строка Guid - int - IntPtr - long - sbyte - короткое - - uint - UInt64 Если событие в манифесте использует `Boolean` в тип нельзя писать элемента данных с помощью `Boolean` тип данных в управляемом коде. `Boolean` В тип в манифесте ожидается 4-байтовое значение и `Boolean` тип данных в управляемом коде — 1 байт. Вместо этого необходимо использовать `int` тип данных для записи значения. Если вы хотите войти `Boolean` , используйте UInt8 в тип в манифесте."
  syntax:
    content: 'public class EventProvider : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;></xref> class."
  remarks: "Регистрирует поставщика. Чтобы удалить регистрацию после завершения, вызовите <xref:System.Diagnostics.Eventing.EventProvider.Close%2A>метод.</xref:System.Diagnostics.Eventing.EventProvider.Close%2A>"
  syntax:
    content: public EventProvider (Guid providerGuid);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "Идентификатор GUID, однозначно определяющий поставщика."
  overload: System.Diagnostics.Eventing.EventProvider.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Не хватает памяти для завершения операции."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Классы в <xref href=&quot;System.Diagnostics.Eventing&quot;> </xref> рабочего пространства имен только в Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> providerGuid </code> Параметр не может иметь значение null."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ошибки, возвращенной в подсистему ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Удаляет регистрацию поставщика из подсистемы ETW и освобождает все неуправляемые ресурсы."
  remarks: "Следует вызывать этот метод при завершении вместо ожидания удаления ресурсов системы."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Close*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ошибки, возвращенной в подсистему ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  id: CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Создает уникальный идентификатор действия для поставщика."
  remarks: "Это статический метод."
  syntax:
    content: public static Guid CreateActivityId ();
    parameters: []
    return:
      type: System.Guid
      description: "Уникальный идентификатор Guid, который используется при вызове <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>метод, чтобы задать идентификатор действия для поставщика.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Освобождает ресурсы, используемые <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> объекта."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Освобождает ресурсы, используемые <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> объекта."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Этот параметр учитывается этим методом, поскольку нет неуправляемых ресурсов."
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  id: Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Освобождает ресурсы и выполняет внутреннюю очистку, экземпляр будет удален при сборке мусора."
  syntax:
    content: ~EventProvider ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  id: GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Возвращает код последней ошибки, связанные со сбоем записи события."
  remarks: "<xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>, <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>, И <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>методы задать это значение, если они не удалось записать событие.</xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Это статический метод."
  syntax:
    content: public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
      description: "Используйте значение, чтобы определить причину сбоя записи события."
  overload: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  id: IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Определяет, включены ли любого сеанса поставщика, независимо от уровня и ключевого слова значения, используемые для включения поставщика."
  remarks: "Как правило поставщик вызывает этот метод, чтобы определить, включена ли поставщик сеансом; Поставщик просто записывает события и трассировки событий Windows определяет, является ли данное событие регистрируется в сеанс. Поставщик может потребоваться вызывайте эту функцию, если ему необходимо выполнить дополнительные действия для создания события. В этом случае при вызове этой функции сначала может сэкономить ресурсы и время."
  syntax:
    content: public bool IsEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если поставщик включен для любого сеанса; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  id: IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Определяет, запрашивающего указанное событие из поставщика любого другого сеанса."
  remarks: "Как правило поставщик вызывает этот метод, чтобы определить, является ли сеанс запрос указанного события; Поставщик просто записывает события и трассировки событий Windows определяет, является ли данное событие регистрируется в сеанс. Поставщик может потребоваться вызывайте эту функцию, если ему необходимо выполнить дополнительные действия для создания события. В этом случае вызов этой функции, чтобы определить, если сеанс запрошено событие или нет, может сэкономить ресурсы и время."
  syntax:
    content: public bool IsEnabled (byte level, long keywords);
    parameters:
    - id: level
      type: System.Byte
      description: "Уровень детализации сведений, включаемых в событие."
    - id: keywords
      type: System.Int64
      description: "Битовая маска, указывающая категории событий. Эта маска должна быть ту же маску ключевого слова, определенные в манифесте для события."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если любого сеанса запрашивает указанного события; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  id: SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Задает текущий идентификатор действия, используемые <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>методы.</xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>"
  remarks: "Идентификатор хранится в контексте потока.       Обратите внимание, что в версии 3.5 платформы .NET framework, требовалось установить `id` параметр этого метода и <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>значение свойства, то же значение идентификатора.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Тем не менее в версии 4.0 framework метод SetActivityId автоматически настраивает действия корреляции для вас.       Это статический метод."
  syntax:
    content: public static void SetActivityId (ref Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Уникальный идентификатор действия, <xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>метод возвращает.</xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает событие. Данные события указываются в виде массива объектов."
  remarks: "При вызове метода <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод, чтобы указать идентификатор действия для события, этот метод извлекает идентификатор из контекст потока и включает его с событием.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Если тип объекта не поддерживается, метод записывает значение объекта <xref:System.Object.ToString%2A?displayProperty=fullName>метод в полезных данных.</xref:System.Object.ToString%2A?displayProperty=fullName> Список поддерживаемых типов объектов см. в разделе примечаний для <xref:System.Diagnostics.Eventing.EventProvider>класса.</xref:System.Diagnostics.Eventing.EventProvider>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nenum Keyword  \n{  \n    Read = 0x1,  \n    Write = 0x2,  \n    Local = 0x4,  \n    Remote = 0x8  \n}  \n  \nenum Level  \n{  \n    Critical = 1,  \n    Error,  \n    Warning,  \n    Information,  \n    Verbose  \n}  \n  \n    EventProvider provider = new EventProvider(providerId);  \n    EventDescriptor readEvent;  \n    string path = @\"<PATHGOESHERE>\";  \n    UInt64 bytesRead = <ASSIGNVALUE>;  \n  \n    if (provider.IsEnabled(Level.Information, (long)Keyword.Read))  \n    {  \n        unchecked  \n        {  \n            readEvent = new EventDescriptor(0x1, 0x0, 0x10, 0x4, 0x0, 0x0, (long)0x8000000000000005);  \n        }  \n  \n        if (!provider.WriteEvent(ref readEvent, new object[] { path, bytesRead }))  \n            Console.WriteLine(EventProvider.GetLastWriteEventError());  \n    }  \n  \n    provider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , определяющий события для записи."
    - id: eventPayload
      type: System.Object[]
      description: "Массив объектов, содержащих данные событий для записи. Объект должен быть в порядке, указанном в манифесте. Массив ограничен 32 объектами, в которых только 8 могут быть строчными. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием.       Этот параметр может иметь значение null."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; метод, чтобы определить причину сбоя."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> eventPayload </code> Параметр содержит слишком много объектов или строк."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает событие. Данные события задается как строка."
  remarks: "При вызове метода <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод, чтобы указать идентификатор действия для события, этот метод извлекает идентификатор из контекст потока и включает его с событием.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Максимальная длина строки ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nEventProvider provider = new EventProvider(providerId);  \nEventDescriptor writeEvent;  \n  \nif (provider.IsEnabled())  \n{  \n     unchecked  \n     {  \n          writeEvent = new EventDescriptor(0x2, 0x0, 0x10, 0x3, 0x0, 0x0, (long)0x8000000000000006);  \n     }  \n  \n     if (!provider.WriteEvent(ref writeEvent, \"Write event.\"))  \n          Console.WriteLine(EventProvider.GetLastWriteEventError());  \n}  \n  \nprovider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , определяющий события для записи."
    - id: data
      type: System.String
      description: "Строка для записи в качестве данных события."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; метод, чтобы определить причину сбоя."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает событие. Данные события указываются в виде блока памяти."
  remarks: "При вызове метода <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод, чтобы указать идентификатор действия для события, этот метод извлекает идентификатор из контекст потока и включает его с событием.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , определяющий события для записи."
    - id: dataCount
      type: System.Int32
      description: "Размер данных событий, к которому `data` параметр точек. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
    - id: data
      type: System.IntPtr
      description: "Указатель на данные события для записи."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; метод, чтобы определить причину сбоя."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  id: WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает событие, которое содержит строку в качестве данных."
  remarks: "Максимальная длина строки ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
  example:
  - "```  \nif (!provider.WriteMessageEvent(\"Event string.\"))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Строка для записи в качестве данных события."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; метод, чтобы определить причину сбоя."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  id: WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает событие, которое содержит строку в качестве данных, если уровень и ключевое слово соответствуют событиям, запрашиваемым сеансом."
  remarks: "Максимальная длина строки ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
  example:
  - "```  \n// Calling this method with level and keyword set to zero is the same  \n// as calling WriteMessageEvent(string); the event is always written.  \nif (!provider.WriteMessageEvent(\"Event string.\", 0, 0))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n  \n// Event is written if the level value of the session is less than or equal to 3, and bit 1 of the session  \n// keyword bit-mask is set.  \nif (!provider.WriteMessageEvent(\"Event string.\", 3, 2))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Строка для записи в качестве данных события."
    - id: eventLevel
      type: System.Byte
      description: "Уровень детализации сведений, включаемых в событие. Если поставщик использует манифест для определения события, это значение того же уровня, определенных в манифесте."
    - id: eventKeywords
      type: System.Int64
      description: "Битовая маска, указывающая категории событий. Если поставщик использует манифест для определения события, это значение равно же маску ключевое слово, определенных в манифесте."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; метод, чтобы определить причину сбоя."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Связывает события при трассировке события в сценарии начала до конца. Данные события указываются в виде массива объектов."
  remarks: "Метод использует идентификатор действия в контексте потока для идентификации этого компонента. Чтобы задать идентификатор действия, вызовите <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Если вы используете <xref:System.Diagnostics.Trace>класса, не следует использовать <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод, чтобы указать идентификатор действия</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> </xref:System.Diagnostics.Trace> Вместо этого используйте <xref:System.Diagnostics.Trace.CorrelationManager%2A>Свойства <xref:System.Diagnostics.CorrelationManager>объекта.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.Trace.CorrelationManager%2A> Затем установите <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>Свойства действия идентификатором.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Необходимо также задать `relatedActivityId` для <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>значение.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A>"
  syntax:
    content: public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , определяющий события для записи."
    - id: relatedActivityId
      type: System.Guid
      description: "Идентификатор действия от предыдущего компонента. Используйте этот параметр, чтобы связать события компонента предыдущего компонента."
    - id: eventPayload
      type: System.Object[]
      description: "Массив объектов, содержащих данные событий для записи. Данные должны быть в порядке, указанном в манифесте. Массив ограничен 32 объектами, в которых только 8 могут быть строчными. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>метод, чтобы определить причину сбоя.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если <code> eventPayload </code> содержит слишком много объектов или строк."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Связывает события при трассировке события в сценарии начала до конца. Данные события указываются в виде блока памяти."
  remarks: "Метод использует идентификатор действия в контексте потока для идентификации этого компонента. Чтобы задать идентификатор действия, вызовите <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>метод.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , определяющий события для записи."
    - id: relatedActivityId
      type: System.Guid
      description: "Идентификатор действия от предыдущего компонента. Используйте этот параметр, чтобы связать события компонента предыдущего компонента."
    - id: dataCount
      type: System.Int32
      description: "Размер данных событий, к которому `data` параметр точек. Максимальный размер данных события ограничен 64 КБ за вычетом размера заголовков события. Размер события меньше, если меньше размер буфера сеанса и сеанс включает расширенные элементы данных с событием."
    - id: data
      type: System.IntPtr
      description: "Указатель на данные события для записи."
    return:
      type: System.Boolean
      description: "— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если событие является запись, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если значение равно false, вызовите <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>метод, чтобы определить причину сбоя.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProvider.Close
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
- uid: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventProvider+WriteEventErrorCode
  nameWithType: EventProvider+WriteEventErrorCode
  fullName: System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
- uid: System.Diagnostics.Eventing.EventDescriptor
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.Diagnostics.Eventing.EventDescriptor
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
- uid: System.Diagnostics.Eventing.EventProvider.#ctor*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider
  nameWithType: EventProvider.EventProvider
- uid: System.Diagnostics.Eventing.EventProvider.Close*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close
  nameWithType: EventProvider.Close
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId
  nameWithType: EventProvider.CreateActivityId
- uid: System.Diagnostics.Eventing.EventProvider.Dispose*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose
  nameWithType: EventProvider.Dispose
- uid: System.Diagnostics.Eventing.EventProvider.Finalize*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize
  nameWithType: EventProvider.Finalize
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError
  nameWithType: EventProvider.GetLastWriteEventError
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled
  nameWithType: EventProvider.IsEnabled
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId
  nameWithType: EventProvider.SetActivityId
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent
  nameWithType: EventProvider.WriteEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent
  nameWithType: EventProvider.WriteMessageEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent
  nameWithType: EventProvider.WriteTransferEvent
