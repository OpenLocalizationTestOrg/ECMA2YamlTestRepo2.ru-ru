### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Component
  id: Component
  children:
  - System.ComponentModel.Component.#ctor
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.Finalize
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  langs:
  - csharp
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
  type: Class
  summary: "Предоставляет базовую реализацию для <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> интерфейс и позволяет совместное использование объекта между приложениями."
  remarks: "Компонент является базовым классом для всех компонентов в среде CLR, маршалинг по ссылке. Компонент, поддерживающий удаленное взаимодействие и является производным от <xref:System.MarshalByRefObject>класса.</xref:System.MarshalByRefObject> Компонент предоставляет реализацию <xref:System.ComponentModel.IComponent>интерфейса.</xref:System.ComponentModel.IComponent> <xref:System.ComponentModel.MarshalByValueComponent>Предоставляет реализацию <xref:System.ComponentModel.IComponent>, маршалирует по значению.</xref:System.ComponentModel.IComponent> </xref:System.ComponentModel.MarshalByValueComponent>       Можно размещать в любой объект, реализующий компонент <xref:System.ComponentModel.IContainer>интерфейс и можно запросить и получить службы из контейнера.</xref:System.ComponentModel.IContainer> Создает контейнер <xref:System.ComponentModel.ISite>для каждого компонента, он содержит.</xref:System.ComponentModel.ISite> Контейнер использует сайт для управления компонентом и используется компонентом для связи с его контейнером.       Компонент должен явным образом освобождать ресурсы путем вызова его <xref:System.ComponentModel.Component.Dispose%2A>метод, не дожидаясь автоматическое управление памятью через неявный вызов <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> Когда <xref:System.ComponentModel.Container>удаления всех компонентов <xref:System.ComponentModel.Container>, также удаляются.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container>"
  syntax:
    content: >-
      [System.ComponentModel.DesignerCategory("Component")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Component : MarshalByRefObject, IDisposable, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Component.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Component&quot;> </xref> класса."
  syntax:
    content: public Component ();
    parameters: []
  overload: System.ComponentModel.Component.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли компонент может вызвать событие."
  remarks: "Реализация по умолчанию это свойство всегда возвращает `true`. Классы, наследующие от <xref:System.ComponentModel.Component>класс должен переопределять это свойство, чтобы предоставить возможность отключить возникновение события.</xref:System.ComponentModel.Component> Например, в <xref:System.Windows.Forms.Control>класса, если элемент управления размещен как управляющий элемент ActiveX, <xref:System.Windows.Forms.Control.CanRaiseEvents%2A>возвращает `false` Если для элемента управления ActiveX его события заморожен.</xref:System.Windows.Forms.Control.CanRaiseEvents%2A> </xref:System.Windows.Forms.Control>"
  syntax:
    content: protected virtual bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если компонент может вызывать события; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Container
  id: Container
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> , содержащий <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "Компоненты в контейнере отслеживаются в первым поступил — первым обслужен список, который также определяет порядок компонентов в контейнере. Последний добавленный компонент — это последний компонент в списке."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> , Содержащий <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, если таковое имеется, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.ComponentModel.Component&quot;> </xref> не инкапсулирован в <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.DesignMode
  id: DesignMode
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.ComponentModel.Component&quot;> </xref> в настоящее время находится в режиме конструктора."
  remarks: "Индикатор режима разработки хранится в <xref:System.ComponentModel.ISite>; таким образом, если <xref:System.ComponentModel.Component>имеет <xref:System.ComponentModel.ISite>связанные с ним значение этого свойства — `false`.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.ComponentModel.Component&quot;> </xref> находится в режиме конструктора; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Component.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose
  id: Dispose
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "После использования <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.ComponentModel.Component>окажется в неработоспособном состоянии.</xref:System.ComponentModel.Component> После вызова Dispose, необходимо освободить все ссылки на <xref:System.ComponentModel.Component>, сборщик мусора мог освободить память, <xref:System.ComponentModel.Component>занимаемую.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.ComponentModel.Component>объекта `Finalize` метод.</xref:System.ComponentModel.Component>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.ComponentModel.Component&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые <xref:System.ComponentModel.Component.Dispose%2A>метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`.</xref:System.Object.Finalize%2A>       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.ComponentModel.Component>ссылки.</xref:System.ComponentModel.Component> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.ComponentModel.Component.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Disposed
  id: Disposed
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Происходит при удалении компонента путем вызова <xref:System.ComponentModel.Component.Dispose*>метод.</xref:System.ComponentModel.Component.Dispose*>"
  remarks: 'При создании делегата удален, необходимо указать метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, добавьте в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален делегат. Дополнительные сведения о делегатах обработчиков событий см. в разделе [NIB: события и делегаты](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Events
  id: Events
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает список обработчиков событий, которые прикреплены к этому <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "<xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> , Предоставляющий делегатов для этого компонента."
  overload: System.ComponentModel.Component.Events*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Finalize
  id: Finalize
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Освобождает неуправляемые ресурсы и выполняет другие операции очистки, перед <xref href=&quot;System.ComponentModel.Component&quot;> </xref> сборщиком мусора."
  remarks: "Этот метод переопределяет <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A>метод.</xref:System.GC.SuppressFinalize%2A>       Дополнительные сведения см. в разделе [методы Finalize и деструкторы](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md), и [переопределение метода Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~Component ();
    parameters: []
  overload: System.ComponentModel.Component.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает объект, представляющий службу, предоставляемую классом <xref href=&quot;System.ComponentModel.Component&quot;> </xref> или его <xref href=&quot;System.ComponentModel.Container&quot;> </xref>."
  remarks: "Этот метод может быть переопределен в производном классе."
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Служба, предоставляемая <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий службу, предоставляемую классом <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.ComponentModel.Component&quot;> </xref> не предоставляет указанную службу.</xref:System.Object>"
  overload: System.ComponentModel.Component.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.Site
  id: Site
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> из <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
  remarks: "<xref:System.ComponentModel.Component>Будет, <xref:System.ComponentModel.ISite>Если он будет добавлен <xref:System.ComponentModel.IContainer>и <xref:System.ComponentModel.IContainer>назначает <xref:System.ComponentModel.ISite>ему.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.IContainer>Отвечает за назначение <xref:System.ComponentModel.ISite>на <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> Изменение значения компонента <xref:System.ComponentModel.ISite>не обязательно измените имя узла <xref:System.ComponentModel.Component>присваивается.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> Свойство Site должен задаваться только <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>       Значение свойства `null` Если <xref:System.ComponentModel.Component>удаляется из <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> Назначение `null` на это свойство не обязательно будет удален <xref:System.ComponentModel.Component>из <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component>       Объект <xref:System.ComponentModel.Component>может или не может иметь имя.</xref:System.ComponentModel.Component> Если <xref:System.ComponentModel.Component>будет присвоено имя, имя должно быть уникальным среди других <xref:System.ComponentModel.Component>объектов в пределах <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> <xref:System.ComponentModel.ISite>Хранит имя <xref:System.ComponentModel.Component>таким образом, можно только имя, <xref:System.ComponentModel.Component>Если он имеет <xref:System.ComponentModel.ISite>связанный с ним.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite>"
  syntax:
    content: public virtual System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "<xref href=&quot;System.ComponentModel.ISite&quot;> </xref> Связанных с <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.ComponentModel.Component&quot;> </xref> не инкапсулирован в <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>, <xref href=&quot;System.ComponentModel.Component&quot;> </xref> не имеет <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> связанные с ней, или <xref href=&quot;System.ComponentModel.Component&quot;> </xref> удаляется из его <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>."
  overload: System.ComponentModel.Component.Site*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Component.ToString
  id: ToString
  parent: System.ComponentModel.Component
  langs:
  - csharp
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает <xref:System.String>содержащее имя <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, если оно есть.</xref:System.String> Этот метод не должен быть переопределен."
  remarks: "Объект <xref:System.ComponentModel.Component>не может иметь имя.</xref:System.ComponentModel.Component> Если <xref:System.ComponentModel.Component>будет присвоено имя, имя является уникальным среди других <xref:System.ComponentModel.Component>объектов в пределах <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component>       <xref:System.ComponentModel.ISite>Хранит имя <xref:System.ComponentModel.Component>.</xref:System.ComponentModel.Component> </xref:System.ComponentModel.ISite> <xref:System.ComponentModel.Component>Может иметь только <xref:System.ComponentModel.ISite>Если он будет добавлен <xref:System.ComponentModel.IContainer>и <xref:System.ComponentModel.IContainer>назначает <xref:System.ComponentModel.ISite>ему.</xref:System.ComponentModel.ISite> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Объект <xref:System.String>содержащее имя <xref href=&quot;System.ComponentModel.Component&quot;> </xref>, если таковое имеется, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.ComponentModel.Component&quot;> </xref> не имеет имени.</xref:System.String>"
  overload: System.ComponentModel.Component.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ComponentModel.Component.#ctor
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component()
  nameWithType: Component.Component()
  fullName: System.ComponentModel.Component.Component()
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: System.ComponentModel.Component.CanRaiseEvents
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: System.ComponentModel.Component.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: System.ComponentModel.Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: System.ComponentModel.Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: System.ComponentModel.Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: System.ComponentModel.Component.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: System.ComponentModel.Component.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.Component.Finalize
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize()
  nameWithType: Component.Finalize()
  fullName: System.ComponentModel.Component.Finalize()
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: System.ComponentModel.Component.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: System.ComponentModel.Component.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: System.ComponentModel.Component.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Component.#ctor*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Component
  nameWithType: Component.Component
- uid: System.ComponentModel.Component.CanRaiseEvents*
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
- uid: System.ComponentModel.Component.DesignMode*
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose
  nameWithType: Component.Dispose
- uid: System.ComponentModel.Component.Events*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
- uid: System.ComponentModel.Component.Finalize*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Finalize
  nameWithType: Component.Finalize
- uid: System.ComponentModel.Component.GetService*
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService
  nameWithType: Component.GetService
- uid: System.ComponentModel.Component.Site*
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
- uid: System.ComponentModel.Component.ToString*
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString
  nameWithType: Component.ToString
