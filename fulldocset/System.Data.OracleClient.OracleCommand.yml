### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleCommand
  id: OracleCommand
  children:
  - System.Data.OracleClient.OracleCommand.#ctor
  - System.Data.OracleClient.OracleCommand.#ctor(System.String)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  - System.Data.OracleClient.OracleCommand.Cancel
  - System.Data.OracleClient.OracleCommand.Clone
  - System.Data.OracleClient.OracleCommand.CommandText
  - System.Data.OracleClient.OracleCommand.CommandTimeout
  - System.Data.OracleClient.OracleCommand.CommandType
  - System.Data.OracleClient.OracleCommand.Connection
  - System.Data.OracleClient.OracleCommand.CreateDbParameter
  - System.Data.OracleClient.OracleCommand.CreateParameter
  - System.Data.OracleClient.OracleCommand.DbConnection
  - System.Data.OracleClient.OracleCommand.DbParameterCollection
  - System.Data.OracleClient.OracleCommand.DbTransaction
  - System.Data.OracleClient.OracleCommand.DesignTimeVisible
  - System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  - System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  - System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  - System.Data.OracleClient.OracleCommand.ExecuteReader
  - System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteScalar
  - System.Data.OracleClient.OracleCommand.Parameters
  - System.Data.OracleClient.OracleCommand.Prepare
  - System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  - System.Data.OracleClient.OracleCommand.Transaction
  - System.Data.OracleClient.OracleCommand.UpdatedRowSource
  langs:
  - csharp
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
  type: Class
  summary: "Представляет инструкцию SQL или хранимую процедуру для выполнения в базе данных. Этот класс не наследуется."
  remarks: "Этот тип устарел и будет удален в будущей версии платформы .NET Framework. Дополнительные сведения см. в разделе [Oracle и ADO.NET](~/add/includes/ajax-current-ext-md.md).       Класс OracleCommand предоставляет следующие методы для выполнения команд в источнике данных: | Элемент | Описание |   |----------|-----------------|   | <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>| Выполняет команды, которые возвращают строки. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>| Выполняет инструкцию SQL для <xref:System.Data.OracleClient.OracleCommand.Connection%2A>и возвращает количество затронутых строк. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>| Выполняет команды, такие как инструкции SQL INSERT, DELETE, UPDATE и НАБОР. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>| Извлекает одно значение (например, статистическое значение) в базе данных, что тип данных .NET Framework. |   | <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>| Извлекает одно значение (например, статистическое значение) в базе данных, что тип данных Oracle. |       Вы можете сбросить <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>свойство и повторное использование объекта OracleCommand.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Если выполнение этой команды приводит к возникновению неустранимой ошибки <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection>может закрыться.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleException> Тем не менее пользователь может опять открыть подключение и продолжить работу.      Настроек [!NOTE] настроек в отличие от **команда** объекта в других поставщиков данных .NET (SQL Server, OLE DB и ODBC) OracleCommand, объект не поддерживает <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>свойство.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> Установка времени ожидания команды не имеет эффекта, и возвращаемое значение всегда равно нулю."
  example:
  - "The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of OracleCommand, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.  \n  \n [!code-cs[Classic WebData OracleCommand#1](~/add/codesnippet/csharp/t-system.data.oracleclie_7_1.cs)]\n [!code-vb[Classic WebData OracleCommand#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      [System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>."
  remarks: "Базовый конструктор инициализирует все поля значениями по умолчанию. В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>| пустая строка (»») |   | <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|</xref:System.Data.OracleClient.OracleCommand.Connection%2A></xref:System.Data.OracleClient.OracleCommand.CommandType%2A></xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/csharp/m-system.data.oracleclie_12_1.cs)]\n [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_12_1.vb)]"
  syntax:
    content: public OracleCommand ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> класса с текстом запроса."
  syntax:
    content: public OracleCommand (string commandText);
    parameters:
    - id: commandText
      type: System.String
      description: "Текст запроса."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> класса с текстом запроса и <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> объекта."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/visualbasic/24f167a1-f345-47a8-a620-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/csharp/24f167a1-f345-47a8-a620-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: commandText
      type: System.String
      description: "Текст запроса."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> , Представляющий подключение к базе данных."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> класса с текстом запроса, <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> объекта и <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref>."
  remarks: "В следующей таблице показаны исходные значения свойств для экземпляра этой реализации <xref:System.Data.OracleClient.OracleCommand>.</xref:System.Data.OracleClient.OracleCommand>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>| `Text`|   | <xref:System.Data.OracleClient.OracleCommand.Connection%2A>| Новый <xref:System.Data.OracleClient.OracleConnection>является значением для `connection` параметр. |       Значение для любого из этих параметров можно изменить, задав соответствующее свойство.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand.Connection%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> </xref:System.Data.OracleClient.OracleCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/visualbasic/c02f7271-efcb-41b3-bc5c-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/csharp/c02f7271-efcb-41b3-bc5c-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);
    parameters:
    - id: commandText
      type: System.String
      description: "Текст запроса."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> , Представляющий подключение к базе данных."
    - id: tx
      type: System.Data.OracleClient.OracleTransaction
      description: "<xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref> В котором <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> выполняет."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Cancel
  id: Cancel
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Пытается отменить выполнение <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>."
  remarks: "Если нужно отменить, ничего не происходит. Если команда выполняется, и попытка ее отмены неудачей, исключение не формируется."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.  \n  \n [!code-vb[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_6_1.vb)]\n [!code-cs[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.oracleclie_6_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Создает копию этого <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> объекта."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> объекта, в которой все свойства являются значения совпадает с исходным."
  overload: System.Data.OracleClient.OracleCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandText
  id: CommandText
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает инструкцию SQL или хранимую процедуру для выполнения в базе данных."
  remarks: "Когда <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>свойству `StoredProcedure`, свойство CommandText должно быть присвоено имя хранимой процедуры.</xref:System.Data.OracleClient.OracleCommand.CommandType%2A> Пользователь может потребоваться использовать синтаксис escape-символов, если имя хранимой процедуры содержит специальные символы. Команда выполняет эту хранимую процедуру при вызове одного из методов Execute.       Поставщик данных .NET Framework для Oracle не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкции SQL вызывается <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> В этом случае необходимо использовать именованные параметры. Например: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` при вызове с помощью именованных параметров в инструкции SQL <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`, должно предшествовать имя параметра в виде двоеточия (:).</xref:System.Data.OracleClient.OracleCommand> Однако в хранимой процедуре или при ссылке на именованный параметр в другом месте в коде (например, при добавлении <xref:System.Data.OracleClient.OracleParameter>объектов <xref:System.Data.OracleClient.OracleCommand.Parameters%2A>Свойства), не перед именем параметра двоеточие (:).</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> Поставщик данных .NET Framework для Oracle автоматически добавляет двоеточие."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/csharp/p-system.data.oracleclie_14_1.cs)]\n [!code-vb[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_14_1.vb)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "Инструкции SQL или хранимую процедуру для выполнения. Значение по умолчанию — пустая строка (»»)."
  overload: System.Data.OracleClient.OracleCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает время ожидания перед завершением попытки выполнить команду и созданием ошибки."
  remarks: "<xref:System.ArgumentException>Создается, если назначенный CommandTimeout значение свойства меньше 0.</xref:System.ArgumentException>"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Время (в секундах) ожидания выполнения команды. Значение по умолчанию — 30 секунд."
  overload: System.Data.OracleClient.OracleCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandType
  id: CommandType
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает значение, указывающее, как <xref:System.Data.OracleClient.OracleCommand.CommandText*>интерпретируется свойство.</xref:System.Data.OracleClient.OracleCommand.CommandText*>"
  remarks: "Если свойство CommandType имеет значение `StoredProcedure`, следует задать <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>Свойства полный синтаксис запроса Oracle.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> Затем команда выполняет эту хранимую процедуру при вызове одного из методов Execute (например, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>или <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, CommandType и <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>свойства нельзя задать, если текущее подключение выполняет операцию выполнения или fetch.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.Connection%2A>       Поставщик данных .NET Framework для Oracle не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкции SQL вызывается <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> В этом случае необходимо использовать именованные параметры. Например: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` при вызове с помощью именованных параметров в инструкции SQL <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`, должно предшествовать имя параметра в виде двоеточия (:).</xref:System.Data.OracleClient.OracleCommand> Однако в хранимой процедуре или при ссылке на именованный параметр в другом месте в коде (например, при добавлении <xref:System.Data.OracleClient.OracleParameter>объектов <xref:System.Data.OracleClient.OracleCommand.Parameters%2A>Свойства), не перед именем параметра двоеточие (:).</xref:System.Data.OracleClient.OracleCommand.Parameters%2A> </xref:System.Data.OracleClient.OracleParameter> Поставщик данных .NET Framework для Oracle автоматически добавляет двоеточие."
  example:
  - "The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_2_1.vb)]\n [!code-cs[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/csharp/p-system.data.oracleclie_2_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Один из <xref href=&quot;System.Data.CommandType&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение не является допустимым <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> используется этим экземпляром <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>."
  remarks: "Не удается установить соединение, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, и <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>Свойства, если текущее подключение выполняет операцию выполнения или fetch.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A>       Если устанавливается подключение к транзакции во время выполнения и <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>свойства не равно null, <xref:System.InvalidOperationException>генерируется.</xref:System.InvalidOperationException> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A> Если установить подключение после фиксации или отката транзакции и <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>свойства не равно null, <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>свойство устанавливается в значение null.</xref:System.Data.OracleClient.OracleCommand.Transaction%2A> </xref:System.Data.OracleClient.OracleCommand.Transaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/csharp/p-system.data.oracleclie_11_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_11_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; set; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "Соединение с источником данных. По умолчанию используется значение null."
  overload: System.Data.OracleClient.OracleCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Свойство соединения был изменен во время транзакции."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Создает новый экземпляр <xref href=&quot;System.Data.OracleClient.OracleParameter&quot;> </xref> объекта."
  remarks: "Метод CreateParameter является строго типизированной версией <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleParameter
      description: "<xref href=&quot;System.Data.OracleClient.OracleParameter&quot;> </xref> Объекта."
  overload: System.Data.OracleClient.OracleCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  id: DbConnection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает значение, указывающее, должен ли объект команды быть видимым в элементе управления настраиваемый интерфейс."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если объект команды должен быть видимым в элементе управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Для добавления."
    return:
      type: System.Data.Common.DbDataReader
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Выполняет инструкцию SQL для <xref:System.Data.OracleClient.OracleCommand.Connection*>и возвращает количество затронутых строк.</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "ExecuteNonQuery можно использовать для выполнения операций с каталогом (например, запрос структуры базы данных или создание объектов базы данных, таких как таблицы); или для изменения данных в базе данных без использования <xref:System.Data.DataSet>, путем выполнения UPDATE, INSERT или DELETE.</xref:System.Data.DataSet>       Несмотря на то, что ExecuteNonQuery не возвращает строк, любые выходные параметры или возвращаемые значения, которые сопоставлены с параметрами, заполняются данными.       Для инструкций UPDATE, INSERT и DELETE возвращаемое значение — количество строк, затронутых этой командой. Для инструкций CREATE TABLE и DROP TABLE возвращаемое значение — 0. Для всех других типов инструкций возвращаемое значение-1. В случае отката возвращаемое значение также равно -1."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using ExecuteNonQuery. The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.oracleclie_8_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_8_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Для инструкций UPDATE, INSERT и DELETE возвращаемое значение — количество строк, затронутых этой командой. Для инструкций CREATE TABLE и DROP TABLE возвращаемое значение — 0. Для всех других типов инструкций возвращаемое значение-1."
  overload: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Соединение не существует.       - или - соединение не открыто."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  id: ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Выполняет инструкцию SQL для <xref:System.Data.OracleClient.OracleCommand.Connection*>и возвращает количество затронутых строк.</xref:System.Data.OracleClient.OracleCommand.Connection*>"
  remarks: "ExecuteOracleNonQuery можно использовать для выполнения операций с каталогом (например, запрос структуры базы данных или создание объектов базы данных, таких как таблицы); или для изменения данных в базе данных без использования <xref:System.Data.DataSet>, путем выполнения UPDATE, INSERT или DELETE.</xref:System.Data.DataSet>       ExecuteOracleNonQuery отличается от <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>тем, что возвращает `rowid` как параметр output при выполнении инструкции INSERT, DELETE или UPDATE, которая затрагивает только одну строку.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> Это позволяет однозначно идентифицировать строку в базе данных Oracle, которая позволяет увеличить производительность в последующих связанных запросов.       Несмотря на то, что ExecuteOracleNonQuery не возвращает строк, любые выходные параметры или возвращаемые значения, которые сопоставлены с параметрами, заполняются данными."
  syntax:
    content: public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);
    parameters:
    - id: rowid
      type: System.Data.OracleClient.OracleString
      description: "Строковое представление base64 фактического идентификатора строки на сервере."
    return:
      type: System.Int32
      description: "Для инструкций UPDATE, INSERT и DELETE возвращаемое значение — количество строк, затронутых этой командой. Для инструкций CREATE TABLE и DROP TABLE возвращаемое значение — 0. Для всех других типов инструкций возвращаемое значение-1."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Соединение не существует.       - или - соединение не открыто."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  id: ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Выполняет запрос и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом как тип данных Oracle. Дополнительные столбцы или строки пропускаются."
  remarks: "Используйте метод ExecuteOracleScalar для извлечения из базы данных одно значение (например, статистическое значение). Это требует меньшего объема кода, чем при использовании <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>метода, а затем возможность выполнения операций, необходимых для создания одного значения из данных, возвращенных <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Типичный запрос ExecuteOracleScalar может быть отформатирован как в следующем примере на C#:```   command.CommandText = &quot;SELECT COUNT(*) AS NumberOfRegions FROM Region&quot;;   count = command.ExecuteOracleScalar();   ```"
  syntax:
    content: public object ExecuteOracleScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Первый столбец первой строки в результирующем наборе тип данных Oracle или пустая ссылка Если результатом является <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Отправляет <> </> *настроек для <> </> *настроек и создает <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref>."
  remarks: "Когда <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>свойству `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>свойство должно быть присвоено имя хранимой процедуры.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> Затем команда выполняет эту хранимую процедуру, при вызове ExecuteReader.       Существует несколько <xref:System.Data.OracleClient.OracleDataReader>в любой момент времени может быть открыто.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_10_1.vb)]\n [!code-cs[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_10_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> Объекта."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Отправляет <> </> *настроек для <> </> *настроек и строит <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> с помощью одного из <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> значения."
  remarks: "Если ожидается, что инструкция SQL вернет только одну строку, указав `SingleRow` как <xref:System.Data.CommandBehavior>значение может улучшить производительность приложения.</xref:System.Data.CommandBehavior>       Когда <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>свойству `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>свойство должно быть присвоено имя хранимой процедуры.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> Затем команда выполняет эту хранимую процедуру при вызове <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       <xref:System.Data.OracleClient.OracleDataReader>Поддерживает специальный режим, позволяющий эффективного чтения больших двоичных параметров.</xref:System.Data.OracleClient.OracleDataReader> Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Существует несколько <xref:System.Data.OracleClient.OracleDataReader>в любой момент времени может быть открыто.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database. <xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/csharp/db42fed5-256c-4ac8-928b-_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/db42fed5-256c-4ac8-928b-_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Один из <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> значения."
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "<xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> Объекта."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Выполняет запрос и возвращает первый столбец первой строки в наборе результатов, возвращаемых запросом как тип данных .NET Framework. Дополнительные столбцы или строки пропускаются."
  remarks: "Метод ExecuteScalar для получения одного значения (например, статистическое значение) из базы данных. Это требует меньшего объема кода, чем при использовании <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>метода, а затем возможность выполнения операций, необходимых для создания одного значения из данных, возвращенных <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Типичный запрос ExecuteScalar может быть отформатирован как в следующем примере на C#:```   CommandText = &quot;SELECT COUNT(*) FROM Region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oracleclie_1_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_1_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Первый столбец первой строки в результирующем наборе как тип данных .NET Framework, или пустая ссылка, если результирующий набор пуст или результат <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Parameters
  id: Parameters
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the <xref href=&quot;System.Data.OracleClient.OracleParameterCollection&quot;></xref>."
  remarks: "Когда <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>свойству `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A>свойство должно быть присвоено имя хранимой процедуры.</xref:System.Data.OracleClient.OracleCommand.CommandText%2A> </xref:System.Data.OracleClient.OracleCommand.CommandType%2A> Пользователь может потребоваться использовать синтаксис escape-символов, если имя хранимой процедуры содержит специальные символы. Команда выполняет эту хранимую процедуру при вызове одного из методов Execute.       Поставщик данных .NET Framework для Oracle не поддерживает прототип вопросительного знака (?) для передачи параметров в инструкции SQL вызывается <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`.</xref:System.Data.OracleClient.OracleCommand> В этом случае необходимо использовать именованные параметры. Например: ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ``` при вызове с помощью именованных параметров в инструкции SQL <xref:System.Data.OracleClient.OracleCommand>из `CommandType.Text`, должно предшествовать имя параметра в виде двоеточия (:).</xref:System.Data.OracleClient.OracleCommand> Однако в хранимой процедуре или при ссылке на именованный параметр в другом месте в коде (например, при добавлении <xref:System.Data.OracleClient.OracleParameter>объектов свойство Parameters), не перед именем параметра двоеточие (:).</xref:System.Data.OracleClient.OracleParameter> Поставщик данных .NET Framework для Oracle автоматически добавляет двоеточие."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.  \n  \n [!code-cs[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/csharp/p-system.data.oracleclie_6_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_6_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleParameterCollection Parameters { get; }
    return:
      type: System.Data.OracleClient.OracleParameterCollection
      description: "Параметры инструкции SQL или хранимой процедуры. Значение по умолчанию является пустой коллекцией."
  overload: System.Data.OracleClient.OracleCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Prepare
  id: Prepare
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Создает подготовленную (скомпилированную) версию команды в источнике данных."
  remarks: "Перед вызовом метода подготовки, укажите тип данных каждого параметра в подготавливаемой инструкции."
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *Настроек не задано.       -or-       The <>*> is not <xref:System.Data.OracleClient.OracleConnection.Open*>.</xref:System.Data.OracleClient.OracleConnection.Open*>"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Сбрасывает <xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>Свойства, значение по умолчанию.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout*>"
  remarks: "Значение по умолчанию <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>составляет 30 секунд.</xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Transaction
  id: Transaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;> </xref> в течение которого <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> выполняет."
  remarks: "Невозможно задать свойство транзакции, если оно уже задано конкретное значение и команда находится в процессе выполнения. Если значение свойства transaction <xref:System.Data.OracleClient.OracleTransaction>объект, который не подключен к тому же <xref:System.Data.OracleClient.OracleConnection>как <xref:System.Data.OracleClient.OracleCommand>объекта следующей попытке выполнения инструкции будет создано исключение.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleTransaction>"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction Transaction { get; set; }
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "An <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>. По умолчанию используется значение null."
  overload: System.Data.OracleClient.OracleCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает или задает значение, указывающее, как <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> метод следует применять результаты выполнения команды <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Значение по умолчанию <xref:System.Data.UpdateRowSource>значение `Both` Если команда не создается автоматически (как в случае <xref:System.Data.OracleClient.OracleCommandBuilder>), в этом случае значение по умолчанию — `None`.</xref:System.Data.OracleClient.OracleCommandBuilder> </xref:System.Data.UpdateRowSource>       Дополнительные сведения об использовании <xref:System.Data.UpdateRowSource>свойство, в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.UpdateRowSource>"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Один из <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> значения."
  overload: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Введенное значение не является одним из <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> значения."
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OracleClient.OracleCommand.#ctor
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleCommand.Cancel
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
- uid: System.Data.OracleClient.OracleCommand.Clone
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleCommand.CommandText
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleCommand.CommandType
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
- uid: System.Data.OracleClient.OracleParameter
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameter
  nameWithType: OracleParameter
  fullName: System.Data.OracleClient.OracleParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
- uid: System.Data.OracleClient.OracleDataReader
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
- uid: System.Data.OracleClient.OracleCommand.Parameters
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleParameterCollection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameterCollection
  nameWithType: OracleParameterCollection
  fullName: System.Data.OracleClient.OracleParameterCollection
- uid: System.Data.OracleClient.OracleCommand.Prepare
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
- uid: System.Data.OracleClient.OracleCommand.Transaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OracleClient.OracleCommand.#ctor*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand.OracleCommand
- uid: System.Data.OracleClient.OracleCommand.Cancel*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel
  nameWithType: OracleCommand.Cancel
- uid: System.Data.OracleClient.OracleCommand.Clone*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone
  nameWithType: OracleCommand.Clone
- uid: System.Data.OracleClient.OracleCommand.CommandText*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
- uid: System.Data.OracleClient.OracleCommand.CommandType*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OracleCommand.CreateDbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OracleCommand.CreateParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OracleCommand.ExecuteDbDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OracleCommand.ExecuteNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery
  nameWithType: OracleCommand.ExecuteOracleNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar
  nameWithType: OracleCommand.ExecuteOracleScalar
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OracleCommand.ExecuteReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OracleCommand.ExecuteScalar
- uid: System.Data.OracleClient.OracleCommand.Parameters*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleCommand.Prepare*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare
  nameWithType: OracleCommand.Prepare
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OracleCommand.ResetCommandTimeout
- uid: System.Data.OracleClient.OracleCommand.Transaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
