### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetException
  id: TargetException
  children:
  - System.Reflection.TargetException.#ctor
  - System.Reflection.TargetException.#ctor(System.String)
  - System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.TargetException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
  type: Class
  summary: "Представляет исключение, которое выдается при попытке вызвать недопустимый адресат."
  remarks: "Объект `TargetException` возникает, когда предпринимается попытка вызвать нестатический метод для пустого объекта. Это может случиться, так как вызывающая сторона не имеет доступа к элементу, или целевой объект не определен элемент и т. д.      Настроек [!NOTE] настроек это исключение не включается в [.NET для магазина Windows](http://go.microsoft.com/fwlink/?LinkID=247912) или, но вызывается некоторые члены, которые являются. В этом случае перехватить исключение, запись `catch` инструкции для <xref:System.Exception>вместо.</xref:System.Exception>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TargetException : ApplicationException
  inheritance:
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor
  id: '#ctor'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Reflection.TargetException&quot;> </xref> класса пустое сообщение и основную причину исключения."
  remarks: "`InnerException` Свойству `null` и код ошибки HRESULT имеет значение COR_E_TARGET.       `TargetException`наследует от <xref:System.Exception>.</xref:System.Exception> Этот конструктор задает свойства `Exception` объекта, как показано в следующей таблице.      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| Пустая строка (»»). |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException ();
    parameters: []
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Reflection.TargetException&quot;> </xref> класс с помощью заданного сообщения и корневой каталог вызывает исключение."
  remarks: "`TargetException`наследует от <xref:System.Exception>.</xref:System.Exception> Этот конструктор задает свойства `Exception` объекта, как показано в следующей таблице.      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| Строка сообщения. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Объект <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> описания причины возникновения исключения."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Reflection.TargetException&quot;> </xref> класса с указанными сведениями сериализации и контексте."
  syntax:
    content: protected TargetException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Данные для сериализации или десериализации объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Источник и назначение для объекта."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Reflection.TargetException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException%2A>свойство.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>Свойство возвращает то же значение, которое передается конструктору, или `null` Если <xref:System.Exception.InnerException%2A>свойства не предоставляет конструктору значение внутреннего исключения.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.Reflection.TargetException>.</xref:System.Reflection.TargetException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Ссылка на внутреннее исключение. |   | <xref:System.Exception.Message%2A>| Строка сообщения об ошибке. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: inner
      type: System.Exception
      description: "Исключение, которое стало причиной текущего исключения. Если `inner` не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetException.#ctor
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
- uid: System.Reflection.TargetException.#ctor(System.String)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetException.#ctor*
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException
  nameWithType: TargetException.TargetException
