### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymWriter
  id: SymWriter
  children:
  - System.Diagnostics.SymbolStore.SymWriter.#ctor
  - System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Close
  - System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  - System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  - System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymWriter.Dispose
  - System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Finalize
  - System.Diagnostics.SymbolStore.SymWriter.GetWriter
  - System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  - System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  - System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  - System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  langs:
  - csharp
  name: SymWriter
  nameWithType: SymWriter
  fullName: System.Diagnostics.SymbolStore.SymWriter
  type: Class
  summary: "Представляет модуль записи символов для управляемого кода."
  remarks: "Класс SymWriter предоставляет методы, определяющие документы, точки оценки, лексические области и переменные."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymWriterBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolWriter
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymWriterBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> класса."
  syntax:
    content: public SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> класса, указывая, следует ли создавать базовый модуль записи символов."
  syntax:
    content: public SymWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если основной модуль записи символов будет отображено путем вызова метода <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если вместо этого должны быть созданы записи символов по умолчанию.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  id: Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Закрывает <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> и фиксирует символы в хранилище символов."
  remarks: "После этого вызова <xref:System.Diagnostics.SymbolStore.SymWriter>становится недействительным для дальнейших обновлений.</xref:System.Diagnostics.SymbolStore.SymWriter>"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  id: CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Закрывает текущий метод."
  remarks: "После закрытия метода определить символ в метод нельзя."
  syntax:
    content: public virtual void CloseMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  id: CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Закрывает последнее пространство имен."
  syntax:
    content: public virtual void CloseNamespace ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  id: CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Закрывает текущую лексическую область видимости."
  remarks: "После закрытия области невозможно определить переменную в методе."
  syntax:
    content: public virtual void CloseScope (int endOffset);
    parameters:
    - id: endOffset
      type: System.Int32
      description: "Смещение на промежуточном Языке только после последней инструкции в области."
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Определяет исходный документ."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "URL-адрес для идентификации документа."
    - id: language
      type: System.Guid
      description: "Язык документа. Этот параметр может иметь <xref:System.Guid>.</xref:System.Guid>"
    - id: languageVendor
      type: System.Guid
      description: "Удостоверение поставщика языка документа. Этот параметр может иметь <xref:System.Guid>.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "Тип документа. Этот параметр может иметь <xref:System.Guid>.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "<xref href=&quot;System.Diagnostics.SymbolStore.ISymbolDocumentWriter&quot;> </xref> Объект, представляющий документ."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Этот параметр не используется."
    - id: name
      type: System.String
      description: "Этот параметр не используется."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Этот параметр не используется."
    - id: signature
      type: System.Byte[]
      description: "Этот параметр не используется."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Этот параметр не используется."
    - id: addr1
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr2
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr3
      type: System.Int32
      description: "Этот параметр не используется."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Этот параметр не используется."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Этот параметр не используется."
    - id: signature
      type: System.Byte[]
      description: "Этот параметр не используется."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Этот параметр не используется."
    - id: addr1
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr2
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr3
      type: System.Int32
      description: "Этот параметр не используется."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Определяет одну переменную в текущей лексической области видимости."
  remarks: "`startOffset` И `endOffset` являются необязательными. Если их значение равно нулю, они пропускаются, и переменная определяется для всей области. Если они имеют ненулевое значение, они попадают в границах смещений текущей области.       DefineLocalVariable можно вызывать несколько раз для переменной с тем же именем, которая встречается несколько раз в различных диапазонах смещений в пределах области. (В этом случае начального и конечного смещения не должны перекрываться.)"
  syntax:
    content: public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);
    parameters:
    - id: name
      type: System.String
      description: "Имя локальной переменной."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Атрибуты локальной переменной, заданные с помощью <xref:System.Reflection.FieldAttributes>перечислителя.</xref:System.Reflection.FieldAttributes>"
    - id: signature
      type: System.Byte[]
      description: "Подпись локальной переменной."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Типы адресов `addr1`, `addr2`, и `addr3` с помощью <xref href=&quot;System.Diagnostics.SymbolStore.SymAddressKind&quot;> </xref>."
    - id: addr1
      type: System.Int32
      description: "Первый адрес для спецификации локальной переменной."
    - id: addr2
      type: System.Int32
      description: "Второй адрес для спецификации локальной переменной."
    - id: addr3
      type: System.Int32
      description: "Третий адрес для спецификации локальной переменной."
    - id: startOffset
      type: System.Int32
      description: "Начальное смещение для переменной. Если значение равно нулю, этот параметр пропускается и переменная определяется для всей области. Если ненулевое значение, переменная находится в границах смещений текущей области."
    - id: endOffset
      type: System.Int32
      description: "Конечное смещение для переменной. Если значение равно нулю, этот параметр пропускается и переменная определяется для всей области. Если ненулевое значение, переменная находится в границах смещений текущей области."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "Этот параметр не используется."
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: "Этот параметр не используется."
    - id: sequence
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "Этот параметр не используется."
    - id: addr1
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr2
      type: System.Int32
      description: "Этот параметр не используется."
    - id: addr3
      type: System.Int32
      description: "Этот параметр не используется."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Определяет группу точек следования в текущем методе."
  remarks: "Точки следования используются для сопоставления расположений файлов исходного кода и смещения на промежуточном Языке.  Каждая точка следования включает IL смещения и исходной файл области, определяемой номера начала и конца строки или столбца относительно <xref:System.Diagnostics.SymbolStore.ISymbolDocument>объекта.</xref:System.Diagnostics.SymbolStore.ISymbolDocument>  Каждый элемент каждого массива с указанным индексом соответствует определенной точке следования. Каждая строка и каждый столбец определяют начало оператора в методе. Массивы должны быть упорядочены в порядке возрастания смещений. Смещение всегда является смещением от начала метода, в байтах."
  syntax:
    content: public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Объект документа, для которого определяются точки следования."
    - id: offsets
      type: System.Int32[]
      description: "Смещение точек следования на промежуточном Языке определяются от начала метода."
    - id: lines
      type: System.Int32[]
      description: "Номера начальной строки точки следования."
    - id: columns
      type: System.Int32[]
      description: "Начальный номера столбцов точек следования."
    - id: endLines
      type: System.Int32[]
      description: "Номера конечных строки точки следования."
    - id: endColumns
      type: System.Int32[]
      description: "Номера конечных столбцов точек следования."
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Освобождает ресурсы, используемые текущим экземпляром <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> класса."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Вызывается методом <> </> *настроек и <> </> *настроек методов, чтобы освободить управляемые и неуправляемые ресурсы, используемые текущим экземпляром <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> класса."
  remarks: "Этот метод вызывается только открытые <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>и <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A>методов; не вызывайте этот метод напрямую.</xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы освободить управляемые и неуправляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Освобождает неуправляемые ресурсы и выполняет другие операции очистки, перед <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> сборщиком мусора."
  remarks: "Этот метод переопределяет <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A>метод.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  id: GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*
      description: "Для добавления."
  overload: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  id: Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Задает интерфейс включения метаданных, связываемый с данным модулем записи."
  remarks: "<xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A>также задает имя выходного файла, который записываются символы отладки.</xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> Этот метод может вызываться только один раз и должен вызываться перед вызовом методов модуля записи."
  syntax:
    content: public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);
    parameters:
    - id: emitter
      type: System.IntPtr
      description: "Интерфейс включения метаданных."
    - id: filename
      type: System.String
      description: "Имя файла, для которого записываются символы отладки. Всех модулей записи требуют имени файла, а другие — нет. Если указано имя файла для записи, который не использует имена файлов, этот параметр учитывается."
    - id: fFullBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Указывает, что это полное перестроение; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> указывает это добавочная компиляция."
  overload: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  id: InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Инициализирует модуль записи символов. Этот метод не должен вызываться напрямую. он вызывается конструктором."
  syntax:
    content: public void InitWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если основной модуль записи символов будет отображено путем вызова метода <xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если вместо этого должны быть созданы записи символов по умолчанию.</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>"
  overload: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Открывает метод для размещения символьной информации."
  remarks: "Указанный метод становится текущим методом для вызовов с целью определения точек следования, параметров и лексические области. Нет неявную лексическую область вокруг весь метод. Повторное открытие метода, который был ранее закрыт стирает всех ранее определенных символов для метода."
  syntax:
    content: public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных для открываемого метода."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  id: OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Открывает новое пространство имен."
  remarks: "Этот метод следует вызывайте перед определением методов или переменных, которые существуют в пространстве имен. Пространства имен могут быть вложенными."
  syntax:
    content: public virtual void OpenNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя нового пространства имен."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  id: OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Открывает новую лексическую область видимости в текущем методе."
  remarks: "Эта область становится новой текущей областью и помещается в стек областей. Области должны образовывать иерархию. Перекрытие элементов с общим родителем запрещено.       Идентификаторы областей действительны только в текущем методе."
  syntax:
    content: public virtual int OpenScope (int startOffset);
    parameters:
    - id: startOffset
      type: System.Int32
      description: "Смещение на промежуточном Языке в байтах от начала метода до первой инструкции в лексической области видимости."
    return:
      type: System.Int32
      description: "Непрозрачный идентификатор области, можно использовать с <> </> *настроек для определения начального и конечного смещений области в дальнейшем. В этом случае смещения, переданные методам OpenScope и <> </> *настроек учитываются. Идентификатор области действителен только в текущем методе."
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);
    parameters:
    - id: startDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Этот параметр не используется."
    - id: startLine
      type: System.Int32
      description: "Этот параметр не используется."
    - id: startColumn
      type: System.Int32
      description: "Этот параметр не используется."
    - id: endDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "Этот параметр не используется."
    - id: endLine
      type: System.Int32
      description: "Этот параметр не используется."
    - id: endColumn
      type: System.Int32
      description: "Этот параметр не используется."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  id: SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Определяет диапазон смещений для заданной лексической области видимости."
  syntax:
    content: public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);
    parameters:
    - id: scopeID
      type: System.Int32
      description: "Идентификатор лексической области видимости, возвращенных <xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>метод.</xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>"
    - id: startOffset
      type: System.Int32
      description: "Смещение начала лексической области видимости на промежуточном Языке."
    - id: endOffset
      type: System.Int32
      description: "Смещение конца лексической области видимости на промежуточном Языке."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Определяет атрибут для заданного имени атрибута и значение атрибута."
  remarks: "Метод SetSymAttribute только в том случае, связанная с символьными данными и не является пользовательским атрибутом метаданных."
  syntax:
    content: public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных, для которого определен атрибут."
    - id: name
      type: System.String
      description: "Имя атрибута."
    - id: data
      type: System.Byte[]
      description: "Значение атрибута."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  id: SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Задает базовый [ISymUnmanagedWriter-интерфейс](~/add/includes/ajax-current-ext-md.md) (соответствующий неуправляемый интерфейс API), управляемый <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref> для порождения символов."
  remarks: "Базовый [ISymUnmanagedWriter-интерфейс](../Topic/ISymUnmanagedWriter%20Interface.md) (соответствующий неуправляемый интерфейс API) интерфейс представляет модуль записи символов для управляемого кода. Этот интерфейс предоставляет методы для определения документов, точек следования, лексические области и переменные."
  syntax:
    content: public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);
    parameters:
    - id: underlyingWriter
      type: System.IntPtr
      description: "<xref:System.IntPtr>Тип указателя на код, который является базовым модулем записи.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Идентифицирует пользовательский метод точкой входа для текущего модуля."
  remarks: "Обычно это основной способ."
  syntax:
    content: public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);
    parameters:
    - id: entryMethod
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных для метода, который является входа пользователя точки."
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  id: UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Указывает, что в открытой лексической области видимости используется заданное полное имя пространства имен."
  remarks: "Закрытие текущей области запрещает этой области с использованием пространства имен. Пространство имен продолжает использоваться во всех областях, наследуемых из текущей открытой области."
  syntax:
    content: public virtual void UsingNamespace (string fullName);
    parameters:
    - id: fullName
      type: System.String
      description: "Полное имя пространства имен."
  overload: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymWriterBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymWriterBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymAddressKind
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymAddressKind
  nameWithType: SymAddressKind
  fullName: System.Diagnostics.SymbolStore.SymAddressKind
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter
  nameWithType: SymWriter.SymWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Close*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close
  nameWithType: SymWriter.Close
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod
  nameWithType: SymWriter.CloseMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace
  nameWithType: SymWriter.CloseNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope
  nameWithType: SymWriter.CloseScope
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument
  nameWithType: SymWriter.DefineDocument
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField
  nameWithType: SymWriter.DefineField
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable
  nameWithType: SymWriter.DefineGlobalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable
  nameWithType: SymWriter.DefineLocalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter
  nameWithType: SymWriter.DefineParameter
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints
  nameWithType: SymWriter.DefineSequencePoints
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose
  nameWithType: SymWriter.Dispose
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize
  nameWithType: SymWriter.Finalize
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter
  nameWithType: SymWriter.GetWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize
  nameWithType: SymWriter.Initialize
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter
  nameWithType: SymWriter.InitWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod
  nameWithType: SymWriter.OpenMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace
  nameWithType: SymWriter.OpenNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope
  nameWithType: SymWriter.OpenScope
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange
  nameWithType: SymWriter.SetMethodSourceRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange
  nameWithType: SymWriter.SetScopeRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute
  nameWithType: SymWriter.SetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter
  nameWithType: SymWriter.SetUnderlyingWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: SymWriter.SetUserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace
  nameWithType: SymWriter.UsingNamespace
