### YamlMime:ManagedReference
items:
- uid: System.Reflection.ParameterModifier
  id: ParameterModifier
  children:
  - System.Reflection.ParameterModifier.#ctor(System.Int32)
  - System.Reflection.ParameterModifier.Item(System.Int32)
  langs:
  - csharp
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier
  type: Struct
  summary: "Присоединяет к параметрам модификатор, позволяя работать привязки с подписями параметров, в которых были изменены типы."
  remarks: "Структура ParameterModifier используется с [Type.InvokeMember (привязки объекта, объект String, BindingFlags,\\[\\], ParameterModifier\\[\\], CultureInfo, String\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) перегрузка метода, если передача параметров по ссылке на COM-компонент, который обращается к позднего связывания. Параметры, которые должны передаваться по ссылке указываются с одной структуры ParameterModifier, который должен быть передан в массив, содержащий единственный элемент. Один ParameterModifier структуры в этом массиве должна быть инициализирована с количеством параметров члена, который должен быть вызван. Чтобы указать, какие из этих параметров, передаются по ссылке, задайте значение <xref:System.Reflection.ParameterModifier.Item%2A>Свойства (индексатор в C#) `true` для порядковый номер, соответствующий Отсчитываемая от нуля позиция параметра.</xref:System.Reflection.ParameterModifier.Item%2A>"
  example:
  - "The following code example shows this for a member that has three string arguments, the first and third of which are passed by reference. Assume that a variable named `obj` contains a reference to the COM object.  \n  \n [!code-vb[System.Reflection.ParameterModifier#1](~/add/codesnippet/visualbasic/t-system.reflection.para_1.vb)]\n [!code-cpp[System.Reflection.ParameterModifier#1](~/add/codesnippet/cpp/t-system.reflection.para_1.cpp)]\n [!code-cs[System.Reflection.ParameterModifier#1](~/add/codesnippet/csharp/t-system.reflection.para_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct ParameterModifier
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> структура, представляющая указанное число параметров."
  syntax:
    content: public ParameterModifier (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Число параметров."
  overload: System.Reflection.ParameterModifier.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameterCount</code>является отрицательным значением."
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Возвращает или задает значение, которое указывает, является ли параметр по указанному положению индекса изменять текущий <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref>."
  remarks: "Индексаторы позволяют свойство по умолчанию в типе индексируемых так, будто тип массива."
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Позиция индекса параметра изменения, состояние которого проверяется или набор."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>является ли параметр в этой позиции индекса для изменения, это <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Reflection.ParameterModifier.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ParameterModifier.#ctor*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier.ParameterModifier
- uid: System.Reflection.ParameterModifier.Item*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item
  nameWithType: ParameterModifier.Item
