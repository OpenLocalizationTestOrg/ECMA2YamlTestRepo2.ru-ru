### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "Представляет поле, отображающее настраиваемое содержимое в элементе управления с привязкой к данным."
  remarks: "Класс TemplateField используется элементами управления с привязкой к данным (такие как <xref:System.Web.UI.WebControls.GridView>и <xref:System.Web.UI.WebControls.DetailsView>) для отображения настраиваемое содержимое для каждой записи отображаются.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> При необходимости для отображения содержимого в элементе управления с привязкой к данным, не обеспечивается одним из стандартных данных поля элемента управления (таких как <xref:System.Web.UI.WebControls.BoundField>), используйте класс TemplateField для создания настраиваемого пользовательского интерфейса (UI).</xref:System.Web.UI.WebControls.BoundField> Объект TemplateField отображается по-разному в зависимости от того, в котором используется элемент управления с привязкой к данным. Например <xref:System.Web.UI.WebControls.GridView>элемент управления отображается в виде столбца, объект TemplateField и <xref:System.Web.UI.WebControls.DetailsView>элемент управления отображает его в виде строки.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Можно определить пользовательский шаблон для разных частей TemplateField объекта с помощью шаблонов, перечисленные в следующей таблице.      | Шаблон | Описание |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>| Указывает содержимое для отображения чередующихся элементов в объекте TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>| Задает контент, отображаемый для элемента в режиме редактирования в объекте TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>| Задает содержимое для отображения для нижнего колонтитула объекта TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>| Задает содержимое для отображения раздела верхнего колонтитула объекта TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>| Задает контент, отображаемый для элемента в режиме вставки в объекте TemplateField.</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Этот шаблон поддерживается только с помощью элемента управления <xref:System.Web.UI.WebControls.DetailsView>. |   | <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>| Указывает содержимое для отображения элементов в объекте TemplateField. |       Объект TemplateField в элементе управления с привязкой к данным можно скрыть, установив <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>Свойства `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       В качестве альтернативы для определения пользовательского <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>или <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>шаблона, можно настроить разделы верхнего и нижнего колонтитулов TemplateField объекта путем задания других свойств объекта TemplateField.</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Чтобы отобразить заголовок в верхний или нижний колонтитул разделах, задайте <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>или <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Свойства, соответственно.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Вместо отображения текста в заголовке, можно отобразить изображение, задав <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>свойство.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Раздел заголовка может быть скрыт в объекте TemplateField, задав <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>Свойства `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      Настроек [!NOTE] настроек некоторые элементы управления с привязкой к данным (такие как <xref:System.Web.UI.WebControls.GridView>управления) можно отобразить или скрыть весь верхний колонтитул только элемента управления.</xref:System.Web.UI.WebControls.GridView> Эти элементы управления с привязкой к данным не поддерживают <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>Свойства для отдельных полей связанных.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Чтобы отобразить или скрыть весь верхний колонтитул элемента управления с привязкой к данным, используйте элемент управления `ShowHeader` свойства (если доступно).       Также можно настроить внешний вид объекта TemplateField (цвет шрифта, цвет фона и т. д.), задав свойства стиля для разных частей поля. В следующей таблице перечислены различных свойств стиля.      | Свойство стиля | Описание |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Параметры стиля для сервера веб-элементы управления дочернего объекта TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Параметры стиля для нижнего колонтитула объекта TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Параметры стиля для раздела верхнего колонтитула объект TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Параметры стиля для элементов данных в объекте TemplateField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> класса."
  remarks: "Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TemplateField>класса.</xref:System.Web.UI.WebControls.TemplateField> Этот конструктор обычно используется при добавлении полей в динамически созданный элемент управления с привязкой к данным.       Для динамического добавления <xref:System.Web.UI.WebControls.TemplateField>объекта к элементу управления с привязкой к данным, создайте новый <xref:System.Web.UI.WebControls.TemplateField>объекта, определение соответствующих шаблонов и затем добавить его в коллекцию полей элемента управления с привязкой к данным.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> Например, если вы используете <xref:System.Web.UI.WebControls.GridView>управления, добавьте <xref:System.Web.UI.WebControls.TemplateField>объект <xref:System.Web.UI.WebControls.GridView.Columns%2A>коллекции.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      Настроек [!NOTE] настроек несмотря на то, что может динамически добавлять поля в элемент управления с привязкой к данным, настоятельно рекомендуется, поля статически объявлен и затем отображать и скрывать, соответствующим образом. Статическое объявление всех полей уменьшает размер состояния представления для родительского элемента управления с привязкой к данным."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения чередующихся элементов в <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Свойство AlternatingItemTemplate служит для указания пользовательского содержимого, отображаемого для чередующихся элементов в <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ вывода изменяющихся элементов.      Настроек [!NOTE] настроек AlternatingItemTemplate свойство обычно используется в сочетании с <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>Свойства для создания различный внешний вид для всех других элементов в элементе управления с привязкой к данным.</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       Чтобы указать шаблон, поместите открывающих и закрывающих `<AlternatingItemTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<AlternatingItemTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-реализовано объект, содержащий шаблон для отображения чередующихся элементов в <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает значение, указывающее ли значение, <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объект привязан к должны быть преобразованы в <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при <xref:System.String.Empty>.</xref:System.String.Empty>"
  remarks: "Это свойство применяется для двусторонней привязки данных инструкции, выполняемые в шаблоне. Преобразование осуществляется после получения значений из шаблона двусторонней привязки и перед передачей значений в источник данных для операции обновления или вставки.       Например, пользователь может ввести пустую строку (&quot;») в качестве значения поля при обновлении или вставке записей. Позволяет указать, является ли пустое строковое значение автоматически преобразуется в свойство ConvertEmptyStringToNull `null` при обновлении поля данных в источнике данных."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение, <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> — граница должны быть преобразованы в <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при <xref:System.String.Empty>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.String.Empty> Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Копирует свойства текущего <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-производный объект в указанный <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> объекта."
  remarks: "Метод CopyProperties — это вспомогательный метод, используемый для копирования свойств, текущего <xref:System.Web.UI.WebControls.TemplateField>-объекта, производного <xref:System.Web.UI.WebControls.DataControlField>объектом, созданным с помощью метода.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Для копирования свойств, текущего <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> для."
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Создает новый <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Метод CreateField переопределяет базовый метод для возврата <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Всегда возвращает новую <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения элемента в режиме редактирования в <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Свойство EditItemTemplate определяет настраиваемое содержимое, отображаемый для элемента, который находится в режиме редактирования в <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ вывода элемента в режиме редактирования. Свойство EditItemTemplate обычно содержит элементы управления вводом для пользователю изменять значения в источнике данных.       Чтобы указать шаблон, поместите открывающих и закрывающих `<EditItemTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<EditItemTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-реализован объект, содержащий шаблон для отображения элемента в режиме редактирования в <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Извлекает значение элемента управления данных поля в соответствии с одной или нескольких инструкций двустороннюю привязку (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) из текущей ячейки таблицы и добавляет значения в указанный <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> коллекции."
  remarks: "Метод ExtractValuesFromCell реализуется типами, производными от <xref:System.Web.UI.WebControls.DataControlField>, например <xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DataControlField> Этот метод вызывается для извлечения значений двунаправленные поля с привязкой к данным в шаблоне для заполнения словарей, передающихся в источник данных для обновления, вставки или удаления. Пара поле значение хранится в коллекциях словарей, который передается в метод. Метод ExtractValuesFromCell вызывается `ExtractRowValues` метод элементов данных, например <xref:System.Web.UI.WebControls.DetailsView>и <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> , содержащего текст и элементы управления <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Один из <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> значения."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Указывает, что значения полей только для чтения в `dictionary` коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения нижнего колонтитула элемента <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Свойство FooterTemplate определяет пользовательское содержимое отображается в разделе нижнего колонтитула <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ вывода нижнего колонтитула.       Чтобы указать шаблон, поместите открывающих и закрывающих `<FooterTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<FooterTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-реализован объект, содержащий шаблон для отображения нижнего колонтитула элемента <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения в заголовок <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Свойство HeaderTemplate служит для указания пользовательского содержимого, отображаемый для раздела верхнего колонтитула <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ раздел заголовка.       Чтобы указать шаблон, поместите открывающих и закрывающих `<HeaderTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<HeaderTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-реализован объект, содержащий шаблон для отображения в заголовок <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> в элементе управления с привязкой к данным. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет текст или элементы управления в коллекцию controls ячейки."
  remarks: "Этот метод вызывается при создании пользовательского элемента управления с привязкой к данным, который использует <xref:System.Web.UI.WebControls.DataControlFieldCell>объектов для инициализации ячеек структуры таблицы с данными или элементами управления.</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> , содержащего текст и элементы управления <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Один из <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> значения."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Один из <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> значений, определяющее состояние строки, содержащей <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>."
    - id: rowIndex
      type: System.Int32
      description: "Индекс строки, <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> содержится в."
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения элемента в режиме вставки в <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта."
  remarks: "Свойство InsertItemTemplate служит для указания пользовательского содержимого, отображаемый для элемента в режиме вставки в <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ вывода элемента в режиме вставки.       Чтобы указать шаблон, поместите открывающих и закрывающих `<InsertItemTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<InsertItemTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      Настроек [!NOTE] настроек этого шаблона, этот шаблон, поддерживаются только элементы управления с привязкой к данным, которые позволяют вставить записи, например, поддерживают не все элементы управления с привязкой к данным <xref:System.Web.UI.WebControls.DetailsView>управления.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-объект, содержащий шаблон для отображения элемента в режиме вставки в реализации <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает шаблон для отображения элемента в элементе управления с привязкой к данным."
  remarks: "Свойство ItemTemplate определяет пользовательское содержимое отображается в элементах <xref:System.Web.UI.WebControls.TemplateField>объекта.</xref:System.Web.UI.WebControls.TemplateField> Содержимое определяется путем создания шаблона, указывающего способ элементы.      Настроек [!NOTE] настроек по желанию можно задать <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>свойство в сочетании со свойством ItemTemplate, чтобы создать различный внешний вид для всех других элементов в элементе управления с привязкой к данным.</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       Чтобы указать шаблон, поместите открывающих и закрывающих `<ItemTemplate>` теги между открывающим и закрывающим тегами элемента `<TemplateField>` элемент. Добавьте настраиваемое содержимое между открывающим и закрывающим `<ItemTemplate>` тегов. Содержимое может быть как простой текст или более сложные (например внедрения других элементов управления в шаблоне).       Для программного доступа к элемента управления, определенных в шаблоне, сначала определите, какой <xref:System.Web.UI.WebControls.TableCell>объект в элементе управления с привязкой к данным содержит элемент управления.</xref:System.Web.UI.WebControls.TableCell> Затем используйте <xref:System.Web.UI.Control.Controls%2A>коллекцию <xref:System.Web.UI.WebControls.TableCell>объект для доступа к элементу управления.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Можно также использовать <xref:System.Web.UI.Control.FindControl%2A>метод <xref:System.Web.UI.WebControls.TableCell>объекта для поиска элемента управления в том случае, если элемент управления имеет <xref:System.Web.UI.Control.ID%2A>свойство, указанное.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Объект <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-объект, содержащий шаблон для отображения элемента в реализации <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, указывающая, что это свойство не задано."
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает значение, указывающее, является ли элемент управления проверяет входные данные от клиента."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент управления проверяет входные данные клиента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет, содержится ли в элементах управления <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> объекта обратные вызовы страницы поддержки."
  remarks: "Метод ValidateSupportsCallback не поддерживается для этого класса и всегда вызывает исключение <xref:System.NotSupportedException>исключение.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Реализация по умолчанию этот метод вызывается."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
