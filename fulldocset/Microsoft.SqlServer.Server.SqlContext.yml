### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlContext
  id: SqlContext
  children:
  - Microsoft.SqlServer.Server.SqlContext.IsAvailable
  - Microsoft.SqlServer.Server.SqlContext.Pipe
  - Microsoft.SqlServer.Server.SqlContext.TriggerContext
  - Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  langs:
  - csharp
  name: SqlContext
  nameWithType: SqlContext
  fullName: Microsoft.SqlServer.Server.SqlContext
  type: Class
  summary: "Представляет абстракцию контекст вызывающего объекта, который предоставляет доступ к <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref>, <xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;> </xref>, и <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> объектов. Этот класс не наследуется."
  remarks: "Объект SqlContext может использоваться для получения контекста триггера (для кода, выполняемого в триггере) и объекта канала (если они доступны, например в хранимых процедурах). Он также может использоваться для получения <xref:System.Security.Principal.WindowsIdentity>, представляющий удостоверение вызывающего клиента Microsoft Windows, если проверка подлинности клиента с сервера с помощью встроенной проверки подлинности.</xref:System.Security.Principal.WindowsIdentity>"
  example:
  - "The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>. The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.  \n  \n [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_11_1.vb)]\n [!code-cs[DataWorks SqlPipe.SendResultsRow#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_11_1.cs)]"
  syntax:
    content: public sealed class SqlContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  id: IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Указывает ли вызывающий код выполняется в рамках SQL Server, и если возможен контекстного соединения."
  remarks: "Если это свойство возвращает значение false, все остальные <xref:Microsoft.SqlServer.Server.SqlContext>вызывать члены <xref:System.InvalidOperationException>при использовании.</xref:System.InvalidOperationException> </xref:Microsoft.SqlServer.Server.SqlContext>       Если это свойство возвращает значение false, любая попытка открыть объект соединения, имеющий» контекстного соединения = true» в строке подключения завершается ошибкой.       Это свойство доступно только для чтения.       При использовании ADO.NET для доступа к данным, если фрагмент кода может выполняться как в SQL Server (с помощью интеграцию со средой CLR), так и вне SQL Server, это свойство может использоваться для проверки того, доступно ли контекстное соединение."
  syntax:
    content: public static bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если подключение контекста, а другой <xref href=&quot;Microsoft.SqlServer.Server.SqlContext&quot;> </xref> членам можно получить доступ."
  overload: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  id: Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Получает объект канала, который позволяет вызывающему объекту отправлять результирующие наборы, сообщения и результаты выполнения команды обратно клиенту."
  remarks: "При вызове из вне SQL Server <xref:System.NotSupportedException>возникает исключение.</xref:System.NotSupportedException>       Это свойство доступно только для чтения."
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlPipe
      description: "Экземпляр <xref href=&quot;Microsoft.SqlServer.Server.SqlPipe&quot;> </xref> Если канал доступен, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при вызове в контексте, где канал недоступен (например, в определяемой пользователем функции)."
  overload: Microsoft.SqlServer.Server.SqlContext.Pipe*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  id: TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Получает контекст триггера, используемый для предоставления вызывающей стороне со сведениями о том, что вызвало срабатывание триггера и сопоставления столбцов, которые были обновлены."
  remarks: "<xref:Microsoft.SqlServer.Server.SqlTriggerContext>Объекта можно получить только из общих триггера среды выполнения языка.</xref:Microsoft.SqlServer.Server.SqlTriggerContext>       Если обращение к свойству TriggerContext из вне SQL Server <xref:System.NotSupportedException>возникает исключение.</xref:System.NotSupportedException>       Это свойство доступно только для чтения."
  syntax:
    content: public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }
    return:
      type: Microsoft.SqlServer.Server.SqlTriggerContext
      description: "Экземпляр <xref href=&quot;Microsoft.SqlServer.Server.SqlTriggerContext&quot;> </xref> Если контекст триггер доступен, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при вызове за пределами вызов триггера."
  overload: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  id: WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Microsoft Windows удостоверение вызывающей стороны."
  remarks: "Среда CLR кода CLR в SQL Server всегда вызывается в контексте учетной записи процесса. При необходимости код для выполнения действий с использованием удостоверения вызывающего пользователя, а не удостоверения процесса SQL Server, маркер олицетворения нужно получить через это свойство. После получения <xref:System.Security.Principal.WindowsIdentity>объекта, вызывающие могут олицетворять учетную запись клиента и выполнять действия от их имени.</xref:System.Security.Principal.WindowsIdentity>       При вызове из вне SQL Server <xref:System.NotSupportedException>возникает исключение.</xref:System.NotSupportedException>       Только сборки, имеющие `EXTERNAL_ACCESS` или `UNSAFE` разрешений можно получить доступ к этому свойству.       Это свойство доступно только для чтения."
  example:
  - "The following example shows how to get the Windows identity of the calling client and impersonate the client. See \"Impersonation Sample\" in SQL Server Books Online for an example of impersonation using the WindowsIdentity property.  \n  \n [!code-cs[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/csharp/p-microsoft.sqlserver.se_6_1.cs)]\n [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/add/codesnippet/visualbasic/p-microsoft.sqlserver.se_6_1.vb)]"
  syntax:
    content: public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "Объект <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> экземпляр, представляющий удостоверение Windows вызывающего объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если клиент прошел проверку подлинности с использованием проверки подлинности SQL Server."
  overload: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
  fullName: Microsoft.SqlServer.Server.SqlContext.IsAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
  fullName: Microsoft.SqlServer.Server.SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlPipe
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlPipe
  nameWithType: SqlPipe
  fullName: Microsoft.SqlServer.Server.SqlPipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
  fullName: Microsoft.SqlServer.Server.SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlTriggerContext
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlTriggerContext
  nameWithType: SqlTriggerContext
  fullName: Microsoft.SqlServer.Server.SqlTriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
  fullName: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: Microsoft.SqlServer.Server.SqlContext.IsAvailable*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: IsAvailable
  nameWithType: SqlContext.IsAvailable
- uid: Microsoft.SqlServer.Server.SqlContext.Pipe*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: Pipe
  nameWithType: SqlContext.Pipe
- uid: Microsoft.SqlServer.Server.SqlContext.TriggerContext*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: TriggerContext
  nameWithType: SqlContext.TriggerContext
- uid: Microsoft.SqlServer.Server.SqlContext.WindowsIdentity*
  parent: Microsoft.SqlServer.Server.SqlContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: SqlContext.WindowsIdentity
