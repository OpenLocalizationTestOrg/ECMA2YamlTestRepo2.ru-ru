### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.Matrix
  id: Matrix
  children:
  - System.Drawing.Drawing2D.Matrix.#ctor
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Clone
  - System.Drawing.Drawing2D.Matrix.Dispose
  - System.Drawing.Drawing2D.Matrix.Elements
  - System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  - System.Drawing.Drawing2D.Matrix.Finalize
  - System.Drawing.Drawing2D.Matrix.GetHashCode
  - System.Drawing.Drawing2D.Matrix.Invert
  - System.Drawing.Drawing2D.Matrix.IsIdentity
  - System.Drawing.Drawing2D.Matrix.IsInvertible
  - System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.OffsetX
  - System.Drawing.Drawing2D.Matrix.OffsetY
  - System.Drawing.Drawing2D.Matrix.Reset
  - System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  - System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  - System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  - System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  - System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  langs:
  - csharp
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
  type: Class
  summary: "Инкапсулирует аффинное матрицу 3 x 3, представляющим геометрическое преобразование. Этот класс не наследуется."
  remarks: "В [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] можно хранить аффинные преобразования в объекте Matrix. Поскольку третий столбец матрицы, задающей аффинное преобразование всегда является (0, 0, 1), укажите только шесть чисел в первых двух столбцах при создании объекта матрицы. Инструкция `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` создает матрицу, изображенную на рисунке ниже.       ![Преобразования](~/add/media/aboutgdip05-art10.gif &quot;преобразования&quot;) ## составного преобразования составные преобразования типа представляет собой последовательность преобразований, одно за другим. Рассмотрим матрицы и преобразования в следующем списке: ^ ^ ^   |-|-|   | Матрицы A | Повернуть на 90 градусов |   | Матрица B | Масштаб с коэффициентом 2 по оси x |   | Матрица C | Сдвиг на три единицы по оси y |       Мы начнем с точкой (2, 1), представленный в матрице [2 1 1] — и умножьте, B и затем C, точка (2, 1) будут подвергнуты три преобразования в указанном порядке.       [2 1 1] ABC = [1-2 5] вместо не хранить три части составного преобразования в три отдельных матрицы, можно умножить A, B и C вместе для получения одного матрицу 3 × 3, которая хранит все составное преобразование. Предположим, что ABC = D. Затем точка, умноженная D дает тот же результат, как точка, умноженное на A, B и C.       [2 1 1] D = [1-2 5] на следующем рисунке показан матрицы A, B, C и D.       ![Преобразования](~/add/media/aboutgdip05-art12.gif &quot;преобразования&quot;) тот факт, что матрица составного преобразования может быть создана путем перемножения отдельных матриц преобразования означает, что любая последовательность аффинных преобразований могут храниться в одном объекте матрицы.      Настроек [!CAUTION] настроек важен порядок составное преобразование. В общем случае поворот, затем масштабирование, а затем перевод не совпадает как масштабирование, затем поворот, затем сдвиг. Аналогичным образом важен порядок умножения для матрицы. В общем случае ABC не равно BAC.       Класс Matrix предоставляет несколько методов для составных преобразований: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>и <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</xref:System.Drawing.Drawing2D.Matrix.Translate%2A> </xref:System.Drawing.Drawing2D.Matrix.Shear%2A> </xref:System.Drawing.Drawing2D.Matrix.Scale%2A> </xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> </xref:System.Drawing.Drawing2D.Matrix.Rotate%2A> </xref:System.Drawing.Drawing2D.Matrix.Multiply%2A> В следующем примере создается матрица составного преобразования, реализующей поворот на 30 градусов, затем масштабирование с коэффициентом 2 по оси y и сдвиг на 5 единиц по оси x: [!code-vb [System.Drawing.CoordinateSystems#11](~/add/codesnippet/visualbasic/t-system.drawing.drawing_10_1.vb)][!code-cs[System.Drawing.CoordinateSystems#11  ](~/add/codesnippet/csharp/t-system.drawing.drawing_10_1.cs)]"
  syntax:
    content: 'public sealed class Matrix : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix()
  nameWithType: Matrix.Matrix()
  fullName: System.Drawing.Drawing2D.Matrix.Matrix()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> класс как единичной матрицей."
  syntax:
    content: public Matrix ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Point[])'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(Rectangle,Point[])
  nameWithType: Matrix.Matrix(Rectangle,Point[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Rectangle,Point[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> класса для геометрического преобразования, определяемого указанным прямоугольником и массивом точек."
  remarks: "Этот метод инициализирует новую матрицу, представляющую геометрическое преобразование, которое отображает прямоугольник, задаваемый параметром `rect` параллелограмм, определяемый тремя точками в `plgpts` параметра. Верхнего левого угла прямоугольника сопоставляется с первой точкой `plgpts` массива, правый верхний угол сопоставляется ко второй точке, а третья точка сопоставляется левого нижнего угла. Первые три подразумевается правой нижней точки параллелограмма."
  syntax:
    content: public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> структура, представляющая преобразуемый прямоугольник."
    - id: plgpts
      type: System.Drawing.Point[]
      description: "Массив из трех <xref href=&quot;System.Drawing.Point&quot;> </xref> структуры, представляющих точки параллелограмма, в который преобразуются левый верхний, правый верхний и левый нижний углы прямоугольника. В правый нижний угол параллелограмма подразумевается первых трех углов."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(RectangleF,PointF[])
  nameWithType: Matrix.Matrix(RectangleF,PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(RectangleF,PointF[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> класса для геометрического преобразования, определяемого указанным прямоугольником и массивом точек."
  remarks: "Этот метод инициализирует новый <xref:System.Drawing.Drawing2D.Matrix>таким образом, что он представляет геометрическое преобразование, которое отображает прямоугольник, задаваемый параметром `rect` параллелограмм, определяемый тремя точками в `plgpts` параметр.</xref:System.Drawing.Drawing2D.Matrix> Верхнего левого угла прямоугольника сопоставляется с первой точкой `plgpts` массива, правый верхний угол сопоставляется ко второй точке, а третья точка сопоставляется левого нижнего угла. Первые три подразумевается правой нижней точки параллелограмма."
  syntax:
    content: public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Объект <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> структура, представляющая преобразуемый прямоугольник."
    - id: plgpts
      type: System.Drawing.PointF[]
      description: "Массив из трех <xref href=&quot;System.Drawing.PointF&quot;> </xref> структуры, представляющих точки параллелограмма, в который преобразуются левый верхний, правый верхний и левый нижний углы прямоугольника. В правый нижний угол параллелограмма подразумевается первых трех углов."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Matrix(Single,Single,Single,Single,Single,Single)
  nameWithType: Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> класса с указанными элементами."
  syntax:
    content: public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);
    parameters:
    - id: m11
      type: System.Single
      description: "Значение в первой строки и первого столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m12
      type: System.Single
      description: "Значение в первой строки и второго столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m21
      type: System.Single
      description: "Значение на пересечении второй строки и первого столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: m22
      type: System.Single
      description: "Значение на второй строки и второго столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: dx
      type: System.Single
      description: "Значение в третьей строки и первого столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: dy
      type: System.Single
      description: "Значение в третьей строки и второго столбца нового <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Clone()
  nameWithType: Matrix.Clone()
  fullName: System.Drawing.Drawing2D.Matrix.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает точную копию данного объекта <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Clone ();
    parameters: []
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , Создаваемый данным методом."
  overload: System.Drawing.Drawing2D.Matrix.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Dispose()
  nameWithType: Matrix.Dispose()
  fullName: System.Drawing.Drawing2D.Matrix.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Освобождает все ресурсы, используемые этим <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Вызов `Dispose` позволяет ресурсы, используемые <xref:System.Drawing.Drawing2D.Matrix>объекта перераспределить для других целей.</xref:System.Drawing.Drawing2D.Matrix>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Elements
  id: Elements
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Elements
  nameWithType: Matrix.Elements
  fullName: System.Drawing.Drawing2D.Matrix.Elements
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает массив значений с плавающей запятой, представляющий элементы этого объекта <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Элементы m11, m12, m21, m22, dx и dy объекта <xref:System.Drawing.Drawing2D.Matrix>представленных значениями в массиве в указанном порядке.</xref:System.Drawing.Drawing2D.Matrix>"
  syntax:
    content: public float[] Elements { get; }
    return:
      type: System.Single[]
      description: "Массив значений с плавающей запятой, представляющий элементы этого объекта <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Elements*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Drawing.Drawing2D.Matrix.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Проверяет, является ли указанный объект <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> и идентичен объекту <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект для тестирования."
    return:
      type: System.Boolean
      description: "Этот метод возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если <code> obj </code> задан <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> идентичным этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Finalize()
  nameWithType: Matrix.Finalize()
  fullName: System.Drawing.Drawing2D.Matrix.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~Matrix ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Drawing.Drawing2D.Matrix.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает хэш-код."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для данного <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Invert
  id: Invert
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Drawing.Drawing2D.Matrix.Invert()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Обращает матрицу <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>, если она обратима."
  remarks: ''
  example:
  - "The following code example creates a matrix and inverts it:  \n  \n```c#  \nMatrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  \n myMatrix.Invert();  \n```"
  syntax:
    content: public void Invert ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Invert*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity
  id: IsIdentity
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Drawing.Drawing2D.Matrix.IsIdentity
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает значение, указывающее, является ли это <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> единичной матрицей."
  syntax:
    content: public bool IsIdentity { get; }
    return:
      type: System.Boolean
      description: "Это свойство является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> при этом <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> является идентификатором; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.IsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible
  id: IsInvertible
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
  fullName: System.Drawing.Drawing2D.Matrix.IsInvertible
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает значение, указывающее, является ли это <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> обратимой."
  syntax:
    content: public bool IsInvertible { get; }
    return:
      type: System.Boolean
      description: "Это свойство является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> при этом <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> является обратимой; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.IsInvertible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  id: Multiply(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Multiply(Matrix)
  nameWithType: Matrix.Multiply(Matrix)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает эту матрицу <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> матрицу, указанную в <code> matrix </code> параметра путем добавления перед указанным <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.
  syntax:
    content: public void Multiply (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , На который <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> умножается."
  overload: System.Drawing.Drawing2D.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Multiply(Matrix,MatrixOrder)
  nameWithType: Matrix.Multiply(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает эту матрицу <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> матрицу, указанную в <code> matrix </code> параметра и в порядке, указанном в <code> order </code> параметра."
  remarks: "Если указан порядок <xref:System.Drawing.Drawing2D.MatrixOrder>, то <xref:System.Drawing.Drawing2D.Matrix>умножается на заданную матрицу в порядке, присоединяемый.</xref:System.Drawing.Drawing2D.Matrix> </xref:System.Drawing.Drawing2D.MatrixOrder> Если указан порядок <xref:System.Drawing.Drawing2D.MatrixOrder>, то <xref:System.Drawing.Drawing2D.Matrix>умножается на заданную матрицу в порядке их присоединенных.</xref:System.Drawing.Drawing2D.Matrix> </xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates three matrices.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.  \n  \n-   Lists the contents of matrix 1 to the screen.  \n  \n-   Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).  \n  \n-   Applies the transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.  \n  \n Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/cpp/8671b24d-b76c-4435-bbb4-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/visualbasic/8671b24d-b76c-4435-bbb4-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/add/codesnippet/csharp/8671b24d-b76c-4435-bbb4-_1.cs)]"
  syntax:
    content: public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , На который <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> умножается."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "<xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , Представляющий порядок умножения."
  overload: System.Drawing.Drawing2D.Matrix.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.OffsetX
  id: OffsetX
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Drawing.Drawing2D.Matrix.OffsetX
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает перевод значение x (значение dx, или элемент на третьей строки и первого столбца) объекта <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public float OffsetX { get; }
    return:
      type: System.Single
      description: "Значение сдвига по x этого <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.OffsetX*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.OffsetY
  id: OffsetY
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Drawing.Drawing2D.Matrix.OffsetY
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает перевод значение y (значение dy, или элемент на пересечении третьей строки и второго столбца) этого <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  syntax:
    content: public float OffsetY { get; }
    return:
      type: System.Single
      description: "Значение сдвига по y этого <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.OffsetY*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Reset
  id: Reset
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Reset()
  nameWithType: Matrix.Reset()
  fullName: System.Drawing.Drawing2D.Matrix.Reset()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Сбрасывает этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> Чтобы получить элементы единичной матрицей."
  remarks: "Элементы на главной диагонали единичной матрицы равны 1. Все остальные элементы единичной матрицы равны 0."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates a scaling matrix.  \n  \n-   Lists the matrix elements to the screen.  \n  \n-   Resets the matrix to identity.  \n  \n-   Lists the elements to the screen.  \n  \n-   Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.  \n  \n-   Lists the elements of the translated matrix to the screen.  \n  \n-   Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).  \n  \n-   Applies the transform to the rectangle.  \n  \n-   Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.  \n  \n Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/cpp/m-system.drawing.drawing_5_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.drawing_5_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/add/codesnippet/csharp/m-system.drawing.drawing_5_1.cs)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Drawing.Drawing2D.Matrix.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  id: Rotate(System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Rotate(Single)
  nameWithType: Matrix.Rotate(Single)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Добавляет в этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> поворот по часовой стрелке, вокруг начала координат и на заданный угол."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Rotate (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота в градусах."
  overload: System.Drawing.Drawing2D.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Rotate(Single,MatrixOrder)
  nameWithType: Matrix.Rotate(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет поворот по часовой стрелке на сумму, указанную в <code> angle </code> параметр вокруг начала координат (нулевые координаты x и y) для этого <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  \n  \n-   Creates a matrix and rotates it 45 degrees.  \n  \n-   Applies this matrix transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/cpp/4dc64a49-8a71-40e5-a40b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/visualbasic/4dc64a49-8a71-40e5-a40b-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/add/codesnippet/csharp/4dc64a49-8a71-40e5-a40b-_1.cs)]"
  syntax:
    content: public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол (величина) поворота в градусах."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок (в конце или в начале), в котором применяется поворот к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Rotate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  id: RotateAt(System.Single,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: RotateAt(Single,PointF)
  nameWithType: Matrix.RotateAt(Single,PointF)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет поворот по часовой стрелке к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> вокруг точки, указанной в <code> point </code> параметра, добавляя поворот."
  remarks: ''
  example:
  - "The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#5](~/add/codesnippet/csharp/m-system.drawing.drawing_11_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#5](~/add/codesnippet/cpp/m-system.drawing.drawing_11_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.drawing_11_1.vb)]"
  syntax:
    content: public void RotateAt (float angle, System.Drawing.PointF point);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол (величина) поворота в градусах."
    - id: point
      type: System.Drawing.PointF
      description: "Объект <xref href=&quot;System.Drawing.PointF&quot;> </xref> , представляющий центральную точку поворота."
  overload: System.Drawing.Drawing2D.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: RotateAt(Single,PointF,MatrixOrder)
  nameWithType: Matrix.RotateAt(Single,PointF,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет поворот по часовой стрелке вокруг указанной точки к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  \n  \n-   Creates a matrix and rotates it 45 degrees around a specified point.  \n  \n-   Applies this matrix transform is to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the RotateAt method).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/cpp/fc8aec2b-1f13-41da-9f14-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/visualbasic/fc8aec2b-1f13-41da-9f14-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/add/codesnippet/csharp/fc8aec2b-1f13-41da-9f14-_1.cs)]"
  syntax:
    content: public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота в градусах."
    - id: point
      type: System.Drawing.PointF
      description: "Объект <xref href=&quot;System.Drawing.PointF&quot;> </xref> , представляющий центральную точку поворота."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок (в конце или в начале), в котором применяется поворот."
  overload: System.Drawing.Drawing2D.Matrix.RotateAt*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  id: Scale(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Scale(Single,Single)
  nameWithType: Matrix.Scale(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор масштабирования к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , добавляя вектор масштабирования."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Scale (float scaleX, float scaleY);
    parameters:
    - id: scaleX
      type: System.Single
      description: "Коэффициент масштаба <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> по оси х."
    - id: scaleY
      type: System.Single
      description: "Коэффициент масштаба <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> по оси y."
  overload: System.Drawing.Drawing2D.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Scale(Single,Single,MatrixOrder)
  nameWithType: Matrix.Scale(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор масштабирования (<code> scaleX </code> и <code> scaleY </code>) к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  \n  \n-   Applies this matrix transform to the rectangle.  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/cpp/05985bb7-69b2-4fd4-9c7f-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/visualbasic/05985bb7-69b2-4fd4-9c7f-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/add/codesnippet/csharp/05985bb7-69b2-4fd4-9c7f-_1.cs)]"
  syntax:
    content: public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: scaleX
      type: System.Single
      description: "Коэффициент масштаба <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> по оси х."
    - id: scaleY
      type: System.Single
      description: "Коэффициент масштаба <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> по оси y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок (в конце или в начале), в котором применяется вектор масштабирования к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  id: Shear(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Shear(Single,Single)
  nameWithType: Matrix.Shear(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор сдвига к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , добавляя преобразование сдвига."
  remarks: "Преобразование, применяемое в этот метод является чистым сдвигом только в том случае, если один из параметров равно 0. Применить к прямоугольнику в источнике, при `shearY` равным 0, преобразование сдвигает нижний край по горизонтали на `shearX` высот прямоугольника. Когда `shearX` равным 0, он перемещает правого края вертикально на `shearY` широт прямоугольника. Предупреждение — в порядке, если оба параметра имеют значение ненулевое, так как сложно предсказать результат. Например, если оба коэффициента равны 1, преобразование становится вырожденным (поэтому необратимым), сжимая всю плоскость в одну строку."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following action:  \n  \n-   Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.  \n  \n-   Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.  \n  \n-   Draws another rectangle using a red pen.  \n  \n-   Draws an ellipse using a blue pen.  \n  \n The result is a green rectangle, a red parallelogram and a transformed, blue ellipse. Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call. The other two figures are transformed prior to drawing. The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram. Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/cpp/m-system.drawing.drawing_3_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/add/codesnippet/csharp/m-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: public void Shear (float shearX, float shearY);
    parameters:
    - id: shearX
      type: System.Single
      description: "Коэффициент горизонтального сдвига."
    - id: shearY
      type: System.Single
      description: "Коэффициент вертикального сдвига."
  overload: System.Drawing.Drawing2D.Matrix.Shear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Shear(Single,Single,MatrixOrder)
  nameWithType: Matrix.Shear(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор сдвига к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: "Преобразование, применяемое в этот метод является чистым сдвигом только в том случае, если один из параметров равно 0. Применить к прямоугольнику в источнике, при `shearY` равным 0, преобразование сдвигает нижний край по горизонтали на `shearX` высот прямоугольника. Когда `shearX` равным 0, он перемещает правого края вертикально на `shearY` широт прямоугольника. Предупреждение — в порядке, если оба параметра имеют значение ненулевое, так как сложно предсказать результат. Например, если оба коэффициента равны 1, преобразование становится вырожденным (поэтому необратимым), сжимая всю плоскость в одну строку."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.
  syntax:
    content: public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: shearX
      type: System.Single
      description: "Коэффициент горизонтального сдвига."
    - id: shearY
      type: System.Single
      description: "Коэффициент вертикального сдвига."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок (в конце или в начале), в котором применяется сдвиг."
  overload: System.Drawing.Drawing2D.Matrix.Shear*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  id: TransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformPoints(Point[])
  nameWithType: Matrix.TransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет геометрическое преобразование, представляемое этим <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> к указанному массиву точек."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates an array of points that form a rectangle.  \n  \n-   Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  \n  \n-   Applies this matrix transform to the array of points.  \n  \n-   Draws the transformed array to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/cpp/m-system.drawing.drawing_1_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.drawing_1_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/add/codesnippet/csharp/m-system.drawing.drawing_1_1.cs)]"
  syntax:
    content: public void TransformPoints (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Массив <xref href=&quot;System.Drawing.Point&quot;> </xref> структуры, который представляет точки для преобразования."
  overload: System.Drawing.Drawing2D.Matrix.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  id: TransformPoints(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformPoints(PointF[])
  nameWithType: Matrix.TransformPoints(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет геометрическое преобразование, представляемое этим <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> к указанному массиву точек."
  remarks: ''
  example:
  - For an example, see [TransformPoints(Point\[\])](assetId:///M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void TransformPoints (System.Drawing.PointF[] pts);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Массив <xref href=&quot;System.Drawing.PointF&quot;> </xref> структуры, который представляет точки для преобразования."
  overload: System.Drawing.Drawing2D.Matrix.TransformPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  id: TransformVectors(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformVectors(Point[])
  nameWithType: Matrix.TransformVectors(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет только компоненты масштабирования и поворота этого <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> к указанному массиву точек."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Creates an array of points that form a rectangle.  \n  \n-   Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).  \n  \n-   Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.  \n  \n-   Lists the matrix elements to the screen.  \n  \n-   Applies this matrix transform to the array of points.  \n  \n-   Draws the transformed array to the screen (the red rectangle).  \n  \n Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/cpp/m-system.drawing.drawing_12_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.drawing_12_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/add/codesnippet/csharp/m-system.drawing.drawing_12_1.cs)]"
  syntax:
    content: public void TransformVectors (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Массив <xref href=&quot;System.Drawing.Point&quot;> </xref> структуры, который представляет точки для преобразования."
  overload: System.Drawing.Drawing2D.Matrix.TransformVectors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  id: TransformVectors(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: TransformVectors(PointF[])
  nameWithType: Matrix.TransformVectors(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает каждый вектор массива на матрицу. Элементы смещения данной матрицы (третья строка) игнорируются."
  remarks: ''
  example:
  - For an example, see [TransformVectors(Point\[\])](assetId:///M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void TransformVectors (System.Drawing.PointF[] pts);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Массив <xref href=&quot;System.Drawing.Point&quot;> </xref> структуры, который представляет точки для преобразования."
  overload: System.Drawing.Drawing2D.Matrix.TransformVectors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  id: Translate(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Translate(Single,Single)
  nameWithType: Matrix.Translate(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор смещения (<code> offsetX </code> и <code> offsetY </code>) к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , добавляя вектор смещения в начало."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.
  syntax:
    content: public void Translate (float offsetX, float offsetY);
    parameters:
    - id: offsetX
      type: System.Single
      description: "Значение x, на которое смещается этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: offsetY
      type: System.Single
      description: "Значение y, на которое смещается этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: Translate(Single,Single,MatrixOrder)
  nameWithType: Matrix.Translate(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Применяет указанный вектор сдвига к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object. The code performs the following actions:  \n  \n-   Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).  \n  \n-   Creates a matrix and translates it by 100 in both axes.  \n  \n-   Applies this matrix transform to the rectangle,  \n  \n-   Draws the transformed rectangle to the screen (the red rectangle).  \n  \n Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.  \n  \n [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/cpp/48411d65-00d9-48ff-a809-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/visualbasic/48411d65-00d9-48ff-a809-_1.vb)]\n [!code-cs[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/add/codesnippet/csharp/48411d65-00d9-48ff-a809-_1.cs)]"
  syntax:
    content: public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: offsetX
      type: System.Single
      description: "Значение x, на которое смещается этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: offsetY
      type: System.Single
      description: "Значение y, на которое смещается этот <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок (в конце или в начале), в которой преобразование применяется к этому <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  overload: System.Drawing.Drawing2D.Matrix.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  id: VectorTransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  langs:
  - csharp
  name: VectorTransformPoints(Point[])
  nameWithType: Matrix.VectorTransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает каждый вектор массива на матрицу. Элементы смещения данной матрицы (третья строка) игнорируются."
  syntax:
    content: public void VectorTransformPoints (System.Drawing.Point[] pts);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Массив <xref href=&quot;System.Drawing.Point&quot;> </xref> структуры, который представляет точки для преобразования."
  overload: System.Drawing.Drawing2D.Matrix.VectorTransformPoints*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.Matrix.#ctor
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix()
  nameWithType: Matrix.Matrix()
  fullName: System.Drawing.Drawing2D.Matrix.Matrix()
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(Rectangle,Point[])
  nameWithType: Matrix.Matrix(Rectangle,Point[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Rectangle,Point[])
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(RectangleF,PointF[])
  nameWithType: Matrix.Matrix(RectangleF,PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(RectangleF,PointF[])
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix(Single,Single,Single,Single,Single,Single)
  nameWithType: Matrix.Matrix(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Matrix(Single,Single,Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.Matrix.Clone
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Clone()
  nameWithType: Matrix.Clone()
  fullName: System.Drawing.Drawing2D.Matrix.Clone()
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.Matrix.Dispose
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Dispose()
  nameWithType: Matrix.Dispose()
  fullName: System.Drawing.Drawing2D.Matrix.Dispose()
- uid: System.Drawing.Drawing2D.Matrix.Elements
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Elements
  nameWithType: Matrix.Elements
  fullName: System.Drawing.Drawing2D.Matrix.Elements
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.Matrix.Equals(System.Object)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: System.Drawing.Drawing2D.Matrix.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.Matrix.Finalize
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Finalize()
  nameWithType: Matrix.Finalize()
  fullName: System.Drawing.Drawing2D.Matrix.Finalize()
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: System.Drawing.Drawing2D.Matrix.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.Matrix.Invert
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Invert()
  nameWithType: Matrix.Invert()
  fullName: System.Drawing.Drawing2D.Matrix.Invert()
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
  fullName: System.Drawing.Drawing2D.Matrix.IsIdentity
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
  fullName: System.Drawing.Drawing2D.Matrix.IsInvertible
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply(Matrix)
  nameWithType: Matrix.Multiply(Matrix)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix)
- uid: System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply(Matrix,MatrixOrder)
  nameWithType: Matrix.Multiply(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Multiply(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.Matrix.OffsetX
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
  fullName: System.Drawing.Drawing2D.Matrix.OffsetX
- uid: System.Drawing.Drawing2D.Matrix.OffsetY
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
  fullName: System.Drawing.Drawing2D.Matrix.OffsetY
- uid: System.Drawing.Drawing2D.Matrix.Reset
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Reset()
  nameWithType: Matrix.Reset()
  fullName: System.Drawing.Drawing2D.Matrix.Reset()
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate(Single)
  nameWithType: Matrix.Rotate(Single)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single)
- uid: System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate(Single,MatrixOrder)
  nameWithType: Matrix.Rotate(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Rotate(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt(Single,PointF)
  nameWithType: Matrix.RotateAt(Single,PointF)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt(Single,PointF,MatrixOrder)
  nameWithType: Matrix.RotateAt(Single,PointF,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.RotateAt(Single,PointF,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale(Single,Single)
  nameWithType: Matrix.Scale(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale(Single,Single,MatrixOrder)
  nameWithType: Matrix.Scale(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Scale(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear(Single,Single)
  nameWithType: Matrix.Shear(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear(Single,Single,MatrixOrder)
  nameWithType: Matrix.Shear(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Shear(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints(Point[])
  nameWithType: Matrix.TransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(Point[])
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints(PointF[])
  nameWithType: Matrix.TransformPoints(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformPoints(PointF[])
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors(Point[])
  nameWithType: Matrix.TransformVectors(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(Point[])
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors(PointF[])
  nameWithType: Matrix.TransformVectors(PointF[])
  fullName: System.Drawing.Drawing2D.Matrix.TransformVectors(PointF[])
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate(Single,Single)
  nameWithType: Matrix.Translate(Single,Single)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single)
- uid: System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate(Single,Single,MatrixOrder)
  nameWithType: Matrix.Translate(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.Matrix.Translate(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: VectorTransformPoints(Point[])
  nameWithType: Matrix.VectorTransformPoints(Point[])
  fullName: System.Drawing.Drawing2D.Matrix.VectorTransformPoints(Point[])
- uid: System.Drawing.Drawing2D.Matrix.#ctor*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Matrix
  nameWithType: Matrix.Matrix
- uid: System.Drawing.Drawing2D.Matrix.Clone*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Clone
  nameWithType: Matrix.Clone
- uid: System.Drawing.Drawing2D.Matrix.Dispose*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Dispose
  nameWithType: Matrix.Dispose
- uid: System.Drawing.Drawing2D.Matrix.Elements*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Elements
  nameWithType: Matrix.Elements
- uid: System.Drawing.Drawing2D.Matrix.Equals*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Equals
  nameWithType: Matrix.Equals
- uid: System.Drawing.Drawing2D.Matrix.Finalize*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Finalize
  nameWithType: Matrix.Finalize
- uid: System.Drawing.Drawing2D.Matrix.GetHashCode*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
- uid: System.Drawing.Drawing2D.Matrix.Invert*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Invert
  nameWithType: Matrix.Invert
- uid: System.Drawing.Drawing2D.Matrix.IsIdentity*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsIdentity
  nameWithType: Matrix.IsIdentity
- uid: System.Drawing.Drawing2D.Matrix.IsInvertible*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: IsInvertible
  nameWithType: Matrix.IsInvertible
- uid: System.Drawing.Drawing2D.Matrix.Multiply*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Multiply
  nameWithType: Matrix.Multiply
- uid: System.Drawing.Drawing2D.Matrix.OffsetX*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetX
  nameWithType: Matrix.OffsetX
- uid: System.Drawing.Drawing2D.Matrix.OffsetY*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: OffsetY
  nameWithType: Matrix.OffsetY
- uid: System.Drawing.Drawing2D.Matrix.Reset*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Reset
  nameWithType: Matrix.Reset
- uid: System.Drawing.Drawing2D.Matrix.Rotate*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Rotate
  nameWithType: Matrix.Rotate
- uid: System.Drawing.Drawing2D.Matrix.RotateAt*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: RotateAt
  nameWithType: Matrix.RotateAt
- uid: System.Drawing.Drawing2D.Matrix.Scale*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Scale
  nameWithType: Matrix.Scale
- uid: System.Drawing.Drawing2D.Matrix.Shear*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Shear
  nameWithType: Matrix.Shear
- uid: System.Drawing.Drawing2D.Matrix.TransformPoints*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformPoints
  nameWithType: Matrix.TransformPoints
- uid: System.Drawing.Drawing2D.Matrix.TransformVectors*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: TransformVectors
  nameWithType: Matrix.TransformVectors
- uid: System.Drawing.Drawing2D.Matrix.Translate*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: Translate
  nameWithType: Matrix.Translate
- uid: System.Drawing.Drawing2D.Matrix.VectorTransformPoints*
  parent: System.Drawing.Drawing2D.Matrix
  isExternal: false
  name: VectorTransformPoints
  nameWithType: Matrix.VectorTransformPoints
