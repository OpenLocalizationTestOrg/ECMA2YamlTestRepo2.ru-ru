### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlReader
  id: XamlReader
  children:
  - System.Xaml.XamlReader.#ctor
  - System.Xaml.XamlReader.Close
  - System.Xaml.XamlReader.Dispose(System.Boolean)
  - System.Xaml.XamlReader.IsDisposed
  - System.Xaml.XamlReader.IsEof
  - System.Xaml.XamlReader.Member
  - System.Xaml.XamlReader.Namespace
  - System.Xaml.XamlReader.NodeType
  - System.Xaml.XamlReader.Read
  - System.Xaml.XamlReader.ReadSubtree
  - System.Xaml.XamlReader.SchemaContext
  - System.Xaml.XamlReader.Skip
  - System.Xaml.XamlReader.System#IDisposable#Dispose
  - System.Xaml.XamlReader.Type
  - System.Xaml.XamlReader.Value
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
  type: Class
  summary: "Предоставляет базовые определения для классов, получающих входные данные XAML и создающих потоки узлов XAML."
  remarks: "XamlReader является абстрактным классом и не предоставляет реализаций или определений, имеющих работающий результат для всех элементов. Элементы, имеющие реализацию в XamlReader указаны в примечания для этого элемента. В частности XamlReader имеет несколько абстрактных членов, которые должны быть реализованы и несколько виртуальных членов.       Для виртуальных членов <xref:System.Xaml.XamlReader.ReadSubtree%2A>и <xref:System.Xaml.XamlReader.Skip%2A>Каждая реализация по умолчанию, подходит для большинства случаев.</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> Тем не менее <xref:System.Xaml.XamlReader.ReadSubtree%2A>и <xref:System.Xaml.XamlReader.Skip%2A>реализации по умолчанию зависит от другого ожидаемого поведения реализации средства чтения XAML, в частности, они используют <xref:System.Xaml.XamlReader.Read%2A>переопределить.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Dispose%2A>также является виртуальный член, имеющий реализацию по умолчанию работу.</xref:System.Xaml.XamlReader.Dispose%2A>       Следующие два класса лучше всего подходят и Практическое применение производные классы в службах XAML .NET Framework и в сборке System.Xaml:- <xref:System.Xaml.XamlObjectReader>, который читает граф объектов, например графе активный объект приложения во время выполнения.</xref:System.Xaml.XamlObjectReader>      - <xref:System.Xaml.XamlXmlReader>, который читает XAML в виде текстового файла XML с помощью Общие <xref:System.Xml.XmlReader>, загружает файл как промежуточные вспомогательного класса.</xref:System.Xml.XmlReader> </xref:System.Xaml.XamlXmlReader>       Включать другие средства чтения XAML из других платформ <xref:System.Windows.Baml2006.Baml2006Reader>и <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</xref:System.Activities.Debugger.XamlDebuggerXmlReader> </xref:System.Windows.Baml2006.Baml2006Reader>       XamlReader отличается от [!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)] и <xref:System.Xml.XmlReader>принципа разработки, так как нет XamlReader `Create` метод для возврата по умолчанию базовой реализации средства чтения XAML.</xref:System.Xml.XmlReader> Вместо этого необходимо создать экземпляр определенного производные классы средства чтения XAML, вызвав их конструкторы или другие вспомогательные данного класса API.      ## Поддереве чтения для большей части, вызов XamlReader API в контексте конкретного классы средства чтения XAML, которые являются производными от XamlReader. Тем не менее в одном конкретном случае доступ к XamlReader API на практические экземпляр средства чтения XAML, который не является открытым и не производным от <xref:System.Xaml.XamlObjectReader>или <xref:System.Xaml.XamlXmlReader>.</xref:System.Xaml.XamlXmlReader> </xref:System.Xaml.XamlObjectReader> Этот вариант является при вызове <xref:System.Xaml.XamlReader.ReadSubtree%2A>, который возвращает экземпляр XamlReader.</xref:System.Xaml.XamlReader.ReadSubtree%2A> В реализации по умолчанию XamlReader, который возвращается этим API является внутренним классом.       Получить XamlReader для чтения поддерево имеет допустимые действия для API-интерфейсов, таких как <xref:System.Xaml.XamlReader.Read%2A>и <xref:System.Xaml.XamlReader.NodeType%2A>, и эти действия зависят от родительского класса. модуль чтения</xref:System.Xaml.XamlReader.NodeType%2A> </xref:System.Xaml.XamlReader.Read%2A> Такая структура позволяет внутреннему классу отслеживать уровень рамки, где было введено поддерево. Действующее поддерево XamlReader гарантирует, что если текущего положения узла перемещается за пределы поддерева, конкретных средство сообщает конец файла или `null` в текущем узле.       Примечания об использовании средства чтения поддерева включены в некоторых XamlReader интерфейсов API."
  syntax:
    content: 'public abstract class XamlReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Инициализирует <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> класса."
  syntax:
    content: protected XamlReader ();
    parameters: []
  overload: System.Xaml.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Close
  id: Close
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Закрывает поток узлов XAML."
  remarks: "В базовой реализации вызывающий вызывает закрытие <xref:System.Xaml.XamlReader.Dispose%2A>с `isDisposing` параметр как `true`.</xref:System.Xaml.XamlReader.Dispose%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Xaml.XamlReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>и при необходимости освобождает также управляемые ресурсы."
  remarks: "Необходимо вызвать метод базового класса, чтобы получить <xref:System.Xaml.XamlReader.IsDisposed%2A>= `true`.</xref:System.Xaml.XamlReader.IsDisposed%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы освободить управляемые ресурсы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsDisposed
  id: IsDisposed
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Получает ли <xref:System.Xaml.XamlReader.Dispose*>был вызван.</xref:System.Xaml.XamlReader.Dispose*>"
  syntax:
    content: protected bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Xaml.XamlReader.Dispose*>вызван; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlReader.Dispose*>"
  overload: System.Xaml.XamlReader.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsEof
  id: IsEof
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает значение, определяющее, находится ли позиция средства чтения в конец файла."
  remarks: "Средства чтения поддерева может вызывать IsEof, с поведением, правильно отражает границы поддерева. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool IsEof { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если позиция находится в концептуальных конец файла в потоке узлов XAML; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.IsEof*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Member
  id: Member
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает текущий элемент в позиции чтения, если позиция средства чтения находится на <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>."
  remarks: "Средства чтения поддерева можно вызвать член, поведение ограничений. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlMember Member { get; }
    return:
      type: System.Xaml.XamlMember
      description: "Текущий элемент; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если позиция средства чтения находится не на элемент."
  overload: System.Xaml.XamlReader.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Namespace
  id: Namespace
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает сведения о пространстве имен XAML из текущего узла."
  remarks: "Целевой Дизайн этот API является возврат только ненулевой результат, если <xref:System.Xaml.XamlReader.NodeType%2A>текущий узел является <xref:System.Xaml.XamlNodeType>.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlReader.NodeType%2A> Свойство не сообщает пространство имен XAML, которое применяется к объектам или элементам в общем смысле масштаба данных, интерпретируемом в контексте схемы XAML. Приложение должно предоставлять средство кэширования сведений для действующего пространства имен XAML как его прохождения узлов XAML, если требуется, чтобы эти данные в виде, отличном от как контекст схемы XAML сообщает об этом в средство записи. В разделе<xref:System.Xaml.XamlXmlReader.Namespace%2A> для заметок на Эталонная реализация.</xref:System.Xaml.XamlXmlReader.Namespace%2A>"
  syntax:
    content: public abstract System.Xaml.NamespaceDeclaration Namespace { get; }
    return:
      type: System.Xaml.NamespaceDeclaration
      description: "Сведения о пространстве имен XAML, если он доступен; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.NodeType
  id: NodeType
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе возвращает тип текущего узла."
  remarks: "Средства чтения поддерева может вызывать NodeType, поведение ограничений. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlNodeType NodeType { get; }
    return:
      type: System.Xaml.XamlNodeType
      description: "Значение <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> перечисления."
  overload: System.Xaml.XamlReader.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Read
  id: Read
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе предоставляет следующий узел XAML из источника, если он имеется."
  remarks: "Средства чтения поддерева можно вызвать метод Read, поведение ограничений. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если он имеется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> , основанный на текущей <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, где возвращаемый <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> используется для итерации по поддерево структуре узлов XAML."
  remarks: "Этот метод имеет реализацию по умолчанию и возвращает допустимый <xref:System.Xaml.XamlReader>.</xref:System.Xaml.XamlReader> Возвращенный <xref:System.Xaml.XamlReader>является внутренним классом, который ограничивает некоторые <xref:System.Xaml.XamlReader>действий.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> Ограничения согласованы с целью чтения только определенного поддерева большего источника для набора узлов XAML и возврата end of file или `null` в текущем узле при выходе из поддерева.       Как правило, следует проверить текущий узел из начального <xref:System.Xaml.XamlReader.Read%2A>для определения, следует ли средство чтения поддерева.</xref:System.Xaml.XamlReader.Read%2A> Способ проверки этого может быть реализации; Однако следует Избегайте создания множества средств чтения поддерева для каждого поддерева. Кроме того, избегайте вызова чтения поддерева для определенных случаях узла (например, <xref:System.Xaml.XamlNodeType>), не может содержать поддерево узлов.</xref:System.Xaml.XamlNodeType>       После получения чтения поддерева, необходимо вызвать метод <xref:System.Xaml.XamlReader.Read%2A>ее, чтобы получить текущий узел (или вызвать <xref:System.Xaml.XamlReader.Skip%2A>для получения следующего узла).</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.Read%2A> Не получен автоматически положение начального узла из средства чтения поддерева при его создании.       Средство чтения, для которого получаются путем вызова ReadSubtree из Эта реализация по умолчанию является внутренним классом. Внутренний класс сформирует его поведение на <xref:System.Xaml.XamlReader>реализации, который используется при вызове ReadSubtree.</xref:System.Xaml.XamlReader> Внутренний класс предназначен для переноса <xref:System.Xaml.XamlReader.Read%2A>и поведение общие обхода.</xref:System.Xaml.XamlReader.Read%2A> Обход не превышал предполагаемого поддерево, отслеживая <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> пары или <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> пар.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Он также корректно возвращает `false` для <xref:System.Xaml.XamlReader.Read%2A>и `true` для <xref:System.Xaml.XamlReader.IsEof%2A>Когда средство чтения находится в конце поддерево, в соответствии с определением его точки входа.</xref:System.Xaml.XamlReader.IsEof%2A> </xref:System.Xaml.XamlReader.Read%2A> Как правило, предполагается, что любой <xref:System.Xaml.XamlReader>API, вызвать из средства чтения поддерево имеет ту же реализацию как общий <xref:System.Xaml.XamlReader>за исключением обхода, ограничивающий поведение.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>       Тем не менее ReadSubtree является виртуальным. Таким образом, определенный <xref:System.Xaml.XamlReader>можно реализовать поведение, которое отличается от <xref:System.Xaml.XamlReader>поведение внутренней программы-оболочки; и <xref:System.Xaml.XamlReader>реализацию даже можете отключить функции чтения поддерева, возвращая <xref:System.NotImplementedException>или возникновению других исключений.</xref:System.NotImplementedException> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public virtual System.Xaml.XamlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xaml.XamlReader
      description: "Новый экземпляр средства чтения XAML в поддереве."
  overload: System.Xaml.XamlReader.ReadSubtree*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает объект, предоставляющий сведения о контексте схемы XAML для данного набора сведений."
  syntax:
    content: public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Объект, предоставляющий сведения о контексте схемы XAML для получения сведений набора."
  overload: System.Xaml.XamlReader.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Skip
  id: Skip
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Пропускает текущий узел и перемещает позицию чтения на следующий узел."
  remarks: "Пропущен один раз, <xref:System.Xaml.XamlReader.Read%2A>вызывается по умолчанию реализация Skip.</xref:System.Xaml.XamlReader.Read%2A> Обычно не нужно вызывать Skip и <xref:System.Xaml.XamlReader.Read%2A>в последовательности.</xref:System.Xaml.XamlReader.Read%2A>       По умолчанию реализация Skip различных действий в зависимости от того, что <xref:System.Xaml.XamlReader.NodeType%2A>установлен позиция средства чтения.</xref:System.Xaml.XamlReader.NodeType%2A> Если позиция средства чтения в настоящее время на <xref:System.Xaml.XamlNodeType>или <xref:System.Xaml.XamlNodeType>, элемента или объекта пропускается.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Для других <xref:System.Xaml.XamlReader.NodeType%2A>значения, никакие действия не выполняются кроме вызова <xref:System.Xaml.XamlReader.Read%2A>от текущей позиции.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.NodeType%2A>       Средства чтения поддерева может вызывать Skip, поведение ограничений. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>       Узел дерева поведение Skip основан на XML эквивалентные <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> На основе <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>поведение эквивалентности, Skip пропускает узла и его поддерева, а не только узел одну запись.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xaml.XamlReader.Skip*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> класса."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xaml.XamlReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Type
  id: Type
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает <xref href=&quot;System.Xaml.XamlType&quot;> </xref> текущего узла."
  remarks: "Средства чтения поддерева можно вызвать тип, с ограничениями поведение. Дополнительные сведения см. в разделе «Средства чтения поддерева» <xref:System.Xaml.XamlReader>, или в разделе <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Текущего узла; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если в настоящее время модуль чтения находится не на объект."
  overload: System.Xaml.XamlReader.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Value
  id: Value
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "При реализации в производном классе получает значение текущего узла."
  syntax:
    content: public abstract object Value { get; }
    return:
      type: System.Object
      description: "Значение текущего узла; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если отсутствует на текущую позицию чтения <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> тип узла."
  overload: System.Xaml.XamlReader.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlReader.#ctor
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
- uid: System.Xaml.XamlReader.Close
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlReader.IsDisposed
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlReader.Namespace
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlReader.NodeType
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
- uid: System.Xaml.XamlNodeType
  parent: System.Xaml
  isExternal: false
  name: XamlNodeType
  nameWithType: XamlNodeType
  fullName: System.Xaml.XamlNodeType
- uid: System.Xaml.XamlReader.Read
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
- uid: System.Xaml.XamlReader.ReadSubtree
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Xaml.XamlReader.SchemaContext
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlReader.Skip
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
- uid: System.Xaml.XamlReader.Type
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlReader.Value
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
- uid: System.Xaml.XamlReader.#ctor*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Xaml.XamlReader.Close*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close
  nameWithType: XamlReader.Close
- uid: System.Xaml.XamlReader.Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose
  nameWithType: XamlReader.Dispose
- uid: System.Xaml.XamlReader.IsDisposed*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
- uid: System.Xaml.XamlReader.Namespace*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
- uid: System.Xaml.XamlReader.NodeType*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
- uid: System.Xaml.XamlReader.Read*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read
  nameWithType: XamlReader.Read
- uid: System.Xaml.XamlReader.ReadSubtree*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XamlReader.ReadSubtree
- uid: System.Xaml.XamlReader.SchemaContext*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
- uid: System.Xaml.XamlReader.Skip*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip
  nameWithType: XamlReader.Skip
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XamlReader.System.IDisposable.Dispose
- uid: System.Xaml.XamlReader.Type*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
- uid: System.Xaml.XamlReader.Value*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
