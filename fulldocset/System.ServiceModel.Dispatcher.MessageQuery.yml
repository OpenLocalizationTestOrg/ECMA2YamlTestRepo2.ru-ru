### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageQuery
  id: MessageQuery
  children:
  - System.ServiceModel.Dispatcher.MessageQuery.#ctor
  - System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageQuery
  nameWithType: MessageQuery
  fullName: System.ServiceModel.Dispatcher.MessageQuery
  type: Class
  summary: "Определяет основное поведение классов, используемых для поиска данных, взаимосвязанных определенным в сообщении."
  remarks: "Класс MessageQuery аналогичен <xref:System.ServiceModel.Dispatcher.MessageFilter>классу.</xref:System.ServiceModel.Dispatcher.MessageFilter>  Однако вместо возвращения совпадения, <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A>метод возвращает результаты запроса к сообщению.</xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> Результат запроса значение сообщения. Используйте значение в качестве ключа для сопоставления сообщения с другими сообщениями. Чтобы добавить новое свойство для данных, используйте <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A>метод <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty>класса.</xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> </xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A>      Настроек [!NOTE] настроек конкретную реализацию MessageQuery. в разделе <xref:System.ServiceModel.XPathMessageQuery>класса.</xref:System.ServiceModel.XPathMessageQuery>      ## Использование классов XPathMessageQuery и MessageQueryCollection, вы можете оптимизировать процесс запроса, создания набора объектов запроса и вставляя их в экземпляр <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>класса.</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>      Настроек [!NOTE] настроек конкретную реализацию <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>см. в разделе <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection>класса.</xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> </xref:System.ServiceModel.Dispatcher.MessageQueryCollection>       Распространенным вариантом применения является заполнение коллекции запросами, имеющими одинаковый предикат XPath и отличающимися только в последним конечным значением. Например следующие запросы XPath идентичны, за исключением последнего предложения. Первый запрос запрашивает все элементы, имеющие атрибутом quantity, равным 1, а второй запрос запрашивает элементы с атрибутом product, имеющим значение «Contoso»): ```   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &quot;Contoso&quot;]&quot;   ``` <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>позволяет создавать таблицы запросов, которые отличаются лишь незначительно, что повышает эффективность обработки.</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>       Кроме того, можно использовать <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>класса для хранения и вычисления запросов к сообщениям.</xref:System.ServiceModel.Dispatcher.MessageQueryTable%601>"
  example:
  - "The following example creates a message and XPath message queries. The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object. The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.  \n  \n [!code-vb[XPathMessageQuery#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_8_1.vb)]\n [!code-cs[XPathMessageQuery#0](~/add/codesnippet/csharp/t-system.servicemodel.di_8_1.cs)]"
  syntax:
    content: public abstract class MessageQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Dispatcher.MessageQuery&quot;> </xref> класса."
  syntax:
    content: protected MessageQuery ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  id: CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Создает коллекцию запросов, возвращают определенный тип данных, связанных с ним."
  remarks: "Этот метод предназначен для использования с <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>классом.</xref:System.ServiceModel.Dispatcher.MessageQueryCollection>"
  syntax:
    content: public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.MessageQueryCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.MessageQueryCollection&quot;></xref>Коллекция запросов, связанный с типом данных."
  overload: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  id: Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Для добавления."
    return:
      type: TResult
      description: "Для добавления."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  id: Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "Для добавления."
    return:
      type: TResult
      description: "Для добавления."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
- uid: System.ServiceModel.Dispatcher.MessageQueryCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageQueryCollection
  nameWithType: MessageQueryCollection
  fullName: System.ServiceModel.Dispatcher.MessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery
  nameWithType: MessageQuery.MessageQuery
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection
  nameWithType: MessageQuery.CreateMessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate<TResult>
  nameWithType: MessageQuery.Evaluate<TResult>
