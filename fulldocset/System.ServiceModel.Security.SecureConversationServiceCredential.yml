### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecureConversationServiceCredential
  id: SecureConversationServiceCredential
  children:
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  - System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  langs:
  - csharp
  name: SecureConversationServiceCredential
  nameWithType: SecureConversationServiceCredential
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential
  type: Class
  summary: "Предоставляет параметры учетных данных для службы безопасного диалога."
  remarks: "Безопасном диалоге используется обмен несколькими сообщениями и использовать маркера контекста безопасности (SCT) для обеспечения безопасности. Маркер контекста безопасности совместно используется взаимодействующими сторонами на протяжении всего сеанса связи. Служба может выпускать два типа маркеров контекста безопасности:-первый — на основе сеансов SCT, которое содержит уникальный идентификатор. Сообщения переносят только идентификатор, а служба поддерживает кэш сопоставления состояний, который сопоставляет между идентификаторами маркеров контекста безопасности и содержимым (например, утверждения, ключи контроля доступа и т. д.). Обретают клиента необходимо отправить запрос на отмену Маркера помогут оптимизировать ресурсы кэша службы. При создании экземпляра этого класса путем вызова <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>с `requireCancellation` параметра равно `true`, таким образом выдается маркер контекста безопасности.</xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A>      -Второй является самодостаточным маркер контекста безопасности, который находится в файле cookie на клиентском компьютере. Этот маркер контекста безопасности содержится вся информация о состоянии, поэтому требуется ни управление состоянием из службы, ни запрос на отмену Маркера от клиента. Это иногда называется SCT «режиме куки». Так как маркер контекста безопасности содержится вся информация о состоянии, его размер больше, чем в случае на основе сеансов. С токенами контекста безопасности на основе сеансов служба хранит большую часть сведений о состоянии. Тем не менее так как он является автономной, может использоваться между временем существования службы и сохранять при завершении работы службы и перезапустить."
  syntax:
    content: public sealed class SecureConversationServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  id: SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает коллекцию <xref:System.Type>утверждений для сериализации файлов cookie.</xref:System.Type>"
  remarks: "Для сериализации утверждений в файлы cookie маркера контекста безопасности, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] использует <xref:System.Runtime.Serialization.DataContractSerializer>по умолчанию.</xref:System.Runtime.Serialization.DataContractSerializer> Поскольку ресурс Claim является расширяемым, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] позволяет предоставить список известных типов ресурсов. Это поможет <xref:System.Runtime.Serialization.DataContractSerializer>во время десериализации утверждений в куки-файлы и позволяет возвращать исходные строго типизированные объекты.</xref:System.Runtime.Serialization.DataContractSerializer>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#2](~/add/codesnippet/csharp/e8a69534-ad60-48be-9b2e-_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> SecurityContextClaimTypes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Коллекция <xref:System.Type>утверждений для сериализации файлов cookie.</xref:System.Type>"
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  id: SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  langs:
  - csharp
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает или задает настраиваемый <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> для кодирования и декодирования сериализации куки-файлов."
  remarks: "В «режиме куки» служба выдает клиенту маркер контекста безопасности (SCT) в форме куки-файла для клиента, чтобы он не должен поддерживать состояние безопасности. Клиент отправляет его обратно в сообщении запроса, чтобы служба известно как снять защиту и проверить сообщение запроса. Так как маркер контекста безопасности часто передается по незащищенным сетям, должны быть защищены.       По умолчанию [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] использует <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>класса для защиты файла cookie с помощью API защиты данных (DPAPI).</xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> Для API защиты данных работал в среде веб-фермы все серверные службы необходимо запускать с той же учетной записью домена. Другими словами Если служба размещается рабочий процесс Internet Information Services (IIS) необходимо настроить для запуска в качестве пользователя домена.       Это свойство позволяет использовать настраиваемый <xref:System.ServiceModel.Security.SecurityStateEncoder>для шифрования и расшифровки куки-файлов и не зависят от DPAPI.</xref:System.ServiceModel.Security.SecurityStateEncoder>"
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[S_UE_SecureConversationServiceCredential#1](~/add/codesnippet/csharp/72c1f567-836b-4b6f-bbcd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityStateEncoder
      description: "Объект <xref href=&quot;System.ServiceModel.Security.SecurityStateEncoder&quot;> </xref> объект, который представляет собой настройку из <xref href=&quot;System.ServiceModel.Security.DataProtectionSecurityStateEncoder&quot;> </xref>."
  overload: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecurityStateEncoder
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecurityStateEncoder
  fullName: System.ServiceModel.Security.SecurityStateEncoder
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityContextClaimTypes
  nameWithType: SecureConversationServiceCredential.SecurityContextClaimTypes
- uid: System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder*
  parent: System.ServiceModel.Security.SecureConversationServiceCredential
  isExternal: false
  name: SecurityStateEncoder
  nameWithType: SecureConversationServiceCredential.SecurityStateEncoder
