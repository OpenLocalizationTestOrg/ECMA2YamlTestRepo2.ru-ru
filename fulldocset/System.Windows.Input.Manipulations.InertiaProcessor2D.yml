### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D
  id: InertiaProcessor2D
  children:
  - System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  - System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  - System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  langs:
  - csharp
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D
  type: Class
  summary: "Реализует экстраполяции позицию, ориентацию и средний радиус манипуляции."
  remarks: "Объект InertiaProcessor2D позволяет вашему приложению экстраполировать элемента в расположение, ориентацию и другие свойства, имитируя поведение реального мира.       Для экземпляра когда пользователь перемещает элемент, а затем освобождает, элемент можно продолжить движение, замедлением и затем медленно остановиться. Обработчик инерции реализует это поведение, вызывая аффинных двумерных значений (источник, масштаба, трансляции и поворота) изменяется в течение указанного времени с заданной скоростью замедления.       Обработчик инерции сам по себе не вызывает перемещение и замедление элемента. Приложение получает данные от процессора инерции и применяет значения, при необходимости к элементу конкретного приложения. Как правило приложение использует данные, полученные от процессора инерции для изменения расположения, размера или ориентации элемента.       Обработка инерции обычно используется в сочетании с обработкой манипуляции. Дополнительные сведения см. в разделе <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>класса.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>"
  syntax:
    content: public class InertiaProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  id: '#ctor'
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D&quot;> </xref> класса."
  syntax:
    content: public InertiaProcessor2D ();
    parameters: []
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  id: Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Завершает последний экстраполяции с помощью указанной метки времени и вызывает <xref href=&quot;System.Windows.Input.Manipulations.InertiaProcessor2D.Completed&quot;> </xref> событий."
  remarks: "Метки времени измеряются в 100 нс."
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and if so, stops it by calling the Complete method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void Complete (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Отметка времени завершения экстраполяции в 100-наносекундных тактов."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Параметр отметки времени меньше, чем изначальная или предыдущая отметка."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Происходит при завершении экстраполяции."
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Происходит при изменении источника экстраполяции или после перемещения, масштабирование или поворот."
  remarks: "Дельта-событие и <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName>события относятся к одному типу.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName> Как правило можно использовать один и тот же обработчик событий для обоих событий."
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  id: ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает поведение расширения для процессора инерции."
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
      description: "Поведение расширения для процессора инерции."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  id: InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает координату x исходного начала координат, в единицах координат."
  remarks: "Точка происхождения, представленная InitialOriginX и <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>Свойства — это среднее положение всех манипуляторов, связанной с элементом.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A>       Является допустимым значением для InitialOriginX является конечное число. Значение по умолчанию — 0,0."
  syntax:
    content: public float InitialOriginX { get; set; }
    return:
      type: System.Single
      description: "Координата x исходного начала координат, в единицах координат."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  id: InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает координату по оси y исходного начала координат, в единицах координат."
  remarks: "Точка происхождения, представленная <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>и InitialOriginY свойства — это среднее положение всех манипуляторов, связанной с элементом.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A>       Является допустимым значением для InitialOriginY является конечное число. Значение по умолчанию — 0,0."
  syntax:
    content: public float InitialOriginY { get; set; }
    return:
      type: System.Single
      description: "Координата по оси y исходного начала координат, в единицах координат."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  id: IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Получает значение, указывающее инерции в данный момент выполняется."
  remarks: ''
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public bool IsRunning { get; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли инерции в данный момент выполняется."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  id: Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Экстраполирует позицию, ориентацию и средний радиус манипуляции за заданное время."
  remarks: "Метки времени измеряются в 100 нс."
  syntax:
    content: public bool Process (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Отметка времени выполнения экстраполяции, в 100-наносекундных тактов."
    return:
      type: System.Boolean
      description: "Позиция манипуляции, ориентация и средний радиус в указанное время. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если экстраполяции выполняется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если экстраполяции была завершена."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Параметр отметки времени меньше, чем изначальная или предыдущая отметка."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  id: RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает поведение поворота для процессора инерции."
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
      description: "Поведение поворота для процессора инерции."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Задает параметры процессора инерции."
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.InertiaParameters2D
      description: "Параметры для установки."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  id: TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает поведение перемещения для процессора инерции."
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
      description: "Поведение обработчика инерции."
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InertiaProcessor2D()
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(Int64)
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaRotationBehavior2D
  nameWithType: InertiaRotationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(InertiaParameters2D)
- uid: System.Windows.Input.Manipulations.InertiaParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaParameters2D
  nameWithType: InertiaParameters2D
  fullName: System.Windows.Input.Manipulations.InertiaParameters2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
- uid: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaTranslationBehavior2D
  nameWithType: InertiaTranslationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D.InertiaProcessor2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete
  nameWithType: InertiaProcessor2D.Complete
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process
  nameWithType: InertiaProcessor2D.Process
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: InertiaProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
