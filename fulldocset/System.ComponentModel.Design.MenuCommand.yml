### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.MenuCommand
  id: MenuCommand
  children:
  - System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.MenuCommand.Checked
  - System.ComponentModel.Design.MenuCommand.CommandChanged
  - System.ComponentModel.Design.MenuCommand.CommandID
  - System.ComponentModel.Design.MenuCommand.Enabled
  - System.ComponentModel.Design.MenuCommand.Invoke
  - System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  - System.ComponentModel.Design.MenuCommand.OleStatus
  - System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  - System.ComponentModel.Design.MenuCommand.Properties
  - System.ComponentModel.Design.MenuCommand.Supported
  - System.ComponentModel.Design.MenuCommand.ToString
  - System.ComponentModel.Design.MenuCommand.Visible
  langs:
  - csharp
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
  type: Class
  summary: "Представляет элемент команды меню или панели инструментов Windows."
  remarks: "Класс MenuCommand представляет сведения о команде меню или панели инструментов Windows. <xref:System.ComponentModel.Design.IMenuCommandService>Интерфейс позволяет добавлять объекты MenuCommand в меню Visual Studio.</xref:System.ComponentModel.Design.IMenuCommandService>       Этот класс предоставляет следующие члены:-свойства метода обработчика событий, к которому можно присоединить обработчик событий для команды.      -A <xref:System.ComponentModel.Design.CommandID>свойство, которое однозначно определяет команду.</xref:System.ComponentModel.Design.CommandID>      - <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>Метод, который выполняет команду.</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      - <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>Метод, который можно переопределить, чтобы обрабатывать событие, возникающее при выборе новой команды.</xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A>      -Состояния логический флаг, который определяет, является ли команда <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, или <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</xref:System.ComponentModel.Design.MenuCommand.Visible%2A> </xref:System.ComponentModel.Design.MenuCommand.Supported%2A> </xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Checked%2A>      - <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>Код состояния для команды команды свойство, которое показывает OLE.</xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A>      -Переопределение для <xref:System.ComponentModel.Design.MenuCommand.ToString%2A>метод.</xref:System.ComponentModel.Design.MenuCommand.ToString%2A>"
  example:
  - "The following code example creates a MenuCommand object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio. Press the F1 key to invoke the MenuCommand.  \n  \n [!code-cpp[MenuCommand Example#10](~/add/codesnippet/cpp/t-system.componentmodel._8_1.cpp)]\n [!code-cs[MenuCommand Example#10](~/add/codesnippet/csharp/t-system.componentmodel._8_1.cs)]\n [!code-vb[MenuCommand Example#10](~/add/codesnippet/visualbasic/t-system.componentmodel._8_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MenuCommand
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  id: '#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)'
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/0d01c3a9-eede-4f5b-b9c2-_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/0d01c3a9-eede-4f5b-b9c2-_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/0d01c3a9-eede-4f5b-b9c2-_1.vb)]"
  syntax:
    content: public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);
    parameters:
    - id: handler
      type: System.EventHandler
      description: "Событие, вызываемое при выборе пользователем пункта меню или панели инструментов кнопки."
    - id: command
      type: System.ComponentModel.Design.CommandID
      description: "Уникальный идентификатор команды, связывающий этой команды меню с меню среды."
  overload: System.ComponentModel.Design.MenuCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Checked
  id: Checked
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает или задает значение, указывающее, установлен ли флажок для данного элемента меню."
  syntax:
    content: public virtual bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот пункт выбран; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  id: CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Происходит при изменении команды меню."
  remarks: "Команда может измениться, если она будет отмечена или отключена."
  syntax:
    content: public event EventHandler CommandChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  id: CommandID
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> связанные с этой команды меню."
  syntax:
    content: public virtual System.ComponentModel.Design.CommandID CommandID { get; }
    return:
      type: System.ComponentModel.Design.CommandID
      description: "<xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> Связанный с командой меню."
  overload: System.ComponentModel.Design.MenuCommand.CommandID*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает значение, указывающее, доступен ли этот элемент меню."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._15_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._15_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._15_1.vb)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент включен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Вызывает команду."
  syntax:
    content: public virtual void Invoke ();
    parameters: []
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  id: Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Вызывает команду с заданным параметром."
  syntax:
    content: public virtual void Invoke (object arg);
    parameters:
    - id: arg
      type: System.Object
      description: "Необязательный аргумент для команды."
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  id: OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает код состояния команды OLE для данного элемента меню."
  syntax:
    content: public virtual int OleStatus { get; }
    return:
      type: System.Int32
      description: "Значение типа integer, содержащее сочетание флагов состояний, отражающих состояние данной команды меню."
  overload: System.ComponentModel.Design.MenuCommand.OleStatus*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  id: OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Вызывает <xref href=&quot;System.ComponentModel.Design.MenuCommand.CommandChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnCommandChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnCommandChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Properties
  id: Properties
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает открытые свойства, связанные с <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>."
  remarks: "Все команды меню хранить свои открытые свойства в коллекции свойств. Ключ в словаре свойств используется имя свойства. Это обеспечивает универсальный способ перечисления свойств и образует единообразную среду, из которого можно добавлять новые свойства без изменения определения класса."
  syntax:
    content: public virtual System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Содержащий открытые свойства <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.Design.MenuCommand.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Supported
  id: Supported
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает или задает значение, указывающее, поддерживается ли этот элемент меню."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._20_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._20_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._20_1.vb)]"
  syntax:
    content: public virtual bool Supported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поддерживается элемента, который используется по умолчанию. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Supported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.ToString
  id: ToString
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает строковое представление данной команды меню."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, содержащая значение <> </> *настроек свойства добавляются с именами флагов, установленных, разделенных полосы вертикальной черты (|). Эти свойства флагов включают <> </> *настроек, <> </> *настроек, <> </> *настроек и <xref:System.ComponentModel.Design.MenuCommand.Visible*>.</xref:System.ComponentModel.Design.MenuCommand.Visible*>"
  overload: System.ComponentModel.Design.MenuCommand.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Visible
  id: Visible
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает или задает значение, указывающее, является ли этот пункт меню становится видимым."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._26_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._26_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._26_1.vb)]"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент является видимым. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.MenuCommand.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Checked
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.MenuCommand.Properties
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.MenuCommand.Supported
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.MenuCommand.Visible
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
- uid: System.ComponentModel.Design.MenuCommand.#ctor*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand.MenuCommand
- uid: System.ComponentModel.Design.MenuCommand.Checked*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
- uid: System.ComponentModel.Design.MenuCommand.CommandID*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke
  nameWithType: MenuCommand.Invoke
- uid: System.ComponentModel.Design.MenuCommand.OleStatus*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged
  nameWithType: MenuCommand.OnCommandChanged
- uid: System.ComponentModel.Design.MenuCommand.Properties*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
- uid: System.ComponentModel.Design.MenuCommand.Supported*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString
  nameWithType: MenuCommand.ToString
- uid: System.ComponentModel.Design.MenuCommand.Visible*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
