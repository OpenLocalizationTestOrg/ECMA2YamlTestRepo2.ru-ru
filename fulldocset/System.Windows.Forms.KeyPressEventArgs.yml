### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "Предоставляет данные для <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> событий."
  remarks: "KeyPressEventArgs символ, получаемый при нажатии клавиши. Например при нажатии клавиш SHIFT + K, <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>свойство возвращает прописной знак K.       Объект <xref:System.Windows.Forms.Control.KeyPress>событие происходит, когда пользователь нажимает клавишу.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Два события, которые тесно связаны <xref:System.Windows.Forms.Control.KeyPress>, событий <xref:System.Windows.Forms.Control.KeyUp>и <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> <xref:System.Windows.Forms.Control.KeyDown>Событие предшествует каждому <xref:System.Windows.Forms.Control.KeyPress>событие, когда пользователь нажимает клавишу и <xref:System.Windows.Forms.Control.KeyUp>событие происходит, когда пользователь отпускает клавишу.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> При удерживании пользователем ключ дублирование <xref:System.Windows.Forms.Control.KeyDown>и <xref:System.Windows.Forms.Control.KeyPress>события происходят при каждом повторе символ.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Один <xref:System.Windows.Forms.Control.KeyUp>событие создается при выпуске.</xref:System.Windows.Forms.Control.KeyUp>       С каждым <xref:System.Windows.Forms.Control.KeyPress>передается событие, KeyPressEventArgs.</xref:System.Windows.Forms.Control.KeyPress> Объект <xref:System.Windows.Forms.KeyEventArgs>передается с каждым <xref:System.Windows.Forms.Control.KeyDown>и <xref:System.Windows.Forms.Control.KeyUp>событий.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> Объект <xref:System.Windows.Forms.KeyEventArgs>Указывает, были ли любые клавиши-модификаторы (CTRL, SHIFT или ALT) нажаты вместе с другим ключом.</xref:System.Windows.Forms.KeyEventArgs> (Этот модификатор сведения можно также получить с помощью <xref:System.Windows.Forms.Control.ModifierKeys%2A>свойство <xref:System.Windows.Forms.Control>класса.)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       Задать <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>для `true` отменить `KeyPress` событий.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Это предотвращает управления обработки нажатия клавиши.      Настроек [!NOTE] настроек некоторые элементы управления будет обрабатывать определенные нажатий клавиш <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> Например <xref:System.Windows.Forms.RichTextBox>обрабатывает клавишу ВВОД до <xref:System.Windows.Forms.Control.KeyPress>называется.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> В таких случаях не удается отменить <xref:System.Windows.Forms.Control.KeyPress>события и необходимо отменить нажатия клавиши из <xref:System.Windows.Forms.Control.KeyDown>вместо.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       Сведения о модели событий см. в разделе [события](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> класса."
  remarks: "Используйте <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>свойство, чтобы получить текущее состояние клавиш-модификаторов.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "Символ ASCII, соответствующий ключу была нажата."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> было обработано событие."
  remarks: "Если событие не обработано, отправляемом в операционную систему для обработки по умолчанию. Значение Handled `true` отменить `KeyPress` событий."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если событие обрабатывается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает символ, соответствующий нажатой клавише."
  remarks: "Используйте свойство KeyChar на образце нажатия клавиш, во время выполнения и изменения нажатия клавиш в особых случаях во время выполнения. Например можно использовать KeyChar для отключения нечисловых, когда пользователь вводит ПОЧТОВЫЙ индекс, преобразование всех буквенных клавиш прописные буквы в поля для ввода данных или отслеживания клавиатуры или другого устройства ввода для определенных сочетаний клавиш.       Можно получить или задать следующие клавиши: - a-z, A-Z.      -CTRL.      -Знаки пунктуации.      -Число ключей, как в верхней части клавиатуры и на цифровой клавиатуре.      -ВВЕДИТЕ.       Не удается получить или задать следующие клавиши:-клавиши TAB.      -ВСТАВКИ и удаления.      -HOME.      -END.      + PAGE UP и PAGE DOWN.      F1-F2.      -ALT.      -Кнопки со стрелками.      Настроек [!NOTE] настроек сведения об обнаружении какой-либо несимвольных упомянутых выше в разделе <xref:System.Windows.Forms.KeyEventArgs>класса.</xref:System.Windows.Forms.KeyEventArgs>      —"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "Символ ASCII, представляющим. Например при нажатии клавиш SHIFT + K данное свойство возвращает прописной знак K."
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
