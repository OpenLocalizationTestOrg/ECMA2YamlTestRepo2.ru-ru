### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DBDataPermission
  id: DBDataPermission
  children:
  - System.Data.Common.DBDataPermission.#ctor
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.Copy
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
  type: Class
  summary: "Включает поставщик данных .NET Framework гарантировать, что пользователь имеет уровень безопасности, необходимых для доступа к данным."
  syntax:
    content: 'public abstract class DBDataPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor
  id: '#ctor'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса."
  syntax:
    content: protected DBDataPermission ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  id: '#ctor(System.Data.Common.DBDataPermission)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса с помощью существующей <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermission permission);
    parameters:
    - id: permission
      type: System.Data.Common.DBDataPermission
      description: "Существующий <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> используется для создания нового <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  id: '#ctor(System.Data.Common.DBDataPermissionAttribute)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса с заданным <xref uid=&quot;langword_csharp_DBDataPermissionAttribute&quot; name=&quot;DBDataPermissionAttribute&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected DBDataPermission (System.Data.Common.DBDataPermissionAttribute permissionAttribute);
    parameters:
    - id: permissionAttribute
      type: System.Data.Common.DBDataPermissionAttribute
      description: "Действие по обеспечению безопасности, связанные с пользовательским атрибутом безопасности."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значение."
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значение и значение, указывающее, разрешено ли пустой пароль."
  remarks: "<xref:System.Security.Permissions.PermissionState>Перечисления имеет приоритет над <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>свойство.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> Таким образом Если задать <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>для `false`, необходимо также задать <xref:System.Security.Permissions.PermissionState>для `None` для предотвращения подключения с пустым паролем пользователя.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>"
  syntax:
    content: protected DBDataPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Указывает, разрешено ли пустой пароль."
  overload: System.Data.Common.DBDataPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Добавляет доступ для указанной строки подключения к существующему состоянию <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref>."
  remarks: "Этот метод может быть полезным при реализации:-поставщик данных .NET framework.      -Интерфейс API, который используется для разрешения доступа к данным.      -Административные средство или программа установки, необходимо изменить политику безопасности.      — Если задано более чем одному правилу, выбирается более строгие правила."
  syntax:
    content: public virtual void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "Допустимую строку соединения."
    - id: restrictions
      type: System.String
      description: "Строка, определяющая параметры строки подключения, которые разрешены или запрещены."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "Один из <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> свойства."
  overload: System.Data.Common.DBDataPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  id: AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Возвращает значение, указывающее, разрешено ли пустой пароль."
  remarks: "<xref:System.Security.Permissions.PermissionState>Перечисления имеет приоритет над свойством AllowBlankPassword.</xref:System.Security.Permissions.PermissionState> Таким образом Если значение AllowBlankPassword `false`, необходимо также задать <xref:System.Security.Permissions.PermissionState>для `None` для предотвращения подключения с пустым паролем пользователя.</xref:System.Security.Permissions.PermissionState>"
  syntax:
    content: public bool AllowBlankPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешен пустой пароль, в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DBDataPermission.AllowBlankPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Clear
  id: Clear
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Удаляет все разрешения, которые были до этого добавлены с помощью <xref:System.Data.Common.DBDataPermission.Add*>метод.</xref:System.Data.Common.DBDataPermission.Add*>"
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Data.Common.DBDataPermission.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Copy
  id: Copy
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Создает и возвращает идентичную копию текущего объекта разрешения."
  remarks: "Копия объекта разрешений представляет тот же уровень доступа к ресурсам, как исходный объект разрешения."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего объекта разрешения."
  overload: System.Data.Common.DBDataPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.CreateInstance
  id: CreateInstance
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Создает новый экземпляр <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> класса."
  syntax:
    content: protected virtual System.Data.Common.DBDataPermission CreateInstance ();
    parameters: []
    return:
      type: System.Data.Common.DBDataPermission
      description: "Новый <xref uid=&quot;langword_csharp_DBDataPermission&quot; name=&quot;DBDataPermission&quot; href=&quot;&quot;> </xref> объекта."
  overload: System.Data.Common.DBDataPermission.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Восстанавливает объект безопасности с указанным состоянием из кодировки XML."
  remarks: "Пользовательский код, который расширяет объекты безопасности необходимо реализовать `ToXml` и `FromXml` методов, чтобы можно было кодировать безопасность объектов."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления объекта безопасности."
  overload: System.Data.Common.DBDataPermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Возвращает новый объект разрешения, представляющий собой пересечение текущего и указанного разрешения объекта."
  remarks: "Пересечение двух разрешений является разрешением, которое описывает набор операций, описанных обоих. Только запрос, передающий оба исходных разрешения, передает их пересечение."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Объект разрешение, пересекающееся с текущим объектом разрешений. Он должен иметь совпадает с типом текущего объекта разрешения."
    return:
      type: System.Security.IPermission
      description: "Новый объект разрешения, представляющий собой пересечение текущего и указанного разрешения объекта. Этот новый объект разрешения является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic), если пересечение является пустым."
  overload: System.Data.Common.DBDataPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Параметр не является указателем null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic) и не является экземпляром того же класса, что и текущий объект разрешения."
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Возвращает значение, указывающее, является ли текущий объект разрешения подмножеством указанного разрешения объекта."
  remarks: "Текущий объект разрешение является подмножеством указанного разрешения объекта, если текущий объект разрешений определяет набор операций, полностью содержащихся в объекте заданного разрешения. Например, разрешение, которое предоставляет доступ к C:\\example.txt является подмножеством разрешения, предоставляющего доступ к C:\\\\. Если этот метод возвращает `true`, текущим объектом разрешения не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение объекта."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Объект разрешения, для которого требуется проверить отношение подмножества. Этот объект должен быть того же типа, что и текущий объект разрешения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущий объект разрешение является подмножеством указанного разрешения объекта, в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DBDataPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Параметр представляет собой объект, не совпадает с типом текущего объекта разрешения."
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Возвращает значение, указывающее, является ли разрешение может быть представлено как неограниченное без знания его семантики."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение может быть представлено как неограниченное."
  overload: System.Data.Common.DBDataPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.ToXml
  id: ToXml
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Создает кодировку XML для объекта безопасности и его текущего состояния."
  remarks: "Пользовательский код, который расширяет объекты безопасности необходимо реализовать ToXml и <xref:System.Data.Common.DBDataPermission.FromXml%2A>методов, чтобы объекты можно было кодировать.</xref:System.Data.Common.DBDataPermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Кодировка XML объекта безопасности, включая сведения о состоянии."
  overload: System.Data.Common.DBDataPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Возвращает новый объект разрешения, представляющее собой объединение текущего и указанного разрешений объектов."
  remarks: "Результатом вызова на объединение является разрешение, представляющее все действия, с текущим объектом разрешения и указанного разрешения объекта. Любой запрос, передающий любое разрешение, передает их объединение."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Объект разрешения для объединения с текущим объектом разрешений. Он должен иметь совпадает с типом текущего объекта разрешения."
    return:
      type: System.Security.IPermission
      description: "Новый объект разрешения, представляющий собой объединение текущего и указанного разрешения объекта."
  overload: System.Data.Common.DBDataPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Объект не совпадает с типом текущего объекта разрешения."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.DBDataPermission.#ctor
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission()
  nameWithType: DBDataPermission.DBDataPermission()
  fullName: System.Data.Common.DBDataPermission.DBDataPermission()
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermission)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermission)
- uid: System.Data.Common.DBDataPermission
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission
  fullName: System.Data.Common.DBDataPermission
- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(DBDataPermissionAttribute)
  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(DBDataPermissionAttribute)
- uid: System.Data.Common.DBDataPermissionAttribute
  parent: System.Data.Common
  isExternal: false
  name: DBDataPermissionAttribute
  nameWithType: DBDataPermissionAttribute
  fullName: System.Data.Common.DBDataPermissionAttribute
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission(PermissionState,Boolean)
  nameWithType: DBDataPermission.DBDataPermission(PermissionState,Boolean)
  fullName: System.Data.Common.DBDataPermission.DBDataPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: DBDataPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.Common.DBDataPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
  fullName: System.Data.Common.DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear()
  nameWithType: DBDataPermission.Clear()
  fullName: System.Data.Common.DBDataPermission.Clear()
- uid: System.Data.Common.DBDataPermission.Copy
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy()
  nameWithType: DBDataPermission.Copy()
  fullName: System.Data.Common.DBDataPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.Common.DBDataPermission.CreateInstance
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance()
  nameWithType: DBDataPermission.CreateInstance()
  fullName: System.Data.Common.DBDataPermission.CreateInstance()
- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DBDataPermission.FromXml(SecurityElement)
  fullName: System.Data.Common.DBDataPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DBDataPermission.Intersect(IPermission)
  fullName: System.Data.Common.DBDataPermission.Intersect(IPermission)
- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DBDataPermission.IsSubsetOf(IPermission)
  fullName: System.Data.Common.DBDataPermission.IsSubsetOf(IPermission)
- uid: System.Data.Common.DBDataPermission.IsUnrestricted
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DBDataPermission.IsUnrestricted()
  fullName: System.Data.Common.DBDataPermission.IsUnrestricted()
- uid: System.Data.Common.DBDataPermission.ToXml
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml()
  nameWithType: DBDataPermission.ToXml()
  fullName: System.Data.Common.DBDataPermission.ToXml()
- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DBDataPermission.Union(IPermission)
  fullName: System.Data.Common.DBDataPermission.Union(IPermission)
- uid: System.Data.Common.DBDataPermission.#ctor*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: DBDataPermission
  nameWithType: DBDataPermission.DBDataPermission
- uid: System.Data.Common.DBDataPermission.Add*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Add
  nameWithType: DBDataPermission.Add
- uid: System.Data.Common.DBDataPermission.AllowBlankPassword*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: AllowBlankPassword
  nameWithType: DBDataPermission.AllowBlankPassword
- uid: System.Data.Common.DBDataPermission.Clear*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Clear
  nameWithType: DBDataPermission.Clear
- uid: System.Data.Common.DBDataPermission.Copy*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Copy
  nameWithType: DBDataPermission.Copy
- uid: System.Data.Common.DBDataPermission.CreateInstance*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: CreateInstance
  nameWithType: DBDataPermission.CreateInstance
- uid: System.Data.Common.DBDataPermission.FromXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: FromXml
  nameWithType: DBDataPermission.FromXml
- uid: System.Data.Common.DBDataPermission.Intersect*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Intersect
  nameWithType: DBDataPermission.Intersect
- uid: System.Data.Common.DBDataPermission.IsSubsetOf*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DBDataPermission.IsSubsetOf
- uid: System.Data.Common.DBDataPermission.IsUnrestricted*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DBDataPermission.IsUnrestricted
- uid: System.Data.Common.DBDataPermission.ToXml*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: ToXml
  nameWithType: DBDataPermission.ToXml
- uid: System.Data.Common.DBDataPermission.Union*
  parent: System.Data.Common.DBDataPermission
  isExternal: false
  name: Union
  nameWithType: DBDataPermission.Union
