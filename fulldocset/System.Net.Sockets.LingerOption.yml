### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "Указывает ли <xref:System.Net.Sockets.Socket>будет оставаться подключенным после вызова <> </> *настроек или <> </> *настроек методы и продолжительность времени, он будет по-прежнему подключен, если данные по-прежнему должны быть отправлены.</xref:System.Net.Sockets.Socket>"
  remarks: "Может по-прежнему существовать данных в выходном буфере сети после приложение вызывает <xref:System.Net.Sockets.Socket>или <xref:System.Net.Sockets.TcpClient>метод.</xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket> Если вы хотите задать интервал времени, <xref:System.Net.Sockets.Socket>будет предпринята попытка передать неотправленные данные после закрывающего тега, создать LingerOption с `enable` равным `true`и `seconds` равным требуемый промежуток времени.</xref:System.Net.Sockets.Socket> `seconds` Параметр используется для указания того, как долго вы хотите <xref:System.Net.Sockets.Socket>остается подключенным до истечения времени ожидания.</xref:System.Net.Sockets.Socket> Если вы не хотите <xref:System.Net.Sockets.Socket>оставаться на связи для любого периода времени после закрывающего тега, создать экземпляр LingerOption с `enable` равным `true` и `seconds` равным нулю.</xref:System.Net.Sockets.Socket> В этом случае <xref:System.Net.Sockets.Socket>немедленно закроется и любые неотправленные данные будут потеряны.</xref:System.Net.Sockets.Socket> После создания передайте LingerOption для <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>метод.</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> Если отправка и получение данных с <xref:System.Net.Sockets.TcpClient>, затем установите экземпляр LingerOption <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>свойство.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient>       Стек IP вычисляет период ожидания протокола IP по умолчанию для использования на основе времени кругового пути соединения. В большинстве случаев тайм-аута, вычисленное стеком является более важной, чем один определенный приложением. Это поведение по умолчанию для <xref:System.Net.Sockets.Socket>при <xref:System.Net.Sockets.Socket.LingerState%2A>свойство не задано и <xref:System.Net.Sockets.TcpClient>при <xref:System.Net.Sockets.TcpClient.LingerState%2A>свойство не задано.</xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.Socket>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.LingerOption&quot;></xref> class."
  remarks: "Может по-прежнему существовать данных в выходном буфере сети после закрытия <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> Используйте `enable` для указания, следует ли <xref:System.Net.Sockets.Socket>продолжать передачу неотправленных данных после вызова метода close.</xref:System.Net.Sockets.Socket> Используйте `seconds` параметр, чтобы указать, как долго вы хотите <xref:System.Net.Sockets.Socket>предпринимается попытка передать неотправленные данные до истечения времени ожидания.</xref:System.Net.Sockets.Socket> При указании `true` для `enable` параметра и значение 0 для `seconds` параметр <xref:System.Net.Sockets.Socket>будет пытаться отправить данные, пока остается без данных в выходном буфере сети.</xref:System.Net.Sockets.Socket> При указании `false` для `enable` параметр <xref:System.Net.Sockets.Socket>немедленно закроется и любые неотправленные данные будут потеряны.</xref:System.Net.Sockets.Socket>       В следующей таблице описаны параметры на <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>и <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>методы основываются на возможные значения `enable` и `seconds` параметров при создании экземпляра T:System.Net.Sockets.LingerOption и задать в <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>или <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>свойство.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>      | `enable`|`seconds`| Поведение |   |--------------|---------------|--------------|   | `false` (отключено), значение по умолчанию | Время ожидания не применяется (по умолчанию). | Срок действия истекает пытается отправить отложенные данные для сокета установлением соединения (например, TCP), пока значение по умолчанию время ожидания протокола IP. |   | `true` (включено) | Ненулевое значение тайм-аута | Пытается отправить отложенные данные до истечения заданного времени ожидания, и если попытка завершается неудачей, Winsock сбрасывает соединение. |   | `true` (включено) | Нулевое время ожидания. | Отменяет все ожидающие данных. Для сокета с ориентацией на подключения (например, TCP), Winsock сбрасывает соединение. |       Стек IP вычисляет период ожидания протокола IP по умолчанию для использования на основе времени кругового пути соединения. В большинстве случаев тайм-аута, вычисленное стеком является более важной, чем один определенный приложением. Это поведение по умолчанию для сокета при <xref:System.Net.Sockets.Socket.LingerState%2A>свойство не задано.</xref:System.Net.Sockets.Socket.LingerState%2A>       Когда <xref:System.Net.Sockets.LingerOption.LingerTime%2A>свойства хранятся в <xref:System.Net.Sockets.Socket.LingerState%2A>имеет значение больше, чем время ожидания протокола IP по умолчанию, время ожидания протокола IP по умолчанию будет по-прежнему применяются и переопределяют.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы оставаться подключенным после &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; метод вызван; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: seconds
      type: System.Int32
      description: "Количество секунд, будет оставаться подключенным после &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; вызывается метод."
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Возвращает или задает значение, определяющее необходимость ожидания после <xref:System.Net.Sockets.Socket>закрыт.</xref:System.Net.Sockets.Socket>"
  remarks: "Свойство Enabled можно использовать, чтобы определить, является ли <xref:System.Net.Sockets.Socket>будет ожидания после закрытия.</xref:System.Net.Sockets.Socket> Изменить это значение на `true` или `false` и передайте измененный <xref:System.Net.Sockets.LingerOption>для <xref:System.Net.Sockets.Socket.SetSocketOption%2A>метода или набора <xref:System.Net.Sockets.TcpClient.LingerState%2A>или <xref:System.Net.Sockets.Socket.LingerState%2A>property.to включить или отключить ожидание.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       В следующей таблице описаны возможные значения свойства Enabled поведение и <xref:System.Net.Sockets.LingerOption.LingerTime%2A>свойства хранятся в <xref:System.Net.Sockets.Socket.LingerState%2A>свойство.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>      | `enable`|`seconds`| Поведение |   |--------------|---------------|--------------|   | `false` (отключено), значение по умолчанию | Время ожидания не применяется (по умолчанию). | Срок действия истекает пытается отправить отложенные данные для сокета установлением соединения (например, TCP), пока значение по умолчанию время ожидания протокола IP. |   | `true` (включено) | Ненулевое значение тайм-аута | Пытается отправить отложенные данные до истечения заданного времени ожидания, и если попытка завершается неудачей, Winsock сбрасывает соединение. |   | `true` (включено) | Нулевое время ожидания. | Отменяет все ожидающие данных. Для сокета с ориентацией на подключения (например, TCP), Winsock сбрасывает соединение. |       Стек IP вычисляет период ожидания протокола IP по умолчанию для использования на основе времени кругового пути соединения. В большинстве случаев тайм-аута, вычисленное стеком является более важной, чем один определенный приложением. Это поведение по умолчанию для сокета при <xref:System.Net.Sockets.Socket.LingerState%2A>свойство не задано.</xref:System.Net.Sockets.Socket.LingerState%2A>       Когда <xref:System.Net.Sockets.LingerOption.LingerTime%2A>свойства хранятся в <xref:System.Net.Sockets.Socket.LingerState%2A>имеет значение больше, чем время ожидания протокола IP по умолчанию, время ожидания протокола IP по умолчанию будет по-прежнему применяются и переопределяют.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Net.Sockets.Socket>следует ожидания после &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; вызван; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Sockets.Socket>"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Возвращает или задает количество времени, чтобы оставаться подключенным после вызова &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; метод, если остались данные для отправки."
  remarks: "Это значение следует использовать, чтобы определить, как долго закрытый <xref:System.Net.Sockets.Socket>будет предпринята попытка передачи неотправленные данные до истечения времени ожидания.</xref:System.Net.Sockets.Socket> Можно также задать это значение в нужное время ожидания, в секундах.       Если <xref:System.Net.Sockets.LingerOption.Enabled%2A>свойство `true`, и LingerTime равно 0, <xref:System.Net.Sockets.Socket>отменяет все ожидающие данные для отправки в выходной буфер сети.</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.LingerOption.Enabled%2A> Если изменить это значение, необходимо передать измененный <xref:System.Net.Sockets.LingerOption>экземпляр <xref:System.Net.Sockets.Socket.SetSocketOption%2A>метода или набора <xref:System.Net.Sockets.TcpClient.LingerState%2A>или <xref:System.Net.Sockets.Socket.LingerState%2A>свойство.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       В следующей таблице описаны поведение для возможных значений параметра <xref:System.Net.Sockets.LingerOption.Enabled%2A>свойство и свойство LingerTime, хранящиеся в <xref:System.Net.Sockets.Socket.LingerState%2A>свойство.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.Enabled%2A>      | `enable`|`seconds`| Поведение |   |--------------|---------------|--------------|   | `false` (отключено), значение по умолчанию | Время ожидания не применяется (по умолчанию). | Срок действия истекает пытается отправить отложенные данные для сокета установлением соединения (например, TCP), пока значение по умолчанию время ожидания протокола IP. |   | `true` (включено) | Ненулевое значение тайм-аута | Пытается отправить отложенные данные до истечения заданного времени ожидания, и если попытка завершается неудачей, Winsock сбрасывает соединение. |   | `true` (включено) | Нулевое время ожидания. | Отменяет все ожидающие данных. Для сокета с ориентацией на подключения (например, TCP), Winsock сбрасывает соединение. |       Стек IP вычисляет период ожидания протокола IP по умолчанию для использования на основе времени кругового пути соединения. В большинстве случаев тайм-аута, вычисленное стеком является более важной, чем один определенный приложением. Это поведение по умолчанию для сокета при <xref:System.Net.Sockets.Socket.LingerState%2A>свойство не задано.</xref:System.Net.Sockets.Socket.LingerState%2A>       Если свойство LingerTime хранимая в <xref:System.Net.Sockets.Socket.LingerState%2A>имеет значение больше, чем время ожидания протокола IP по умолчанию, время ожидания протокола IP по умолчанию будет по-прежнему применяются и переопределяют.</xref:System.Net.Sockets.Socket.LingerState%2A>"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "Время в секундах, чтобы оставаться подключенным после вызова &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;."
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
