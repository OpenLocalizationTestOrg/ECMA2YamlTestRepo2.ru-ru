### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.DateAndTime
  id: DateAndTime
  children:
  - Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  - Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.DateString
  - Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  - Microsoft.VisualBasic.DateAndTime.Now
  - Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  - Microsoft.VisualBasic.DateAndTime.TimeOfDay
  - Microsoft.VisualBasic.DateAndTime.Timer
  - Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  - Microsoft.VisualBasic.DateAndTime.TimeString
  - Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  - Microsoft.VisualBasic.DateAndTime.Today
  - Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  - Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  langs:
  - csharp
  name: DateAndTime
  nameWithType: DateAndTime
  fullName: Microsoft.VisualBasic.DateAndTime
  type: Class
  summary: "<xref uid=&quot;langword_csharp_DateAndTime&quot; name=&quot;DateAndTime&quot; href=&quot;&quot;> </xref> Модуле содержатся процедуры и свойства, используемые в операциях даты и времени."
  remarks: "Этот модуль поддерживает ключевые слова языка Visual Basic и элементы библиотеки времени выполнения, которые получают текущую дату или время, вычисляют дату, возвращают дату или время длительности процесса."
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n```  \nDim thisDate As Date  \nthisDate = Today   \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class DateAndTime
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  id: DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее значение даты и времени, в которой был добавлен указанный интервал времени."
  remarks: "Можно использовать `DateAdd` функция для добавления или вычитания из даты указанного временного интервала. Например можно вычислить дату 30 дней от сегодняшнюю дату или время 45 минут, прежде чем сейчас.       Для добавления дней к `DateValue`, можно использовать `DateInterval.Day`, `DateInterval.DayOfYear`, или `DateInterval.Weekday`. Они рассматриваются как эквивалентные, поскольку `DayOfYear` и `Weekday` не являются значимыми интервалами времени.       `DateAdd` Функция никогда не возвращает недопустимую дату. При необходимости части дня полученной дате вниз настраивается в последний день результирующего месяца в году результата. В следующем примере добавляется один месяц 31 января: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` в этом примере `DateAdd` возвращает `#2/28/1995#`, а не `#2/31/1995#`. Если `DateValue` — `#1/31/1996#`, она возвращает `#2/29/1996#` так как 1996 — високосный год.      настроек [!NOTE]  >   `DateAdd` использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для добавления интервалов времени.</xref:System.DateTime> Например, можно добавить дробное число дней, округленное до ближайшей миллисекунды `Date` переменной следующим образом: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строка | Единица временного интервала, чтобы добавить |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| День; усеченное до целого значения |   | `DateInterval.DayOfYear`|y| День; усеченное до целого значения |   | `DateInterval.Hour`|h| Час; округленное до ближайшей миллисекунды |   | `DateInterval.Minute`|n| Минута; округленное до ближайшей миллисекунды |   | `DateInterval.Month`|m| Месяц; усеченное до целого значения |   | `DateInterval.Quarter`|q| Квартал; усеченное до целого значения |   | `DateInterval.Second`|s| Секунды; округленное до ближайшей миллисекунды |   | `DateInterval.Weekday`|w| День; усеченное до целого значения |   | `DateInterval.WeekOfYear`|ww| Недели; усеченное до целого значения |   | `DateInterval.Year`|yyyy| Год; усеченное до целого значения |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/1a306149-706d-46fd-9b1a-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее интервал времени, который требуется добавить."
    - id: Number
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Выражение с плавающей запятой, представляющее количество интервалов, который вы хотите добавить. `Number`может быть положительным (для получения значений даты и времени в будущем) или отрицательное значение (для получения значений даты и времени в прошлом). Он может содержать дробную часть, когда `Interval` указывает часов, минут и секунд. Для других значений `Interval`любое дробной частью `Number` игнорируется."
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Выражение, представляющее дату и время, к которому добавляется интервал. `DateValue`сам не изменяется в вызывающей программе."
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее значение даты и времени, в которой был добавлен указанный интервал времени."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>не является приводиться к <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>не допускается."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Расчетная дата предшествует 00:00:00 1 января 1 года или позже 23:59:59 31 декабря 9999 года."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  id: DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее значение даты и времени, в которой был добавлен указанный интервал времени."
  remarks: "Можно использовать `DateAdd` функция для добавления или вычитания из даты указанного временного интервала. Например можно вычислить дату 30 дней от сегодняшнюю дату или время 45 минут, прежде чем сейчас.       Для добавления дней к `DateValue`, можно использовать `DateInterval.Day`, `DateInterval.DayOfYear`, или `DateInterval.Weekday`. Они рассматриваются как эквивалентные, поскольку `DayOfYear` и `Weekday` не являются значимыми интервалами времени.       `DateAdd` Функция никогда не возвращает недопустимую дату. При необходимости части дня полученной дате вниз настраивается в последний день результирующего месяца в году результата. В следующем примере добавляется один месяц 31 января: ```vb#   Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)   ``` в этом примере `DateAdd` возвращает `#2/28/1995#`, а не `#2/31/1995#`. Если `DateValue` — `#1/31/1996#`, она возвращает `#2/29/1996#` так как 1996 — високосный год.      настроек [!NOTE]  >   `DateAdd` использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для добавления интервалов времени.</xref:System.DateTime> Например, можно добавить дробное число дней, округленное до ближайшей миллисекунды `Date` переменной следующим образом: ```vb#   Dim NextTime As Date = Now        &quot; Current date and time.   NextTime = NextTime.AddDays(3.4)  &quot; Increment by 3 2/5 days.   ``` `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строка | Единица временного интервала, чтобы добавить |   |-----------------------|------------|----------------------------------|   | `DateInterval.Day`|d| День; усеченное до целого значения |   | `DateInterval.DayOfYear`|y| День; усеченное до целого значения |   | `DateInterval.Hour`|h| Час; округленное до ближайшей миллисекунды |   | `DateInterval.Minute`|n| Минута; округленное до ближайшей миллисекунды |   | `DateInterval.Month`|m| Месяц; усеченное до целого значения |   | `DateInterval.Quarter`|q| Квартал; усеченное до целого значения |   | `DateInterval.Second`|s| Секунды; округленное до ближайшей миллисекунды |   | `DateInterval.Weekday`|w| День; усеченное до целого значения |   | `DateInterval.WeekOfYear`|ww| Недели; усеченное до целого значения |   | `DateInterval.Year`|yyyy| Год; усеченное до целого значения |"
  example:
  - "This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.  \n  \n [!code-vb[VbVbalrFunctions#25](~/add/codesnippet/visualbasic/8ee426fa-d573-45a5-a0f5-_1.vb)]"
  syntax:
    content: public static DateTime DateAdd (string Interval, double Number, object DateValue);
    parameters:
    - id: Interval
      type: System.String
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее интервал времени, который требуется добавить."
    - id: Number
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Выражение с плавающей запятой, представляющее количество интервалов, который вы хотите добавить. `Number`может быть положительным (для получения значений даты и времени в будущем) или отрицательное значение (для получения значений даты и времени в прошлом). Он может содержать дробную часть, когда `Interval` указывает часов, минут и секунд. Для других значений `Interval`любое дробной частью `Number` игнорируется."
    - id: DateValue
      type: System.Object
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Выражение, представляющее дату и время, к которому добавляется интервал. `DateValue`сам не изменяется в вызывающей программе."
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее значение даты и времени, в которой был добавлен указанный интервал времени."
  overload: Microsoft.VisualBasic.DateAndTime.DateAdd*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>не является приводиться к <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>не допускается."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Расчетная дата предшествует 00:00:00 1 января 1 года или позже 23:59:59 31 декабря 9999 года."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> значение, указывающее число интервалов времени между двумя <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значения."
  remarks: "Можно использовать `DateDiff` функцию, чтобы определить, сколько определенные промежутки времени существует между двумя значениями даты и времени. Например, можно использовать `DateDiff` для вычисления числа дней между двумя датами или число недель между текущей и конец года.      ## Поведение — **обработка параметров.** `DateDiff`Вычитает значение `Date1` из значения `Date2` для вычисления разницы. Ни одно из значений изменяется в вызывающей программе.      - **Возвращаемые значения.** Поскольку `Date1` и `Date2` имеют `Date` тип данных, они содержат значения даты и времени с точностью 100-наносекундных тактов системного таймера. Тем не менее `DateDiff` всегда возвращает количество интервалов времени как `Long` значение.           Если `Date1` представляет более поздней даты и времени, чем `Date2`, `DateDiff` возвращает отрицательное число.      - **Интервалами дней.** Если `Interval` равно `DateInterval.DayOfYear`, он интерпретируется таким же, как `DateInterval.Day`, так как `DayOfYear` не может применяться единицы для временной интервал.      - **Недельные интервалы.** Если `Interval` равно `DateInterval.WeekOfYear`, возвращаемое значение представляет количество недель между первый день недели, содержащего `Date1` и первым днем недели, содержащего `Date2`. В следующем примере показано, как это приводит к разным результатам из `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_1.vb) ] в предыдущем примере `DateDiff` возвращает 0, чтобы `wD` , так как разница между двумя датами меньше семи дней, а возвращает 1 для `wY` потому, что есть разница между первыми днями соответствующих календарных недель семь дней.      - **Крупные интервалы.** Если `Interval` равно `DateInterval.Year`, возвращаемое значение вычисляется исключительно из частей года `Date1` и `Date2`. Аналогичным образом, возвращаемое значение для `DateInterval.Month` вычисляется исключительно из частей года и месяца аргументов, а также для `DateInterval.Quarter` кварталов, содержащих две даты.           Например, при сравнении с 1 января следующего года, 31 декабря `DateDiff` возвращает 1 для `DateInterval.Year`, `DateInterval.Quarter`, или `DateInterval.Month`, даже если прошло более одного дня.           Для языков и региональных параметров, таких как японский, имеющих несколько эр `DateDiff` Если разница распространяется на несколько эр, метод не возвращает разность в годах. Вместо этого можно вычислить разницу в значениях, возвращаемых <xref:System.DateTime.Year%2A>Свойства, как показано в следующем примере: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Другие интервалы.** Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для вычисления интервалов времени.</xref:System.DateTime> Например, можно использовать `Subtract` метода в один из его перегруженные формы: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>вычитает <xref:System.TimeSpan>из `Date` переменной для возвращения другого `Date` значение, и <xref:System.DateTime.Subtract%2A?displayProperty=fullName>вычитает `Date` значение, возвращаемое <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Можно указать время процесса, чтобы узнать, сколько время в миллисекундах, как показано в следующем примере.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_2.vb) ] `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строковое значение | Единицы измерения разницы времени |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d» | День |   | `DateInterval.DayOfYear`|&quot; y» | День |   | `DateInterval.Hour`|&quot; h» | Час |   | `DateInterval.Minute`|&quot; n» | Минуты |   | `DateInterval.Month`|&quot; m» | Месяц |   | `DateInterval.Quarter`|&quot; вопросы» | Квартал |   | `DateInterval.Second`|&quot; s» | Второй |   | `DateInterval.Weekday`|&quot; w» | Неделя |   | `DateInterval.WeekOfYear`|&quot; WW» | Календарной недели |   | `DateInterval.Year`|&quot; гггг» | Год |       `DayOfWeek` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в параметрах системы |   | `FirstDayOfWeek.Sunday`|1| Воскресенье (по умолчанию) |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |       `WeekOfYear` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Первая неделя года, указанного в параметрах системы |   | `FirstWeekOfYear.Jan1`|1| Неделя, в которой 1 января (по умолчанию) |   | `FirstWeekOfYear.FirstFourDays`|2| Неделя, в которой по крайней мере четыре дня нового года (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Первая полная неделя нового года |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/e9b06095-1039-4b68-96e4-_3.vb)]"
  syntax:
    content: public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее интервал времени, который вы хотите использовать в качестве единицы измерения разницы между `Date1` и `Date2`."
    - id: Date1
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Первое значение даты и времени, который вы хотите использовать в вычислениях."
    - id: Date2
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Второе значение даты и времени, который вы хотите использовать в вычислениях."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> используется."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> перечисление, указывающее первую неделю года. Если не указан, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.Int64
      description: "Возвращает <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> значение, указывающее число интервалов времени между двумя <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значения."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, или <code>DayofWeek</code> выходит за пределы диапазона."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>или <code>Date2</code> имеет недопустимый тип."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> значение, указывающее число интервалов времени между двумя <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значения."
  remarks: "Можно использовать `DateDiff` функцию, чтобы определить, сколько определенные промежутки времени существует между двумя значениями даты и времени. Например, можно использовать `DateDiff` для вычисления числа дней между двумя датами или число недель между текущей и конец года.      ## Поведение — **обработка параметров.** `DateDiff`Вычитает значение `Date1` из значения `Date2` для вычисления разницы. Ни одно из значений изменяется в вызывающей программе.      - **Возвращаемые значения.** Поскольку `Date1` и `Date2` имеют `Date` тип данных, они содержат значения даты и времени с точностью 100-наносекундных тактов системного таймера. Тем не менее `DateDiff` всегда возвращает количество интервалов времени как `Long` значение.           Если `Date1` представляет более поздней даты и времени, чем `Date2`, `DateDiff` возвращает отрицательное число.      - **Интервалами дней.** Если `Interval` равно `DateInterval.DayOfYear`, он интерпретируется таким же, как `DateInterval.Day`, так как `DayOfYear` не может применяться единицы для временной интервал.      - **Недельные интервалы.** Если `Interval` равно `DateInterval.WeekOfYear`, возвращаемое значение представляет количество недель между первый день недели, содержащего `Date1` и первым днем недели, содержащего `Date2`. В следующем примере показано, как это приводит к разным результатам из `DateInterval.Weekday`.           [!code-vb[VbVbalrFunctions #60](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_1.vb) ] в предыдущем примере `DateDiff` возвращает 0, чтобы `wD` , так как разница между двумя датами меньше семи дней, а возвращает 1 для `wY` потому, что есть разница между первыми днями соответствующих календарных недель семь дней.      - **Крупные интервалы.** Если `Interval` равно `DateInterval.Year`, возвращаемое значение вычисляется исключительно из частей года `Date1` и `Date2`. Аналогичным образом, возвращаемое значение для `DateInterval.Month` вычисляется исключительно из частей года и месяца аргументов, а также для `DateInterval.Quarter` кварталов, содержащих две даты.           Например, при сравнении с 1 января следующего года, 31 декабря `DateDiff` возвращает 1 для `DateInterval.Year`, `DateInterval.Quarter`, или `DateInterval.Month`, даже если прошло более одного дня.           Для языков и региональных параметров, таких как японский, имеющих несколько эр `DateDiff` Если разница распространяется на несколько эр, метод не возвращает разность в годах. Вместо этого можно вычислить разницу в значениях, возвращаемых <xref:System.DateTime.Year%2A>Свойства, как показано в следующем примере: `date2.Year - date1.Year`.</xref:System.DateTime.Year%2A>      - **Другие интервалы.** Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для вычисления интервалов времени.</xref:System.DateTime> Например, можно использовать `Subtract` метода в один из его перегруженные формы: <xref:System.DateTime.Subtract%2A?displayProperty=fullName>вычитает <xref:System.TimeSpan>из `Date` переменной для возвращения другого `Date` значение, и <xref:System.DateTime.Subtract%2A?displayProperty=fullName>вычитает `Date` значение, возвращаемое <xref:System.TimeSpan>.</xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> </xref:System.TimeSpan> </xref:System.DateTime.Subtract%2A?displayProperty=fullName> Можно указать время процесса, чтобы узнать, сколько время в миллисекундах, как показано в следующем примере.           [!code-vb[VbVbalrFunctions&#61;](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_2.vb) ] `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строковое значение | Единицы измерения разницы времени |   |-----------------------|------------------|-----------------------------|   | `DateInterval.Day`|&quot; d» | День |   | `DateInterval.DayOfYear`|&quot; y» | День |   | `DateInterval.Hour`|&quot; h» | Час |   | `DateInterval.Minute`|&quot; n» | Минуты |   | `DateInterval.Month`|&quot; m» | Месяц |   | `DateInterval.Quarter`|&quot; вопросы» | Квартал |   | `DateInterval.Second`|&quot; s» | Второй |   | `DateInterval.Weekday`|&quot; w» | Неделя |   | `DateInterval.WeekOfYear`|&quot; WW» | Календарной недели |   | `DateInterval.Year`|&quot; гггг» | Год |       `DayOfWeek` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в параметрах системы |   | `FirstDayOfWeek.Sunday`|1| Воскресенье (по умолчанию) |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |       `WeekOfYear` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Первая неделя года, указанного в параметрах системы |   | `FirstWeekOfYear.Jan1`|1| Неделя, в которой 1 января (по умолчанию) |   | `FirstWeekOfYear.FirstFourDays`|2| Неделя, в которой по крайней мере четыре дня нового года (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Первая полная неделя нового года |"
  example:
  - "This example uses the `DateDiff` function to display the number of days between a given date and today.  \n  \n [!code-vb[VbVbalrFunctions#26](~/add/codesnippet/visualbasic/46a9da0a-21fc-441c-a532-_3.vb)]"
  syntax:
    content: public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее интервал времени, который вы хотите использовать в качестве единицы измерения разницы между `Date1` и `Date2`."
    - id: Date1
      type: System.Object
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Первое значение даты и времени, который вы хотите использовать в вычислениях."
    - id: Date2
      type: System.Object
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>. Второе значение даты и времени, который вы хотите использовать в вычислениях."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> используется."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> перечисление, указывающее первую неделю года. Если не указан, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.Int64
      description: "Возвращает <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref> значение, указывающее число интервалов времени между двумя <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значения."
  overload: Microsoft.VisualBasic.DateAndTime.DateDiff*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Date1</code>, <code>Date2</code>, или <code>DayofWeek</code> выходит за пределы диапазона."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>Date1</code>или <code>Date2</code> имеет недопустимый тип."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее указанный компонент данного <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение."
  remarks: "Можно использовать `DatePart` функцию, чтобы оценить значение даты и времени и вернуть определенный компонент. Например, можно использовать `DatePart` для вычисления дня недели или текущего часа.       При выборе `DateInterval.Weekday` для `Interval` аргумент, возвращаемое значение не согласуется с значения `FirstDayOfWeek` перечисления. При выборе `DateInterval.WeekOfYear`, `DatePart` использует <xref:System.Globalization.Calendar>и <xref:System.Globalization.CultureInfo>классы <xref:System.Globalization>пространства имен, чтобы определить текущие параметры.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` Аргумент влияет на вычисления с использованием `DateInterval.Weekday` и `DateInterval.WeekOfYear` `Interval` параметры. `FirstWeekOfYearValue` Аргумент влияет на вычисления, которые указывают `DateInterval.WeekOfYear` для `Interval`.       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для извлечения частей даты и времени.</xref:System.DateTime> Например, можно получить значение дату `Date` переменной со значением времени, равным полуночи, следующим образом: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строка | Часть значения даты и времени для возврата |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| День месяца (от 1 до 31) |   | `DateInterval.DayOfYear`|y| День года (от 1 до 366) |   | `DateInterval.Hour`|h| Час |   | `DateInterval.Minute`|n| Минуты |   | `DateInterval.Month`|m| Месяц |   | `DateInterval.Quarter`|q| Квартал |   | `DateInterval.Second`|s| Второй |   | `DateInterval.Weekday`|w| День недели (от 1 до 7) |   | `DateInterval.WeekOfYear`|ww| Неделя года (от 1 до 53) |   | `DateInterval.Year`|yyyy| Год |       `FirstDayOfWeekValue` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в параметрах системы |   | `FirstDayOfWeek.Sunday`|1| Воскресенье (по умолчанию) |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |       `FirstWeekOfYearValue` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Первая неделя года, указанного в параметрах системы |   | `FirstWeekOfYear.Jan1`|1| Неделя, в которой 1 января (по умолчанию) |   | `FirstWeekOfYear.FirstFourDays`|2| Неделя, в которой по крайней мере четыре дня нового года (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Первая полная неделя в новый год |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/982d49dd-7819-40e1-9b19-_1.vb)]"
  syntax:
    content: public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: Microsoft.VisualBasic.DateInterval
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее часть значения даты и времени, необходимо вернуть."
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, которое необходимо оценить."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> используется."
    - id: FirstWeekOfYearValue
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> перечисление, указывающее первую неделю года. Если не указан, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее указанный компонент данного <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>не допускается."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>не является приводиться к <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  id: DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее указанный компонент данного <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение."
  remarks: "Можно использовать `DatePart` функцию, чтобы оценить значение даты и времени и вернуть определенный компонент. Например, можно использовать `DatePart` для вычисления дня недели или текущего часа.       При выборе `DateInterval.Weekday` для `Interval` аргумент, возвращаемое значение не согласуется с значения `FirstDayOfWeek` перечисления. При выборе `DateInterval.WeekOfYear`, `DatePart` использует <xref:System.Globalization.Calendar>и <xref:System.Globalization.CultureInfo>классы <xref:System.Globalization>пространства имен, чтобы определить текущие параметры.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.Calendar>       `FirstDayOfWeekValue` Аргумент влияет на вычисления с использованием `DateInterval.Weekday` и `DateInterval.WeekOfYear` `Interval` параметры. `FirstWeekOfYearValue` Аргумент влияет на вычисления, которые указывают `DateInterval.WeekOfYear` для `Interval`.       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для извлечения частей даты и времени.</xref:System.DateTime> Например, можно получить значение дату `Date` переменной со значением времени, равным полуночи, следующим образом: ```vb#   Dim CurrDatTim As Date = Now   &quot; Current date and time.   Dim LastMidnight As Date = CurrDatTim.Date   &quot; At midnight.   ``` `Interval` аргумент может принимать одно из следующих параметров.      | Значение перечисления | Строка | Часть значения даты и времени для возврата |   |-----------------------|------------|----------------------------------------|   | `DateInterval.Day`|d| День месяца (от 1 до 31) |   | `DateInterval.DayOfYear`|y| День года (от 1 до 366) |   | `DateInterval.Hour`|h| Час |   | `DateInterval.Minute`|n| Минуты |   | `DateInterval.Month`|m| Месяц |   | `DateInterval.Quarter`|q| Квартал |   | `DateInterval.Second`|s| Второй |   | `DateInterval.Weekday`|w| День недели (от 1 до 7) |   | `DateInterval.WeekOfYear`|ww| Неделя года (от 1 до 53) |   | `DateInterval.Year`|yyyy| Год |       `FirstDayOfWeekValue` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в параметрах системы |   | `FirstDayOfWeek.Sunday`|1| Воскресенье (по умолчанию) |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |       `FirstWeekOfYearValue` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstWeekOfYear.System`|0| Первая неделя года, указанного в параметрах системы |   | `FirstWeekOfYear.Jan1`|1| Неделя, в которой 1 января (по умолчанию) |   | `FirstWeekOfYear.FirstFourDays`|2| Неделя, в которой по крайней мере четыре дня нового года (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstWeekOfYear.FirstFullWeek`|3| Первая полная неделя в новый год |"
  example:
  - "This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.  \n  \n [!code-vb[VbVbalrFunctions#27](~/add/codesnippet/visualbasic/682455c0-1619-4c4c-8238-_1.vb)]"
  syntax:
    content: public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);
    parameters:
    - id: Interval
      type: System.String
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_DateInterval&quot; name=&quot;DateInterval&quot; href=&quot;&quot;></xref>значение перечисления или <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> выражение, представляющее часть значения даты и времени, необходимо вернуть."
    - id: DateValue
      type: System.Object
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, которое необходимо оценить."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> используется."
    - id: WeekOfYear
      type: Microsoft.VisualBasic.FirstWeekOfYear
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstWeekOfYear&quot; name=&quot;FirstWeekOfYear&quot; href=&quot;&quot;> </xref> перечисление, указывающее первую неделю года. Если не указан, <xref uid=&quot;langword_csharp_FirstWeekOfYear.Jan1&quot; name=&quot;FirstWeekOfYear.Jan1&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее указанный компонент данного <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение."
  overload: Microsoft.VisualBasic.DateAndTime.DatePart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Interval</code>является недопустимым."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>DateValue</code>не является приводиться к <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  id: DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, представляющее указанный год, месяц и день, сведения о времени, равным полуночи (00:&00;:00)."
  remarks: "В Windows 98 или Windows 2000 двумя цифрами для `Year` аргумент воспринимается в зависимости от параметров определяемых пользователем компьютера. Настройки по умолчанию, что значения от 0 до 29 интерпретируются как годы 2000 – 2029, и от 30 до 99 интерпретируются как 1930-1999 гг. Для всех других `Year` аргументы, использовать четырехзначный год, например 1924.       Более ранних версиях Windows двух цифр года интерпретируются на основе значения по умолчанию, описанные выше. Чтобы функция возвращает значение, используйте четырьмя цифрами `Year`.       В следующем примере демонстрируется отрицательное значение, ноль и положительного значений аргумента. Здесь `DateSerial` возврата функцией `Date` представляющий день, предшествующий первому дню марта за 10 лет до текущего года; другими словами, последний день февраля десять лет назад.      ```vb#   Dim EndFeb As Date = DateSerial(-10, 3, 0)   ```Если параметр `Month` или `Day` превышает стандартного диапазона, он применяется к более крупные единицы измерения соответствующие. Например, если задано 32 дня, оно вычисляется как один месяц и от одного до четырех дней, в зависимости от значения `Month`. Если `Year` больше 9999 или если какой-либо аргумент находится вне диапазона от -2147483648 до 2 147 483 647, <xref:System.ArgumentException>возникает ошибка.</xref:System.ArgumentException> Если указанной дате три аргумента меньше, чем 00:00:00 1 января 1 года или позже 23:59:59 31 декабря 9999 г., <xref:System.ArgumentOutOfRangeException>возникает ошибка.</xref:System.ArgumentOutOfRangeException>       `Date` Тип данных включает компоненты времени. `DateSerial`Задает для всех параметров значение 0, поэтому возвращаемое значение представляет начало вычисляемого дня.       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime>структуру, ее методы предоставляют дополнительные возможности для компоновки `Date` значение.</xref:System.DateTime> Например, можно использовать один из перегруженных <xref:System.DateTime.%23ctor%2A>конструкторов для заполнения `Date` переменной с помощью требуемые компоненты.</xref:System.DateTime.%23ctor%2A> В следующем примере задается `NewDateTime` на 6 мая 1978 одной десятой секунды до 8:30 утра:```vb#   Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "This example uses the `DateSerial` function to return the date for the specified year, month, and day.  \n  \n [!code-vb[VbVbalrFunctions#28](~/add/codesnippet/visualbasic/2c6c2f83-8b90-492d-bf33-_1.vb)]"
  syntax:
    content: public static DateTime DateSerial (int Year, int Month, int Day);
    parameters:
    - id: Year
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 1 до 9999. Тем не менее значения ниже этого диапазона, также являются допустимыми. Если `Year` — от 0 до 99, он интерпретируется как между 1930 и 2029, как описано в разделе «Примечания» ниже. Если `Year` меньше 1, оно вычитается из текущего года."
    - id: Month
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 1 до 12. Тем не менее также допустимы значения вне этого диапазона. Значение `Month` смещается на 1 и применяется к январю вычисляемого года. Другими словами (`Month` - 1) добавляется в январе. Год вычисляется заново при необходимости. Этот эффект показывают следующие результаты: Если `Month` имеет значение 1, то результатом является январь расчетного года.       Если `Month` равно 0, результат — декабрь предыдущего года.       Если `Month` равно -1, результат будет ноябрь предыдущего года.       Если `Month` равно 13, то результатом является январь следующего года."
    - id: Day
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 1 до 31. Тем не менее также допустимы значения вне этого диапазона. Значение `Day` смещается на 1 и применяется к первому дню расчетного месяца. Другими словами (`Day` - 1) добавляется в первый день месяца. Месяц и год вычисляются повторно при необходимости. Этот эффект показывают следующие результаты: Если `Day` имеет значение 1, результат будет первый день расчетного месяца.       Если `Day` равно 0, результат — последний день предыдущего месяца.       Если `Day` равно -1, результат будет предпоследний день предыдущего месяца.       Если `Day` является прошлом конец текущего месяца, результат будет соответствующий день следующего месяца. Например если `Month` — 4 и `Day` равно 31, результат — 1 мая."
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, представляющее указанный год, месяц и день, сведения о времени, равным полуночи (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateSerial*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  id: DateString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, представляющее текущую дату по часам компьютера."
  remarks: "`DateString`Возвращает системную дату в формате мм дд гггг, который использует сокращенное название месяца. Допустимые форматы даты: M-d гггг, M-d-y, дд.мм.гггг и м/y. Это верно для всех языков системы, кроме тех, которые используют набор двухбайтовых символов (DBCS). Если языковой стандарт системы использует набор двухбайтовых символов `DateString` возвращает системную дату в формате гггг мм дд. Локаль системы задается с помощью **часы, язык и регион** элемент **панели управления**.       **Примечание** `DateString` свойство возвращает системную дату в формате гггг мм дд для `zh` (китайский, упрощенное письмо), `ko` (корейский) и `ja` языков (японская) системы, если вы используете Visual Basic в Silverlight.       Чтобы получить или задать текущее системное время как `String`, используйте <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Для получения текущей системной даты или времени в формат языкового стандарта или пользовательский формат, укажите <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>Свойства <xref:Microsoft.VisualBasic.Strings.Format%2A>функции, указав либо в формате даты и времени, предварительно определенных или пользовательских.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Это показано в следующем примере.      ```   MsgBox(&quot;The formatted date is &quot; & Format(Now, &quot;dddd, d MMM yyyy&quot;))   ```Для доступа к текущей системной даты как `Date`, используйте <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      Настроек [!IMPORTANT] настроек для установки системной даты или времени требует разрешение неуправляемого кода, что может повлиять на его выполнение в случаях частичного доверия. Дополнительные сведения см. в разделе <xref:System.Security.Permissions.SecurityPermission>и [разрешений доступа к коду](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example uses the `DateString` property to display the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#1](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#1)]"
  syntax:
    content: public static string DateString { get; set; }
    return:
      type: System.String
      description: "Возвращает или задает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, представляющее текущую дату по часам компьютера."
  overload: Microsoft.VisualBasic.DateAndTime.DateString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Недопустимый формат используется для задания значения <xref uid=&quot;langword_csharp_DateString&quot; name=&quot;DateString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  id: DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее строковое представление даты с временем, равным полуночи (00:&00;:00)."
  remarks: "Если `StringDate` включает только числа от 1 до 12, разделенные допустимыми разделителями даты, `DateValue` распознает порядок следования для месяца, дня и года в соответствии с кратким форматом, заданным для операционной системы. `DateValue`использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Краткий формат можно переопределить, задав <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>свойство <xref:System.Globalization.DateTimeFormatInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.DateTimeFormatInfo> </xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>       `DateValue`распознает названия месяцев в полном, сокращенное и числовом виде. Например, помимо распознавания форматов 12/30/1991 и 12/30/91 `DateValue` также распознает 30 декабря 1991 и Dec 30, 1991.       Если часть года `StringDate` опущен, `DateValue` использует текущий год из системной даты компьютера.       Если `StringDate` аргумент содержит информацию о времени, `DateValue` не включает их в возвращаемое значение. Однако если `StringDate` содержит недопустимое значение времени сведения, такие как «89:&98;» <xref:System.InvalidCastException>возникает ошибка.</xref:System.InvalidCastException>"
  example:
  - "This example uses the `DateValue` function to convert a string to a date. You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.  \n  \n [!code-vb[VbVbalrFunctions#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._84_1.vb)]"
  syntax:
    content: public static DateTime DateValue (string StringDate);
    parameters:
    - id: StringDate
      type: System.String
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>выражение, представляющее значение даты и времени от 00:00:00 1 января 1 года до 23:59:59 31 декабря 9999 года."
    return:
      type: System.DateTime
      description: "<xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, содержащее строковое представление даты с временем, равным полуночи (00:&00;:00)."
  overload: Microsoft.VisualBasic.DateAndTime.DateValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringDate</code>содержит недопустимое значение времени."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  id: Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 31, представляющее день месяца."
  remarks: "Если вы используете `Day` функции, может потребоваться определить его с `Microsoft.VisualBasic` пространства имен, так как <xref:System.Windows.Forms>определяет пространство имен <xref:System.Windows.Forms.Day>как перечисление.</xref:System.Windows.Forms.Day> </xref:System.Windows.Forms> В следующем примере показан как соответствующие `Day` устраняет неоднозначность: ```vb#   Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)   ``` день месяца можно получить, вызвав `DatePart` и указав `DateInterval.Day` для *интервал* аргумент."
  example:
  - "The following example uses the `Day` function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as \"02/12/1969\") using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#30](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._126_1.vb)]  \n  \n `Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=fullName> enumeration."
  syntax:
    content: public static int Day (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь день."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 31, представляющее день месяца."
  overload: Microsoft.VisualBasic.DateAndTime.Day*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  id: Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 23, представляющее час дня."
  remarks: "Час дня можно получить, вызвав `DatePart` и указав `DateInterval.Hour` для `Interval` аргумент."
  example:
  - "This example uses the `Hour` function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#32](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._192_1.vb)]"
  syntax:
    content: public static int Hour (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь час."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 23, представляющее час дня."
  overload: Microsoft.VisualBasic.DateAndTime.Hour*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  id: Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 59, представляющее минуту часа."
  remarks: "Минуты часа можно получить, вызвав `DatePart` и указав `DateInterval.Minute` для `Interval` аргумент."
  example:
  - "This example uses the `Minute` function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#42](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._195_1.vb)]"
  syntax:
    content: public static int Minute (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь минуту часа."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 59, представляющее минуту часа."
  overload: Microsoft.VisualBasic.DateAndTime.Minute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  id: Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 12, представляющее месяц года."
  remarks: "Месяц года, можно получить, вызвав `DatePart` и указав `DateInterval.Month` для `Interval` аргумент."
  example:
  - "This example uses the `Month` function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#43](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._213_1.vb)]"
  syntax:
    content: public static int Month (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь месяц."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 12, представляющее месяц года."
  overload: Microsoft.VisualBasic.DateAndTime.Month*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  id: MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, содержащее название указанного месяца."
  remarks: "Строка, возвращаемая функцией `MonthName` зависит не только от входных аргументов, но также **язык и региональные стандарты** , заданные в Windows **панели управления**.      настроек [!NOTE]  >   `MonthName` использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>"
  example:
  - "This example uses the `MonthName` function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.  \n  \n [!code-vb[VbVbalrFunctions#44](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._194_1.vb)]"
  syntax:
    content: public static string MonthName (int Month, bool Abbreviate = false);
    parameters:
    - id: Month
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Числовое обозначение месяца, в диапазоне от 1 до 13; Указывает, 1 января, 12 — декабрь. Можно использовать значение 13 с 13-месячном календаре. Если системе используется 12-месячном календаре и `Month` равно 13, <xref uid=&quot;langword_csharp_MonthName&quot; name=&quot;MonthName&quot; href=&quot;&quot;> </xref> возвращает пустую строку."
    - id: Abbreviate
      type: System.Boolean
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>значение, которое указывает, является ли название месяца быть представлено в сокращенном виде. Если не указано, значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, что означает название месяца не сокращается."
    return:
      type: System.String
      description: "Возвращает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, содержащее название указанного месяца."
  overload: Microsoft.VisualBasic.DateAndTime.MonthName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Month</code>значение меньше 1 или больше 13."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Now
  id: Now
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущую дату и время по часам компьютера."
  remarks: "Чтобы установить системную дату, используйте <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A> Для установки системного времени, используйте <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>"
  example:
  - "The following example uses the `Now` property to return the current system date and time.  \n  \n [!code-vb[VbVbalrDateProperties#4](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#4)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущую дату и время по часам компьютера."
  overload: Microsoft.VisualBasic.DateAndTime.Now*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  id: Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 59, представляющее секунду в минуте."
  remarks: "Второй-минутного можно получить, вызвав `DatePart` и указав `DateInterval.Second` для `Interval` аргумент."
  example:
  - "The following example uses the `Second` function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#46](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._54_1.vb)]"
  syntax:
    content: public static int Second (DateTime TimeValue);
    parameters:
    - id: TimeValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь секунды."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 0 до 59, представляющее секунду в минуте."
  overload: Microsoft.VisualBasic.DateAndTime.Second*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  id: TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущее время дня по часам компьютера."
  remarks: "`Date` Тип данных включает компоненты даты. При возврате системного времени `TimeOfDay` задает для всех 1, поэтому возвращаемое значение представляет первый день года. При задании системного времени `TimeOfDay` игнорирует компоненты даты.       Для доступа к текущему системному времени как `String`, используйте <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A>       Чтобы получить или задать текущую системную дату, используйте <xref:Microsoft.VisualBasic.DateAndTime.Today%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.Today%2A>      Настроек [!IMPORTANT] настроек для установки системной даты или времени требует разрешение неуправляемого кода, что может повлиять на его выполнение в случаях частичного доверия. Дополнительные сведения см. в разделе <xref:System.Security.Permissions.SecurityPermission>и [разрешений доступа к коду](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeOfDay` property to return the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#3](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#3)]"
  syntax:
    content: public static DateTime TimeOfDay { get; set; }
    return:
      type: System.DateTime
      description: "Возвращает или задает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущее время дня по часам компьютера."
  overload: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  id: Timer
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> значение, представляющее число секунд, истекших после полуночи."
  remarks: "`Timer` Свойство Возвращает секунды и миллисекунды с момента последней полуночи. Секунды представлены в целой части возвращаемого значения, а миллисекунды — в дробной части."
  example:
  - "This example uses the `Timer` property to pause the application. It can perform other processing during the pause.  \n  \n [!code-vb[VbVbalrTimerProperty#1](~/add/codesnippet/visualbasic/VbVbalrTimerProperty/Form1.vb#1)]  \n  \n Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=fullName> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=fullName>, <xref:System.Timers?displayProperty=fullName>, and <xref:System.Windows.Forms?displayProperty=fullName> namespaces."
  syntax:
    content: public static double Timer { get; }
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> значение, представляющее число секунд, истекших после полуночи."
  overload: Microsoft.VisualBasic.DateAndTime.Timer*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  id: TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, представляющее указанный час, минуту и секунду, где дата установлена на 1 января 1 года."
  remarks: "В следующем примере демонстрируется отрицательное значение, ноль и положительного значений аргумента. `TimeSerial` Функция возвращает значение, представляющее 15 минут до трех часов до полудня, или 8:45:00 AM время.      ```vb#   Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)   ```Если параметр `Minute` или `Second` превышает стандартного диапазона, он применяется к более крупные единицы измерения соответствующие. Например указать 75 минут вычисляется в один час 15 минут.       `TimeSerial`уменьшает общее количество секунд по модулю 86 400, который представляет число секунд в день. Таким образом возвращаемое значение времени всегда находится между 00:00:00 и 23:59:59.       `Date` Тип данных включает компоненты даты. `TimeSerial`Задает для всех значение 1, поэтому возвращаемое значение представляет первый день года. Тем не менее если значения аргументов расчетное время превышает 24 часа, дня увеличивается при необходимости. В следующем примере значения `Hour` и `Minute` привести вместе время более 24 часов.      ```vb#   MsgBox(TimeSerial(23, 75, 0))    &quot; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.   ```Если значения аргументов отрицательное значение времени, сведения о дате, равным 1/1/0001 и время устанавливается между 00:00:00 и 23:59:59. Тем не менее, если вычисленное время меньше, чем отрицательное 24 часа, <xref:System.ArgumentOutOfRangeException>возникает ошибка.</xref:System.ArgumentOutOfRangeException>       Поскольку каждый `Date` значение поддерживается <xref:System.DateTime?displayProperty=fullName>структуру, ее методы предоставляют дополнительные возможности для компоновки `Date` значение.</xref:System.DateTime?displayProperty=fullName> Например, можно использовать один из перегруженных <xref:System.DateTime.%23ctor%2A>конструкторов для заполнения `Date` переменной с помощью требуемые компоненты.</xref:System.DateTime.%23ctor%2A> В следующем примере задается `newDateTime` на 6 мая 1978 одной десятой секунды до 8:30 утра:```vb#   Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)   ```"
  example:
  - "The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.  \n  \n [!code-vb[VbVbalrFunctions#50](~/add/codesnippet/visualbasic/4788d161-48a1-4476-aa26-_1.vb)]"
  syntax:
    content: public static DateTime TimeSerial (int Hour, int Minute, int Second);
    parameters:
    - id: Hour
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 0 до 23. Тем не менее также допустимы значения вне этого диапазона."
    - id: Minute
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 0 до 59. Тем не менее также допустимы значения вне этого диапазона. Значение `Minute` добавляется к расчетному часу, поэтому отрицательное значение указывает минуты до наступления этого часа."
    - id: Second
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>выражение от 0 до 59. Тем не менее также допустимы значения вне этого диапазона. Значение `Second` добавляется к вычисленным минутам, поэтому отрицательное значение указывает секунды до наступления этой минуты."
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, представляющее указанный час, минуту и секунду, где дата установлена на 1 января 1 года."
  overload: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение аргумента находится вне диапазона от -2147483648 до 2 147 483 647"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Расчетное время является менее отрицательное 24 часов."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  id: TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, представляющее текущее время дня по часам компьютера."
  remarks: "`TimeString`всегда возвращает системное время в виде «Чч», который является 24-часовом формате. Этот формат не зависит от языка и региональных параметров, поэтому он остается неизменным даже при изменении **язык и региональные стандарты** в **панели управления**.       Чтобы получить или задать текущую системную дату как `String`, используйте <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Для получения текущей системной даты или времени в формат языкового стандарта или пользовательский формат, укажите <xref:Microsoft.VisualBasic.DateAndTime.Now%2A>Свойства <xref:Microsoft.VisualBasic.Strings.Format%2A>функции, указав либо в формате даты и времени, предварительно определенных или пользовательских.</xref:Microsoft.VisualBasic.Strings.Format%2A> </xref:Microsoft.VisualBasic.DateAndTime.Now%2A> Это показано в следующем примере.      ```   MsgBox(&quot;The formatted time is &quot; & Format(Now, &quot;hh.mm.ss.fff tt&quot;))   ```Для доступа к текущему системному времени как `Date`, используйте <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      Настроек [!IMPORTANT] настроек для установки системной даты или времени требует разрешение неуправляемого кода, что может повлиять на его выполнение в случаях частичного доверия. Дополнительные сведения см. в разделе <xref:System.Security.Permissions.SecurityPermission>и [разрешений доступа к коду](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `TimeString` property to display the current system time.  \n  \n [!code-vb[VbVbalrDateProperties#2](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#2)]"
  syntax:
    content: public static string TimeString { get; set; }
    return:
      type: System.String
      description: "Возвращает или задает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, представляющее текущее время дня по часам компьютера."
  overload: Microsoft.VisualBasic.DateAndTime.TimeString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Недопустимый формат используется для задания значения <xref uid=&quot;langword_csharp_TimeString&quot; name=&quot;TimeString&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  id: TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее сведения о времени, представленное строкой, где дата значение 1 января 1 года."
  remarks: "Можно ввести допустимое время в 12- или 24-часовом формате. Например `&quot;2:24 P.M.&quot;` и `&quot;14:24&quot;` допустимы оба `StringTime` аргументы.       Если `StringTime` аргумент содержит информацию о дате, `TimeValue` не включает их в возвращаемое значение. Однако если `StringTime` содержит неверные сведения о дате, например «Январь 32», <xref:System.InvalidCastException>возникает ошибка.</xref:System.InvalidCastException>"
  example:
  - "The following example uses the `TimeValue` function to convert a string to a time. You can also use date literals to directly assign a time to a `Date` variable.  \n  \n [!code-vb[VbVbalrFunctions#51](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._232_1.vb)]"
  syntax:
    content: public static DateTime TimeValue (string StringTime);
    parameters:
    - id: StringTime
      type: System.String
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>выражение, представляющее значение даты и времени от 00:00:00 1 января 1 года до 23:59:59 31 декабря 9999 года."
    return:
      type: System.DateTime
      description: "Возвращает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее сведения о времени, представленное строкой, где дата значение 1 января 1 года."
  overload: Microsoft.VisualBasic.DateAndTime.TimeValue*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>StringTime</code>содержит неверные сведения о дате."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Today
  id: Today
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущую дату по часам компьютера."
  remarks: "`Date` Тип данных включает компоненты времени. При возврате системной даты `Today` задает для всех параметров значение 0, поэтому возвращаемое значение представляет полночь (00: 00:00). При установке системной даты `Today` игнорирует компоненты времени.       Для доступа к текущей системной даты как `String`, используйте <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.DateString%2A>       Чтобы получить или задать текущее системное время, используйте <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>свойство.</xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A>      Настроек [!IMPORTANT] настроек для установки системной даты или времени требует разрешение неуправляемого кода, что может повлиять на его выполнение в случаях частичного доверия. Дополнительные сведения см. в разделе <xref:System.Security.Permissions.SecurityPermission>и [разрешений доступа к коду](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the `Today` property to return the current system date.  \n  \n [!code-vb[VbVbalrDateProperties#5](~/add/codesnippet/visualbasic/VbVbalrDateProperties/Module1.vb#5)]"
  syntax:
    content: public static DateTime Today { get; set; }
    return:
      type: System.DateTime
      description: "Возвращает или задает <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;> </xref> значение, содержащее текущую дату по часам компьютера."
  overload: Microsoft.VisualBasic.DateAndTime.Today*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  id: Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее число, представляющее день недели."
  remarks: "Значение, возвращаемое `Weekday` функция соответствует значениям `FirstDayOfWeek` перечисления; то есть, 1 — это воскресенье, а 7 — суббота.      настроек [!NOTE]  >   `Weekday` использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `DayOfWeek` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в параметрах системы |   | `FirstDayOfWeek.Sunday`|1| Воскресенье (по умолчанию) |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date.  \n  \n [!code-vb[VbVbalrFunctions#57](~/add/codesnippet/visualbasic/369e7ed8-1790-4eb8-9e17-_1.vb)]"
  syntax:
    content: public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, для которого требуется определить день недели."
    - id: DayOfWeek
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.Sunday&quot; name=&quot;FirstDayOfWeek.Sunday&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение, содержащее число, представляющее день недели."
  overload: Microsoft.VisualBasic.DateAndTime.Weekday*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>DayOfWeek</code>значение меньше 0 или больше 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  id: WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, содержащее название указанного дня недели."
  remarks: "Строка, возвращаемая функцией `WeekdayName` зависит не только от входных аргументов, но также **язык и региональные стандарты** , заданные в Windows **панели управления**.      настроек [!NOTE]  >   `WeekdayName` использует текущую настройку календаря из <xref:System.Globalization.CultureInfo.CurrentCulture%2A>свойство <xref:System.Globalization.CultureInfo>класса в <xref:System.Globalization>пространства имен.</xref:System.Globalization> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo.CurrentCulture%2A> Значение по умолчанию <xref:System.Globalization.CultureInfo.CurrentCulture%2A>значения определяются **панели управления** параметры.</xref:System.Globalization.CultureInfo.CurrentCulture%2A>       `FirstDayOfWeekValue` Аргумент может принимать одно из следующих параметров.      | Значение перечисления | Значение | Описание |   |-----------------------|-----------|-----------------|   | `FirstDayOfWeek.System`|0| Первый день недели, заданный в системе параметры (по умолчанию) |   | `FirstDayOfWeek.Sunday`|1| Воскресенье |   | `FirstDayOfWeek.Monday`|2| Понедельник (соответствует стандарту ISO 8601, раздел 3.17) |   | `FirstDayOfWeek.Tuesday`|3| Вторник |   | `FirstDayOfWeek.Wednesday`|4| Среда |   | `FirstDayOfWeek.Thursday`|5| Четверг |   | `FirstDayOfWeek.Friday`|6| Пятница |   | `FirstDayOfWeek.Saturday`|7| Суббота |"
  example:
  - "The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.  \n  \n [!code-vb[VbVbalrFunctions#58](~/add/codesnippet/visualbasic/3ef2fbeb-749b-412a-a8c7-_1.vb)]"
  syntax:
    content: public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);
    parameters:
    - id: Weekday
      type: System.Int32
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Числовое обозначение дня недели, от 1 до 7; 1 указывает на первый день недели, а 7 — последний день недели. Идентификаторы первого и последнего дня зависят от настройки `FirstDayOfWeekValue`."
    - id: Abbreviate
      type: System.Boolean
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>значение, которое указывает, является ли сокращение названия дня недели. Если не указано, значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, что означает полное название дня недели не сокращается."
    - id: FirstDayOfWeekValue
      type: Microsoft.VisualBasic.FirstDayOfWeek
      description: "Необязательный параметр. Значение, выбранное из <xref uid=&quot;langword_csharp_FirstDayOfWeek&quot; name=&quot;FirstDayOfWeek&quot; href=&quot;&quot;> </xref> перечисление, указывающее первый день недели. Если не указан, <xref uid=&quot;langword_csharp_FirstDayOfWeek.System&quot; name=&quot;FirstDayOfWeek.System&quot; href=&quot;&quot;> </xref> используется."
    return:
      type: System.String
      description: "Возвращает <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> значение, содержащее название указанного дня недели."
  overload: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Weekday</code>имеет значение меньше 1 или больше 7, или <code>FirstDayOfWeekValue</code> меньше 0 или больше 7."
  platform:
  - net462
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  id: Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  langs:
  - csharp
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 9999, представляющее год."
  remarks: "Год можно получить, вызвав `DatePart` и указав `DateInterval.Year` для `Interval` аргумент."
  example:
  - "The following example uses the `Year` function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  \n  \n [!code-vb[VbVbalrFunctions#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._223_1.vb)]"
  syntax:
    content: public static int Year (DateTime DateValue);
    parameters:
    - id: DateValue
      type: System.DateTime
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>значение, из которого требуется извлечь год."
    return:
      type: System.Int32
      description: "Возвращает <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> значение от 1 до 9999, представляющее год."
  overload: Microsoft.VisualBasic.DateAndTime.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(DateInterval,Double,DateTime)
  nameWithType: DateAndTime.DateAdd(DateInterval,Double,DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(DateInterval,Double,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateInterval
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateInterval
  nameWithType: DateInterval
  fullName: Microsoft.VisualBasic.DateInterval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd(String,Double,Object)
  nameWithType: DateAndTime.DateAdd(String,Double,Object)
  fullName: Microsoft.VisualBasic.DateAndTime.DateAdd(String,Double,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FirstDayOfWeek
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstDayOfWeek
  nameWithType: FirstDayOfWeek
  fullName: Microsoft.VisualBasic.FirstDayOfWeek
- uid: Microsoft.VisualBasic.FirstWeekOfYear
  parent: Microsoft.VisualBasic
  isExternal: false
  name: FirstWeekOfYear
  nameWithType: FirstWeekOfYear
  fullName: Microsoft.VisualBasic.FirstWeekOfYear
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  nameWithType: DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
  fullName: Microsoft.VisualBasic.DateAndTime.DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.DateSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.DateSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.DateString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
  fullName: Microsoft.VisualBasic.DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue(String)
  nameWithType: DateAndTime.DateValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.DateValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day(DateTime)
  nameWithType: DateAndTime.Day(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Day(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour(DateTime)
  nameWithType: DateAndTime.Hour(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Hour(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute(DateTime)
  nameWithType: DateAndTime.Minute(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Minute(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month(DateTime)
  nameWithType: DateAndTime.Month(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Month(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName(Int32,Boolean)
  nameWithType: DateAndTime.MonthName(Int32,Boolean)
  fullName: Microsoft.VisualBasic.DateAndTime.MonthName(Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.DateAndTime.Now
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
  fullName: Microsoft.VisualBasic.DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second(DateTime)
  nameWithType: DateAndTime.Second(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Second(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
  fullName: Microsoft.VisualBasic.DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
  fullName: Microsoft.VisualBasic.DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial(Int32,Int32,Int32)
  nameWithType: DateAndTime.TimeSerial(Int32,Int32,Int32)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeSerial(Int32,Int32,Int32)
- uid: Microsoft.VisualBasic.DateAndTime.TimeString
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
  fullName: Microsoft.VisualBasic.DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue(String)
  nameWithType: DateAndTime.TimeValue(String)
  fullName: Microsoft.VisualBasic.DateAndTime.TimeValue(String)
- uid: Microsoft.VisualBasic.DateAndTime.Today
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
  fullName: Microsoft.VisualBasic.DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday(DateTime,FirstDayOfWeek)
  nameWithType: DateAndTime.Weekday(DateTime,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.Weekday(DateTime,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName(Int32,Boolean,FirstDayOfWeek)
  nameWithType: DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
  fullName: Microsoft.VisualBasic.DateAndTime.WeekdayName(Int32,Boolean,FirstDayOfWeek)
- uid: Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year(DateTime)
  nameWithType: DateAndTime.Year(DateTime)
  fullName: Microsoft.VisualBasic.DateAndTime.Year(DateTime)
- uid: Microsoft.VisualBasic.DateAndTime.DateAdd*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateAdd
  nameWithType: DateAndTime.DateAdd
- uid: Microsoft.VisualBasic.DateAndTime.DateDiff*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateDiff
  nameWithType: DateAndTime.DateDiff
- uid: Microsoft.VisualBasic.DateAndTime.DatePart*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DatePart
  nameWithType: DateAndTime.DatePart
- uid: Microsoft.VisualBasic.DateAndTime.DateSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateSerial
  nameWithType: DateAndTime.DateSerial
- uid: Microsoft.VisualBasic.DateAndTime.DateString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateString
  nameWithType: DateAndTime.DateString
- uid: Microsoft.VisualBasic.DateAndTime.DateValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: DateValue
  nameWithType: DateAndTime.DateValue
- uid: Microsoft.VisualBasic.DateAndTime.Day*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Day
  nameWithType: DateAndTime.Day
- uid: Microsoft.VisualBasic.DateAndTime.Hour*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Hour
  nameWithType: DateAndTime.Hour
- uid: Microsoft.VisualBasic.DateAndTime.Minute*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Minute
  nameWithType: DateAndTime.Minute
- uid: Microsoft.VisualBasic.DateAndTime.Month*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Month
  nameWithType: DateAndTime.Month
- uid: Microsoft.VisualBasic.DateAndTime.MonthName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: MonthName
  nameWithType: DateAndTime.MonthName
- uid: Microsoft.VisualBasic.DateAndTime.Now*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Now
  nameWithType: DateAndTime.Now
- uid: Microsoft.VisualBasic.DateAndTime.Second*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Second
  nameWithType: DateAndTime.Second
- uid: Microsoft.VisualBasic.DateAndTime.TimeOfDay*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateAndTime.TimeOfDay
- uid: Microsoft.VisualBasic.DateAndTime.Timer*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Timer
  nameWithType: DateAndTime.Timer
- uid: Microsoft.VisualBasic.DateAndTime.TimeSerial*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeSerial
  nameWithType: DateAndTime.TimeSerial
- uid: Microsoft.VisualBasic.DateAndTime.TimeString*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeString
  nameWithType: DateAndTime.TimeString
- uid: Microsoft.VisualBasic.DateAndTime.TimeValue*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: TimeValue
  nameWithType: DateAndTime.TimeValue
- uid: Microsoft.VisualBasic.DateAndTime.Today*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Today
  nameWithType: DateAndTime.Today
- uid: Microsoft.VisualBasic.DateAndTime.Weekday*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Weekday
  nameWithType: DateAndTime.Weekday
- uid: Microsoft.VisualBasic.DateAndTime.WeekdayName*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: WeekdayName
  nameWithType: DateAndTime.WeekdayName
- uid: Microsoft.VisualBasic.DateAndTime.Year*
  parent: Microsoft.VisualBasic.DateAndTime
  isExternal: false
  name: Year
  nameWithType: DateAndTime.Year
