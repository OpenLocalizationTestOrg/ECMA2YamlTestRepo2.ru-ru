### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerTimeoutManager
  id: HttpListenerTimeoutManager
  children:
  - System.Net.HttpListenerTimeoutManager.DrainEntityBody
  - System.Net.HttpListenerTimeoutManager.EntityBody
  - System.Net.HttpListenerTimeoutManager.HeaderWait
  - System.Net.HttpListenerTimeoutManager.IdleConnection
  - System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  - System.Net.HttpListenerTimeoutManager.RequestQueue
  langs:
  - csharp
  name: HttpListenerTimeoutManager
  nameWithType: HttpListenerTimeoutManager
  fullName: System.Net.HttpListenerTimeoutManager
  type: Class
  summary: "Диспетчер времени ожидания для <xref href=&quot;System.Net.HttpListener&quot;> </xref> объекта."
  remarks: "Диспетчер времени ожидания определяет ограничения на время ожидания подключения для <xref:System.Net.HttpListener>экземпляра.</xref:System.Net.HttpListener>"
  syntax:
    content: public class HttpListenerTimeoutManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  id: DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает время в секундах, <xref href=&quot;System.Net.HttpListener&quot;> </xref> истощения тела сообщения для поддержания активности соединения."
  remarks: "Значение по умолчанию для этого свойства — 2 минуты.       Для поддержания активности соединения после отправки ответа на запрос приложения и полностью пришло тело сущности запроса <xref:System.Net.HttpListener>начинается сток оставшейся части тела сообщения до другого потенциально конвейерная запрос от клиента.</xref:System.Net.HttpListener> Если время истощения оставшиеся тела сообщения превышает допустимый период ожидания соединения."
  syntax:
    content: public TimeSpan DrainEntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "Возвращает <xref:System.TimeSpan>.</xref:System.TimeSpan>       Время в секундах, отводимое <xref href=&quot;System.Net.HttpListener&quot;> </xref> истощения тела сообщения для поддержания активности соединения."
  overload: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  id: EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает время в секундах, тело сущности запроса поступления."
  remarks: "Значение по умолчанию для этого свойства — 2 минуты.       <xref:System.Net.HttpListener>Включает этот таймер при запросе имеет тело сущности.</xref:System.Net.HttpListener> Истечение срока действия таймера изначально присваивается заданное значение. При <xref:System.Net.HttpListener>получает дополнительные данные указывают на запрос, он сбрасывает таймер, чтобы предоставить другой интервал подключения.</xref:System.Net.HttpListener>"
  syntax:
    content: public TimeSpan EntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "Возвращает <xref:System.TimeSpan>.</xref:System.TimeSpan>       Время, отводимое поступления тело сущности запроса."
  overload: System.Net.HttpListenerTimeoutManager.EntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  id: HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает время в секундах, <xref href=&quot;System.Net.HttpListener&quot;> </xref> выполнить синтаксический анализ заголовка запроса."
  remarks: "Значение по умолчанию для этого свойства — 2 минуты.       Это время ожидания применяется только после первого запроса на соединение направляется на <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener>       Системе не удается определить очередь запросов или группу URL-адрес, сопоставленный запрос, пока не было проанализировано заголовки. Таким образом <xref:System.Net.HttpListener>обеспечивает таймер HeaderWait по умолчанию для первого запроса на соединение.</xref:System.Net.HttpListener> Последующие запросы на открытое подключение будет использовать значение, заданное для этого свойства."
  syntax:
    content: public TimeSpan HeaderWait { get; set; }
    return:
      type: System.TimeSpan
      description: "Возвращает <xref:System.TimeSpan>.</xref:System.TimeSpan>       Время в секундах, отводимое <xref href=&quot;System.Net.HttpListener&quot;> </xref> выполнить синтаксический анализ заголовка запроса."
  overload: System.Net.HttpListenerTimeoutManager.HeaderWait*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  id: IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает время в секундах для неактивного подключения."
  remarks: "Значение по умолчанию для этого свойства — 2 минуты.       Это время ожидания применяется только после первого запроса на соединение направляется на <xref:System.Net.HttpListener>.</xref:System.Net.HttpListener>       Системе не удается определить очередь запросов или группу URL-адрес, сопоставленный запрос, пока не было проанализировано заголовки. Таким образом <xref:System.Net.HttpListener>обеспечивает таймер IdleConnection по умолчанию для первого запроса на соединение.</xref:System.Net.HttpListener> Последующие запросы на открытое подключение будет использовать значение, заданное для этого свойства."
  syntax:
    content: public TimeSpan IdleConnection { get; set; }
    return:
      type: System.TimeSpan
      description: "Возвращает <xref:System.TimeSpan>.</xref:System.TimeSpan>       Время в секундах для неактивного подключения."
  overload: System.Net.HttpListenerTimeoutManager.IdleConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  id: MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает минимальная скорость отправки, в байтах в секунду, для ответа."
  remarks: "Скорость отправки ответа по умолчанию — 150 байт в секунду.       Чтобы отключить этот таймер, установите MinSendBytesPerSecond MAXULONG."
  syntax:
    content: public long MinSendBytesPerSecond { get; set; }
    return:
      type: System.Int64
      description: "Возвращает <xref:System.Int64>.</xref:System.Int64>       Скорость минимальное отправки в байтах в секунду, для ответа."
  overload: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  id: RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает или задает время в секундах, разрешенный для запроса должен храниться в очереди запросов перед <xref href=&quot;System.Net.HttpListener&quot;> </xref> принимает сообщение."
  remarks: "Значение по умолчанию для этого свойства — 2 минуты."
  syntax:
    content: public TimeSpan RequestQueue { get; set; }
    return:
      type: System.TimeSpan
      description: "Возвращает <xref:System.TimeSpan>.</xref:System.TimeSpan>       Время в секундах, разрешенный для запроса должен храниться в очереди запросов перед <xref href=&quot;System.Net.HttpListener&quot;> </xref> принимает сообщение."
  overload: System.Net.HttpListenerTimeoutManager.RequestQueue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
- uid: System.Net.HttpListenerTimeoutManager.EntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
