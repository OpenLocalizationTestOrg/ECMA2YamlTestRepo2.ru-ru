### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Позволяет приложению определить, является ли удаленный компьютер доступен по сети."
  remarks: "Приложения используют класс Ping для определить, доступен ли удаленного компьютера.       Топология сети может определить ли Ping успешно могут обращаться к удаленному узлу. Наличие и конфигурации преобразования Сетевых адресов адрес сетевого оборудования, брандмауэров и прокси могут препятствовать успешному выполнению команды Ping. Успешная проверка связи означает только что удаленного узла может быть достигнута по сети; наличие служб более высокого уровня (например, веб-сервера) на удаленном узле, не гарантируется.       Этот класс предоставляет функциональность, аналогичную Ping.exe средства командной строки. <xref:System.Net.NetworkInformation.Ping.Send%2A>И <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методы отправить сообщение запроса echo управления сообщений протокола ICMP (Internet) удаленный компьютер и ожидает сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Подробное описание сообщений протокола ICMP, см в [http://www.ietf.org](http://www.ietf.org/).       Следующие типы используются в классе проверки связи и подробно рассмотрены ниже.      | **Имя типа**|**описание**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Определяет коды состояния, которые описывают результат сообщения запроса проверки связи ICMP. |   | <xref:System.Net.NetworkInformation.PingOptions>| Позволяет настроить или получить параметры, определяющие, сколько раз пакет запроса можно перенаправить (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), и его можно ли фрагментированных (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Содержит результаты запроса проверки связи ICMP. |   | <xref:System.Net.NetworkInformation.PingException>| Исключение при возникновении неустранимой ошибки. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Содержит данные, связанные с <xref:System.Net.NetworkInformation.Ping.PingCompleted>событиями, происходящими после вызова <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>завершается или отменяется. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| Делегат, который предоставляет метод обратного вызова вызывается, когда вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>завершается или отменяется. |       <xref:System.Net.NetworkInformation.Ping.Send%2A>И <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методы возвращают ответ в <xref:System.Net.NetworkInformation.PingReply>объекта.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>Возвращает <xref:System.Net.NetworkInformation.IPStatus>значение, указывающее результат запроса.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       При отправке запроса необходимо указать удаленный компьютер. Это можно сделать, предоставляющим узел строку имени, IP-адрес в формате строки или <xref:System.Net.IPAddress>объекта.</xref:System.Net.IPAddress>       Также можно указать любую из следующих типов данных:-данные, сопровождающие запрос. Указание `buffer` позволяет узнать количество времени, необходимые для пакета определенного размера передаются из удаленного узла и также MTU сетевого пути. (См. <xref:System.Net.NetworkInformation.Ping.Send%2A>или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузок, принимающих `buffer` параметров.)      -Ли во время передачи, в котором можно фрагментации пакетов проверки связи ICMP.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (См. свойство <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>и <xref:System.Net.NetworkInformation.Ping.Send%2A>или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузки, принимают `options` параметров.)      -Максимальное число подключений узлов маршрутизации, такие как маршрутизаторы или шлюзы, может отправлять пакет, до достижения конечного компьютера или удаляется.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (См. в разделе <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>и <xref:System.Net.NetworkInformation.Ping.Send%2A>или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузок, принимающих `options` параметров.)      -Ограничение времени, в течение которого ответ должен быть получен.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (См. <xref:System.Net.NetworkInformation.Ping.Send%2A>или <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузок, принимающих `timeout` параметр.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       Класс Ping предоставляет синхронные и асинхронные методы для отправки запроса. Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A> Если приложение не должно блокировать, используйте асинхронный <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методы.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>выполняется в отдельном потоке, который автоматически выделяется из пула потоков.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегат для указания метода, который вызывается для <xref:System.Net.NetworkInformation.Ping.PingCompleted>события.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       Не удается использовать тот же экземпляр, Ping класса для создания нескольких одновременных запросов проверки связи ICMP. Вызов <xref:System.Net.NetworkInformation.Ping.Send%2A>при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызов является выполняется или вызывающий <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>несколько раз до того, как все предыдущие вызовы завершения <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> объекта и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.ComponentModel.Component.Finalize%2A>метод.</xref:System.ComponentModel.Component.Finalize%2A> Открытые `Dispose()` метод вызывает защищенный метод Dispose с `disposing` равным `true`. <xref:System.ComponentModel.Component.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`.</xref:System.ComponentModel.Component.Finalize%2A>       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.NetworkInformation.Ping>ссылки на объекты.</xref:System.Net.NetworkInformation.Ping> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Вызывает <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> событий."
  remarks: "Классы, наследующие от <xref:System.Net.NetworkInformation.Ping>класс может переопределить этот метод для выполнения дополнительных задач, например, ведение журнала данных, содержащихся в `e` параметр.</xref:System.Net.NetworkInformation.Ping>       При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnPingCompleted также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> объект, содержащий данные события."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Происходит при завершении асинхронной операции отправки сообщении управления сообщений протокола ICMP (Internet) и получения соответствующего сообщения ответа проверки связи ICMP, или отменяется."
  remarks: "Приложения используют PingCompleted событий для получения сведений о состоянии завершения и данные, собранные с помощью вызова одного из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методы.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Делегат обеспечивает вызов метода обратного вызова при <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает это событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщении управления сообщений протокола ICMP (Internet) на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress>"
  remarks: "Этот метод отправляет на узел, который задается параметром `address` 32 <xref:System.Byte>буфера данных с помощью проверки связи ICMP.</xref:System.Byte> Метод ожидает&5; секунд для сообщения ответа проверки связи ICMP. Если не получил ответ в это время, этот метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о ответного сообщения проверки связи ICMP, был получен, или она описывает причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) на указанном компьютере и получения соответствующего ICMP эхо-ответ с этого компьютера."
  remarks: "Этот метод отправляет 32 <xref:System.Byte>буфера данных с помощью проверки связи ICMP.</xref:System.Byte> Метод ожидает&5; секунд для сообщения ответа проверки связи ICMP. Если не получил ответ в это время, этот метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о ответного сообщения проверки связи ICMP, был получен, или она предоставляет причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Пытается отправить на компьютер, имеющий указанный сообщении управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Этот метод позволяет указать значение времени ожидания для операции."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о сообщения ответа проверки связи ICMP было получено или она предоставляет причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) на указанном компьютере и получения соответствующего ICMP эхо-ответ с этого компьютера. Этот метод позволяет указать значение времени ожидания для операции."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о сообщения ответа проверки связи ICMP было получено или она предоставляет причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Пытается отправить на компьютер, имеющий указанный сообщении управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о ответного сообщения проверки связи ICMP, был получен, или она предоставляет причину сбоя, если сообщение не было получено. Метод вернет <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Если пакет превышает максимальный (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>buffer</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или <code>buffer</code> размер больше, чем 65500 байт."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на указанном компьютере и получения соответствующего ICMP эхо-ответ с этого компьютера. Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, указанного в `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о сообщения ответа проверки связи ICMP было получено или она предоставляет причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»).       - или - <code>buffer</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или <code>buffer</code> размер больше, чем 65500 байт."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Пытается отправить на компьютер, имеющий указанный сообщении управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции, а также управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о ответного сообщения проверки связи ICMP, был получен, или она предоставляет причину сбоя, если сообщение не было получено. Метод вернет <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Если пакет превышает максимальный (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>buffer</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или <code>buffer</code> размер больше, чем 65500 байт."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на указанном компьютере и получения соответствующего ICMP эхо-ответ с этого компьютера. Эта перегрузка позволяет указать значение времени ожидания для операции, а также управления фрагментации и значения времени жизни пакета ICMP."
  remarks: "Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> объект, предоставляющий сведения о сообщения ответа проверки связи ICMP было получено или она предоставляет причину сбоя, если сообщение не было получено."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , или строка нулевой длины.       - или - <code>buffer</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или <code>buffer</code> размер больше, чем 65500 байт."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress>"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      Настроек [!NOTE] настроек, если приложение должно блокировать во время ожидания ответа, используйте один из <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Этот метод отправляет 32 <xref:System.Byte>буфера данных с помощью проверки связи ICMP.</xref:System.Byte> Метод ожидает&5; секунд для сообщения ответа проверки связи ICMP. Если не получил ответ в это время, этот метод возвращает и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>метод идет.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) на указанном компьютере и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера."
  remarks: "Метод SendAsync асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите метод SendAsync, когда приложение не должно блокировать. Каждый вызов этого метода выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      Настроек [!NOTE] настроек используйте, если приложение должно блокировать во время ожидания ответа, <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Этот метод отправляет 32 <xref:System.Byte>буфера данных с помощью проверки связи ICMP.</xref:System.Byte> Метод ожидает&5; секунд для сообщения ответа проверки связи ICMP. Если не получает ответ в том, что время выполнения метода и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Пакет или его фрагменты могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Идет вызов метода SendAsync."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>не удалось разрешить допустимый IP-адрес."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>метод идет.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) на указанном компьютере и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера. Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>не удалось разрешить допустимый IP-адрес."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "Этот метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние для приложения. Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие, необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      Настроек [!NOTE] настроек используйте, если приложение выполняет блокировку во время ожидания ответа, <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера. Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>объект, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Эта перегрузка использует параметры по умолчанию для фрагментирования и переадресации пакетов. Пакет, содержащий сообщение проверки связи ICMP может быть фрагментированным во время передачи, если общий размер пакета превышает максимальный размер пакета, может быть передан одним из узлов маршрутизации, расположенных между локальным и удаленным компьютерами. Чтобы предотвратить фрагментации, используйте один из <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>методов, принимающих `options` и установите <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>Свойства `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>является `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Пакет или его фрагменты (если фрагментированными) могут быть переадресованы узлами маршрутизации 128 раз, прежде чем будет отброшен. Чтобы изменить этот параметр, используйте <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>перегрузку, принимающую `options` и установите <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство нужное значение.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>не удалось разрешить допустимый IP-адрес."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправить сообщение эхо управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции, а также управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Если приложение выполняет блокировку во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Предпринимает попытку отправки сообщении управления сообщений протокола ICMP (Internet) с помощью указанных данных буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера. Эта перегрузка позволяет указать значение времени ожидания для операции, а также управления фрагментации и значения времени жизни пакета ICMP."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Метод асинхронно отправляет сообщение проверки связи, а после завершения операции (успешного или сбойного) возвращает состояние в приложение.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Вызовите <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>метод, если приложение не должно блокировать.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Каждый вызов выполняется в отдельном потоке, который автоматически выделяется из пула потоков. После завершения асинхронной операции, он выдает <xref:System.Net.NetworkInformation.Ping.PingCompleted>событий.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Приложения используют <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата, чтобы указать метод, который вызывается, когда <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызывает событие.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Необходимо добавить <xref:System.Net.NetworkInformation.PingCompletedEventHandler>делегата для события перед вызовом <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Получает метод делегата <xref:System.Net.NetworkInformation.PingCompletedEventArgs>, содержащий <xref:System.Net.NetworkInformation.PingReply>объекта, который описывает результат <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Наследует объект <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Это свойство содержит `userToken` , переданное в <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>вызовите.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Если приложение должно блокировать во время ожидания ответа, используйте <xref:System.Net.NetworkInformation.Ping.Send%2A>методы, эти методы являются синхронными.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Если сообщения ответа проверки связи ICMP не получено в течение времени, заданного параметром `timeout` параметра, происходит сбой проверки связи ICMP и <xref:System.Net.NetworkInformation.PingReply.Status%2A>свойству <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      Настроек [!NOTE] настроек при задании очень маленьких значений для `timeout`, ответ на команду Ping может быть получено даже в том случае, если `timeout` прошедших миллисекунд.       Если <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>свойство `true` и общий размер пакета превышает максимальный размер пакета, может быть передан один из узлов маршрутизации между локальными и удаленными компьютерами, происходит сбой запроса проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Используйте <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>свойство, чтобы указать максимальное количество раз до достижения места назначения можно перенаправить сообщение проверки связи ICMP.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Если пакет не достигают назначению после пересылку указанное число раз, пакет отбрасывается и происходит сбой эхо-запрос ICMP. Если это происходит, <xref:System.Net.NetworkInformation.PingReply.Status%2A>равно <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Объект <xref:System.String>, определяет компьютер, который является целевым для проверки связи ICMP.</xref:System.String> Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: buffer
      type: System.Byte[]
      description: "<xref:System.Int32>Значение, указывающее максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    - id: userToken
      type: System.Object
      description: "Объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой (»»).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-адресом и локальный компьютер работает под управлением операционной системы более ранних, чем Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>не удалось разрешить допустимый IP-адрес."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отменяет все ожидающие асинхронные запросы, чтобы отправить сообщение echo управления сообщений протокола ICMP (Internet) и получение соответствующего сообщения ответа проверки связи ICMP."
  remarks: "Этот метод вызывается для завершения каких-либо вызовов <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, не завершены.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправка сообщения эхо-повтор сообщений протокола ICMP (Internet Control) с указанного буфера данных на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получение соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции.</xref:System.Net.IPAddress>"
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "IP-адрес, определяющий компьютер, который является целевым для проверки связи ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправляет протокол управления сообщений протокола ICMP (Internet) echo сообщения с указанными данными буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Компьютер, который является целевым для проверки связи ICMP. Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправка сообщения эхо-повтор сообщений протокола ICMP (Internet Control) с указанного буфера данных на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получение соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "IP-адрес, определяющий компьютер, который является целевым для проверки связи ICMP."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправляет протокол управления сообщений протокола ICMP (Internet) echo сообщения с указанными данными буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции. Эта перегрузка позволяет указать значение времени ожидания для операции."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Компьютер, который является целевым для проверки связи ICMP. Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправка сообщения эхо-повтор сообщений протокола ICMP (Internet Control) с указанного буфера данных на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получение соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания операции и буфер для отправки и получения."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "IP-адрес, определяющий компьютер, который является целевым для проверки связи ICMP."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65 500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправляет протокол управления сообщений протокола ICMP (Internet) echo сообщения с указанными данными буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции. Эта перегрузка позволяет указать значение времени ожидания операции и буфер для отправки и получения."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Компьютер, который является целевым для проверки связи ICMP. Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправка сообщения эхо-повтор сообщений протокола ICMP (Internet Control) с указанного буфера данных на компьютер, имеющий указанный <xref:System.Net.IPAddress>и получение соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции.</xref:System.Net.IPAddress> Эта перегрузка позволяет указать значение времени ожидания для операции, буфер для отправки и получения и контролировать фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "IP-адрес, определяющий компьютер, который является целевым для проверки связи ICMP."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>выполняется.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Возникло исключение при отправке или получении сообщения проверки связи ICMP. См. во внутреннем исключении точное исключение, вызванное исключение."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> не является допустимым IP-адресом."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Размер <code> buffer </code> превышает 65 500 байт."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Отправляет протокол управления сообщений протокола ICMP (Internet) echo сообщения с указанными данными буфера на указанный компьютер и получения соответствующего сообщения ответа проверки связи ICMP с этого компьютера в качестве асинхронной операции. Эта перегрузка позволяет указать значение времени ожидания для операции, буфер для отправки и получения и контролировать фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>настроек объекта будет выполнена после отправки пакета ICMP и получил ответ.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Компьютер, который является целевым для проверки связи ICMP. Значение, указанное для этого параметра может быть имя узла или строкового представления IP-адреса."
    - id: timeout
      type: System.Int32
      description: "Максимальное число миллисекунд (после отправки сообщения) ожидания сообщения ответа проверки связи ICMP."
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий данные, отправляемые проверки связи ICMP и возвращаются в ответное сообщение проверки связи ICMP.</xref:System.Byte> Массив не может содержать более 65 500 байт."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "Объект <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> объект, используемый для управления фрагментации и значения времени жизни пакета сообщения проверки связи ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Возвращает &lt;xref:System.Threading.Tasks.Task%601&gt;.       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
