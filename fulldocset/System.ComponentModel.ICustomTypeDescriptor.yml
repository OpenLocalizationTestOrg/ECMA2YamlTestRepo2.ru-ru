### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ICustomTypeDescriptor
  id: ICustomTypeDescriptor
  children:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
  type: Interface
  summary: "Предоставляет интерфейс, предоставляющий сведения о динамических пользовательского типа объекта."
  remarks: "Интерфейс ICustomTypeDescriptor позволяет объекту предоставить сведения о своем типе. Как правило этот интерфейс используется при объекта необходимы сведения динамического типа. Напротив <xref:System.ComponentModel.TypeDescriptor>класс предоставляет статический тип данных, получаемых из метаданных.</xref:System.ComponentModel.TypeDescriptor>       Например, ICustomTypeDescriptor используется в [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] для предоставления сведений о типе для COM-объектов. COM-объекты не поддерживают свойства и атрибуты. Таким образом [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] использует ICustomTypeDescriptor для реализации свойств и атрибутов для COM-объектов.       Чтобы предоставить сведения для динамического пользовательского типа, класс может реализовать интерфейсы ICustomTypeDescriptor или являются производными от <xref:System.ComponentModel.CustomTypeDescriptor>класса, который предоставляет простой реализации этого интерфейса.</xref:System.ComponentModel.CustomTypeDescriptor>      Настроек [!NOTE] настроек не поддерживается во время разработки для привязки данных к объектам, которые реализуют интерфейс ICustomTypeDescriptor. Кроме того при привязке к ICustomTypeDescriptor экземпляр среды выполнения, учитываются открытые свойства базового типа."
  syntax:
    content: public interface ICustomTypeDescriptor
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию настраиваемых атрибутов для этого экземпляра компонента."
  remarks: "Возвращает значение никогда не `null`.       Реализации могут возвращать пустой <xref:System.ComponentModel.AttributeCollection>указываемое никаких настраиваемых атрибутов для объекта.</xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public System.ComponentModel.AttributeCollection GetAttributes ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> Содержащий атрибуты для данного объекта."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает имя класса этого экземпляра компонента."
  remarks: "Если `null` будет возвращен, используется имя типа из <xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>метод.</xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>"
  syntax:
    content: public string GetClassName ();
    parameters: []
    return:
      type: System.String
      description: "Имя класса объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если класс не имеет имени."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает имя этого экземпляра компонента."
  remarks: "Если `null` будет возвращен, используйте имя по умолчанию."
  syntax:
    content: public string GetComponentName ();
    parameters: []
    return:
      type: System.String
      description: "Имя объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , если объект не имеет имени."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает преобразователь типов для этого экземпляра компонента."
  remarks: "Если `null` будет возвращен, используется значение по умолчанию <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public System.ComponentModel.TypeConverter GetConverter ();
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: "Объект <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> который является преобразователем для данного объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при наличии не <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> для этого объекта."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает событие по умолчанию для этого экземпляра компонента."
  syntax:
    content: public System.ComponentModel.EventDescriptor GetDefaultEvent ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> , Представляющий событие по умолчанию для этого объекта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если этот объект не имеет событий."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает свойство по умолчанию для этого экземпляра компонента."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetDefaultProperty ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , представляющий свойство по умолчанию для этого объекта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если этот объект не имеет свойства."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает редактор указанного типа для этого экземпляра компонента."
  remarks: "Тип `editorBaseType` параметр обычно является <xref:System.Drawing.Design.UITypeEditor>, но можно также использовать другие типы (например, <xref:System.ComponentModel.ComponentEditor>и <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий редактор для этого объекта.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>Заданного типа, являющийся редактором для этого объекта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если редактор не найден.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает события для этого экземпляра компонента."
  remarks: "События для этого экземпляра может отличаться от набора событий, предоставляемых классом. Например если компонент размещается на узле, узел может добавлять или удалять дополнительные события.       Средства реализации могут вернуть <xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName>Если не указаны свойства.</xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName> Этот метод не должен возвращать `null`."
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> , Представляющий события для этого экземпляра компонента."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает события для этого экземпляра компонента, используя заданный массив атрибутов в качестве фильтра."
  remarks: "События для этого экземпляра может отличаться от набора событий, предоставляемых классом. Например если компонент размещается на узле, узел может добавлять или удалять дополнительные события.       Если <xref:System.Attribute>указывается в `attributes` массива и событие не имеет экземпляра класса для данного атрибута, возвращаемый массив включает событие, если <xref:System.Attribute>является событием по умолчанию.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Массив объектов типа <xref:System.Attribute>, используемый в качестве фильтра.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> , Представляющий отфильтрованные события для этого экземпляра компонента."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает свойства для этого экземпляра компонента."
  remarks: "Свойства для этого экземпляра может отличаться от набора свойств, предоставляемых классом. Например если компонент находится, узел может добавлять или удалять дополнительные свойства.       Реализации могут возвращать <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>Если не указаны свойства.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> Этот метод не должен возвращать `null`."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , представляющий свойства для этого экземпляра компонента."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает свойства для этого экземпляра компонента, используя массив атрибутов в качестве фильтра."
  remarks: "Свойства для этого экземпляра может отличаться от набора свойств, предоставляемых классом. Например если компонент находится, узел может добавлять или удалять дополнительные свойства.       Если <xref:System.Attribute>указывается в `attributes` массива, а свойство не имеет экземпляра класса для данного атрибута, возвращаемая коллекция будет содержать свойство, если <xref:System.Attribute>является свойством по умолчанию.</xref:System.Attribute> </xref:System.Attribute>       Правила фильтрации, в разделе <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Массив объектов типа <xref:System.Attribute>, используемый в качестве фильтра.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , представляющий отфильтрованные свойства для этого экземпляра компонента."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает объект, содержащий свойство, описанное указанным дескриптором свойства."
  remarks: "Метод GetPropertyOwner получает объект, содержащий член свойства, который описан <xref:System.ComponentModel.PropertyDescriptor>параметр.</xref:System.ComponentModel.PropertyDescriptor> Как правило, этот объект является обязательным для <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>и <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName>методы.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>       Этот метод должен возвращать объект, который можно использовать следующим образом: ```   pd.GetValue(GetPropertyOwner(myPd));   ``` Если `myPd` — `null`, реализация <xref:System.ComponentModel.ICustomTypeDescriptor>интерфейс должен возвращать объект по умолчанию (как правило, базового объекта, который предоставляет свойства и атрибуты).</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , представляющий свойство, владельца которого требуется найти."
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий владельца указанного свойства.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: ICustomTypeDescriptor.GetAttributes
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: ICustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: ICustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: ICustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: ICustomTypeDescriptor.GetEditor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: ICustomTypeDescriptor.GetEvents
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: ICustomTypeDescriptor.GetProperties
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner
