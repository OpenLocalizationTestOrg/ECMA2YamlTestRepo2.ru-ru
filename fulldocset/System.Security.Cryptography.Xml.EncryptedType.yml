### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedType
  id: EncryptedType
  children:
  - System.Security.Cryptography.Xml.EncryptedType.#ctor
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.GetXml
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  langs:
  - csharp
  name: EncryptedType
  nameWithType: EncryptedType
  fullName: System.Security.Cryptography.Xml.EncryptedType
  type: Class
  summary: "Представляет абстрактный базовый класс, из которого классы <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;> </xref> и <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> является производным."
  remarks: "Класс EncryptedType представляет абстрактный базовый класс, из которого классы <xref:System.Security.Cryptography.Xml.EncryptedData>и <xref:System.Security.Cryptography.Xml.EncryptedKey>являются производными.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> Эти два класса содержат фактические зашифрованные данные или сведения о ключе в XML-шифрования. Для обеспечения соответствия стандартам шифрования XML следует использовать эти два производных класса.       Дополнительные сведения о стандартах XML-шифрования см. в разделе http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the EncryptedType class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/t-system.security.crypto_24_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/t-system.security.crypto_24_1.vb)]"
  syntax:
    content: public abstract class EncryptedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> класса."
  remarks: "Этот конструктор создает новый экземпляр <xref:System.Security.Cryptography.Xml.EncryptedType>класса.</xref:System.Security.Cryptography.Xml.EncryptedType> Этот класс представляет абстрактный базовый класс, из которого классы <xref:System.Security.Cryptography.Xml.EncryptedData>и <xref:System.Security.Cryptography.Xml.EncryptedKey>являются производными.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedData> Для обеспечения соответствия стандартам шифрования XML следует использовать два производных класса. Дополнительные сведения о стандартах XML-шифрования см. в разделе http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_3_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_3_1.vb)]"
  syntax:
    content: protected EncryptedType ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  id: AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Добавляет <xref uid=&quot;langword_csharp_&lt;EncryptionProperty&gt;&quot; name=&quot;&lt;EncryptionProperty&gt;&quot; href=&quot;&quot;> </xref> дочернего элемента <xref uid=&quot;langword_csharp_&lt;EncryptedProperties&gt;&quot; name=&quot;&lt;EncryptedProperties&gt;&quot; href=&quot;&quot;> </xref> элемент в текущем <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> объекта в XML-шифрования."
  remarks: "Этот метод можно использовать для добавления `<EncryptionProperty>` дочерних элементов, `<EncryptedProperties>` элемент. `<EncryptedProperties>` Элемент предоставляет дополнительные сведения для `<EncryptedType>` элемента."
  syntax:
    content: public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);
    parameters:
    - id: ep
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref> Объекта."
  overload: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  id: CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> значение для экземпляра <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> класса."
  remarks: "`<CipherData>` Элемент является обязательным элементом в XML-шифрования, который содержит зашифрованные данные. Должен содержать либо последовательность зашифрованных октет как текст в кодировке base64 из <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>Свойства, или предоставить ссылку на внешнее расположение, содержащее последовательности октетов, зашифрованные с помощью <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A>свойство.</xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> </xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>       Дополнительные сведения об этом элементе см. в разделе <xref:System.Security.Cryptography.Xml.CipherData>.</xref:System.Security.Cryptography.Xml.CipherData>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_62_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_62_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherData
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Свойство CipherData установлено в <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Encoding&quot; name=&quot;Encoding&quot; href=&quot;&quot;> </xref> атрибут <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> экземпляра в XML-шифрования."
  remarks: "Данное свойство описывает кодировку зашифрованных данных. Например если зашифрованные данные PNG в кодировке base64, может быть указана кодировка как «http://www.w3.org/2000/09/xmldsig#base64»."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_118_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_118_1.cs)]"
  syntax:
    content: public virtual string Encoding { get; set; }
    return:
      type: System.String
      description: "Строка, описывающая кодирование зашифрованных данных."
  overload: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  id: EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref> элемента для XML-шифрования."
  remarks: "`<EncryptionMethod>` — Это необязательный элемент, который описывает алгоритм шифрования, применяемый к зашифрованным данным. Если этот элемент отсутствует, алгоритм шифрования должен быть известен получателю или дешифровка завершится ошибкой."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_36_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_36_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionMethod
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref> , Представляющий <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  id: EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_&lt;EncryptionProperties&gt;&quot; name=&quot;&lt;EncryptionProperties&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "`<EncryptionProperties>` Элемент может содержать дополнительную информацию о создании <xref:System.Security.Cryptography.Xml.EncryptedType>экземпляра, например дату и время создания или серийный номер криптографическим оборудованием, использованных при шифровании.</xref:System.Security.Cryptography.Xml.EncryptedType>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_42_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_42_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionPropertyCollection
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref> Объекта."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает XML-представление <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> объекта."
  remarks: "Этот метод используется для вывода `<EncryptedType>` XML-элемента."
  syntax:
    content: public abstract System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> , Представляющий <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  overload: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  id: Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref> атрибут <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> экземпляра в XML-шифрования."
  remarks: "`Id` Атрибут является необязательным атрибутом элемента `<EncryptedType>` элемент, который предоставляет стандартный метод для назначения строковый идентификатор для элемента в XML-документа."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_111_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_111_1.cs)]"
  syntax:
    content: public virtual string Id { get; set; }
    return:
      type: System.String
      description: "Строка <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref> атрибут <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.EncryptedType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Получает или задает <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "`<KeyInfo>` Элемент является необязательным элементом, который содержит сведения о ключ, используемый для шифрования данных."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_79_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_79_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Загружает XML-данных в <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "Используйте этот метод для загрузки элемента XML в <xref:System.Security.Cryptography.Xml.EncryptedType>объекта.</xref:System.Security.Cryptography.Xml.EncryptedType>"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_43_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_43_1.vb)]"
  syntax:
    content: public abstract void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Объект, представляющий XML-элемента для использования в <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_MimeType&quot; name=&quot;MimeType&quot; href=&quot;&quot;> </xref> атрибут <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> экземпляра в XML-шифрования."
  remarks: 'The `MimeType` attribute is an optional attribute that describes the media type of the encrypted data. The value of this attribute is a string with values defined by [RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](http://www.ietf.org/rfc/rfc2045.txt). For example, if the data that is encrypted is a base64-encoded PNG, the `Encoding` attribute would be ''http://www.w3.org/2000/09/xmldsig#base64'' and the `MimeType` would be ''image/png''. This attribute is optional and no validation of the `MimeType` information is required. The attribute does not indicate that the encryption application must do any additional processing. Note that this information may not be necessary if it is already bound to the identifier in the `Type` attribute.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_19_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_19_1.cs)]"
  syntax:
    content: public virtual string MimeType { get; set; }
    return:
      type: System.String
      description: "Строка, описывающая тип носителя зашифрованных данных."
  overload: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  id: Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> атрибут <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> экземпляра в XML-шифрования."
  remarks: 'The `Type` attribute is an optional attribute that identifies type information about the text form of the encrypted content. While optional, this is an important attribute and is used in mandatory processing described in [Processing Rules: Decryption](http://www.w3.org/TR/xmlenc-core/) (section 4.2) of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/xmlenc-core/). If the `<EncryptedData>` element contains data of type `''element''` or element `''content''`, and replaces that data in an XML document, it is strongly recommended that the `Type` attribute be provided. Without this information, the application attempting to decrypt the information will be unable to automatically restore the XML document to its original text form.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_47_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_47_1.vb)]"
  syntax:
    content: public virtual string Type { get; set; }
    return:
      type: System.String
      description: "Строка, описывающая текстовую форму зашифрованных данных."
  overload: System.Security.Cryptography.Xml.EncryptedType.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionProperty
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.CipherData
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType
  nameWithType: EncryptedType.EncryptedType
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty
  nameWithType: EncryptedType.AddProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml
  nameWithType: EncryptedType.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedType.Id*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedType.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
