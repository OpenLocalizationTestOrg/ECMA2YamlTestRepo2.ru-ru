### YamlMime:ManagedReference
items:
- uid: System.Configuration.DefaultSettingValueAttribute
  id: DefaultSettingValueAttribute
  children:
  - System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  - System.Configuration.DefaultSettingValueAttribute.Value
  langs:
  - csharp
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute
  fullName: System.Configuration.DefaultSettingValueAttribute
  type: Class
  summary: "Указывает значение по умолчанию для свойства параметров приложения."
  remarks: "> [!IMPORTANT]Настроек DefaultSettingValueAttribute может применяться только к свойствам отдельных параметров; не допускается применение этого атрибута к классу параметров всего приложения.       Различные параметры поставщики могут иметь разные требования и ограничения на использование DefaultSettingValueAttribute. Например <xref:System.Configuration.LocalFileSettingsProvider>Этот атрибут не требуется и переопределяет любое значение, указанное этим атрибутом, если значения — по умолчанию или изменения пользователем, уже существует в хранилище данных.</xref:System.Configuration.LocalFileSettingsProvider>       DefaultSettingValueAttribute требует, что значение по умолчанию могут представляться в виде строки. В результате параметры с помощью XML-сериализация не может иметь значение по умолчанию с помощью этого атрибута. Некоторые поставщики могут выбрать для поддержки нескольких схем сериализации таким образом, во время компиляции с помощью <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute>      Настроек [!CAUTION] настроек значения по умолчанию, определяемое данным атрибутом хранятся в виде обычного текста в итоговый скомпилированный файл .exe или .dll. Поэтому эти значения по умолчанию являются по своей природе небезопасен."
  example:
  - "The following code example demonstrates the use of the DefaultSettingValueAttribute applied to three of the four properties of the `FormSettings` wrapper class, which is derived from the <xref:System.Configuration.ApplicationSettingsBase> class. This class is used to persist the location, size, background color, and text of form. The first three of these form properties have default values associated with them.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#9](~/add/codesnippet/cpp/t-system.configuration.d_1.cpp)]\n [!code-cs[AppSettingsSample#9](~/add/codesnippet/csharp/t-system.configuration.d_1.cs)]\n [!code-vb[AppSettingsSample#9](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#9)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class DefaultSettingValueAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.DefaultSettingValueAttribute&quot;> </xref> класса."
  remarks: "Предоставленная строка должно быть значение, совместимое с механизмом доступных сериализации, связанные с типом свойства. Например, если свойство имеет тип <xref:System.Drawing.Color>, то `value` из `&quot;Azure&quot;` будет действителен.</xref:System.Drawing.Color>      Настроек [!CAUTION] настроек значения по умолчанию, определяемое данным атрибутом хранятся в виде обычного текста в итоговый скомпилированный файл .exe или .dll. Поэтому эти значения по умолчанию являются по своей природе небезопасен."
  syntax:
    content: public DefaultSettingValueAttribute (string value);
    parameters:
    - id: value
      type: System.String
      description: "Объект <xref:System.String>, представляющий значение по умолчанию для свойства.</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  id: Value
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает значение по умолчанию для свойства параметров приложения."
  remarks: "Значение свойства задается в <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>конструктор.</xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A>       Поставщики параметров могут поддерживать несколько схемы сериализации, которые могут быть указаны с <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute>"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, представляющий значение по умолчанию для свойства.</xref:System.String>"
  overload: System.Configuration.DefaultSettingValueAttribute.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute
- uid: System.Configuration.DefaultSettingValueAttribute.Value*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
