### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymReader
  id: SymReader
  children:
  - System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  - System.Diagnostics.SymbolStore.SymReader.Dispose
  - System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymReader.Finalize
  - System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymReader.GetDocuments
  - System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  - System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  - System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  langs:
  - csharp
  name: SymReader
  nameWithType: SymReader
  fullName: System.Diagnostics.SymbolStore.SymReader
  type: Class
  summary: "Предоставляет доступ к документам, методам и переменным в хранилище символов."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymReaderBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolReader
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymReaderBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)'
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);
    parameters:
    - id: pReader
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*
      description: "Для добавления."
  overload: System.Diagnostics.SymbolStore.SymReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Освобождает ресурсы, используемые текущим экземпляром <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> класса."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Вызывается методом <> </> *настроек и <> </> *настроек методов, чтобы освободить управляемые и неуправляемые ресурсы, используемые текущим экземпляром <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> класса."
  remarks: "Этот метод вызывается только открытые <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>и <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A>методов; не вызывайте этот метод напрямую.</xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы освободить управляемые и неуправляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Освобождает неуправляемые ресурсы и выполняет другие операции очистки, перед <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> сборщиком мусора."
  remarks: "Этот метод переопределяет <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A>метод.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymReader ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Получает документ на основании заданного URL-адрес для документа и при необходимости языка, поставщика языка и типа."
  remarks: "`language`, `languageVendor`, И `documentType` параметры в настоящее время учитываются."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "URL-адрес для идентификации документа."
    - id: language
      type: System.Guid
      description: "Язык документа. Этому параметру можно присвоить как <xref:System.Guid>.</xref:System.Guid> для указания любого языка."
    - id: languageVendor
      type: System.Guid
      description: "Удостоверение поставщика языка документа. Этому параметру можно присвоить <xref:System.Guid>Чтобы указать любого поставщика языка.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "Тип документа. Этому параметру можно присвоить <xref:System.Guid>указать любой тип документа.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Документ с указанным URL-адрес Если найден в хранилище символов или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если документ не существует."
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  id: GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Получает массив всех документов, определенных в хранилище символов."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "Массив всех документов, определенных в хранилище символов."
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для выполнения запроса."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  id: GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Получает объект метода средства чтения символов для заданного идентификатора метода."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных метода."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "Объект метода средства чтения символов для заданного идентификатора метода."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Получает метод средства чтения символов объекта для заданного идентификатора метода и его изменение версии и продолжить."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных метода."
    - id: version
      type: System.Int32
      description: "Изменить и продолжить версию метода."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "Объект метода средства чтения символов для заданного идентификатора метода и версии."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Возвращает символ объект метода средства чтения, содержащий указанную позицию в документе."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "Документ, в котором находится метод."
    - id: line
      type: System.Int32
      description: "Позиция строки в документе. Нумерация строк начинается с 1."
    - id: column
      type: System.Int32
      description: "Позиция столбца в документе. Столбцы нумеруются, начиная с 1."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "Объект метода средства чтения символов для заданной позиции в документе."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Этот параметр не используется."
    - id: name
      type: System.String
      description: "Этот параметр не используется."
    return:
      type: System.Byte[]
      description: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Этот параметр не используется."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Создает <xref:System.NotSupportedException>во всех случаях.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Во всех случаях."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  id: ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Заменяет имеющееся хранилище символов разностным хранилищем символов."
  remarks: "ReplaceSymbolStore обеспечивается аналогично <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>метода, но данная разность действует как полная замена, а не для обновления.</xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>       Только один из параметров, `fileName` или `stream`, должен быть указан. Если `fileName` указан, хранилище символов обновляется с использованием символов в этом файле. Если `stream` указан, хранилище символов обновляется с данными из <xref:System.Runtime.InteropServices.ComTypes.IStream>.</xref:System.Runtime.InteropServices.ComTypes.IStream>"
  syntax:
    content: public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла, содержащего хранилище символов или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при хранении в памяти."
    - id: stream
      type: System.IntPtr
      description: "Указатель на входной поток для хранилища символов или <xref:System.IntPtr>при хранении на диске.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  id: UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Обновляет существующее хранилище символов разностным хранилищем символов."
  remarks: "Этот метод используется в сценариях, изменить и продолжить как способ обновления хранилища символов в соответствии с изменениями в исходном файле PE.       Только один из параметров, `fileName` или `stream`, должен быть указан. Если `fileName` указан, хранилище символов обновляется с использованием символов в этом файле. Если `stream` указан, хранилище символов обновляется с данными из <xref:System.Runtime.InteropServices.ComTypes.IStream>.</xref:System.Runtime.InteropServices.ComTypes.IStream>"
  syntax:
    content: public virtual void UpdateSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла, содержащего хранилище символов или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при хранении в памяти."
    - id: stream
      type: System.IntPtr
      description: "Указатель на входной поток для хранилища символов или <xref:System.IntPtr>при хранении на диске.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  id: UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Возвращает метаданные токен для метода, заданного в качестве точки входа пользователя для модуля, если таковые имеются."
  remarks: "Возвращаемое значение обычно является основным методом."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Токен метаданных для метода, который является входа пользователя точкой для модуля."
  overload: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Точка входа не найдено."
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymReaderBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymReaderBase
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace
    name: ISymbolNamespace
    nameWithType: ISymbolNamespace
    fullName: ISymbolNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader
  nameWithType: SymReader.SymReader
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose
  nameWithType: SymReader.Dispose
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize
  nameWithType: SymReader.Finalize
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument
  nameWithType: SymReader.GetDocument
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments
  nameWithType: SymReader.GetDocuments
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables
  nameWithType: SymReader.GetGlobalVariables
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod
  nameWithType: SymReader.GetMethod
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition
  nameWithType: SymReader.GetMethodFromDocumentPosition
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces
  nameWithType: SymReader.GetNamespaces
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute
  nameWithType: SymReader.GetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables
  nameWithType: SymReader.GetVariables
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore
  nameWithType: SymReader.ReplaceSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore
  nameWithType: SymReader.UpdateSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
