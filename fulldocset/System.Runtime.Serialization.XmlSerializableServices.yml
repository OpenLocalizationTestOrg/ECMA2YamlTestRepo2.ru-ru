### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XmlSerializableServices
  id: XmlSerializableServices
  children:
  - System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)
  - System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])
  langs:
  - csharp
  name: XmlSerializableServices
  nameWithType: XmlSerializableServices
  fullName: System.Runtime.Serialization.XmlSerializableServices
  type: Class
  summary: "Содержит методы для чтения и записи XML."
  remarks: "С помощью [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], можно создавать типы CLR, представляющие контракты данных из XML-схем. В некоторых случаях при этом схемы не все можно представить как контракты данных. В этом случае можно использовать <xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A>свойство <xref:System.Runtime.Serialization.ImportOptions>класса.</xref:System.Runtime.Serialization.ImportOptions> </xref:System.Runtime.Serialization.ImportOptions.ImportXmlType%2A>  Свойства `true` указывает, что эти типы будут импортироваться как типы, реализующие XML <xref:System.Xml.Serialization.IXmlSerializable>интерфейса.</xref:System.Xml.Serialization.IXmlSerializable> В процессе создаваемых типов могут храниться любые данные, но они считываются и записываются в формате XML сериализатор.       XmlSerializableServices является абстрактным вспомогательным классом, который содержит код, используемый созданными <xref:System.Xml.Serialization.IXmlSerializable>типы для чтения и записи XML.</xref:System.Xml.Serialization.IXmlSerializable> Он также содержит код для создания схемы для создаваемых типов. Обратите внимание, что сведения о схемах не сохраняются. В создаваемом типе хранится только имя. Этот класс создает схему по умолчанию, который представляет тип схемы XML `anyType` с именем соответствующей схемы типа, что имя контракта."
  syntax:
    content: public static class XmlSerializableServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XmlSerializableServices
  langs:
  - csharp
  name: AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Создает тип схемы по умолчанию, заданного типа с указанным именем и добавляет ее в указанный набор схем."
  remarks: "Этот метод содержит код для создания типа схемы для типа контракта данных с указанным именем типа."
  syntax:
    content: public static void AddDefaultSchema (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeQName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Добавление созданный тип схемы."
    - id: typeQName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Указывающее имя типа, которому присваивается схема.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeQName</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)
  id: ReadNodes(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlSerializableServices
  langs:
  - csharp
  name: ReadNodes(XmlReader)
  nameWithType: XmlSerializableServices.ReadNodes(XmlReader)
  fullName: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(XmlReader)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Считывает набор узлов XML из указанного средства чтения и возвращает результат."
  remarks: "Этот метод считывает все XML в пределах узла, средство чтения расположено на при вызове. Это позволяет ему считать и сохранить все XML в виде массива <xref:System.Xml.XmlNode>объектов.</xref:System.Xml.XmlNode> Это вспомогательный метод, используемые типами, реализующими <xref:System.Xml.Serialization.IXmlSerializable>и использующие <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>метод.</xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> </xref:System.Xml.Serialization.IXmlSerializable>"
  syntax:
    content: public static System.Xml.XmlNode[] ReadNodes (System.Xml.XmlReader xmlReader);
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Используется для чтения.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.XmlNode[]
      description: "Массив объектов типа <xref href=&quot;System.Xml.XmlNode&quot;> </xref>."
  overload: System.Runtime.Serialization.XmlSerializableServices.ReadNodes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xmlReader</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "При считывании <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> был обнаружен узел."
  platform:
  - net462
- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])
  id: WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])
  parent: System.Runtime.Serialization.XmlSerializableServices
  langs:
  - csharp
  name: WriteNodes(XmlWriter,XmlNode[])
  nameWithType: XmlSerializableServices.WriteNodes(XmlWriter,XmlNode[])
  fullName: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(XmlWriter,XmlNode[])
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "Выполняет запись предоставленных узлов с помощью указанного модуля записи."
  syntax:
    content: public static void WriteNodes (System.Xml.XmlWriter xmlWriter, System.Xml.XmlNode[] nodes);
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Используется для записи.</xref:System.Xml.XmlWriter>"
    - id: nodes
      type: System.Xml.XmlNode[]
      description: "Массив объектов типа <xref href=&quot;System.Xml.XmlNode&quot;> </xref> для записи."
  overload: System.Runtime.Serialization.XmlSerializableServices.WriteNodes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xmlWriter</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XmlSerializableServices.AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(XmlSchemaSet,XmlQualifiedName)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: ReadNodes(XmlReader)
  nameWithType: XmlSerializableServices.ReadNodes(XmlReader)
  fullName: System.Runtime.Serialization.XmlSerializableServices.ReadNodes(XmlReader)
- uid: System.Xml.XmlNode[]
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode[]
  spec.csharp:
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: XmlNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: WriteNodes(XmlWriter,XmlNode[])
  nameWithType: XmlSerializableServices.WriteNodes(XmlWriter,XmlNode[])
  fullName: System.Runtime.Serialization.XmlSerializableServices.WriteNodes(XmlWriter,XmlNode[])
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema*
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: AddDefaultSchema
  nameWithType: XmlSerializableServices.AddDefaultSchema
- uid: System.Runtime.Serialization.XmlSerializableServices.ReadNodes*
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: ReadNodes
  nameWithType: XmlSerializableServices.ReadNodes
- uid: System.Runtime.Serialization.XmlSerializableServices.WriteNodes*
  parent: System.Runtime.Serialization.XmlSerializableServices
  isExternal: false
  name: WriteNodes
  nameWithType: XmlSerializableServices.WriteNodes
