### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IEventBindingService
  id: IEventBindingService
  children:
  - System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  - System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.ShowCode
  - System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  - System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  langs:
  - csharp
  name: IEventBindingService
  nameWithType: IEventBindingService
  fullName: System.ComponentModel.Design.IEventBindingService
  type: Interface
  summary: "Предоставляет службу регистрации обработчиков событий для событий в компонентах."
  remarks: "Служба привязки событий предоставляет способ связывания обработчика событий с событием компонента из кода конструктора.       Чтобы связать обработчик событий с помощью IEventBindingService событий компонента, необходимо сначала получить <xref:System.ComponentModel.EventDescriptor>события связываемого компонента.</xref:System.ComponentModel.EventDescriptor> IEventBindingService предоставляет методы, которые могут быть преобразованы <xref:System.ComponentModel.EventDescriptor>для <xref:System.ComponentModel.PropertyDescriptor>которого можно использовать для настройки события с именем метода обработчика событий.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>       <xref:System.ComponentModel.TypeDescriptor>Объект предоставляет <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>метод, который можно использовать для получения <xref:System.ComponentModel.EventDescriptorCollection>содержащий <xref:System.ComponentModel.EventDescriptor>объекты для каждого события компонента.</xref:System.ComponentModel.EventDescriptor> </xref:System.ComponentModel.EventDescriptorCollection> </xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor> <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>И <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>методы возвращаемого IEventBindingService <xref:System.ComponentModel.PropertyDescriptor>для каждого <xref:System.ComponentModel.EventDescriptor>любого метода, передаваемый.</xref:System.ComponentModel.EventDescriptor> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> Каждый <xref:System.ComponentModel.PropertyDescriptor>возвращенные <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>или <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>имеет тип свойства строки.</xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> </xref:System.ComponentModel.PropertyDescriptor> Эта строка может быть присвоено значение, указывающее имя метода обработчика событий, чтобы связать события с помощью <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>метода <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>"
  example:
  - "The following example demonstrates a designer that uses the IEventBindingService to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked. To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form. Then right-click the EventControl and click the Connect testEvent shortcut menu command. An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.  \n  \n [!code-cpp[IEventBindingServiceExample#1](~/add/codesnippet/cpp/t-system.componentmodel._102_1.cpp)]\n [!code-vb[IEventBindingServiceExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._102_1.vb)]\n [!code-cs[IEventBindingServiceExample#1](~/add/codesnippet/csharp/t-system.componentmodel._102_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IEventBindingService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  id: CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: CreateUniqueMethodName(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Создает уникальное имя для метода обработчика событий для указанного компонента и события."
  remarks: "Этот метод возвращает имя, которое отличается от любого другого имени метода в исходном коде пользователя."
  syntax:
    content: public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Экземпляр компонента событие подключен."
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "Создайте имя для события."
    return:
      type: System.String
      description: "Рекомендованное имя метода обработчика событий для данного события."
  overload: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  id: GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetCompatibleMethods(EventDescriptor)
  nameWithType: IEventBindingService.GetCompatibleMethods(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает коллекцию методов обработчика событий, которые имеют метод сигнатуры, совместимой с заданным событием."
  remarks: "Каждая строка в коллекции является имя метода, который имеет метод сигнатуры, совместимой с заданным событием."
  syntax:
    content: public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);
    parameters:
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "События методов совместимые обработчик событий для получения."
    return:
      type: System.Collections.ICollection
      description: "Коллекция строк."
  overload: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  id: GetEvent(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEvent(PropertyDescriptor)
  nameWithType: IEventBindingService.GetEvent(PropertyDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEvent(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> для события, которое представляет указанным дескриптором свойства, если он представляет событие."
  syntax:
    content: public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "Свойство, которое представляет событие."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Для события, представляемого этим свойством, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если свойство не представляет событие."
  overload: System.ComponentModel.Design.IEventBindingService.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  id: GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEventProperties(EventDescriptorCollection)
  nameWithType: IEventBindingService.GetEventProperties(EventDescriptorCollection)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperties(EventDescriptorCollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Преобразует набор дескрипторов событий в набор дескрипторов свойств."
  remarks: "Каждый возвращаемый <xref:System.ComponentModel.PropertyDescriptor>имеет <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>строки.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);
    parameters:
    - id: events
      type: System.ComponentModel.EventDescriptorCollection
      description: "События для преобразования в свойства."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Массив <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> объекты, которые описывают в набор событий."
  overload: System.ComponentModel.Design.IEventBindingService.GetEventProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  id: GetEventProperty(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEventProperty(EventDescriptor)
  nameWithType: IEventBindingService.GetEventProperty(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperty(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Преобразует один дескриптор событий в дескриптор свойства."
  remarks: "Возвращенный <xref:System.ComponentModel.PropertyDescriptor>имеет <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>строки.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);
    parameters:
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "Событие, для преобразования."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , описывающий событие."
  overload: System.ComponentModel.Design.IEventBindingService.GetEventProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode
  id: ShowCode
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode()
  nameWithType: IEventBindingService.ShowCode()
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Отображает код пользователя для конструктора."
  remarks: "Этот метод отображает редактор кода."
  syntax:
    content: public bool ShowCode ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображается код; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  id: ShowCode(System.Int32)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode(Int32)
  nameWithType: IEventBindingService.ShowCode(Int32)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Отображает код пользователя для конструктора в заданной строке."
  remarks: "Этот метод отображает редактор кода и помещает курсор в указанной строке."
  syntax:
    content: public bool ShowCode (int lineNumber);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "Номер строки для размещения курсора."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображается код; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  id: ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.ShowCode(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(IComponent,EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Отображает пользовательский код для указанного события."
  remarks: "Этот метод отображает редактор кода и помещает курсор на строку, объявленный для указанного события."
  syntax:
    content: public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент, который подключен события."
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "Событие, для отображения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображается код; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: CreateUniqueMethodName(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetCompatibleMethods(EventDescriptor)
  nameWithType: IEventBindingService.GetCompatibleMethods(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(EventDescriptor)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEvent(PropertyDescriptor)
  nameWithType: IEventBindingService.GetEvent(PropertyDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEvent(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperties(EventDescriptorCollection)
  nameWithType: IEventBindingService.GetEventProperties(EventDescriptorCollection)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperties(EventDescriptorCollection)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperty(EventDescriptor)
  nameWithType: IEventBindingService.GetEventProperty(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperty(EventDescriptor)
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode()
  nameWithType: IEventBindingService.ShowCode()
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode(Int32)
  nameWithType: IEventBindingService.ShowCode(Int32)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.ShowCode(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(IComponent,EventDescriptor)
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: CreateUniqueMethodName
  nameWithType: IEventBindingService.CreateUniqueMethodName
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetCompatibleMethods
  nameWithType: IEventBindingService.GetCompatibleMethods
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEvent
  nameWithType: IEventBindingService.GetEvent
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperties
  nameWithType: IEventBindingService.GetEventProperties
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperty
  nameWithType: IEventBindingService.GetEventProperty
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode
  nameWithType: IEventBindingService.ShowCode
