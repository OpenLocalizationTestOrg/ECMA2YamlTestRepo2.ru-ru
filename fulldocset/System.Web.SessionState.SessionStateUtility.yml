### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateUtility
  id: SessionStateUtility
  children:
  - System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  - System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  - System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  langs:
  - csharp
  name: SessionStateUtility
  nameWithType: SessionStateUtility
  fullName: System.Web.SessionState.SessionStateUtility
  type: Class
  summary: "Предоставляет вспомогательные методы, используемые модулями состояния сеанса и состояния сеанса хранения поставщиков для управления данными сеанса для приложения ASP.NET. Этот класс не наследуется."
  remarks: "Класс SessionStateUtility предоставляет статические вспомогательные методы, используемые модуль состояния сеанса или поставщик хранилища состояний сеанса. Разработчикам приложений не требуется вызывать эти методы из своего кода.       Ниже перечислены способы модуль состояния сеанса и поставщика хранилища состояний сеанса используйте методы.      | Метод | Используйте |   |------------|---------|   | метод <xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>| Можно использовать пользовательские модули состояния сеанса, для получения сведений о существующем сеансе или создания сведений о новом сеансе. |   | метод <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>| Вызывается методом модуль состояния сеанса для добавления данных сеанса в текущий <xref:System.Web.HttpContext>и сделать его доступным для кода приложения через свойство <xref:System.Web.HttpContext.Session%2A>. |   | метод <xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>| Вызывается методом модуль состояния сеанса во время <xref:System.Web.HttpApplication.ReleaseRequestState>или <xref:System.Web.HttpApplication.EndRequest>событий в конце запроса, чтобы очистить данные сеанса из текущего <xref:System.Web.HttpContext>. |   | метод <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>| Вызывается для получения ссылки на модуль состояния сеанса <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>коллекции на основе объектов определенных в файле Global.asax.</xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> </xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A> <xref:System.Web.HttpStaticObjectsCollection>Коллекция, возвращаемая включается в сеанс данные, добавленные в текущий <xref:System.Web.HttpContext>. |       Данные о сеансе, передаваемый и извлечь из текущей <xref:System.Web.HttpContext>как <xref:System.Web.SessionState.HttpSessionStateContainer>объект или любой допустимый реализации <xref:System.Web.SessionState.IHttpSessionState>интерфейса.</xref:System.Web.SessionState.IHttpSessionState> </xref:System.Web.SessionState.HttpSessionStateContainer> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpStaticObjectsCollection>       Сведения о реализации поставщика хранилища состояния сеанса см. в разделе [поставщика хранилища состояний сеанса](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows a custom session-state module implementation that stores session information in memory using a <xref:System.Collections.Hashtable>. The module uses the SessionStateUtility class to reference the current <xref:System.Web.HttpContext> and <xref:System.Web.SessionState.SessionIDManager>, retrieve the current <xref:System.Web.HttpStaticObjectsCollection>, and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application. This application does not prevent simultaneous Web requests from using the same session identifier.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_6_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/csharp/t-system.web.sessionstat_6_1.cs)]  \n  \n To use this custom session-state module in an ASP.NET application, you can replace the existing <xref:System.Web.SessionState.SessionStateModule> reference in the Web.config file, as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <remove name=\"Session\" />  \n      <add name=\"Session\"  \n      type=\"Samples.AspNet.SessionState.MySessionStateModule\" />  \n    </httpModules>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public static class SessionStateUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  id: AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Применяет данные о сеансе к контексту для текущего запроса."
  remarks: "Метод AddHttpSessionStateToContext используется модулем состояния сеанса для применения данных сеанса для текущего запроса. Это происходит во время <xref:System.Web.HttpApplication.AcquireRequestState>событие в начале запроса.</xref:System.Web.HttpApplication.AcquireRequestState> Данные сеанса для текущего запроса для существующего сеанса или создается для нового сеанса. Затем данные сеанса инкапсулируется в <xref:System.Web.SessionState.IHttpSessionState>реализации экземпляр, который передается в метод AddHttpSessionStateToContext вместе с текущим <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.SessionState.IHttpSessionState> Данные указанного сеанса становится доступным для кода приложения через <xref:System.Web.HttpContext.Session%2A>свойства текущего контекста.</xref:System.Web.HttpContext.Session%2A>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The custom module retrieves existing session information or creates new session information and uses the AddHttpSessionStateToContext method to add it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/5c9b7582-11c3-42e9-975d-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/5c9b7582-11c3-42e9-975d-_1.cs)]"
  syntax:
    content: public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Объекта, к которому добавляется <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> объекта."
    - id: container
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref> Экземпляр реализации для добавления заданные контекст HTTP."
  overload: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> Объекта в текущем сеансе уже была добавлена в указанный <code> context </code>."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  id: GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает данные о сеансе из контекста для текущего запроса."
  remarks: "Метод GetHttpSessionStateFromContext используется модулем состояния сеанса для извлечения данных сеанса из текущего запроса. Это происходит во время <xref:System.Web.HttpApplication.ReleaseRequestState>событие в конце запроса.</xref:System.Web.HttpApplication.ReleaseRequestState> Возвращаемые данные о сеансе можно затем записываются в хранилище данных сеанса. Если сеанс был отключен, данные сеанса можно удалить из хранилища данных и <xref:System.Web.HttpContext>и **Session_OnEnd** событий могут быть выполнены.</xref:System.Web.HttpContext>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The module retrieves session data from the <xref:System.Web.HttpContext> for the current request using the GetHttpSessionStateFromContext method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/9c400b1a-e4b0-47ca-aaa3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/9c400b1a-e4b0-47ca-aaa3-_1.cs)]"
  syntax:
    content: public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Которого требуется получить данные о сеансе."
    return:
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref> Реализацию экземпляр, заполненный данных сеанса из текущего запроса."
  overload: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  id: GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает ссылку на коллекцию статических объектов для указанного контекста."
  remarks: "Метод GetSessionStaticObjects используется для извлечения коллекции статические объекты, определенные в файле Global.asax для приложения ASP.NET. Реализация модуля состояния сеанса предоставит возвращаемый <xref:System.Web.HttpStaticObjectsCollection>коллекции <xref:System.Web.SessionState.IHttpSessionState>экземпляр реализации, который добавляется в текущий контекст с помощью <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>метод.</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> </xref:System.Web.SessionState.IHttpSessionState> </xref:System.Web.HttpStaticObjectsCollection>       Объект <xref:System.Web.SessionState.SessionStateStoreProviderBase>можно также использовать метод GetSessionStaticObjects при создании <xref:System.Web.SessionState.SessionStateStoreData>объекта.</xref:System.Web.SessionState.SessionStateStoreData> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The module retrieves existing session information or creates new session information, including the <xref:System.Web.HttpStaticObjectsCollection> collection returned from the GetSessionStaticObjects method, and adds it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/ce95f35b-c097-49c6-952e-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/ce95f35b-c097-49c6-952e-_1.cs)]"
  syntax:
    content: public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Из которого необходимо получить коллекцию статических объектов."
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Коллекция заполняется с <xref:System.Web.SessionState.HttpSessionState.StaticObjects*>значение свойства для указанного <xref href=&quot;System.Web.HttpContext&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.StaticObjects*>"
  overload: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  id: IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает значение, которое указывает, является ли состояние сеанса только для чтения для указанного <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public static bool IsSessionStateReadOnly (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Указывает <xref href=&quot;System.Web.HttpContext&quot;> </xref> для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сеанс находится в состоянии только для чтения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  id: IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает значение, указывающее, требуется ли состояние сеанса для указанного <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public static bool IsSessionStateRequired (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Указывает <xref href=&quot;System.Web.HttpContext&quot;> </xref> для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если состояние сеанса не требуется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  id: RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Выполняет **Session_OnEnd** события, определенного в файле Global.asax для приложения ASP.NET."
  remarks: "Метод RaiseSessionEnd используется модулем состояния сеанса для выполнения **Session_OnEnd** события, определенного в файле Global.asax для приложения ASP.NET. Модуль состояния сеанса будет вызвать метод RaiseSessionEnd, когда сеанс был отменен, или если время сеанса истекает."
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. If the session has been abandoned, the module executes the **Session_OnEnd** event defined in the Global.asax file for the application using the RaiseSessionEnd method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/cd86aefd-3df6-4b8a-826f-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/cd86aefd-3df6-4b8a-826f-_1.cs)]"
  syntax:
    content: public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);
    parameters:
    - id: session
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref> Экземпляр реализации для сеанса, которое было завершено."
    - id: eventSource
      type: System.Object
      description: "Объект источника события для предоставления <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> событий."
    - id: eventArgs
      type: System.EventArgs
      description: "<xref:System.EventArgs>Объекта для предоставления <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> событий.</xref:System.EventArgs>"
  overload: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  id: RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Удаляет данные о сеансе из указанного контекста."
  remarks: "Метод RemoveHttpSessionStateFromContext удаляет данные сеанса из указанного <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> Вызывает метод RemoveHttpSessionStateFromContext модуль состояния сеанса в обработчике <xref:System.Web.HttpApplication.ReleaseRequestState>событий.</xref:System.Web.HttpApplication.ReleaseRequestState>"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The event handler removes session data from the current <xref:System.Web.HttpContext>. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/db56662a-8b24-4084-9ec3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/db56662a-8b24-4084-9ec3-_1.cs)]"
  syntax:
    content: public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Из которого нужно удалить данные сеанса."
  overload: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  id: SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает или задает селектор суррогата сериализации, используемый для настройки сериализации сеанса."
  syntax:
    content: public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "Селектор суррогата сериализации."
  overload: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.IHttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects
  nameWithType: SessionStateUtility.GetSessionStaticObjects
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly
  nameWithType: SessionStateUtility.IsSessionStateReadOnly
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired
  nameWithType: SessionStateUtility.IsSessionStateRequired
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd
  nameWithType: SessionStateUtility.RaiseSessionEnd
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
