### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ActivationArguments
  id: ActivationArguments
  children:
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  - System.Runtime.Hosting.ActivationArguments.ActivationContext
  - System.Runtime.Hosting.ActivationArguments.ActivationData
  - System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  - System.Runtime.Hosting.ActivationArguments.Clone
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
  type: Class
  summary: "Предоставляет данные для активации на основе манифеста приложения. Этот класс не наследуется."
  remarks: "Класс ActivationArguments используется <xref:System.AppDomainSetup>класса.</xref:System.AppDomainSetup>       Активация на основе манифеста модель использует манифест приложения, а не сборка для активации. Манифест полностью описывает приложение, его зависимости, требования безопасности и т. д. Модель с использованием манифеста имеет несколько преимуществ над модели активации на основе сборки, особенно для веб-приложений. Например манифест содержит требования безопасности приложения, что позволяет пользователю решать, следует ли разрешить выполнение приложения до загрузки кода. Манифест также содержит сведения о зависимостях приложения."
  example:
  - "The following code example shows how to obtain the current ActivationArguments object from the <xref:System.AppDomainSetup> for the <xref:System.AppDomain> of a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_1_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ActivationArguments : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> класса с заданным контекстом активации."
  remarks: "<xref:System.ActivationContext>Объекта, представленного `activationData` параметр содержит <xref:System.ApplicationIdentity>и сведения о контексте для активации на основе манифеста.</xref:System.ApplicationIdentity> </xref:System.ActivationContext>"
  syntax:
    content: public ActivationArguments (ActivationContext activationData);
    parameters:
    - id: activationData
      type: System.ActivationContext
      description: "Объект, определяющий приложение активации на основе манифеста."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> класса с заданной идентификации приложения."
  remarks: "Удостоверение приложения однозначно определяет приложение на основе манифеста необходимо активировать в новом домене."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "Объект, определяющий приложение активации на основе манифеста."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  id: '#ctor(System.ActivationContext,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> класса с заданным контекстом активации и данные об активации."
  remarks: "<xref:System.ActivationContext>Объекта, представленного `activationContext` параметр содержит <xref:System.ApplicationIdentity>и сведения о контексте для активации на основе манифеста.</xref:System.ApplicationIdentity> </xref:System.ActivationContext> Данные активации состоят из сведений, таких как часть строки запроса URL-адреса."
  syntax:
    content: public ActivationArguments (ActivationContext activationContext, string[] activationData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Объект, определяющий приложение активации на основе манифеста."
    - id: activationData
      type: System.String[]
      description: "Массив строк, содержащих данные об активации хостом."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  id: '#ctor(System.ApplicationIdentity,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> класса данные удостоверений и активации указанного приложения."
  remarks: "Удостоверение приложения однозначно определяет приложение на основе манифеста необходимо активировать в новом домене. Данные активации состоят из сведений, таких как часть строки запроса URL-адреса."
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "Объект, определяющий приложение активации на основе манифеста."
    - id: activationData
      type: System.String[]
      description: "Массив строк, содержащих данные об активации хостом."
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  id: ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Возвращает контекст активации для активации на основе манифеста приложения."
  remarks: "<xref:System.ActivationContext>Объект содержит <xref:System.ApplicationIdentity>и предоставляет доступ только для внутреннего использования в манифест приложения.</xref:System.ApplicationIdentity> </xref:System.ActivationContext> Контекст активации по умолчанию используется во время активации на основе манифеста для настройки политики домена и указать модель безопасности на уровне приложения."
  example:
  - "The following code example shows how to obtain the value of the ActivationContext property from the <xref:System.Runtime.Hosting.ActivationArguments> for a manifest-based application.  \n  \n This code example is part of a larger example provided for the <xref:System.Runtime.Hosting.ActivationArguments> class.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/visualbasic/p-system.runtime.hosting_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/csharp/p-system.runtime.hosting_1.cs)]"
  syntax:
    content: public ActivationContext ActivationContext { get; }
    return:
      type: System.ActivationContext
      description: "Объект, определяющий приложение активации на основе манифеста."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  id: ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Возвращает данные об активации из узла."
  remarks: "Данные активации состоят из сведений, таких как часть строки запроса URL-адреса."
  syntax:
    content: public string[] ActivationData { get; }
    return:
      type: System.String[]
      description: "Массив строк, содержащих данные об активации хостом."
  overload: System.Runtime.Hosting.ActivationArguments.ActivationData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Возвращает удостоверение приложения для манифеста приложения."
  remarks: "Удостоверение приложения однозначно определяет приложение на основе манифеста необходимо активировать в новом домене."
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; }
    return:
      type: System.ApplicationIdentity
      description: "Объект, определяющий приложение для активации на основе манифеста."
  overload: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  id: Clone
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Создает копию текущего <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> объекта."
  remarks: "Этот метод создает новый <xref:System.Runtime.Hosting.ActivationArguments>объект и заполняет его с копиями члены текущего <xref:System.Runtime.Hosting.ActivationArguments>объекта</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Копия текущего объекта."
  overload: System.Runtime.Hosting.ActivationArguments.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
- uid: System.Runtime.Hosting.ActivationArguments.#ctor*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments.ActivationArguments
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone
  nameWithType: ActivationArguments.Clone
