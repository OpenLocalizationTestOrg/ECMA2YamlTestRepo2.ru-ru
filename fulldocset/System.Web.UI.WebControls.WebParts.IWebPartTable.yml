### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable
  id: IWebPartTable
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  langs:
  - csharp
  name: IWebPartTable
  nameWithType: IWebPartTable
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable
  type: Interface
  summary: "Определяет интерфейс поставщика для соединения двух серверных элементов управления на основе всей таблицы данных."
  remarks: "Этот интерфейс предназначен для использования с подключениями к веб-части. Соединение веб-частей, двух серверных элементов управления, которые находятся в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны установления соединения и совместное использование данных с одного элемента управления, выступающего в качестве потребителя и элемент управления, выступающий в роли поставщика.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Механизм для совместного использования данных в соединении веб-частей является экземпляр интерфейса, который поставщик предоставляет объекту-получателю с помощью метода обратного вызова. Для подключения потребителя и поставщика и обсудить с тем же типом интерфейса для совместного использования данных. Если потребитель не распознает тип интерфейса, отправленного поставщиком, существует возможность подключения элементов управления с помощью преобразователя ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>объекта), преобразует экземпляр интерфейса, отправленный поставщиком, в тип, который распознается объектом-получателем.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Дополнительные сведения о разделе <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>и [Общие сведения о подключениях веб частей](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       Интерфейс IWebPartTable является интерфейсом поставщика с помощью элемента управления веб-частей задать в качестве стандартного интерфейса для создания связей на основе данных таблицы. Можно также создавать пользовательские интерфейсы для использования с подключениями к веб-части, но многих управляемых данными веб-приложений, это полезно для создания соединений с учетом с общим полем (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartField>интерфейса), строк (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>интерфейса), или таблицы из источника данных.</xref:System.Web.UI.WebControls.WebParts.IWebPartRow> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> В обычного соединения <xref:System.Web.UI.WebControls.WebParts.WebPart>управления действовать как поставщик реализует интерфейс IWebPartTable и предоставить экземпляр интерфейса потребителям в специальный метод обратного вызова.</xref:System.Web.UI.WebControls.WebParts.WebPart> Например поставщик может реализовать интерфейс IWebPartTable для таблицы, которая содержит данные о финансовых производительности. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart>управления действовать как потребитель определении особый метод для получения экземпляра интерфейса может извлечь данные и создать диаграмму, отображающую полученные результаты.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Интерфейс IWebPartTable имеет два предоставленных членов. <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>Свойство возвращает сведений о таблице данных, содержащийся в схеме <xref:System.ComponentModel.PropertyDescriptorCollection>объекта.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>Метод объявляет метод, который использует реализации (например, элемент управления поставщика), чтобы получить экземпляр интерфейса табличные данные, когда вызывается метод обратного вызова.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartTable interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartTable interface, with one control acting as the provider and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartTable interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_208_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_208_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_208_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_208_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified table, which the provider makes available through an instance of the IWebPartTable interface."
  syntax:
    content: public interface IWebPartTable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  id: GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  langs:
  - csharp
  name: GetTableData(TableCallback)
  nameWithType: IWebPartTable.GetTableData(TableCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(TableCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает данные для таблицы, который используется интерфейсом в качестве основы для связи между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Используйте этот метод для извлечения значений таблицы данных, передаваемых по интерфейсу. Поставщик реализует этот метод, а потребитель вызывает его в момент, когда он готов к обработке или визуализации данных."
  example:
  - "The following code example shows the implementation and use of the GetTableData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the GetTableData method, returning the data in the specified table. The consumer control calls the GetTableData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/dd87fd75-1dde-4c55-8fa1-_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/dd87fd75-1dde-4c55-8fa1-_1.vb)]"
  syntax:
    content: public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.TableCallback
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.TableCallback&quot;> </xref> делегат, который содержит адрес метода, который получает данные."
  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartTable.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает сведения схемы для таблицы данных, который используется для обмена данными между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Это свойство предоставляет сведения о свойстве для данных в <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>экземпляра.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> Отсутствует неявный контракт между схемой ссылается свойство схемы и данных в таблице. Контракт, является для каждого <xref:System.ComponentModel.PropertyDescriptor>объекта в свойстве Schema, может вызывать <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>для элемента данных таблиц для получения значения в столбце или строке таблицы.</xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the table as it writes the table data to the page.  \n  \n [!code-cs[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1346_1.cs)]\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1346_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> описания данных."
  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: GetTableData(TableCallback)
  nameWithType: IWebPartTable.GetTableData(TableCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(TableCallback)
- uid: System.Web.UI.WebControls.WebParts.TableCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TableCallback
  nameWithType: TableCallback
  fullName: System.Web.UI.WebControls.WebParts.TableCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: Schema
  nameWithType: IWebPartTable.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: GetTableData
  nameWithType: IWebPartTable.GetTableData
- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartTable
  isExternal: false
  name: Schema
  nameWithType: IWebPartTable.Schema
