### YamlMime:ManagedReference
items:
- uid: System.Drawing.Brush
  id: Brush
  children:
  - System.Drawing.Brush.#ctor
  - System.Drawing.Brush.Clone
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.Finalize
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  langs:
  - csharp
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
  type: Class
  summary: "Определяет объекты, которые используются для заливки внутри графических фигур, таких как прямоугольники, эллипсы, круги, многоугольников и пути."
  remarks: "Это абстрактный базовый класс и не может быть создан. Чтобы создать объект brush, используйте классы, производные от кисти, такие как <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>и <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush> </xref:System.Drawing.TextureBrush> </xref:System.Drawing.SolidBrush>"
  syntax:
    content: 'public abstract class Brush : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Brush.#ctor
  id: '#ctor'
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Brush&quot;> </xref> класса."
  syntax:
    content: protected Brush ();
    parameters: []
  overload: System.Drawing.Brush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Clone
  id: Clone
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "При переопределении в производном классе создает точную копию данного объекта <xref href=&quot;System.Drawing.Brush&quot;> </xref>."
  syntax:
    content: public abstract object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый <xref href=&quot;System.Drawing.Brush&quot;> </xref> , создаваемый данным методом."
  overload: System.Drawing.Brush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose
  id: Dispose
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Освобождает все ресурсы, используемые этим <xref href=&quot;System.Drawing.Brush&quot;> </xref> объекта."
  remarks: "Вызов Dispose позволяет ресурсы, используемые <xref:System.Drawing.Brush>объекта перераспределить для других целей.</xref:System.Drawing.Brush>       После использования <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Drawing.Brush>окажется в неработоспособном состоянии.</xref:System.Drawing.Brush> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Drawing.Brush>, сборщик мусора мог освободить память, <xref:System.Drawing.Brush>занимаемую.</xref:System.Drawing.Brush> </xref:System.Drawing.Brush> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [реализация метода Dispose](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Drawing.Brush>объекта `Finalize` метод.</xref:System.Drawing.Brush>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Drawing.Brush&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые `Dispose()`метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`.</xref:System.Object.Finalize%2A>       При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Drawing.Brush>ссылки.</xref:System.Drawing.Brush> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Finalize
  id: Finalize
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~Brush ();
    parameters: []
  overload: System.Drawing.Brush.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  id: SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "В производном классе задает ссылку на [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] объекта кисти."
  syntax:
    content: protected void SetNativeBrush (IntPtr brush);
    parameters:
    - id: brush
      type: System.IntPtr
      description: "Указатель на [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] объект кисти."
  overload: System.Drawing.Brush.SetNativeBrush*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Brush.#ctor
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
- uid: System.Drawing.Brush.Clone
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Brush.Dispose
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Brush.Finalize
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Brush.#ctor*
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush
  nameWithType: Brush.Brush
- uid: System.Drawing.Brush.Clone*
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone
  nameWithType: Brush.Clone
- uid: System.Drawing.Brush.Dispose*
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose
  nameWithType: Brush.Dispose
- uid: System.Drawing.Brush.Finalize*
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize
  nameWithType: Brush.Finalize
- uid: System.Drawing.Brush.SetNativeBrush*
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush
  nameWithType: Brush.SetNativeBrush
