### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithmGroup
  id: CngAlgorithmGroup
  children:
  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.Dsa
  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.Rsa
  - System.Security.Cryptography.CngAlgorithmGroup.ToString
  langs:
  - csharp
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
  type: Class
  summary: "Инкапсулирует имя группы алгоритмов шифрования."
  remarks: "Класс CngAlgorithmGroup является служебным классом. Он состоит из статических свойств, методов сравнения и модификатором доступа private, внутри строки, определяющей имя группы алгоритмов.       Статические свойства возвращают объекты CngAlgorithmGroup. Внутренняя строка каждого объекта инициализируется имя группы алгоритмов, которое соответствует имени статического свойства.       Этот класс также можно использовать для создания объектов для групп алгоритмов, не представленных статическими свойствами.       Некоторые классы криптографии следующего поколения (CNG) (например, <xref:System.Security.Cryptography.CngKey>) возвращают объекты CngAlgorithmGroup.</xref:System.Security.Cryptography.CngKey> Классы, которые получают <xref:System.Security.Cryptography.CngAlgorithm>объектов можно извлечь внедренное имя группы алгоритмов путем вызова объекта <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A>свойство.</xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> </xref:System.Security.Cryptography.CngAlgorithm>       Таким образом CngAlgorithmGroup служит перечисление групп хорошо известного алгоритма. Он позволяет задать имя группы алгоритмов путем использования строго типизированного значения вместо строки."
  syntax:
    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> класса."
  remarks: "Экземпляры <xref:System.Security.Cryptography.CngAlgorithmGroup>класс Ведение внутреннее имя группы алгоритм, который задается параметром `algorithmGroup` параметр.</xref:System.Security.Cryptography.CngAlgorithmGroup>       Основной этот конструктор служит для предоставления метода для создания <xref:System.Security.Cryptography.CngAlgorithmGroup>объектов для группы алгоритмов, которые не представлены статические свойства <xref:System.Security.Cryptography.CngAlgorithmGroup>класса.</xref:System.Security.Cryptography.CngAlgorithmGroup> </xref:System.Security.Cryptography.CngAlgorithmGroup> Такая емкость класса обеспечивает будущее [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] выпусков и пакетов обновления, а также сторонние разработчики могут добавлять новые группы алгоритмов, к которым можно получить так же, как группы алгоритмов, которые в настоящее время доступны."
  syntax:
    content: public CngAlgorithmGroup (string algorithmGroup);
    parameters:
    - id: algorithmGroup
      type: System.String
      description: "Имя группы алгоритмов для инициализации."
  overload: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithmGroup</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> algorithmGroup </code> Длина параметра равно 0 (нулю)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает имя группы алгоритмов, текущий <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> указывает на объект."
  syntax:
    content: public string AlgorithmGroup { get; }
    return:
      type: System.String
      description: "Внедренное имя группы алгоритмов."
  overload: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  id: DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект, задающий алгоритм Диффи-Хелмана семейство алгоритмов."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий алгоритм Диффи-Хелмана семейство алгоритмов."
  overload: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  id: Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект, задающий алгоритм цифровой подписи (DSA) семейство алгоритмов."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий семейство алгоритмов DSA."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект, задающий семейство алгоритмов, алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий семейство алгоритмов, ECDH."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект, задающий семейство алгоритмов, эллиптических кривых цифровой подписи алгоритма (ECDSA)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий семейство алгоритмов, ECDSA."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Сравнивает заданный объект текущему <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, сравниваемый с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> obj </code> параметр <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> , задающим тот же алгоритм группу, что и текущий объект; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Сравнивает заданный <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, сравниваемый с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> other </code> тот же алгоритм указывает группу, что и текущий объект; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Создает хэш-алгоритм имя группы, встроенного в текущий <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-значение внедренного имени группы алгоритмов."
  overload: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Определяет неравенство двух <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта задают разные группы алгоритмов."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий группу алгоритмов."
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Второй объект, сравниваемый объект, который определяется параметром `left` параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два объекта задают разные группы алгоритмов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Определяет неравенство двух <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объекта задают разные группы алгоритмов."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий группу алгоритмов."
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Второй объект, сравниваемый объект, который определяется параметром `left` параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два объекта задают разные группы алгоритмов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> объект, задающий семейство алгоритмов, Rivest-шифрования-Adleman (RSA)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Объект, задающий семейство алгоритмов RSA."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает имя группы алгоритмов, текущий <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> указывает на объект."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Внедренное имя группы алгоритмов."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithmGroup.Equals
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithmGroup.GetHashCode
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithmGroup.op_Equality
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithmGroup.op_Inequality
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithmGroup.ToString
