### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  id: SqlUserDefinedTypeAttribute
  children:
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  type: Class
  summary: "Используется, чтобы пометить определение типа в сборке в виде определяемых пользователем типов (UDT) в SQL Server. Свойства атрибута отражают физические характеристики, используемые при регистрации типа в SQL Server. Этот класс не наследуется."
  remarks: "SQL Server создает определяемый пользователем тип, к которому привязан к определению типа, имеющего атрибут пользовательского SqlUserDefinedTypeAttribute. Каждый пользовательский тип должен быть помечен с помощью этого атрибута. В разделе [определяемые пользователем типы](http://go.microsoft.com/fwlink/?LinkId=128028) Дополнительные сведения об определяемых пользователем типов, включая пример определяемого пользователем типа."
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_4_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]

      public sealed class SqlUserDefinedTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  id: '#ctor(Microsoft.SqlServer.Server.Format)'
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Обязательный атрибут определяемого пользователем типа (UDT), убедитесь, что данный тип имеет определяемый пользователем тип и указать формат хранения определяемого пользователем типа."
  remarks: "В следующем примере указывается, `Format` определяемого пользователем типа — `SerializedDataWithMetadata`и`MaxByteSize` составляет 8000 байт."
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#12](~/add/codesnippet/csharp/CS/Type1.cs#12)]
     [!code-vb[VbRaddataSQLObjects#12](~/add/codesnippet/visualbasic/VB/Type1.vb#12)]
  syntax:
    content: public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);
    parameters:
    - id: format
      type: Microsoft.SqlServer.Server.Format
      description: "Один из <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> значения, представляющие формат сериализации типа."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  id: Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Формат сериализации, что <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref>."
  syntax:
    content: public Microsoft.SqlServer.Server.Format Format { get; }
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Объект <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> значение, представляющее формат сериализации."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  id: IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Указывает, является ли определяемый пользователем тип упорядоченных байтов."
  remarks: "When set to `true`, the IsByteOrdered property in effect guarantees that the serialized binary data can be used for semantic ordering of the information. Thus, each instance of a byte-ordered UDT object can only have one serialized representation. When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..  \n  \n The following features are supported when IsByteOrdered is set to `true`:  \n  \n-   The ability to create indexes on columns of this type.  \n  \n-   The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.  \n  \n-   The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses. In these cases, the binary representation of the type is used to determine the order.  \n  \n-   The ability to use comparison operators in Transact-SQL statements.  \n  \n-   The ability to persist computed columns of this type.  \n  \n Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when IsByteOrdered is set to `true`:  \n  \n-   Equal to (=)  \n  \n-   Not equal to (!=)  \n  \n-   Greater than (>)  \n  \n-   Less than (\\<)  \n  \n-   Greater than or equal to (>=)  \n  \n-   Less than or equal to (<=)"
  syntax:
    content: public bool IsByteOrdered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если определяемый пользователем тип байтов упорядочены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  id: IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Указывает, имеют ли все экземпляры данного определяемого пользователем типа одинаковую длину."
  remarks: "Если значение `true`, все экземпляры определяемых пользователем типов, соответствующий этот тип CLR (CLR) должен иметь длину в байтах, точно равно <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> Этот атрибут применяется только для определяемых пользователем типов с `UserDefined` сериализации <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public bool IsFixedLength { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все экземпляры этого типа имеют одинаковую длину; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  id: MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Максимальный размер экземпляра в байтах."
  remarks: "Необходимо указать свойство MaxByteSize с `UserDefined` сериализации <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>       При подключении к SQL Server 2005 или более ранней версии, MaxByteSize должен находиться в диапазоне от 1 до 8000.       При подключении к SQL Server 2008 или более поздней версии, задайте MaxByteSize от 1 до 8000, для типа, экземпляры которого также являются всегда 8 000 байт или меньше. Для типов, которые могут иметь экземпляры, размер которых превышает 8000 укажите значение -1.       Для определяемого пользователем ТИПА для пользовательской сериализации указан MaxByteSize ссылается на общий размер определяемого пользователем типа в сериализованном виде определяемого пользователем. Рассмотрим определяемый пользователем тип со свойством строки длиной 10 символов (<xref:System.Char>).</xref:System.Char> При сериализации определяемого пользователем ТИПА с помощью <xref:System.IO.BinaryWriter>, общий размер сериализованной строки равен 22 байтам: 2 байта на каждый символ Юникода UTF-16, умноженное на максимальное число символов, плюс 2 контрольных байта связи с сериализацией двоичного потока.</xref:System.IO.BinaryWriter> Таким образом, при определении значения параметра MaxByteSize, общий размер сериализованного определяемого пользователем ТИПА должны рассматриваться как: размер данных, сериализованных в двоичной форме, плюс издержки от сериализации.       Это свойство не должно использоваться с `Native` сериализации <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public int MaxByteSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, представляющее максимальный размер экземпляра.</xref:System.Int32>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Имя определяемого пользователем типа SQL Server."
  remarks: "Свойство Name не используется в SQL Server, но используется в Microsoft .NET интегрированной разработки среды (IDE) Visual Studio."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>значение, представляющее имя определяемого пользователем типа SQL Server.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  id: ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Имя метода, используемого для проверки экземпляров определяемого пользователем типа."
  remarks: "Метод, указанный в этом атрибуте проверяет экземпляры определяемого пользователем типа при десериализации из двоичного значения, который не является доверенным."
  syntax:
    content: public string ValidationMethodName { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>представляющая имя метода, используемого для проверки экземпляров определяемого пользователем типа.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
