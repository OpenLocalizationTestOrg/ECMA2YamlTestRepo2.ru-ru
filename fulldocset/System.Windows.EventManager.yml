### YamlMime:ManagedReference
items:
- uid: System.Windows.EventManager
  id: EventManager
  children:
  - System.Windows.EventManager.GetRoutedEvents
  - System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  langs:
  - csharp
  name: EventManager
  nameWithType: EventManager
  fullName: System.Windows.EventManager
  type: Class
  summary: "Предоставляет программы, связанные с событиями методы, регистрирующие маршрутизируемые события для владельцев класса и добавляющие обработчики класса."
  remarks: "Этот класс обычно используется для регистрации новое маршрутизируемое событие <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>       Второй чаще всего [!INCLUDE[TLA2#tla_api](~/add/includes/tla2sharptla-api-md.md)] используется <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Используйте этот метод, чтобы включить обработку класса для перенаправленного события в классе или вложенное событие. Дополнительные сведения см. в разделе [как Handled и обработка класса](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example show how to use this class to register a new routed event as a class member, along with the routed event \"wrapper\" technique of overriding the add and remove implementations for a [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] event.  \n  \n [!code-cs[DPCustom#EventManagerClass](~/add/codesnippet/csharp/DPCustom/default.xaml.cs#eventmanagerclass)]\n [!code-vb[DPCustom#EventManagerClass](~/add/codesnippet/visualbasic/dpcustom/default.xaml.vb#eventmanagerclass)]"
  syntax:
    content: public static class EventManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEvents
  id: GetRoutedEvents
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Возвращает идентификаторы для перенаправленных событий, которые были зарегистрированы в системе событий."
  remarks: "Дополнительные <xref:System.Windows.RoutedEvent>объекты могут быть зарегистрированы в более поздней версии.</xref:System.Windows.RoutedEvent> Этот метод возвращает моментальный снимок и коллекции маршрутизируемые события для записи во всей жизни приложения. Коллекция, возвращаемая может быть достаточно большим. Даже просто подсчета событий, которые являются частью [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)], коллекция не содержит сотни высокого уровня."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEvents ();
    parameters: []
    return:
      type: System.Windows.RoutedEvent[]
      description: "Массив объектов типа <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> , содержащая зарегистрированные объекты."
  overload: System.Windows.EventManager.GetRoutedEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  id: GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Находит все идентификаторы перенаправленных событий для событий, зарегистрированных в предоставленном типе владельца."
  syntax:
    content: public static System.Windows.RoutedEvent[] GetRoutedEventsForOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "Тип, чтобы начать поиск. Базовые классы включены в поиск."
    return:
      type: System.Windows.RoutedEvent[]
      description: "Массив соответствующих идентификаторов перенаправленных событий, если любое совпадение найдено; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.EventManager.GetRoutedEventsForOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Регистрирует обработчик класса для определенного маршрутизируемого события."
  remarks: "Обработку класса — это функция, которая доступна для маршрутизируемых событий, включая вложенные события, реализуемые с резервированием маршрутизируемого события. Обработчик класса аналогично статическому обработчику для всех экземпляров класса. Поскольку обработчик является статическим, нельзя изменить свойства экземпляра непосредственно с помощью обработчика класса, но можно получить доступ к экземпляров через `sender` параметр и/или данные о событии.       Обработчики класса вызываются до обработчиков экземпляра. Вы можете реализовать обработчик класса с поведением пометить событие как обработанное. Таким образом обработчиками для события обработки класса не вызываются до регистрации обработчиков экземпляра для обработанных событий.       Многие [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] базового элемента события предоставляют виртуальные методы обработки класса. Путем переопределения этих методов в классах, наследующих базовых классов, можно реализовать обработку без вызова RegisterClassHandler в статических конструкторов класса. Как правило, эти методы обработки класса используются для входных событий и имеют имена, начинающиеся с «On» и заканчиваться имя события, который обрабатывается классом.       Дополнительные сведения об обработке класса см. в разделе [как Handled и обработка класса](~/add/includes/ajax-current-ext-md.md).       С помощью данной сигнатуры, обработчики класса будут зарегистрированы для вызова только в ответ на необработанные события. Можно также зарегистрировать обработчики класса для вызова, даже если аргументы события помечены как обработанные, с помощью <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>подписи, с `handledEventsToo` равным `true`.</xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>"
  example:
  - "The following example adds a handler for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>, calling RegisterClassHandler.  \n  \n [!code-vb[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#staticandregisterclasshandler)]\n [!code-cs[ClassHandling#StaticAndRegisterClassHandler](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#staticandregisterclasshandler)]"
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: classType
      type: System.Type
      description: "Тип класса, объявляющего обработку класса."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Идентификатор маршрутизируемого события для обработки события."
    - id: handler
      type: System.Delegate
      description: "Ссылка на реализацию обработчика класса."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Регистрирует обработчик класса для определенного маршрутизируемого события с возможностью обработки событий, где данных событие уже помечено как обработанное."
  remarks: "Обработку класса — это функция, которая доступна для маршрутизируемых событий, включая вложенные события, реализуемые с резервированием маршрутизируемого события. Обработчик класса аналогично статическому обработчику для всех экземпляров класса. Поскольку обработчик является статическим, нельзя изменить свойства экземпляра непосредственно с помощью обработчика класса, но можно получить доступ к экземпляров через `sender` параметр и/или данные о событии.       Обработчики класса вызываются до обработчиков экземпляра. Вы можете реализовать обработчик класса с поведением пометить событие как обработанное. Таким образом обработчиками для события обработки класса не вызываются до регистрации обработчиков экземпляра для обработанных событий.       Многие [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] базового элемента события предоставляют виртуальные методы обработки класса. Путем переопределения этих методов в классах, наследующих базовых классов, можно реализовать обработку без вызова класса <xref:System.Windows.EventManager.RegisterClassHandler%2A>в статических конструкторов.</xref:System.Windows.EventManager.RegisterClassHandler%2A> Как правило, эти методы обработки класса используются для входных событий и имеют имена, начинающиеся с «On» и заканчиваться имя события, который обрабатывается классом.       Дополнительные сведения об обработке класса см. в разделе [как Handled и обработка класса](~/add/includes/ajax-current-ext-md.md).       С помощью данной сигнатуры, обработчики класса могут быть зарегистрированы для вызова при обработанных событиях, задав `handledEventsToo` значение `true`. Как правило следует этого только в том случае, если имеется проблема с обработкой, которую вы пытаетесь решить, такие как системная обработка ввода с клавиатуры или мыши события."
  syntax:
    content: public static void RegisterClassHandler (Type classType, System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: classType
      type: System.Type
      description: "Тип класса, объявляющего обработку класса."
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Идентификатор маршрутизируемого события для обработки события."
    - id: handler
      type: System.Delegate
      description: "Ссылка на реализацию обработчика класса."
    - id: handledEventsToo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для вызова данного обработчика класса, даже если аргументы маршрутизируемого события были помечены как обработанное; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поддержки поведения по умолчанию не будет вызываться обработчик на любое событие, отмеченных как обработанные."
  overload: System.Windows.EventManager.RegisterClassHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  id: RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  langs:
  - csharp
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Регистрирует новое маршрутизируемое событие с [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] системы событий."
  remarks: "С помощью возвращаемого значения этого метода для создания статического объявления для уникального <xref:System.Windows.RoutedEvent>поле идентификатора.</xref:System.Windows.RoutedEvent> Это поле должно храниться в типе владельца.       Имеется значительное количество условных обозначений и рекомендации, связанные с маршрутизируемых событий следует с именем, зарегистрированные и предоставляется в классе. Дополнительные сведения см. в разделе [направлено Общие сведения о событиях](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.RoutedEvent RegisterRoutedEvent (string name, System.Windows.RoutingStrategy routingStrategy, Type handlerType, Type ownerType);
    parameters:
    - id: name
      type: System.String
      description: "Имя маршрутизируемого события. Имя должно быть уникальным в пределах типа владельца и не может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
    - id: routingStrategy
      type: System.Windows.RoutingStrategy
      description: "Стратегия маршрутизации события как значение перечисления."
    - id: handlerType
      type: System.Type
      description: "Тип обработчика событий. Это должен быть типом делегата и не может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: ownerType
      type: System.Type
      description: "Тип класса владельца маршрутизируемого события. Это не может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.RoutedEvent
      description: "Идентификатор вновь зарегистрированного маршрутизируемого события. Этот объект идентификатора теперь может храниться в виде статического поля в классе и использовать в качестве параметра для методов, присоединяющих обработчики событий к событиям. Идентификатор маршрутизируемого события также используется для других систем событий [!INCLUDE[TLA2#tla_api#plural](~/add/includes/tla2sharptla-apisharpplural-md.md)]."
  overload: System.Windows.EventManager.RegisterRoutedEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.EventManager.GetRoutedEvents
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents()
  nameWithType: EventManager.GetRoutedEvents()
  fullName: System.Windows.EventManager.GetRoutedEvents()
- uid: System.Windows.RoutedEvent[]
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent[]
  spec.csharp:
  - uid: System.Windows.RoutedEvent
    name: RoutedEvent
    nameWithType: RoutedEvent
    fullName: RoutedEvent[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner(Type)
  nameWithType: EventManager.GetRoutedEventsForOwner(Type)
  fullName: System.Windows.EventManager.GetRoutedEventsForOwner(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  nameWithType: EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.EventManager.RegisterClassHandler(Type,RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  nameWithType: EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
  fullName: System.Windows.EventManager.RegisterRoutedEvent(String,RoutingStrategy,Type,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.EventManager.GetRoutedEvents*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEvents
  nameWithType: EventManager.GetRoutedEvents
- uid: System.Windows.EventManager.GetRoutedEventsForOwner*
  parent: System.Windows.EventManager
  isExternal: false
  name: GetRoutedEventsForOwner
  nameWithType: EventManager.GetRoutedEventsForOwner
- uid: System.Windows.EventManager.RegisterClassHandler*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterClassHandler
  nameWithType: EventManager.RegisterClassHandler
- uid: System.Windows.EventManager.RegisterRoutedEvent*
  parent: System.Windows.EventManager
  isExternal: false
  name: RegisterRoutedEvent
  nameWithType: EventManager.RegisterRoutedEvent
