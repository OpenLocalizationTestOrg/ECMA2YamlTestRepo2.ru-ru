### YamlMime:ManagedReference
items:
- uid: System.IO.FileShare
  id: FileShare
  children:
  - System.IO.FileShare.Delete
  - System.IO.FileShare.Inheritable
  - System.IO.FileShare.None
  - System.IO.FileShare.Read
  - System.IO.FileShare.ReadWrite
  - System.IO.FileShare.Write
  langs:
  - csharp
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
  type: Enum
  summary: "Содержит константы для управления типом доступа других <xref href=&quot;System.IO.FileStream&quot;> </xref> объекты могут иметь в тот же файл."
  remarks: "Пример создания файла и записи в файл текста см. в разделе [как: запись текста в файл](~/add/includes/ajax-current-ext-md.md). Пример чтения текста из файла см. в разделе [как: чтение текста из файла](~/add/includes/ajax-current-ext-md.md). Пример чтение и запись в двоичный файл см. в разделе [как: чтение и запись в файл вновь созданные данных](~/add/includes/ajax-current-ext-md.md).       Обычно это перечисление используется для определения, является ли два процесса одновременно выполнять чтение из одного файла. Например если файл открыт и чтения, другие пользователи могут открывать файл для чтения, но не для записи.       Параметр FileShare задан в некоторых конструкторах для <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>и в некоторых `Open` методы <xref:System.IO.File>и <xref:System.IO.FileInfo>для управления как файл открыт.</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>"
  example:
  - "The following <xref:System.IO.FileStream> constructor opens an existing file and grants read-only access to other users (Read).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.fileshare_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.fileshare_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.fileshare_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileShare
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileShare.Delete
  id: Delete
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Delete
  nameWithType: FileShare.Delete
  fullName: System.IO.FileShare.Delete
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Разрешает последующее удаление файла."
  syntax:
    content: Delete
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Inheritable
  id: Inheritable
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Inheritable
  nameWithType: FileShare.Inheritable
  fullName: System.IO.FileShare.Inheritable
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Делает дескриптора файла, наследуемым дочерними процессами. Это не поддерживается напрямую Win32."
  syntax:
    content: Inheritable
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.None
  id: None
  parent: System.IO.FileShare
  langs:
  - csharp
  name: None
  nameWithType: FileShare.None
  fullName: System.IO.FileShare.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Отклоняет общий доступ к текущему файлу. Любой запрос на открытие файла (данным процессом или другим процессом) завершится ошибкой, пока файл не будет закрыт."
  syntax:
    content: None
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Read
  id: Read
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Read
  nameWithType: FileShare.Read
  fullName: System.IO.FileShare.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Разрешает последующее открытие файла для чтения. Если этот флаг не задан, любой запрос на открытие файла для чтения (данным процессом или другим процессом) будут завершаться сбоем, пока файл не будет закрыт. Тем не менее даже если этот флаг указан, дополнительных разрешений может потребоваться по-прежнему получить доступ к файлу."
  syntax:
    content: Read
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.ReadWrite
  id: ReadWrite
  parent: System.IO.FileShare
  langs:
  - csharp
  name: ReadWrite
  nameWithType: FileShare.ReadWrite
  fullName: System.IO.FileShare.ReadWrite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Разрешает последующее открытие файла для чтения или записи. Если этот флаг не задан, любой запрос на открытие файла для чтения или записи (по данным процессом или другим процессом) будут завершаться сбоем, пока файл не будет закрыт. Тем не менее даже если этот флаг указан, дополнительных разрешений может потребоваться по-прежнему получить доступ к файлу."
  syntax:
    content: ReadWrite
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Write
  id: Write
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Write
  nameWithType: FileShare.Write
  fullName: System.IO.FileShare.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Разрешает последующее открытие файла для записи. Если этот флаг не задан, любой запрос на открытие файла для записи (данным процессом или другим процессом) завершится ошибкой, пока файл не будет закрыт. Тем не менее даже если этот флаг указан, дополнительных разрешений может потребоваться по-прежнему получить доступ к файлу."
  syntax:
    content: Write
    return:
      type: System.IO.FileShare
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileShare.Delete
  parent: System.IO.FileShare
  isExternal: false
  name: Delete
  nameWithType: FileShare.Delete
  fullName: System.IO.FileShare.Delete
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileShare.Inheritable
  parent: System.IO.FileShare
  isExternal: false
  name: Inheritable
  nameWithType: FileShare.Inheritable
  fullName: System.IO.FileShare.Inheritable
- uid: System.IO.FileShare.None
  parent: System.IO.FileShare
  isExternal: false
  name: None
  nameWithType: FileShare.None
  fullName: System.IO.FileShare.None
- uid: System.IO.FileShare.Read
  parent: System.IO.FileShare
  isExternal: false
  name: Read
  nameWithType: FileShare.Read
  fullName: System.IO.FileShare.Read
- uid: System.IO.FileShare.ReadWrite
  parent: System.IO.FileShare
  isExternal: false
  name: ReadWrite
  nameWithType: FileShare.ReadWrite
  fullName: System.IO.FileShare.ReadWrite
- uid: System.IO.FileShare.Write
  parent: System.IO.FileShare
  isExternal: false
  name: Write
  nameWithType: FileShare.Write
  fullName: System.IO.FileShare.Write
