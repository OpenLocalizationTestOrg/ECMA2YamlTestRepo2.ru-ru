### YamlMime:ManagedReference
items:
- uid: System.Xaml.AttachablePropertyServices
  id: AttachablePropertyServices
  children:
  - System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  - System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  - System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  - System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  - System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  - System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  langs:
  - csharp
  name: AttachablePropertyServices
  nameWithType: AttachablePropertyServices
  fullName: System.Xaml.AttachablePropertyServices
  type: Class
  summary: "Предоставляет статические вспомогательные методы, получающие значения и сведения о методах доступа из присоединяемое свойство и работающие с хранилищем."
  remarks: "Большинство функций в этом классе зависит от хранилищем, которое обычно реализует <xref:System.Xaml.IAttachedPropertyStore>интерфейса.</xref:System.Xaml.IAttachedPropertyStore> Однако параметры для передачи в хранилище в AttachablePropertyServices не типизирован как интерфейс и вместо этого вводятся в виде `object`. Это так, как можно передать любой объект, и в этом случае используется хранилище присоединяемое свойство внутреннее значение по умолчанию.       Для произвольного объекта рекомендуется передать объект, который в противном случае будут сопоставлены с хранилищем. Не передавайте `null` для указания, что у вас <xref:System.Xaml.IAttachedPropertyStore>для использования.</xref:System.Xaml.IAttachedPropertyStore> Передача `null` вводит пути кода, которые не выполняют никаких действий. Передача объекта, отличным от NULL, но считают `null` на попытки <xref:System.Xaml.IAttachedPropertyStore>приведения, использует хранилище присоединяемое свойство по умолчанию.</xref:System.Xaml.IAttachedPropertyStore>"
  syntax:
    content: public static class AttachablePropertyServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  id: CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Копирует все пары присоединяемое свойство значение из указанного присоединяемого свойства хранилища и в массив назначения."
  remarks: "Вызов этого метода вызывает базовая <xref:System.Collections.Generic.ICollection%601.CopyTo%2A>реализацию ограниченный пара ключ значение, которое может быть источник исключения, которые не перечислены в этом разделе.</xref:System.Collections.Generic.ICollection%601.CopyTo%2A>"
  syntax:
    content: public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,object>[] array, int index);
    parameters:
    - id: instance
      type: System.Object
      description: "Хранилищем указанное присоединяемое свойство, которое реализует <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; или любой непустой объект для доступа к хранилищу присоединяемое свойство статических по умолчанию."
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
      description: "Массив назначения. Массив является универсальном массиве, должны быть переданы undimensioned и должны быть установлены компоненты <xref href=&quot;System.Xaml.AttachableMemberIdentifier&quot;> </xref> и <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Исходный индекс, в который необходимо скопировать."
  overload: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  id: GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает число записей присоединяемого свойства, которые находятся в указанном хранилище."
  syntax:
    content: public static int GetAttachedPropertyCount (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Хранилищем указанное присоединяемое свойство, которое реализует <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; или любой непустой объект для доступа к хранилищу присоединяемое свойство статических по умолчанию."
    return:
      type: System.Int32
      description: "Целое число записей в хранилище."
  overload: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  id: RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Удаляет запись для указанного присоединяемого свойства из указанного хранилища."
  remarks: "Магазины являются каждого экземпляра. Таким образом, в хранилище `name` значение должно быть однозначными."
  syntax:
    content: public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);
    parameters:
    - id: instance
      type: System.Object
      description: "Хранилищем указанное присоединяемое свойство, которое реализует <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; или любой непустой объект для доступа к хранилищу присоединяемое свойство статических по умолчанию."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "Идентификатор присоединяемого свойства записи, которую требуется удалить из хранилища."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запись присоединяемого свойства для <code> name </code> был найден в хранилище и удален из него; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.AttachablePropertyServices.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  id: SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Задает значение для указанного присоединяемого свойства в указанном хранилище."
  syntax:
    content: public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "Хранилищем указанное присоединяемое свойство, которое реализует <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; или любой объект отличное от null, для использования хранилища присоединяемое свойство статических по умолчанию."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "Идентификатор записи присоединяемого свойства, для которого требуется задать значение."
    - id: value
      type: System.Object
      description: "Задаваемое значение."
  overload: System.Xaml.AttachablePropertyServices.SetProperty*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось задать значение в хранилище."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  id: TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Пытается получить значение для указанного присоединяемого свойства в указанном хранилище. Не вызывает исключение, если указанное присоединяемое свойство не существует в хранилище."
  syntax:
    content: public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);
    parameters:
    - id: instance
      type: System.Object
      description: "Хранилищем указанное присоединяемое свойство, которое реализует <xref href=&quot;System.Xaml.IAttachedPropertyStore&quot;> </xref>; или любой объект отличное от null, для использования хранилища присоединяемое свойство статических по умолчанию."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "Идентификатор записи присоединяемого свойства для которого нужно получить значение."
    - id: value
      type: System.Object
      description: "Выходной параметр. По возвращении из этого метода содержит целевой объект для значения, если `name` существует в хранилище и имеет значение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запись присоединяемого свойства для <code> name </code> не найден в хранилище и было передано в <code> value </code>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  id: TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  langs:
  - csharp
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  syntax:
    content: public static bool TryGetProperty<T> (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);
    parameters:
    - id: instance
      type: System.Object
      description: "Для добавления."
    - id: name
      type: System.Xaml.AttachableMemberIdentifier
      description: "Для добавления."
    - id: value
      type: T
      description: "Для добавления."
    return:
      type: System.Boolean
      description: "Для добавления."
  overload: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  nameWithType: AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
  fullName: System.Xaml.AttachablePropertyServices.CopyPropertiesTo(Object,KeyValuePair<AttachableMemberIdentifier,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<AttachableMemberIdentifier,Object>
  nameWithType: KeyValuePair<AttachableMemberIdentifier,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Xaml.AttachableMemberIdentifier,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.AttachableMemberIdentifier
    name: AttachableMemberIdentifier
    nameWithType: AttachableMemberIdentifier
    fullName: AttachableMemberIdentifier
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount(Object)
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount(Object)
  fullName: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(Object)
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty(Object,AttachableMemberIdentifier)
  nameWithType: AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
  fullName: System.Xaml.AttachablePropertyServices.RemoveProperty(Object,AttachableMemberIdentifier)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.AttachableMemberIdentifier
  parent: System.Xaml
  isExternal: false
  name: AttachableMemberIdentifier
  nameWithType: AttachableMemberIdentifier
  fullName: System.Xaml.AttachableMemberIdentifier
- uid: System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.SetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,Object)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,Object)
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty(Object,AttachableMemberIdentifier,T)
  nameWithType: AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
  fullName: System.Xaml.AttachablePropertyServices.TryGetProperty(Object,AttachableMemberIdentifier,T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Xaml.AttachablePropertyServices.CopyPropertiesTo*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: CopyPropertiesTo
  nameWithType: AttachablePropertyServices.CopyPropertiesTo
- uid: System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: GetAttachedPropertyCount
  nameWithType: AttachablePropertyServices.GetAttachedPropertyCount
- uid: System.Xaml.AttachablePropertyServices.RemoveProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: RemoveProperty
  nameWithType: AttachablePropertyServices.RemoveProperty
- uid: System.Xaml.AttachablePropertyServices.SetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: SetProperty
  nameWithType: AttachablePropertyServices.SetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty
  nameWithType: AttachablePropertyServices.TryGetProperty
- uid: System.Xaml.AttachablePropertyServices.TryGetProperty<T>*
  parent: System.Xaml.AttachablePropertyServices
  isExternal: false
  name: TryGetProperty<T>
  nameWithType: AttachablePropertyServices.TryGetProperty<T>
