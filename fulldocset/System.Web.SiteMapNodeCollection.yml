### YamlMime:ManagedReference
items:
- uid: System.Web.SiteMapNodeCollection
  id: SiteMapNodeCollection
  children:
  - System.Web.SiteMapNodeCollection.#ctor
  - System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  - System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Clear
  - System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  - System.Web.SiteMapNodeCollection.Count
  - System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  - System.Web.SiteMapNodeCollection.GetEnumerator
  - System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  - System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  - System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.IsFixedSize
  - System.Web.SiteMapNodeCollection.IsReadOnly
  - System.Web.SiteMapNodeCollection.IsSynchronized
  - System.Web.SiteMapNodeCollection.Item(System.Int32)
  - System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  - System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  - System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  - System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  - System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  langs:
  - csharp
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
  type: Class
  summary: "Предоставляет строго типизированную коллекцию для <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов и реализует <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> интерфейс для поддержки перехода по коллекции."
  remarks: "Класс SiteMapNodeCollection предоставляет строго типизированную коллекцию для <xref:System.Web.SiteMapNode>объектов.</xref:System.Web.SiteMapNode> Он сохраняет <xref:System.Web.SiteMapNode>объектов внутри с индексацией.</xref:System.Web.SiteMapNode>       Изменять коллекцию SiteMapNodeCollection при ее создании и затем использовать следующие методы для добавления, копирования и удаления <xref:System.Web.SiteMapNode>объектов: — добавление <xref:System.Web.SiteMapNode>объекты, используют <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, и <xref:System.Web.SiteMapNodeCollection.Insert%2A>методы.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode>      -Для копирования <xref:System.Web.SiteMapNode>объекты, используют <xref:System.Web.SiteMapNodeCollection.CopyTo%2A>метод.</xref:System.Web.SiteMapNodeCollection.CopyTo%2A> </xref:System.Web.SiteMapNode>      -Чтобы удалить <xref:System.Web.SiteMapNode>объекты, используют <xref:System.Web.SiteMapNodeCollection.Remove%2A>метод.</xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNode>       Можно создать SiteMapNodeCollection только для чтения, который не разрешает добавление, копирование и удаление <xref:System.Web.SiteMapNode>объектов с помощью статического <xref:System.Web.SiteMapNodeCollection.ReadOnly%2A>метод.</xref:System.Web.SiteMapNodeCollection.ReadOnly%2A> </xref:System.Web.SiteMapNode> SiteMapNodeCollection коллекций, возвращаемых функцией <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName>и <xref:System.Web.UI.IHierarchyData.GetChildren%2A>методы доступны только для чтения, как является SiteMapNodeCollection, которое возвращается, когда <xref:System.Web.SiteMapNode.ChildNodes%2A>доступе к свойству <xref:System.Web.SiteMapNode>объект, возвращаемый из поставщика.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNode.ChildNodes%2A> </xref:System.Web.UI.IHierarchyData.GetChildren%2A> </xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> Объект <xref:System.NotSupportedException>исключение вызывается при попытке изменить доступное только для чтения SiteMapNodeCollection, установив свойство индексатора по умолчанию или с помощью любого из следующих методов:- <xref:System.Web.SiteMapNodeCollection.Add%2A>- <xref:System.Web.SiteMapNodeCollection.AddRange%2A>- <xref:System.Web.SiteMapNodeCollection.Clear%2A>- <xref:System.Web.SiteMapNodeCollection.Insert%2A>- <xref:System.Web.SiteMapNodeCollection.Remove%2A>- <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>Используйте <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство коллекции, до вызова любого из методов в предыдущем списке.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> </xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.Clear%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.NotSupportedException>"
  example:
  - "The following code example demonstrates how to create a SiteMapNodeCollection collection, and then add <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. The SiteMapNodeCollection is a subset of the current site map, showing only the first two hierarchical levels.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/t-system.web.sitemapnode_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/t-system.web.sitemapnode_1.aspx)]"
  syntax:
    content: 'public class SiteMapNodeCollection : System.Collections.IList, System.Web.UI.IHierarchicalEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IHierarchicalEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> класс, который является экземпляром по умолчанию."
  remarks: "Используйте конструктор SiteMapNodeCollection, чтобы создать пустой <xref:System.Web.SiteMapNodeCollection>коллекции.</xref:System.Web.SiteMapNodeCollection> Можно добавить элементы для <xref:System.Web.SiteMapNodeCollection>с помощью <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, или <xref:System.Web.SiteMapNodeCollection.Insert%2A>метод.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to use the SiteMapNodeCollection constructor to create a new <xref:System.Web.SiteMapNodeCollection> collection, and then add elements to the <xref:System.Web.SiteMapNodeCollection> with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_5_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_5_1.vb)]"
  syntax:
    content: public SiteMapNodeCollection ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> класса с указанной начальной емкостью."
  remarks: "Используйте конструктор SiteMapNodeCollection для создания <xref:System.Web.SiteMapNodeCollection>коллекции с указанной начальной емкостью.</xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public SiteMapNodeCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Начальная емкость <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  id: '#ctor(System.Web.SiteMapNode)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> и добавляет <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объект <xref:System.Collections.CollectionBase.InnerList*>Свойства для коллекции.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "Используйте конструктор SiteMapNodeCollection для создания <xref:System.Web.SiteMapNodeCollection>коллекции с одного исходного <xref:System.Web.SiteMapNode>объекта.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection> Можно добавить элементы для <xref:System.Web.SiteMapNodeCollection>с помощью <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, или <xref:System.Web.SiteMapNodeCollection.Insert%2A>метод.</xref:System.Web.SiteMapNodeCollection.Insert%2A> </xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection.Add%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection with a single initial <xref:System.Web.SiteMapNode> object, and then add a <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects to it using the <xref:System.Web.SiteMapNodeCollection.AddRange%2A> method. You can modify the <xref:System.Web.SiteMapNodeCollection>, even though the individual <xref:System.Web.SiteMapNode> objects might be read-only.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_2_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_2_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "A <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  id: '#ctor(System.Web.SiteMapNode[])'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> и добавляет массив элементов типа <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> для <xref:System.Collections.CollectionBase.InnerList*>Свойства для коллекции.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "С помощью конструктора SiteMapNodeCollection эквивалентно вызову <xref:System.Web.SiteMapNodeCollection.%23ctor%2A>конструктор и добавлении элементов в <xref:System.Web.SiteMapNodeCollection>коллекции с <xref:System.Web.SiteMapNodeCollection.AddRange%2A>метод.</xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.%23ctor%2A>"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "Массив объектов типа <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> добавление <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  id: '#ctor(System.Web.SiteMapNodeCollection)'
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> и добавляет все элементы списка указанного <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> коллекции <xref:System.Collections.CollectionBase.InnerList*>Свойства для коллекции.</xref:System.Collections.CollectionBase.InnerList*>"
  remarks: "С помощью конструктора SiteMapNodeCollection эквивалентно вызову <xref:System.Web.SiteMapNodeCollection.%23ctor%2A>конструктор и добавлении элементов в <xref:System.Web.SiteMapNodeCollection>коллекции с <xref:System.Web.SiteMapNodeCollection.AddRange%2A>метод.</xref:System.Web.SiteMapNodeCollection.AddRange%2A> </xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.SiteMapNodeCollection> collection using another <xref:System.Web.SiteMapNodeCollection> of <xref:System.Web.SiteMapNode> objects as a base. The <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=fullName> method returns a read-only <xref:System.Web.SiteMapNodeCollection>, which is detected when the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property returns `true`. A new <xref:System.Web.SiteMapNodeCollection> is created using the read-only <xref:System.Web.SiteMapNodeCollection> and the <xref:System.Web.SiteMapNodeCollection.Add%2A> and <xref:System.Web.SiteMapNodeCollection.Remove%2A> methods can be called successfully.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_7_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_7_1.aspx)]"
  syntax:
    content: public SiteMapNodeCollection (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "Объект <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> , содержащий <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> для добавления в текущую <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  id: Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет один <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> в коллекцию."
  remarks: "Не удается добавить <xref:System.Web.SiteMapNode>объект только для чтения или фиксированного размера <xref:System.Web.SiteMapNodeCollection>коллекции.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>доступно только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to create a new <xref:System.Web.SiteMapNodeCollection> collection and add elements to it. The second code example demonstrates how to add elements to a custom site map provider.  \n  \n The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection>, and then add elements to it with the Add method.  \n  \n [!code-cs[System.Web.SiteMapNode_2#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_1.cs)]\n [!code-vb[System.Web.SiteMapNode_2#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_1.vb)]  \n  \n The following code example demonstrates a custom site map provider implementation and shows how to use the <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> constructor to create a new <xref:System.Web.SiteMapNodeCollection> and add elements to the <xref:System.Web.SiteMapNodeCollection> with the Add method.  \n  \n This code example is part of a larger code example provided for the <xref:System.Web.SiteMapProvider> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_10_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/add/codesnippet/csharp/m-system.web.sitemapnode_10_2.cs)]"
  syntax:
    content: public virtual int Add (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "The <xref href=&quot;System.Web.SiteMapNode&quot;></xref> to add to the <xref href=&quot;System.Web.SiteMapNodeCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "Индекс <xref:System.Collections.CollectionBase.InnerList*>где <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> вставлен.</xref:System.Collections.CollectionBase.InnerList*>"
  overload: System.Web.SiteMapNodeCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  id: AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет массив элементов типа <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> в коллекцию."
  remarks: "Может содержать массив, который передается методу AddRange `null` значения; тем не менее, это приводит к неожиданным исключениям при <xref:System.Web.SiteMapNodeCollection>манипулировать коллекции.</xref:System.Web.SiteMapNodeCollection>       Не удается добавить <xref:System.Web.SiteMapNode>объект только для чтения или фиксированного размера <xref:System.Web.SiteMapNodeCollection>.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>доступно только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNode[] value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode[]
      description: "Массив объектов типа <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> для добавления в текущую <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  id: AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет узлы из указанного <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> в текущую коллекцию."
  remarks: "<xref:System.Web.SiteMapNodeCollection>Может содержать коллекция, которая передается методу AddRange `null` <xref:System.Web.SiteMapNode>объектов; тем не менее, это приводит к неожиданным исключениям при <xref:System.Web.SiteMapNodeCollection>осуществляются.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>       Не удается добавить <xref:System.Web.SiteMapNode>объект только для чтения или фиксированного размера <xref:System.Web.SiteMapNodeCollection>.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNode> Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>доступно только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to create a modifiable <xref:System.Web.SiteMapNodeCollection> collection, and then add <xref:System.Web.SiteMapNode> objects to it using the AddRange method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_2#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual void AddRange (System.Web.SiteMapNodeCollection value);
    parameters:
    - id: value
      type: System.Web.SiteMapNodeCollection
      description: "Объект <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> , содержащий <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов, добавляемых в текущую <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Clear
  id: Clear
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет все элементы из коллекции."
  remarks: "Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>Коллекция доступна только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       Для удаления конкретных элементов <xref:System.Web.SiteMapNodeCollection>, используйте <xref:System.Web.SiteMapNodeCollection.Remove%2A>или <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>метод.</xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> </xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  id: Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Определяет, содержит ли коллекция определенный <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объекта."
  remarks: "Метод Contains определяет равенство, вызвав <xref:System.Object.Equals%2A?displayProperty=fullName>метод.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the Contains and <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_6_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_6_1.aspx)]"
  syntax:
    content: public virtual bool Contains (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> Для поиска в <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> содержит указанный <xref href=&quot;System.Web.SiteMapNode&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  id: CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Копирует всю коллекцию в совместимый одномерный массив, начиная с указанного индекса целевого массива."
  remarks: "Делегаты метод CopyTo <xref:System.Collections.CollectionBase.List%2A?displayProperty=fullName>свойство, в которой учетные записи для возможных исключений, которые перечислены в «Исключения».</xref:System.Collections.CollectionBase.List%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void CopyTo (System.Web.SiteMapNode[] array, int index);
    parameters:
    - id: array
      type: System.Web.SiteMapNode[]
      description: "Одномерный массив, который должен начинаться с нуля и местом назначения для элементов, копируемых из <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в `array` с которого начинается копирование."
  overload: System.Web.SiteMapNodeCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>является многомерным.       - или - количество <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов в источнике <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> больше, чем свободное пространство от <code>index</code> в конец <code>array</code>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Count
  id: Count
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает число элементов, содержащихся в коллекции."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "Число элементов в <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  id: GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Извлекает <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;> </xref> объект, связанный с узлами в текущей коллекции."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SiteMapDataSource
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSource&quot;> </xref> управления представления с которым связан."
    - id: viewName
      type: System.String
      description: "Имя представления."
    return:
      type: System.Web.UI.WebControls.SiteMapDataSourceView
      description: "Именованный <xref href=&quot;System.Web.UI.WebControls.SiteMapDataSourceView&quot;> </xref> для <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов в текущем <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.GetDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Извлекает ссылку на объект перечислителя, который используется для итерации по коллекции."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Объект, реализующий <xref:System.Collections.IEnumerator>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SiteMapNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  id: GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Извлекает <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;> </xref> объект, связанный с узлами в текущей коллекции."
  syntax:
    content: public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView&quot;> </xref> для <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов в текущем <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  id: GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает элемент иерархических данных для указанного элемента перечисления."
  syntax:
    content: public virtual System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "Объект, для которого требуется вернуть <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref>."
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> , Представляющий объект, передаваемый в GetHierarchyData."
  overload: System.Web.SiteMapNodeCollection.GetHierarchyData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  id: IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Осуществляет поиск указанного <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объекта и возвращает отсчитываемый от нуля индекс первого вхождения в коллекцию."
  remarks: "Метод IndexOf равенство определяется путем вызова <xref:System.Object.Equals%2A?displayProperty=fullName>метод.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.Contains%2A> and IndexOf methods of the <xref:System.Web.SiteMapNodeCollection> class. The code checks two providers, `AspNetXmlSiteMapProvider` and `MyXmlSiteMapProvider`, for child nodes of the root node that are duplicates.  \n  \n [!code-cs[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_3_1.aspx)]\n [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_3_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> Для поиска в <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого вхождения <code> value </code> в пределах всего <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>, если он найден; в противном случае — значение -1."
  overload: System.Web.SiteMapNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  id: Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Вставляет указанный <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объект в коллекцию по указанному индексу."
  remarks: "Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>Коллекция доступна только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void Insert (int index, System.Web.SiteMapNode value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> вставляется."
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> Для вставки."
  overload: System.Web.SiteMapNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля.       - или - <code>index</code> больше, чем <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения.       - или - <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> имеет фиксированный размер."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает логическое значение, указывающее, может ли добавляемое или вычитается из коллекции узлов."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если существует возможность добавления <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов или удалите <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов из <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает логическое значение, указывающее, является ли коллекция только для чтения."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вы можете изменить <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает логическое значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным)."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ является синхронизированным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объект по указанному индексу в коллекции."
  remarks: "Можно использовать индексатор элементов для итерации по содержимое <xref:System.Web.SiteMapNodeCollection>коллекции или заменить <xref:System.Web.SiteMapNode>объект по указанному индексу.</xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>"
  example:
  - "The following code example demonstrates how to use the Item indexer to retrieve a <xref:System.Web.SiteMapNode> object from the <xref:System.Web.SiteMapNodeCollection> collection. In this example, a <xref:System.Web.SiteMapNode> object is removed from its position at the second element of the internal array using the <xref:System.Web.SiteMapNodeCollection.Remove%2A> method and is appended to the array with the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. To insert a <xref:System.Web.SiteMapNode> object at a specific index, instead of appending it to the end of the array, use the <xref:System.Web.SiteMapNodeCollection.Insert%2A> method.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/p-system.web.sitemapnode_0_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/p-system.web.sitemapnode_0_1.aspx)]"
  syntax:
    content: public virtual System.Web.SiteMapNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> для поиска."
    return:
      type: System.Web.SiteMapNode
      description: "Объект <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> , представляющий элемент в <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is great than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение, указанное для задания <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет дополнительные пользовательские действия при проверке значения."
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> Для проверки."
  overload: System.Web.SiteMapNodeCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is not a <xref href=&quot;System.Web.SiteMapNode&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  id: ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает коллекцию только для чтения, содержащая узлы в заданном <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> коллекции."
  remarks: "Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>Коллекция доступна только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection> <xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A>Свойство также возвращает `true` при <xref:System.Web.SiteMapNodeCollection>доступно только для чтения.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> property to test whether a <xref:System.Web.SiteMapNodeCollection> collection is read-only or modifiable. If `siteNodes` is modifiable, `MoveNode` is called on it; otherwise, a clone <xref:System.Web.SiteMapNodeCollection> is created, using `siteNodes` as a base.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_11_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#1](~/add/codesnippet/csharp/m-system.web.sitemapnode_11_1.aspx)]"
  syntax:
    content: public static System.Web.SiteMapNodeCollection ReadOnly (System.Web.SiteMapNodeCollection collection);
    parameters:
    - id: collection
      type: System.Web.SiteMapNodeCollection
      description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> , Содержащий <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объекты для добавления в доступной только для чтения <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
    return:
      type: System.Web.SiteMapNodeCollection
      description: "Только для чтения <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> с тем же <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> элементов и структуры, что и исходный <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.ReadOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  id: Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет указанный <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> из коллекции."
  remarks: "Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>Коллекция доступна только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       Метод Remove равенство определяется путем вызова <xref:System.Object.Equals%2A?displayProperty=fullName>метод.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.SiteMapNode> object from a <xref:System.Web.SiteMapNodeCollection> collection, and then append the <xref:System.Web.SiteMapNode> object to the end of the <xref:System.Web.SiteMapNodeCollection> using the <xref:System.Web.SiteMapNodeCollection.Add%2A> method. If the <xref:System.Web.SiteMapNodeCollection> is read-only, a <xref:System.NotSupportedException> exception is caught.  \n  \n [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/visualbasic/m-system.web.sitemapnode_9_1.aspx)]\n [!code-cs[System.Web.SiteMapNodeCollection_1#2](~/add/codesnippet/csharp/m-system.web.sitemapnode_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.SiteMapNode value);
    parameters:
    - id: value
      type: System.Web.SiteMapNode
      description: "<xref href=&quot;System.Web.SiteMapNode&quot;> </xref> Для удаления из <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>не существует в коллекции."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> Доступно только для чтения.       - или - <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> имеет фиксированный размер."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объект по указанному индексу коллекции."
  remarks: "Вы можете протестировать ли <xref:System.Web.SiteMapNodeCollection>Коллекция доступна только для чтения, проверив <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A>свойство.</xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> </xref:System.Web.SiteMapNodeCollection>       Чтобы удалить элемент из <xref:System.Web.SiteMapNodeCollection>, указав <xref:System.Web.SiteMapNode>объект для удаления, используйте <xref:System.Web.SiteMapNodeCollection.Remove%2A>метод.</xref:System.Web.SiteMapNodeCollection.Remove%2A> </xref:System.Web.SiteMapNode> </xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс удаляемого элемента."
  overload: System.Web.SiteMapNodeCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.SiteMapNodeCollection\"></xref> has a fixed sized."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к коллекции."
  remarks: "Перечисление <xref:System.Web.SiteMapNodeCollection>Коллекция само по себе не является потокобезопасной процедурой.</xref:System.Web.SiteMapNodeCollection> Даже если <xref:System.Web.SiteMapNodeCollection>является синхронизированной, другие потоки могут ее изменить <xref:System.Web.SiteMapNodeCollection>, что приводит к созданию исключения перечислителем.</xref:System.Web.SiteMapNodeCollection> </xref:System.Web.SiteMapNodeCollection> Для обеспечения потокобезопасности при перечислении можно либо заблокировать <xref:System.Web.SiteMapNodeCollection>на все время перечисления или перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</xref:System.Web.SiteMapNodeCollection>"
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Копирует элементы <xref:System.Collections.ICollection>интерфейса в массив, начиная с определенного индекса массива.</xref:System.Collections.ICollection> Этот класс не наследуется."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Одномерный массив, который должен начинаться с нуля и местом назначения для элементов, копируемых из <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в `array` с которого начинается копирование."
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>является многомерным.       - или - количество <xref href=&quot;System.Web.SiteMapNode&quot;> </xref> объектов в источнике <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> больше, чем свободное пространство от <code>index</code> в конец <code>array</code>."
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает количество элементов, содержащихся в <xref:System.Collections.ICollection>интерфейса.</xref:System.Collections.ICollection> Этот класс не наследуется."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Число элементов, содержащихся в списке <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значение, указывающее, является ли доступ к <xref:System.Collections.ICollection>интерфейс является синхронизированным (потокобезопасным).</xref:System.Collections.ICollection> Этот класс не наследуется."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к <xref:System.Collections.ICollection>является синхронизированным (потокобезопасным); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к <xref:System.Collections.ICollection>интерфейс.</xref:System.Collections.ICollection> Этот класс не наследуется."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект, который может использоваться для синхронизации доступа к <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает перечислитель, выполняющий итерацию по коллекции. Описание этого члена см. в разделе &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Может использоваться для итерации по <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет элемент в коллекцию в <xref:System.Collections.IList>интерфейса.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект, добавляемый на <xref:System.Collections.IList>.</xref:System.Collections.IList>"
    return:
      type: System.Int32
      description: "Позиция, в которую вставлен новый элемент."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет все элементы из коллекции в <xref:System.Collections.IList>интерфейса.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Определяет, является ли коллекция в <xref:System.Collections.IList>интерфейс содержит заданное логическое значение.</xref:System.Collections.IList>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект для поиска в списке <xref:System.Collections.IList>.</xref:System.Collections.IList>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если объект найден в <xref:System.Collections.IList>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Определяет индекс заданного элемента в коллекции, который возвращается <xref:System.Collections.IList>интерфейса.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект для поиска в списке <xref:System.Collections.IList>.</xref:System.Collections.IList>"
    return:
      type: System.Int32
      description: "Индекс значения в списке, если он найден; в противном случае — значение -1."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Вставляет элемент в коллекцию в <xref:System.Collections.IList>интерфейс с заданным индексом.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля `index` для вставки `value`."
    - id: value
      type: System.Object
      description: "Объект, вставляемый в <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значение, указывающее, имеет ли коллекция фиксированный размер. Описание этого члена см. в разделе &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> только для чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значение, указывающее, является ли коллекция только для чтения. Описание этого члена см. в разделе &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.SiteMapNodeCollection&quot;> </xref> только для чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref:System.Collections.IList>элемент по указанному индексу.</xref:System.Collections.IList>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс получаемого элемента."
    return:
      type: System.Object
      description: "Элемент по указанному индексу."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет первое вхождение указанного объекта из коллекции в <xref:System.Collections.IList>интерфейса.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект, удаляемый из <xref:System.Collections.IList>.</xref:System.Collections.IList>"
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет <xref:System.Collections.IList>элемент по указанному индексу.</xref:System.Collections.IList> Описание этого члена см. в разделе &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс удаляемого элемента."
  overload: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  id: System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  isEii: true
  parent: System.Web.SiteMapNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает элемент иерархических данных для указанного элемента перечисления. Описание этого члена см. в разделе &lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A?displayProperty=fullName&gt;."
  syntax:
    content: System.Web.UI.IHierarchyData IHierarchicalEnumerable.GetHierarchyData (object enumeratedItem);
    parameters:
    - id: enumeratedItem
      type: System.Object
      description: "Объект, для которого требуется вернуть <xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref>."
    return:
      type: System.Web.UI.IHierarchyData
      description: "<xref href=&quot;System.Web.UI.IHierarchyData&quot;> </xref> , Представляющий объект, передаваемый в IHierarchicalEnumerable.GetHierarchyData."
  overload: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SiteMapNodeCollection.#ctor
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection()
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection()
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection()
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(Int32)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(Int32)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode)
- uid: System.Web.SiteMapNode
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNode[])
- uid: System.Web.SiteMapNode[]
  parent: System.Web
  isExternal: false
  name: SiteMapNode
  nameWithType: SiteMapNode
  fullName: System.Web.SiteMapNode[]
  spec.csharp:
  - uid: System.Web.SiteMapNode
    name: SiteMapNode
    nameWithType: SiteMapNode
    fullName: SiteMapNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.SiteMapNodeCollection(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection
  parent: System.Web
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection
  fullName: System.Web.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Add(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Add(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNode[])
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNode[])
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNode[])
- uid: System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.AddRange(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: SiteMapNodeCollection.Clear()
  fullName: System.Web.SiteMapNodeCollection.Clear()
- uid: System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Contains(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Contains(SiteMapNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo(SiteMapNode[],Int32)
  nameWithType: SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
  fullName: System.Web.SiteMapNodeCollection.CopyTo(SiteMapNode[],Int32)
- uid: System.Web.SiteMapNodeCollection.Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
  fullName: System.Web.SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView(SiteMapDataSource,String)
  nameWithType: SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
  fullName: System.Web.SiteMapNodeCollection.GetDataSourceView(SiteMapDataSource,String)
- uid: System.Web.UI.WebControls.SiteMapDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSourceView
  nameWithType: SiteMapDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapDataSourceView
- uid: System.Web.UI.WebControls.SiteMapDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapDataSource
  nameWithType: SiteMapDataSource
  fullName: System.Web.UI.WebControls.SiteMapDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SiteMapNodeCollection.GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: SiteMapNodeCollection.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView()
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView()
  fullName: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView()
- uid: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapHierarchicalDataSourceView
  nameWithType: SiteMapHierarchicalDataSourceView
  fullName: System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.GetHierarchyData(Object)
- uid: System.Web.UI.IHierarchyData
  parent: System.Web.UI
  isExternal: false
  name: IHierarchyData
  nameWithType: IHierarchyData
  fullName: System.Web.UI.IHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf(SiteMapNode)
  nameWithType: SiteMapNodeCollection.IndexOf(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.IndexOf(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert(Int32,SiteMapNode)
  nameWithType: SiteMapNodeCollection.Insert(Int32,SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Insert(Int32,SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: SiteMapNodeCollection.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.OnValidate(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: SiteMapNodeCollection.OnValidate(Object)
  fullName: System.Web.SiteMapNodeCollection.OnValidate(Object)
- uid: System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly(SiteMapNodeCollection)
  nameWithType: SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
  fullName: System.Web.SiteMapNodeCollection.ReadOnly(SiteMapNodeCollection)
- uid: System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove(SiteMapNode)
  nameWithType: SiteMapNodeCollection.Remove(SiteMapNode)
  fullName: System.Web.SiteMapNodeCollection.Remove(SiteMapNode)
- uid: System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear()
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Clear()
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.SiteMapNodeCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
  fullName: System.Web.SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(Object)
- uid: System.Web.SiteMapNodeCollection.#ctor*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SiteMapNodeCollection
  nameWithType: SiteMapNodeCollection.SiteMapNodeCollection
- uid: System.Web.SiteMapNodeCollection.Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Add
  nameWithType: SiteMapNodeCollection.Add
- uid: System.Web.SiteMapNodeCollection.AddRange*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: SiteMapNodeCollection.AddRange
- uid: System.Web.SiteMapNodeCollection.Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Clear
  nameWithType: SiteMapNodeCollection.Clear
- uid: System.Web.SiteMapNodeCollection.Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Contains
  nameWithType: SiteMapNodeCollection.Contains
- uid: System.Web.SiteMapNodeCollection.CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: SiteMapNodeCollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Count
  nameWithType: SiteMapNodeCollection.Count
- uid: System.Web.SiteMapNodeCollection.GetDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetDataSourceView
  nameWithType: SiteMapNodeCollection.GetDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: SiteMapNodeCollection.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchicalDataSourceView
  nameWithType: SiteMapNodeCollection.GetHierarchicalDataSourceView
- uid: System.Web.SiteMapNodeCollection.GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: GetHierarchyData
  nameWithType: SiteMapNodeCollection.GetHierarchyData
- uid: System.Web.SiteMapNodeCollection.IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: SiteMapNodeCollection.IndexOf
- uid: System.Web.SiteMapNodeCollection.Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Insert
  nameWithType: SiteMapNodeCollection.Insert
- uid: System.Web.SiteMapNodeCollection.IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: SiteMapNodeCollection.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: SiteMapNodeCollection.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: SiteMapNodeCollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Item
  nameWithType: SiteMapNodeCollection.Item
- uid: System.Web.SiteMapNodeCollection.OnValidate*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: OnValidate
  nameWithType: SiteMapNodeCollection.OnValidate
- uid: System.Web.SiteMapNodeCollection.ReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: ReadOnly
  nameWithType: SiteMapNodeCollection.ReadOnly
- uid: System.Web.SiteMapNodeCollection.Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: Remove
  nameWithType: SiteMapNodeCollection.Remove
- uid: System.Web.SiteMapNodeCollection.RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SiteMapNodeCollection.RemoveAt
- uid: System.Web.SiteMapNodeCollection.SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: SiteMapNodeCollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.Count
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SiteMapNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SiteMapNodeCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Add*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Add
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Clear*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Clear
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Contains*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Contains
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IndexOf
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Insert*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Insert
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SiteMapNodeCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Item*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Item
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#Remove*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: SiteMapNodeCollection.System.Collections.IList.Remove
- uid: System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: SiteMapNodeCollection.System.Collections.IList.RemoveAt
- uid: System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData*
  parent: System.Web.SiteMapNodeCollection
  isExternal: false
  name: System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
  nameWithType: SiteMapNodeCollection.System.Web.UI.IHierarchicalEnumerable.GetHierarchyData
