### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Services.ITrackingHandler
  id: ITrackingHandler
  children:
  - System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(System.Object)
  - System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  - System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  langs:
  - csharp
  name: ITrackingHandler
  nameWithType: ITrackingHandler
  fullName: System.Runtime.Remoting.Services.ITrackingHandler
  type: Interface
  summary: "Указывает, что реализующий объект должен получить напоминание о маршалинге, распаковка и отключении объектов и прокси инфраструктурой удаленного взаимодействия."
  remarks: "Каждый объект, который регистрируется с помощью <xref:System.Runtime.Remoting.Services.TrackingServices>вызывается удаленного взаимодействия, когда объект или прокси-сервера в текущем <xref:System.AppDomain>при маршалинге, обрабатывает команды или отсоединении.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Services.TrackingServices>       Обратите внимание, что только объекты могут быть отсоединены. Исключение создается, если отключить вызывается на прокси-сервер.      Настроек [!NOTE] настроек этот интерфейс выполняет запрос ссылки. Исключение SecurityException создается, если непосредственный вызывающий код выполняет вызов через ссылку на интерфейс и не имеет разрешения инфраструктуры. В разделе [требования связывания](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации."
  example:
  - "The following code example shows how to implement the methods of the ITrackingHandler interface to receive notifications from the remoting infrastructure.  \n  \n The following code example shows how to implement this interface.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#30](~/add/codesnippet/csharp/t-system.runtime.remotin_53_1.cs)]  \n  \n The following code example shows how to implement this interface on a server.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#20](~/add/codesnippet/csharp/t-system.runtime.remotin_53_2.cs)]  \n  \n The following code example shows how to implement this interface on a client for the server in the preceding code example.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#0](~/add/codesnippet/csharp/t-system.runtime.remotin_53_3.cs)]  \n  \n The following code example shows the remote object that is used by the server and the client.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#10](~/add/codesnippet/csharp/t-system.runtime.remotin_53_4.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITrackingHandler
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(System.Object)
  id: DisconnectedObject(System.Object)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  langs:
  - csharp
  name: DisconnectedObject(Object)
  nameWithType: ITrackingHandler.DisconnectedObject(Object)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Services
  summary: "Уведомляет текущий экземпляр, что объект был отключен от его прокси-сервера."
  remarks: ''
  example:
  - "The following code example shows how to implement this method. This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#33](~/add/codesnippet/csharp/c70937a7-e069-46f5-9d7a-_1.cs)]"
  syntax:
    content: public void DisconnectedObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Отсоединенный объект."
  overload: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  id: MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  langs:
  - csharp
  name: MarshaledObject(Object,ObjRef)
  nameWithType: ITrackingHandler.MarshaledObject(Object,ObjRef)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(Object,ObjRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Services
  summary: "Уведомляет текущий экземпляр упакованный объект."
  remarks: ''
  example:
  - "The following code example shows how to implement this method. This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#31](~/add/codesnippet/csharp/fc48878c-93fe-42e1-b904-_1.cs)]"
  syntax:
    content: public void MarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, который был передан."
    - id: or
      type: System.Runtime.Remoting.ObjRef
      description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> , Полученный в результате маршалинг и представляет указанный объект."
  overload: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  id: UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  langs:
  - csharp
  name: UnmarshaledObject(Object,ObjRef)
  nameWithType: ITrackingHandler.UnmarshaledObject(Object,ObjRef)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(Object,ObjRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Services
  summary: "Уведомляет текущий экземпляр, распаковать объект."
  remarks: ''
  example:
  - "The following code example shows how to implement this method. This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.  \n  \n [!code-cs[System.Runtime.Remoting.Services.TrackingServices#32](~/add/codesnippet/csharp/e9540189-7941-4492-9c75-_1.cs)]"
  syntax:
    content: public void UnmarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);
    parameters:
    - id: obj
      type: System.Object
      description: "Распакованный объект."
    - id: or
      type: System.Runtime.Remoting.ObjRef
      description: "<xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> , Представляющий указанный объект."
  overload: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(System.Object)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: DisconnectedObject(Object)
  nameWithType: ITrackingHandler.DisconnectedObject(Object)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: MarshaledObject(Object,ObjRef)
  nameWithType: ITrackingHandler.MarshaledObject(Object,ObjRef)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(Object,ObjRef)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: UnmarshaledObject(Object,ObjRef)
  nameWithType: ITrackingHandler.UnmarshaledObject(Object,ObjRef)
  fullName: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(Object,ObjRef)
- uid: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject*
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: DisconnectedObject
  nameWithType: ITrackingHandler.DisconnectedObject
- uid: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject*
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: MarshaledObject
  nameWithType: ITrackingHandler.MarshaledObject
- uid: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject*
  parent: System.Runtime.Remoting.Services.ITrackingHandler
  isExternal: false
  name: UnmarshaledObject
  nameWithType: ITrackingHandler.UnmarshaledObject
