### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.WorkflowInstance
  id: WorkflowInstance
  children:
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Id
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  - System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Activities.Hosting.WorkflowInstance
  type: Class
  summary: "Экземпляр WorkflowInstance является упрощенными и средой выполнения для каждого экземпляра для выполнения программы рабочего процесса. Он может быть создан для создания нового экземпляра рабочего процесса или из существующего состояния экземпляра. API-интерфейсы, <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>предоставляет являются минимальным набором элементов управления времени выполнения, из которых можно реализовать операции более высокого уровня.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> Этот набор API предоставляет доступ ко всем функциям среды выполнения. Экземпляр WorkflowInstance является абстрактным классом и зависит от реализации узлом своих абстрактных методов для обеспечения функций узла, таких как синхронизация, сохраняемость, отслеживание и расширения."
  remarks: "Экземпляр WorkflowInstance выполняется в одном потоке и предполагает, что узел выполняет синхронизацию доступа к нему. Приведет к попытке одновременного вызова нескольких API <xref:System.InvalidOperationException>вызываемом.</xref:System.InvalidOperationException>       На внутреннем уровне WorkflowInstance имеет два состояния: выполняется» и «приостановлено. Единственным способом перевода среды выполнения для перехода от приостановки для выполнения заключается в вызове <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> Все действия (за исключением приостановки) могут выполняться только во время приостановки выполнения. Среда выполнения будет автоматически приостановлена в следующих случаях:-Неустранимая ошибка для среды выполнения ошибка. Узлу будет отправлено через <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>(что не означает переход к приостановлено), а затем уведомления через <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> </xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>      -Исключения в рабочем процессе не было обработано и покинуло корневой элемент. Узел будет уведомлен через <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>метод.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>      -Планировщик исчерпал рабочие элементы и теперь <xref:System.Activities.Hosting.WorkflowInstanceState>.</xref:System.Activities.Hosting.WorkflowInstanceState> Узел будет уведомлен через <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>метод.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> Обратите внимание, что планировщик мог исчерпать рабочие элементы за состояния бездействия экземпляра или по причине завершения экземпляра. <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>Значение <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>свойство можно использовать для различения двух.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       Узел может запросить изменения из выполнение приостановлено, вызвав <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>или <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A>методы <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>экземпляр, возвращаемый <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>свойство.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Этот запрос не следует считать их на наличие определенного ответа, это означает, что узел не следует пытаться сопоставлять OnNotify* или <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>с конкретным вызовом, чтобы приостановить.</xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> В ответ на запрос на приостановку среда выполнения может изменить состояния на приостановлено и вызовите <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>при наличии у планировщика отложенных рабочих элементов.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>Значение <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>свойство можно использовать для определения объема работы, имеет ли была прервана в результате запрос на приостановку планировщик.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>Метод <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>экземпляр, возвращаемый <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>свойство — это единственный метод, который может быть вызван, когда WorkflowInstance находится в состоянии выполнения.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Все другие методы вызовет <xref:System.InvalidOperationException>при вызове. Изучение правил для как WorkflowInstance переходит из одного состояния в другое, общее определение выполняется» и «приостановлено можно определить следующим образом: - запуск — состояние между вызовом <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>и далее WorkflowInstance.OnNotify*.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> </xref:System.InvalidOperationException>      -Приостановлено — состояние между последним вызовом WorkflowInstance.OnNotify* и при следующем вызове <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>"
  syntax:
    content: public abstract class WorkflowInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> класса с помощью указанного определения рабочего процесса."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "Действие, которое определяет рабочий процесс."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> указанного определения рабочего процесса и идентификатор определения класса."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "Действие, которое определяет рабочий процесс."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "Идентификатор определения."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для начала отправки отложенных записей отслеживания участникам отслеживания асинхронно."
  syntax:
    content: protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого нужно прекратить попытку."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении операции отслеживания."
    - id: state
      type: System.Object
      description: "Сведения об асинхронной операции."
    return:
      type: System.IAsyncResult
      description: "Состояние текущей операции отслеживания."
  overload: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  id: Controller
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>экземпляра для данного <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>"
  syntax:
    content: protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "Экземпляр контроллера для данного экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  id: DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает или задает идентификатор определения <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  syntax:
    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }
    return:
      type: System.Activities.WorkflowIdentity
      description: "Идентификатор определения <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  id: DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается <xref:System.Disposable.Dispose*>для всех расширений, которые реализуют <xref:System.IDisposable>.</xref:System.IDisposable> </xref:System.Disposable.Dispose*>"
  syntax:
    content: protected void DisposeExtensions ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  id: EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для завершения операции отслеживания."
  syntax:
    content: protected void EndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Состояние асинхронной операции отслеживания."
  overload: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  id: FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для отправки отложенных записей отслеживания участникам отслеживания."
  syntax:
    content: protected void FlushTrackingRecords (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого нужно прекратить попытку."
  overload: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Получает список действий, которые блокируют обновление рабочего процесса."
  syntax:
    content: protected static System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Состояние десериализованного среды выполнения."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "Схемы обновления."
    return:
      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
      description: "Список действий, которые блокируют обновление."
  overload: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  id: GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected T GetExtension<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "Для добавления."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  id: GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected System.Collections.Generic.IEnumerable<T> GetExtensions<T> () where T : class;'
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "Для добавления."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  id: HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает или задает корневую среду для аргументов и переменных экземпляра рабочего процесса."
  remarks: "Если это свойство задано после инициализации экземпляра рабочего процесса и <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>возвращает `true`, <xref:System.InvalidOperationException>возникает исключение.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "Корневая среда для аргументов и переменных экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Id
  id: Id
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает уникальный идентификатор для экземпляра рабочего процесса."
  syntax:
    content: public abstract Guid Id { get; }
    return:
      type: System.Guid
      description: "Уникальный идентификатор экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается узлом для инициализации экземпляра рабочего процесса с состоянием во время выполнения рабочего процесса."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Состояние выполнения, используемой для выполнения рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается узлом для инициализации экземпляра рабочего процесса со значениями аргументов и свойствами выполнения."
  syntax:
    content: protected void Initialize (System.Collections.Generic.IDictionary<string,object> workflowArgumentValues, System.Collections.Generic.IList<System.Activities.Handle> workflowExecutionProperties);
    parameters:
    - id: workflowArgumentValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Входные параметры рабочего процесса, различаемых по имени аргумента."
    - id: workflowExecutionProperties
      type: System.Collections.Generic.IList{System.Activities.Handle}
      description: "Список свойств выполнения рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается узлом для инициализации экземпляра рабочего процесса с состоянием во время выполнения рабочего процесса и обновление карты."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "Состояние выполнения, используемой для выполнения рабочего процесса."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "Схемы обновления."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает значение, указывающее, был ли инициализирован экземпляр рабочего процесса."
  syntax:
    content: protected bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если экземпляр рабочего процесса был инициализирован; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о том, что новые ключи экземпляра должны быть связаны с этим экземпляром."
  syntax:
    content: protected abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "Ключи экземпляра, связываемый с данным экземпляром рабочего процесса."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый после завершения операции."
    - id: state
      type: System.Object
      description: "Необязательный относящихся к приложению объект, содержащий сведения об асинхронной операции."
    return:
      type: System.IAsyncResult
      description: "Ссылка на асинхронную операцию связанных ключей."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  id: OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Асинхронный вызов, запрашивающий сохранение узлом отложенных записей отслеживания участникам отслеживания на диск."
  syntax:
    content: protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении операции отслеживания."
    - id: state
      type: System.Object
      description: "Сведения об асинхронной операции."
    return:
      type: System.IAsyncResult
      description: "Состояние текущей операции отслеживания."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Асинхронный вызов узла для сохранения рабочего процесса."
  syntax:
    content: protected abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении операции сохранения."
    - id: state
      type: System.Object
      description: "Необязательный относящихся к приложению объект, содержащий сведения об асинхронной операции."
    return:
      type: System.IAsyncResult
      description: "Ссылка на текущую операцию сохранения."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о начале операции возобновления закладки."
  syntax:
    content: protected abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "Возобновляемая закладка."
    - id: value
      type: System.Object
      description: "Данные, передаваемые действию, создавшему <xref href=&quot;System.Activities.Bookmark&quot;> </xref>."
    - id: timeout
      type: System.TimeSpan
      description: "Интервал, в котором необходимо выполнить операции возобновления, прежде чем операция отменяется и <xref:System.TimeoutException>возникает исключение.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении операции возобновления."
    - id: state
      type: System.Object
      description: "Необязательный относящихся к приложению объект, содержащий сведения об асинхронной операции."
    return:
      type: System.IAsyncResult
      description: "Ссылка на асинхронную операцию возобновления."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о том, что набор ключей экземпляра больше не быть связанный с данным экземпляром."
  syntax:
    content: protected abstract void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "Список ключей необходимо разорвать."
  overload: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции связанных ключей."
  syntax:
    content: protected abstract void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ссылка на асинхронную операцию связанных ключей."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  id: OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о завершении сохранения отслеживания операции записи на диск."
  syntax:
    content: protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Состояние асинхронной очистки, операция записи отслеживания."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции сохранения."
  syntax:
    content: protected abstract void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ссылка на асинхронную операцию сохранения."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о завершении операции возобновления закладки."
  syntax:
    content: protected abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ссылка на асинхронную операцию возобновления закладки."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Одно из значений перечисления, указывающее результат <xref href=&quot;System.Activities.Bookmark&quot;> </xref> возобновления работы."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла об экземпляре рабочего процесса из активного состояния в приостановленном состоянии."
  syntax:
    content: protected abstract void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о необработанное исключение в экземпляре рабочего процесса."
  syntax:
    content: protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "Необработанное исключение."
    - id: source
      type: System.Activities.Activity
      description: "Действие, вызвавшее исключение."
    - id: sourceInstanceId
      type: System.String
      description: "Уникальный идентификатор <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> представляет действие, вызвавшее исключение."
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается средой выполнения рабочего процесса для уведомления узла о запросе операции прерывания для экземпляра рабочего процесса."
  remarks: "Один раз вызывается OnRequestAbort большинство <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>интерфейсов API, за исключением <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>вызовет <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> Ожидается, что после вызова OnRequestAbort изменение узла будет состояние, в котором возможно прерывание."
  syntax:
    content: protected abstract void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "Причина прерывания экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  id: RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Вызывается узлом для регистрации указанного диспетчера расширений, проверки, что все необходимые расширения присутствуют и инициализации коллекции используемых расширений для использования."
  remarks: "Расширения отличаются типом и узлом при условии, что расширение всегда будет использоваться, если указано. Расширения, добавленные с помощью <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>использовать в качестве параметра типа тип среды выполнения объекта.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Поставщики расширений, добавляемые через <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>Используйте типа объявленный тип т Func\\<T настроек в качестве типа ключа.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Поставщики расширений, добавленные действиями с помощью различных методов * activitymetadata.adddefaultextensionprovider, удаляются, если для объявленного типа существует расширение узла, или если существует более широкий тип, предоставленный через объект AddDefaultExtensionProvider (например,). Если Func\\<StreamWriter настроек предоставляются и Func\\<TextWriter настроек предоставляется только Func\\<StreamWriter настроек будут храниться). Если расширение не существует в коллекции, которые требуются для действия (выраженное вызовом \\*ActivityMetadata.RequireExtension) <xref:System.Activities.ValidationException>возникает исключение.</xref:System.Activities.ValidationException>"
  syntax:
    content: protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);
    parameters:
    - id: extensionManager
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "Регистрируемый Диспетчер расширений."
  overload: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает значение, указывающее, поддерживает ли узел сопоставление <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>с исполняемым экземпляром.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  syntax:
    content: protected abstract bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если узел поддерживает связь <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>с экземпляром рабочего процесса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  overload: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  id: SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает или задает <xref:System.Threading.SynchronizationContext>используется для планирования экземпляра рабочего процесса.</xref:System.Threading.SynchronizationContext>"
  remarks: "Если это свойство задано после инициализации экземпляра рабочего процесса и <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>возвращает `true`, <xref:System.InvalidOperationException>возникает исключение.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }
    return:
      type: System.Threading.SynchronizationContext
      description: "Контекст синхронизации, используемый для планирования экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  id: ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Создает исключение, <xref:System.InvalidOperationException>Если для экземпляра рабочего процесса был инициализирован, определяется <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*>.</xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*> </xref:System.InvalidOperationException>"
  remarks: "Если <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>возвращает `true`, то <xref:System.InvalidOperationException>возникает исключение.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: protected void ThrowIfReadOnly ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  id: WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Возвращает определение рабочего процесса для экземпляра рабочего процесса."
  syntax:
    content: public System.Activities.Activity WorkflowDefinition { get; }
    return:
      type: System.Activities.Activity
      description: "Определение рабочего процесса экземпляра рабочего процесса."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ActivityBlockingUpdate>
  nameWithType: IList<ActivityBlockingUpdate>
  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate
    name: ActivityBlockingUpdate
    nameWithType: ActivityBlockingUpdate
    fullName: ActivityBlockingUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IList{System.Activities.Handle}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Handle>
  nameWithType: IList<Handle>
  fullName: System.Collections.Generic.IList<System.Activities.Handle>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.Handle>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Handle
    name: Handle
    nameWithType: Handle
    fullName: Handle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
- uid: System.Activities.Hosting.WorkflowInstance.#ctor*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance.WorkflowInstance
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.Controller*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions
  nameWithType: WorkflowInstance.DisposeExtensions
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords
  nameWithType: WorkflowInstance.EndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords
  nameWithType: WorkflowInstance.FlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension<T>
  nameWithType: WorkflowInstance.GetExtension<T>
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions<T>
  nameWithType: WorkflowInstance.GetExtensions<T>
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
- uid: System.Activities.Hosting.WorkflowInstance.Initialize*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize
  nameWithType: WorkflowInstance.Initialize
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowInstance.OnBeginAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowInstance.OnBeginPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowInstance.OnBeginResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowInstance.OnDisassociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowInstance.OnEndAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowInstance.OnEndPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowInstance.OnEndResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowInstance.OnNotifyPaused
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowInstance.OnNotifyUnhandledException
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowInstance.OnRequestAbort
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager
  nameWithType: WorkflowInstance.RegisterExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly
  nameWithType: WorkflowInstance.ThrowIfReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
