### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Проверяет учетные данные пользователя и управляет настройками пользователя. Этот класс не наследуется."
  remarks: "Класс членства используется в приложениях ASP.NET для проверки учетных данных пользователя и управления параметрами пользователя, такие как пароли и адреса электронной почты. Класс членства можно использовать сам по себе или в сочетании с <xref:System.Web.Security.FormsAuthentication>для создания всей системы для проверки подлинности пользователей веб-приложения или сайта.</xref:System.Web.Security.FormsAuthentication> <xref:System.Web.UI.WebControls.Login>Управления инкапсулирует класс членства, представляют собой удобный механизм для проверки пользователей.</xref:System.Web.UI.WebControls.Login>      Настроек [!NOTE] настроек см. Если вы не знакомы со средствами членства ASP.NET, [Знакомство с членством](~/add/includes/ajax-current-ext-md.md) перед продолжением. Список других разделов, связанных с членством в группах см. в разделе [Управление пользователями с помощью членства](~/add/includes/ajax-current-ext-md.md).       Класс членства предоставляет средства для:-создание новых пользователей.      -Сохранения сведений о членстве (имена пользователей, пароли, адреса электронной почты и данные поддержки), в Microsoft SQL Server или в альтернативном хранилище данных.      -Проверки подлинности пользователей, посетите веб-узла. Вы можете проверять подлинность пользователей программным образом или использовать <xref:System.Web.UI.WebControls.Login>управления, чтобы создать полную систему проверки подлинности требуется почти или совсем не код.</xref:System.Web.UI.WebControls.Login>      -Управления паролями, которые включает в себя создание, изменение, извлечение и сброс паролей и т. д. При необходимости можно настроить членства в ASP.NET требуется контрольный вопрос и ответ на проверку подлинности запросы сброса или извлечения пароля для пользователей, которым забыл свой пароль.       Несмотря на то, что членства в ASP.NET является самостоятельная функция в ASP.NET для проверки подлинности, их можно интегрировать с управлением ролями ASP.NET, чтобы обеспечить службы авторизации для веб-узла. Членство можно интегрировать с пользователем ASP.NET <xref:System.Web.Profile>Чтобы обеспечить настройку конкретного приложения, которую можно адаптировать к отдельным пользователям.</xref:System.Web.Profile> Дополнительные сведения см. в разделе [основные сведения о роли управления](~/add/includes/ajax-current-ext-md.md) и [Общие сведения о свойствах профиля ASP.NET](~/add/includes/ajax-current-ext-md.md).       Класс членства зависит от поставщиков членства для связи с источником данных. Платформа .NET Framework включает <xref:System.Web.Security.SqlMembershipProvider>, который сохраняет сведения о пользователе в базе данных Microsoft SQL Server и <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, позволяет хранить информацию о пользователе на сервере служб Active Directory или Active Directory Application Mode (ADAM).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Также можно реализовать настраиваемый поставщик членства для взаимодействия с источником данных альтернативных, который может использоваться классом членства. Пользовательские поставщики участия наследуют от <xref:System.Web.Security.MembershipProvider>абстрактного класса.</xref:System.Web.Security.MembershipProvider> Дополнительные сведения см. в разделе [реализация поставщика членства](~/add/includes/ajax-current-ext-md.md).       По умолчанию для всех приложений ASP.NET включена членства ASP.NET. Поставщик членства по умолчанию <xref:System.Web.Security.SqlMembershipProvider>и указан в конфигурации компьютера с именем `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> Экземпляр по умолчанию <xref:System.Web.Security.SqlMembershipProvider>настроен на подключение к локальному экземпляру Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Можно изменить параметры по умолчанию, чтобы указать <xref:System.Web.Security.SqlMembershipProvider>отличный от `AspNetSqlProvider` экземпляра поставщика по умолчанию, или указать экземпляр настраиваемого поставщика в качестве поставщика по умолчанию для приложения ASP.NET с помощью файла Web.config.</xref:System.Web.Security.SqlMembershipProvider> Можно указать конфигурацию членства ASP.NET для веб-приложения с помощью раздела конфигурации в файле Web.config. Можно использовать `providers` подразделе раздела, чтобы указать поставщика членства, отличные от одного из поставщиков по умолчанию. Например, в следующем разделе удаляет поставщиков членства по умолчанию из текущей конфигурации приложения и добавляет новый поставщик с именем `SqlProvider` , подключается к экземпляру SQL Server с именем `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает или задает имя приложения."
  remarks: "ApplicationName используется для идентификации пользователей конкретного приложения. То есть то же имя пользователя может существовать в базе данных для нескольких приложений ASP.NET, укажите другой ApplicationName. Это позволяет нескольким приложениям использовать ту же базу данных для хранения сведений о пользователе без конфликтов имя повторяющегося пользователя. Кроме того несколько приложений ASP.NET можно использовать одну и ту же базу данных пользователя, указав одинаковые ApplicationName. ApplicationName можно задать программным образом или декларативно в конфигурации для веб-приложения.      Настроек [!CAUTION] настроек, так как экземпляр по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication>объекта может быть несколько запросов, параллельном выполнении и попытка задать значение свойства ApplicationName.</xref:System.Web.HttpApplication> Свойство ApplicationName не является потокобезопасным для нескольких операций записи и изменение значения свойства ApplicationName может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется, чтобы избежать написания кода, который позволяет пользователям задать свойство ApplicationName без крайней необходимости. Пример приложения, где может потребоваться задать свойство ApplicationName — административные приложения, в котором данные о членстве для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет нового пользователя в хранилище данных."
  remarks: "Добавляет нового пользователя в хранилище данных CreateUser и возвращает <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если не удается создать пользователя, <xref:System.Web.Security.MembershipCreateUserException>возникает исключение.</xref:System.Web.Security.MembershipCreateUserException> Вы можете получить <xref:System.Web.Security.MembershipCreateStatus>значения <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>свойство <xref:System.Web.Security.MembershipCreateUserException>, указывающее, почему не удалось создать пользователя.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       После авторизованного пользователя будет создана и иметь ссылку на <xref:System.Web.Security.MembershipUser>объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser>открытых методов, таких как <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>для приложений где <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>— `true`, или установив значение свойства <xref:System.Web.Security.MembershipUser>объекта и передачи их <xref:System.Web.Security.Membership.UpdateUser%2A>метод.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser>для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A>метод.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       <xref:System.Web.Security.SqlMembershipProvider>Предоставляет возможность требуется уникальный адрес электронной почты для каждого пользователя.</xref:System.Web.Security.SqlMembershipProvider> Если <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>свойство `true`, необходимо использовать одну из перегрузок CreateUser, которые можно указать адрес электронной почты для пользователя, в процессе создания.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> В противном случае <xref:System.Web.Security.MembershipCreateUserException>будет создано.</xref:System.Web.Security.MembershipCreateUserException>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для нового пользователя."
    - id: password
      type: System.String
      description: "Пароль для нового пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Пользователь не был создан. Проверьте <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>свойство <xref:System.Web.Security.MembershipCreateStatus>значение.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет нового пользователя с указанным адресом электронной почты в хранилище данных."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>Добавляет нового пользователя в хранилище данных и возвращает <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Если не удается создать пользователя, <xref:System.Web.Security.MembershipCreateUserException>возникает исключение.</xref:System.Web.Security.MembershipCreateUserException> Вы можете получить <xref:System.Web.Security.MembershipCreateStatus>значения <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>свойство <xref:System.Web.Security.MembershipCreateUserException>, указывающее, почему не удалось создать пользователя.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       После авторизованного пользователя будет создана и иметь ссылку на <xref:System.Web.Security.MembershipUser>объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser>открытых методов, таких как <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>для приложений где <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>— `true`, или установив значение свойства <xref:System.Web.Security.MembershipUser>объекта и передачи их <xref:System.Web.Security.Membership.UpdateUser%2A>метод.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser>для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A>метод.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для нового пользователя."
    - id: password
      type: System.String
      description: "Пароль для нового пользователя."
    - id: email
      type: System.String
      description: "Адрес электронной почты для нового пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Пользователь не был создан. Проверьте <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>свойство <xref:System.Web.Security.MembershipCreateStatus>значение.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет нового пользователя с указанными значениями свойств в хранилище данных и возвращает параметр состояния, указывающее, что пользователь успешно создан, или по причине не удалось создать пользователя."
  remarks: "Добавляет нового пользователя в хранилище данных CreateUser и возвращает <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если не удается создать пользователя, можно получить <xref:System.Web.Security.MembershipCreateStatus>значение из `status` выходной параметр, который указывает, почему не удалось создать пользователя.</xref:System.Web.Security.MembershipCreateStatus>       Метод CreateUser вернет `null` Если `password` является пустой строкой или `null`, `username` является пустой строкой или `null` или содержит запятую (,), `passwordQuestion` не `null` и является пустой строкой, или `passwordAnswer` не `null` и содержит пустую строку.       После создания пользователя членства и иметь ссылку на <xref:System.Web.Security.MembershipUser>объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser>открытых методов и задавая значения свойств из <xref:System.Web.Security.MembershipUser>объекта и затем передачу <xref:System.Web.Security.MembershipUser>объект <xref:System.Web.Security.Membership.UpdateUser%2A>метод.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser>для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A>метод.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Начальные и конечные пробелы удаляются из значений всех строковых параметров."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для нового пользователя."
    - id: password
      type: System.String
      description: "Пароль для нового пользователя."
    - id: email
      type: System.String
      description: "Адрес электронной почты для нового пользователя."
    - id: passwordQuestion
      type: System.String
      description: "Значение проверочный вопрос для авторизованного пользователя."
    - id: passwordAnswer
      type: System.String
      description: "Значение пароля для пользователя членства."
    - id: isApproved
      type: System.Boolean
      description: "Логическое значение, указывающее, разрешен вход нового пользователя."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Объект <xref:System.Web.Security.MembershipCreateStatus>, указывающее, что пользователь успешно создан, или причину, по которой не удалось создать.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если пользователь не был создан, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет нового пользователя с указанными значениями свойств и уникальным идентификатором в хранилище данных и возвращает параметр состояния, указывающее, что пользователь успешно создан, или по причине не удалось создать пользователя."
  remarks: "Добавляет нового пользователя в хранилище данных CreateUser и возвращает <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если не удается создать пользователя, можно получить <xref:System.Web.Security.MembershipCreateStatus>значение из `status` выходной параметр, который указывает, почему не удалось создать пользователя.</xref:System.Web.Security.MembershipCreateStatus> Уникальный идентификатор для пользователя, такие как значение первичного ключа для базы данных, можно указать с помощью `providerUserKey` параметра.       Метод CreateUser вернет `null` Если `password` является пустой строкой или `null`, `username` является пустой строкой или `null` или содержит запятую (,), `passwordQuestion` не `null` и содержит пустую строку, или `passwordAnswer` не `null` и содержит пустую строку.       После создания пользователя членства и иметь ссылку на <xref:System.Web.Security.MembershipUser>объекта для этого пользователя, можно изменить параметры для этого пользователя с <xref:System.Web.Security.MembershipUser>открытых методов и задавая значения свойств из <xref:System.Web.Security.MembershipUser>объекта и затем передачу <xref:System.Web.Security.MembershipUser>объект <xref:System.Web.Security.Membership.UpdateUser%2A>метод.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Если пользователь уже существует в источнике данных для приложения, можно получить <xref:System.Web.Security.MembershipUser>для существующего пользователя с <xref:System.Web.Security.Membership.GetUser%2A>метод.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Начальные и конечные пробелы удаляются из значений всех строковых параметров."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для нового пользователя."
    - id: password
      type: System.String
      description: "Пароль для нового пользователя."
    - id: email
      type: System.String
      description: "Адрес электронной почты для нового пользователя."
    - id: passwordQuestion
      type: System.String
      description: "Значение проверочный вопрос для авторизованного пользователя."
    - id: passwordAnswer
      type: System.String
      description: "Значение пароля для пользователя членства."
    - id: isApproved
      type: System.Boolean
      description: "Логическое значение, указывающее, разрешен вход нового пользователя."
    - id: providerUserKey
      type: System.Object
      description: "Идентификатор пользователя для пользователя, который должен храниться в хранилище данных членства."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Объект <xref:System.Web.Security.MembershipCreateStatus>означает, что пользователь успешно создан, либо не удалось создать причина.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект для только что созданного пользователя.</xref:System.Web.Security.MembershipUser> Если пользователь не был создан, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет пользователя и любые связанные с ним данные из базы данных."
  remarks: "Пользовательские данные, хранящиеся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart>персонализации также удаляется при использовании <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, и <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>объекты для хранения данных.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для удаления."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь был удален; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>является пустой строкой или содержит запятую (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>—<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет пользователя из базы данных."
  remarks: "Пользователи, удаленные из базы данных удаляется только из настроенного `applicationName`.       Если `deleteAllRelatedData` — `true`, пользовательские данные, хранящиеся в базе данных для <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, или <xref:System.Web.UI.WebControls.WebParts.WebPart>персонализации также удаляется при использовании <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, и <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>объекты для хранения данных.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для удаления."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы удалить данные, связанные с пользователем в базе данных; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для сохранения данных, связанные с пользователем в базе данных."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь был удален; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>является пустой строкой или содержит запятую (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, показывающее, настроена ли текущий поставщик членства пользователям сбрасывать свои пароли."
  remarks: "Пароль сброса — это возможность членства ASP.NET заменить текущий пароль для имени пользователя с новым, формируется случайным образом пароль, когда пользователь забыл свой пароль, или текущий пароль недействителен. Это особенно полезно, если используется формат пароля <xref:System.Web.Security.MembershipPasswordFormat>, как пользователи не смогут получить значения хэшированный пароль.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик членства поддерживает сброс пароля; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроен ли в текущем поставщике участия, чтобы разрешить пользователям восстанавливать свои пароли."
  remarks: "Если EnablePasswordRetrieval `false`, базовый поставщик членства могут вызывать <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Поставщики, которые входят в состав .NET Framework поддерживают несколько форматов паролей для повышения безопасности пароля. Если формат пароля задано значение <xref:System.Web.Security.MembershipPasswordFormat>, то пользователи не смогут получить свой текущий пароль из базы данных.</xref:System.Web.Security.MembershipPasswordFormat> <xref:System.Web.Security.MembershipPasswordFormat>Формат пароля обеспечивает одностороннего кодирование значений паролей.</xref:System.Web.Security.MembershipPasswordFormat> Пароли «хэшированы» и сравниваются со значениями, сохраненными в базе данных для проверки подлинности. «Хэшированное» значения не могут быть некодированной для получения исходное значение пароля. Дополнительные сведения см. в разделе <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик членства поддерживает восстановление паролей. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, где адрес электронной почты содержит указанный адрес электронной почты для сопоставления."
  remarks: "FindUsersByEmail возвращает список авторизованных пользователей, где адрес электронной почты соответствует предоставленному `emailToMatch` для настроенного `applicationName`.       <xref:System.Web.Security.SqlMembershipProvider>Выполняет поиск с помощью предложения LIKE к `emailToMatch` параметр.</xref:System.Web.Security.SqlMembershipProvider> Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `emailToMatch` значение параметра."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Адрес электронной почты для поиска."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий все пользователи, которые соответствуют <code> emailToMatch </code> параметр.</xref:System.Web.Security.MembershipUserCollection>       Начальные и конечные пробелы удаляются из <code> emailToMatch </code> значение параметра."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, на странице данных, где адрес электронной почты содержит указанный адрес электронной почты для сопоставления."
  remarks: "FindUsersByEmail возвращает список авторизованных пользователей, где адрес электронной почты соответствует предоставленному `emailToMatch` для настроенного `applicationName`.       <xref:System.Web.Security.SqlMembershipProvider>Выполняет поиск с помощью предложения LIKE к `emailToMatch` параметр.</xref:System.Web.Security.SqlMembershipProvider> Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `emailToMatch` значение параметра.       Ограниченные результаты, возвращенные FindUsersByEmail `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число пользователей, соответствующих `emailToMatch` значение. Например, если найдено where 13 пользователей `emailToMatch` соответствует часть или все адреса и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`будет иметь значение 13.       Начальные и конечные пробелы удаляются из `emailToMatch` значение параметра."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Адрес электронной почты для поиска."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "Общее число соответствующих учетных записей пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий страницу <code> pageSize </code> <xref:System.Web.Security.MembershipUser>начиная страницы, указанной параметром <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>меньше нуля.       - или - <code>pageSize</code> меньше 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, где имя пользователя содержит совпадают с именами указанного пользователя."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Возвращает список авторизованных пользователей, где имя пользователя соответствует предоставленному `usernameToMatch` для настроенного `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Выполняет поиск с помощью предложения LIKE к `usernameToMatch` параметр.</xref:System.Web.Security.SqlMembershipProvider> Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `usernameToMatch` значение параметра.       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя для поиска."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий все пользователи, которые соответствуют <code> usernameToMatch </code> параметр.</xref:System.Web.Security.MembershipUserCollection>       Начальные и конечные пробелы удаляются из <code> usernameToMatch </code> значение параметра."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>является пустой строкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию авторизованных пользователей, на странице данных, где имя пользователя содержит совпадают с именами указанного пользователя."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Возвращает список авторизованных пользователей, где имя пользователя соответствует предоставленному `usernameToMatch` для настроенного `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Выполняет поиск с помощью предложения LIKE к `usernameToMatch` параметр.</xref:System.Web.Security.SqlMembershipProvider> Все шаблоны, которые поддерживаются сервером SQL Server в, как можно использовать в предложениях `usernameToMatch` значение параметра.       Ограниченные результаты, возвращенные FindUsersByName `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число пользователей, соответствующих `usernameToMatch` значение. Например, если найдено where 13 пользователей `usernameToMatch` соответствует часть или имя пользователя полностью и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`будет иметь значение 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя для поиска."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "Общее число соответствующих учетных записей пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>, содержащий страницу <code> pageSize </code> <xref:System.Web.Security.MembershipUser>начиная страницы, указанной параметром <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Начальные и конечные пробелы удаляются из <code> usernameToMatch </code> значение параметра."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>является пустой строкой.       - или - <code>pageIndex</code> меньше нуля.       - или - <code>pageSize</code> меньше 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает случайный пароль заданной длины."
  remarks: "Метод GeneratePassword используется для создания случайного пароля и наиболее часто используемые <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>метод, реализованный поставщик членства для сброса пароля для пользователя на новый временный пароль.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       Созданный пароль должен содержать только буквы, цифры и следующие знаки пунктуации: `!@#$%^&*()_-+=[{]};:<>|./?`. Не управления скрытые или непечатаемые символы, включенные в созданном пароле.      Настроек [!NOTE] настроек случайный пароль, созданным с помощью метода GeneratePassword не обязательно передать регулярное выражение в <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>свойство.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Однако случайный пароль будет соответствовать условиям, заданным <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>свойство и `numberOfNonAlphanumericCharacters` параметр.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "Число символов в созданном пароле. Длина должна быть от 1 до 128 символов."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'Минимальное число не буквенно-цифровых символов (например, @, #,!, %, &amp;и так далее) в созданном пароле.'
    return:
      type: System.String
      description: "Случайный пароль заданной длины."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>имеет значение меньше 1 или больше 128 - или - <code>numberOfNonAlphanumericCharacters</code> меньше 0 или больше, чем <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию всех пользователей в базе данных."
  remarks: "GetAllUsers возвращает информацию для всех пользователей членства для приложения как коллекция <xref:System.Web.Security.MembershipUser>объектов.</xref:System.Web.Security.MembershipUser> Будьте внимательны при использовании метода GetAllUsers с очень больших пользовательских баз данных, как полученный <xref:System.Web.Security.MembershipUserCollection>в ASP.NET страницы может привести к снижению производительности приложения.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>из <xref:System.Web.Security.MembershipUser>объектов, представляющих всех пользователей в базе данных.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию всех пользователей в базе данных на страницах данных."
  remarks: "Ограниченные результаты, возвращенные GetAllUsers `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Security.MembershipUser>объектов, включаемых в <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Определяет страницу результатов, где 0 означает первую страницу. `totalRecords` Параметр `out` задается общее число авторизованных пользователей для настроенного `applicationName`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` присвоено значение 1 `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>возвращается будет содержать с шестого до десятого пользователей.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`будет иметь значение 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. Укажите 0 для указания первой страницы."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: totalRecords
      type: System.Int32
      description: "Общее число пользователей."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Объект <xref:System.Web.Security.MembershipUserCollection>из <xref:System.Web.Security.MembershipUser>объектов, представляющих всех пользователей в базе данных для настроенного <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>меньше нуля.       - или - <code>pageSize</code> меньше 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает число пользователей, которые в настоящее время доступа к приложению."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Возвращает количество пользователей, для <xref:System.Web.Security.Membership.ApplicationName%2A>которых дата последней операции больше текущего времени меньше <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A> текущего</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Последней операции метки даты и времени обновляется до текущей датой и временем, когда учетные данные пользователя проверяются посредством <xref:System.Web.Security.Membership.ValidateUser%2A>или <xref:System.Web.Security.Membership.UpdateUser%2A>метода или при вызове <xref:System.Web.Security.Membership.GetUser%2A>перегрузку, принимающую без параметров или использование `userIsOnline` для указания, что метки даты и времени должны быть обновлены.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Число пользователей, которые в настоящее время доступа к приложению."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных и последней операции обновления метки даты и времени для текущего вошедшего пользователя."
  remarks: "GetUser извлекает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser> При использовании одного из GetUser перегрузки, которые не принимают `username` , GetUser возвращает сведения для текущего вошедшего пользователя. Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A>пользователя в текущем <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Можно также указать, следует ли GetUser для последней операции обновления метки даты и времени для пользователя полученные при помощи `userIsOnline` параметра. Из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`и `GetUser(System.Object)` — нет."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий текущего вошедшего пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Настоящее время системе нет пользователей членства."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает сведения из источника данных для текущего вошедшего пользователя. Отметка даты и времени последней операции обновления для текущего вошедшего пользователя, если указано."
  remarks: "Метод GetUser возвращает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser> Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A>возвращает сведения для текущего вошедшего пользователя.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A>пользователя в текущем <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A>для последней операции обновления метки даты и времени для пользователя полученные при помощи `userIsOnline` параметр.</xref:System.Web.Security.Membership.GetUser%2A> Из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`и `GetUser(System.Object)` — нет."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, отметки даты и времени последней операции обновления для указанного пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий текущего вошедшего пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Настоящее время системе нет пользователей членства."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных для пользователя членства, связанного с указанным уникальным идентификатором."
  remarks: "Метод GetUser возвращает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser> Пользователь идентифицируется с помощью уникального идентификатора из источника данных, указанного с помощью `providerUserKey` параметра.       Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A>для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметр.</xref:System.Web.Security.Membership.GetUser%2A> Из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `userIsOnline` параметр `GetUser()` последней операции обновления метки даты и времени в пользователя неявно.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`и `GetUser(System.Object)` — нет"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Уникальный идентификатор из источника данных членства для пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий пользователя, связанного с указанным уникальным идентификатором.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных для указанного пользователя членства."
  remarks: "Метод GetUser возвращает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser> Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A>возвращает сведения для текущего вошедшего пользователя.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A>пользователя в текущем <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A>для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметр.</xref:System.Web.Security.Membership.GetUser%2A> Из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `userIsOnline` параметр <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>последней операции обновления метки даты и времени в пользователя неявно.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser и <xref:System.Web.Security.Membership.GetUser%2A>— нет.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Имя извлекаемого пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий указанного пользователя.</xref:System.Web.Security.MembershipUser> Если <code> username </code> параметра не соответствует существующему пользователю, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>содержит запятую (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных для пользователя членства, связанного с указанным уникальным идентификатором. Отметка даты и времени последней операции обновления для пользователя, если указано."
  remarks: "Метод GetUser возвращает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser> Пользователь обозначена уникальный идентификатор из источника данных, указанного в `providerUserKey` параметра."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Уникальный идентификатор из источника данных членства для пользователя."
    - id: userIsOnline
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, отметки даты и времени последней операции обновления для указанного пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий пользователя, связанного с указанным уникальным идентификатором.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает информацию из источника данных для указанного пользователя членства. Отметка даты и времени последней операции обновления для пользователя, если указано."
  remarks: "Метод GetUser возвращает сведения о пользователе из источника данных и создает <xref:System.Web.Security.MembershipUser>объект заполняется возвращенными данными.</xref:System.Web.Security.MembershipUser>       Если вы используете одну из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `username` параметр <xref:System.Web.Security.Membership.GetUser%2A>возвращает сведения для текущего вошедшего пользователя.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Текущего вошедшего пользователя определяется <xref:System.Security.Principal.IIdentity.Name%2A>пользователя в текущем <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Можно также указать, следует ли <xref:System.Web.Security.Membership.GetUser%2A>для последней операции обновления метки даты и времени для пользователя, извлекаемых с `userIsOnline` параметр.</xref:System.Web.Security.Membership.GetUser%2A> Из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок, которые не принимают `userIsOnline` параметр <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>последней операции обновления метки даты и времени в пользователя неявно.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>и <xref:System.Web.Security.Membership.GetUser%2A>— нет.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Имя извлекаемого пользователя."
    - id: userIsOnline
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, отметки даты и времени последней операции обновления для указанного пользователя."
    return:
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>объект, представляющий указанного пользователя.</xref:System.Web.Security.MembershipUser> Если <code> username </code> параметра не соответствует существующему пользователю, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>содержит запятую (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает имя пользователя, где адрес электронной почты для пользователя совпадает с указанным адресом электронной почты."
  remarks: "GetUserNameByEmail можно использовать для получения имени пользователя для авторизованного пользователя в случае, где пользователь не имеет имени пользователя, но знаете его адрес электронной почты. Если более одного пользователя в хранилище данных имеют один и тот же адрес электронной почты, возвращается первое обнаруженное имя пользователя.       Начальные и конечные пробелы удаляются из значений всех параметров."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Адрес электронной почты для поиска."
    return:
      type: System.String
      description: "Имя пользователя, где адрес электронной почты для пользователя совпадает с указанным адресом электронной почты. Если совпадение не найдено, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> возвращается."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Идентификатор алгоритма, используемого для хэширования паролей."
  remarks: "Свойство HashAlgorithmType определяет пользовательские хэш-алгоритм, используемый <xref:System.Web.Security.Membership>классом.</xref:System.Web.Security.Membership> Задайте свойство HashAlgorithmType с помощью `hashAlgorithmType` атрибута элемента.       Платформа .NET Framework позволяет настроить пользовательские криптографических классов, используя раздел элемента конфигурации. Свойство HashAlgorithmType должно соответствовать `name` атрибута элемента в элементе. Дополнительные сведения см. в разделе [сопоставление имен алгоритмов на криптографические классы](~/add/includes/ajax-current-ext-md.md).       Если не указано свойство HashAlgorithmType, <xref:System.Web.Security.Membership>класс использует алгоритм хэширования в `validation` атрибута элемента.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "Идентификатор алгоритма, используемого для хэширования паролей или пустым для использования хэш-алгоритм по умолчанию."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает число недействительного пароля или контрольного ответа попыток авторизованный пользователь блокируется."
  remarks: "Свойство MaxInvalidPasswordAttempts работает в сочетании с <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>свойство для защиты от нежелательных источника с помощью многократных попыток его угадывание пароля или контрольного ответа для авторизованного пользователя.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Если введенное число ввода недействительных пароля или контрольного ответа для авторизованного пользователя в указанное число минут больше или равно значению свойства MaxInvalidPasswordAttempts <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>свойство, то пользователь заблокирован из веб-сайта, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>Свойства `true` пока пользователь разблокируется с помощью вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A>метод.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Если действительный пароль или контрольный ответ предоставляется до достижения значения свойства MaxInvalidPasswordAttempts, счетчик, который отслеживает число попыток ввода неправильного присваивается нулевое значение.       Недопустимый пароль и попытки ввода пароля, отслеживаются отдельно. Например если свойство MaxInvalidPasswordAttempts равно 5, пользователь имеет для пяти попыток ввести правильный пароль и до пяти попыток ввести правильный ответ без блокировки.       Значение свойства MaxInvalidPasswordAttempts задается в конфигурации приложения с помощью `maxInvalidPasswordAttempts` атрибута элемента конфигурации.       Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>свойство `false`, попыток ввода пароля не отслеживаются.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Число недействительного пароля или контрольного ответа попыток авторизованный пользователь блокируется."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает минимальное количество специальных символов, которые должны присутствовать в допустимом пароле."
  remarks: "Свойство MinRequiredNonAlphanumericCharacters возвращает минимальное количество специальных, отличные от буквенно-цифровых символов, которые должны вводиться Создание пароля для поставщика членства, указанного в <xref:System.Web.Security.Membership.Provider%2A>свойство.</xref:System.Web.Security.Membership.Provider%2A>       Значение свойства MinRequiredNonAlphanumericCharacters задается в конфигурации приложения с помощью `minRequiredNonAlphanumericCharacters` атрибута элемента конфигурации.       Не алфавитно-цифровой символ является символ, для которого <xref:System.Char.IsLetterOrDigit%2A>возвращает `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Минимальное количество специальных символов, которые должны присутствовать в допустимом пароле."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает минимальную длину пароля."
  remarks: "Свойство значения MinRequiredPasswordLength возвращает минимальное число символов, которые должны вводиться Создание пароля для поставщика членства, указанного в <xref:System.Web.Security.Membership.Provider%2A>свойство.</xref:System.Web.Security.Membership.Provider%2A>       Значение свойства значения MinRequiredPasswordLength задается в конфигурации приложения с помощью `minRequiredPasswordLength` атрибута элемента конфигурации."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "Минимальная длина пароля."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает интервал времени между которыми последовательные попытки ввода пароля или контрольного ответа отслеживаются."
  remarks: "Свойство PasswordAttemptWindow работает в сочетании с <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>защиту от нежелательного источника подбора пароля или контрольного ответа для авторизованного пользователя посредством свойства повторных попыток.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Если пользователь пытается войти в систему, изменить или сбросить свой пароль, только определенные число последовательных попыток допустимы в течение указанного интервала времени. Длина этого временного окна указывается в свойстве PasswordAttemptWindow определяет количество минут между попытками недопустимый.       Если количество последовательных неудачных попыток, которые пользователь вносит в сбросить его или ее пароль имеет значение, хранящееся в <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>свойство и время, истекшее с момента последней попытки недопустимый меньше, чем время в минутах, указанный в свойстве PasswordAttemptWindow затем авторизованный пользователь блокируется.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Пользователь заблокирован, задав <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>Свойства `true` пока пользователь разблокируется с помощью вызова <xref:System.Web.Security.MembershipUser.UnlockUser%2A>метод.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Если интервал между текущей неудачной попытки и последней неудачной попытки больше, чем значение свойства PasswordAttemptWindow, текущий Недопустимая попытка считается первый. Если ответ правильный пароль предоставляется достигнуто максимальное количество разрешенных попыток, количество попыток ввода пароля имеет значение 0 (ноль). Если указан неверный пароль до максимальное количество разрешенных попыток достигается, количество попыток ввода неверного пароля и контрольного ответа, присваивается значение 0 (ноль).       Неправильные попытки ввода пароля и контрольного ответа накапливаются независимо друг от друга. Например если <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>равен 5 и три недопустимый пароль попыток следовали две, могут быть сделаны две попытки ввода неверного пароля (или еще три попытки ввода пароля) в пределах PasswordAttemptWindow для авторизованного пользователя будет заблокирован.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Значение свойства PasswordAttemptWindow задается в конфигурации приложения с помощью `passwordAttemptWindow` атрибута раздела элемента конфигурации.       Если <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>свойству `false`, попыток ввода пароля не отслеживаются.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "Интервал времени в минутах, в течение которых подряд не удалось пытается ввести правильный пароль или контрольный ответ, отслеживаются. Значение по умолчанию составляет 10 минут. Если интервал между текущей неудавшихся попыток и последней неудачной попытки больше, чем значение свойства PasswordAttemptWindow, как если бы это был первый неудавшихся попыток обработки каждой неудачной попытки."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает регулярное выражение, используемое для оценки пароля."
  remarks: "Свойство PasswordStrengthRegularExpression возвращает регулярное выражение, используемое для оценки сложности пароля из поставщика, указанного в <xref:System.Web.Security.Membership.Provider%2A>свойство.</xref:System.Web.Security.Membership.Provider%2A>       Свойство PasswordStrengthRegularExpression задается в конфигурации приложения с помощью `passwordStrengthRegularExpression` атрибута элемента конфигурации.       Дополнительные сведения о регулярных выражениях см. в разделе [регулярные выражения .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Регулярное выражение, используемое для оценки пароля."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает ссылку на поставщика членства по умолчанию для приложения."
  remarks: "Свойства поставщика позволяет напрямую ссылаться поставщика членства по умолчанию для приложения. Обычно это используется для доступа к пользовательским элементам поставщика членства, которые не являются частью <xref:System.Web.Security.MembershipProvider>абстрактного базового класса.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Поставщик членства по умолчанию для приложений, доступных с использованием <xref:System.Web.Security.MembershipProvider>абстрактного базового класса.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает коллекцию поставщиков членства для приложения ASP.NET."
  remarks: "Поставщики свойство ссылается на все поставщики членства, доступные для приложения, включая поставщиков, добавленные в файл Web.config для приложения и файла Machine.config для всех приложений. Можно управлять поставщиками участия, доступных для приложения с помощью `providers` элемент для раздела конфигурации для приложения. Например, ниже приведен пример раздела в файле Web.config для приложения, которое удаляет <xref:System.Web.Security.SqlMembershipProvider>экземпляра (`AspNetSqlProvider`), указанных в файле конфигурации компьютера и добавляет <xref:System.Web.Security.SqlMembershipProvider>экземпляр с именем `SqlProvider` как поставщик членства по умолчанию для приложения.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```При указании [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) раздела, необходимо указать `defaultProvider` атрибута. Если вы не укажете [членства элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) раздел в файл Web.config значения из конфигурации машины используются и <xref:System.Web.Security.SqlMembershipProvider>экземпляр с именем `AspNetSqlProvider` устанавливается как `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Можно получить строго типизированную ссылку на поставщик из коллекции поставщиков индексирования поставщика членства по имени и его привязки в качестве требуемого типа."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "Объект <xref:System.Web.Security.MembershipProviderCollection>поставщиков членства, настроенного для приложения ASP.NET.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, требует ли поставщик членства по умолчанию пользователя ответ на контрольный вопрос для изменения или извлечения пароля."
  remarks: "Требование контрольного вопроса и ответа обеспечивает дополнительный уровень безопасности при извлечении или сбросе пароля пользователя. Пользователи могут вводить вопрос и ответ при создании имени пользователя, что впоследствии можно использовать для извлечения или сброса забытого пароля.       RequiresQuestionAndAnswer проверяется при <xref:System.Web.Security.MembershipUser.ResetPassword%2A>или <xref:System.Web.Security.MembershipUser.GetPassword%2A>называется.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> Поставщик, доступных в .NET Framework создает <xref:System.NotSupportedException>при RequiresQuestionAndAnswer `true` и ответ предоставленный пароль является `null`.</xref:System.NotSupportedException>       Если <xref:System.Web.Security.Membership.EnablePasswordReset%2A>и <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>оба `false`, RequiresQuestionAndAnswer по-прежнему может использоваться для принудительного создания вопросов и ответов, при создании новых пользователей; Однако вопрос и ответ использоваться не будет.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Можно получить на вопрос с помощью <xref:System.Web.Security.MembershipUser>класса.</xref:System.Web.Security.MembershipUser>       Дополнительные сведения см. в разделе <xref:System.Web.Security.MembershipUser.ResetPassword%2A>и <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ответ-пароль необходим для сброса и извлечения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Обновляет базу данных данными для указанного пользователя."
  remarks: "UpdateUser принимает в качестве входных данных, <xref:System.Web.Security.MembershipUser>объект заполняется текущие сведения для авторизованного пользователя и обновляет значения свойств источника данных <xref:System.Web.Security.MembershipUser>объекта.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Можно создать новый <xref:System.Web.Security.MembershipUser>, или получить <xref:System.Web.Security.MembershipUser>заполненный текущих значений в источнике данных с помощью <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, или <xref:System.Web.Security.Membership.FindUsersByEmail%2A>методы.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Объект <xref:System.Web.Security.MembershipUser>, представляющий обновляемого пользователя и обновленную информацию для пользователя.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Указывает число минут после последней операции метки для пользователя, во время которого пользователь считается online даты и времени."
  remarks: "Во время вызова <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> проверяется значение свойства UserIsOnlineTimeWindow Если <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>пользователь — больше, чем текущая дата и время минус значение UserIsOnlineTimeWindow в минутах, то пользователь считается online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Чтобы выяснить, считается ли авторизованный пользователь online с помощью <xref:System.Web.Security.MembershipUser.IsOnline%2A>Свойства <xref:System.Web.Security.MembershipUser>класса.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>Для пользователя обновляется, когда учетные данные пользователя проверяются успешно <xref:System.Web.Security.Membership.ValidateUser%2A>метод.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Можно также обновить <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>для пользователя членства, при вызове одного из <xref:System.Web.Security.Membership.GetUser%2A>перегрузок.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> При вызове метода <xref:System.Web.Security.Membership.GetUser%2A>перегрузку, принимающую `userIsOnline` параметр, укажите значение `true` обновление <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>для пользователя.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "Число минут после последней операции метки для пользователя, во время которого пользователь считается online даты и времени."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Проверяет допустимость предоставленного имени пользователя и пароля."
  remarks: "ValidateUser предоставляет простой способ проверить имя пользователя и пароль из источника данных. Обратите внимание, что если `username` параметр пуст или `null`, <xref:System.Web.HttpException>возникает исключение.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для проверки."
    - id: password
      type: System.String
      description: "Пароль для указанного пользователя."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имя пользователя и пароль являются допустимыми; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Происходит при создании пользователя, изменении пароля или сброса пароля."
  remarks: "<xref:System.Web.Security.MembershipProvider.ValidatingPassword>События при <xref:System.Web.Security.MembershipProvider.CreateUser%2A>метода <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>метод, или <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>вызывается метод поставщика членства.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Можно использовать <xref:System.Web.Security.MembershipProvider.ValidatingPassword>событий для проверки пароля форматы и значения для авторизованных пользователей.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Вы можете отменить текущий <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, или <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>, установив <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>предоставляемого <xref:System.Web.Security.ValidatePasswordEventArgs>для `true` во время <xref:System.Web.Security.MembershipProvider.ValidatingPassword>событий.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Если отменить текущее действие, задав <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>Свойства `true`, можно задать <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>предоставляемого <xref:System.Web.Security.ValidatePasswordEventArgs>на исключение, которое описывает причину сбоя проверки пароля.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Вызывающий метод вызовет исключение, которое <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>свойству.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Если <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>свойство `null`, вызывающий объект вызывает исключение универсального исключения пароль неудачную.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
