### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySynchronization
  id: DirectorySynchronization
  children:
  - System.DirectoryServices.DirectorySynchronization.#ctor
  - System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])
  - System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)
  - System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)
  - System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])
  - System.DirectoryServices.DirectorySynchronization.Copy
  - System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie
  - System.DirectoryServices.DirectorySynchronization.Option
  - System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie
  - System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
  type: Class
  summary: "Задает способ синхронизации каталога в домене."
  remarks: ''
  example:
  - "The following C# example shows how to synchronize a directory.  \n  \n```c#  \nDirectorySearcher src = new DirectorySearcher(\"…\");   \nsrc.DirectorySynchornization= new DirectorySynchronization(); // Initiate dirsync,   \n                                                              // this means a full synch  \n  \nforeach(SearchResult res in src.FindAll() )  \n{  \n    Console.WriteLine(…\");  \n}  \n  \n// Restart the dirsync   \nforeach(SearchResult res in src.FindAll() )  \n{  \n    Console.WriteLine(…\");  \n}  \n  \n```  \n  \n The following C# example shows how to synchronize a directory by persisting it to a file.  \n  \n```c#  \nDirectorySearcher src = new DirectorySearcher(\"…\");   \nsrc.DirectorySynchornization= new DirectorySynchronization(); // Initiate dirsync,   \n                                                              // this means a full synch  \n  \nforeach(SearchResult res in src.FindAll() )  \n{  \n    Console.WriteLine(…\");  \n}  \n  \n// Now they should be able to persist the dirSync cookie, by serializing to a file.   \nFileStream myStream = File.Create(\"dirsync.data\");  \nBinaryFormatter fmt = new BinaryFormatter();  \nfmt.Serialize(myStream, src.DirectorySynchronization);  \nmyStream.Close();  \n… ….  \n  \n// At some point in time, we wake up and read by de-serializing the dirSync cookie,   \n// and resume the  dirSync   \nFileStream myStream = FileCreate(\"dirsync.data\");  \nBinaryFormatter fmt = new BinaryFormatter();  \nDirectorySynchronization dirSync = fmt.Deserialize(myStream);  \n  \nDirectorySearcher src = new DirectorySearcher(…);  \nsrc.DirectorySynchronization = dirSync;  \n  \nforeach(SearchResult res in src.FindAll() )  \n{  \n    Console.WriteLine(…\");  \n}  \n  \n```"
  syntax:
    content: public class DirectorySynchronization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: DirectorySynchronization()
  nameWithType: DirectorySynchronization.DirectorySynchronization()
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объекта."
  syntax:
    content: public DirectorySynchronization ();
    parameters: []
  overload: System.DirectoryServices.DirectorySynchronization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: DirectorySynchronization(Byte[])
  nameWithType: DirectorySynchronization.DirectorySynchronization(Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(Byte[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объекта, используя файл cookie."
  syntax:
    content: public DirectorySynchronization (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "Объект типа байтовых данных, указывающее файл cookie поиска синхронизации каталога."
  overload: System.DirectoryServices.DirectorySynchronization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)
  id: '#ctor(System.DirectoryServices.DirectorySynchronization)'
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: DirectorySynchronization(DirectorySynchronization)
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronization)
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronization)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объекта с помощью объекта синхронизации каталогов."
  syntax:
    content: public DirectorySynchronization (System.DirectoryServices.DirectorySynchronization sync);
    parameters:
    - id: sync
      type: System.DirectoryServices.DirectorySynchronization
      description: "Объект <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объекта типа данных."
  overload: System.DirectoryServices.DirectorySynchronization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)
  id: '#ctor(System.DirectoryServices.DirectorySynchronizationOptions)'
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: DirectorySynchronization(DirectorySynchronizationOptions)
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions)
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объект с параметр синхронизации каталогов."
  syntax:
    content: public DirectorySynchronization (System.DirectoryServices.DirectorySynchronizationOptions option);
    parameters:
    - id: option
      type: System.DirectoryServices.DirectorySynchronizationOptions
      description: "Объект <xref href=&quot;System.DirectoryServices.DirectorySynchronizationOptions&quot;> </xref> объекта типа данных, которое указывает, как выполняется поиск синхронизации каталогов."
  overload: System.DirectoryServices.DirectorySynchronization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])
  id: '#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])'
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> параметр синхронизации каталогов и файлов cookie для объекта."
  syntax:
    content: public DirectorySynchronization (System.DirectoryServices.DirectorySynchronizationOptions option, byte[] cookie);
    parameters:
    - id: option
      type: System.DirectoryServices.DirectorySynchronizationOptions
      description: "Объект <xref href=&quot;System.DirectoryServices.DirectorySynchronizationOptions&quot;> </xref> объекта типа данных, которое указывает, как выполняется поиск синхронизации каталогов."
    - id: cookie
      type: System.Byte[]
      description: "Объект типа байтовых данных, указывающее файл cookie поиска синхронизации каталога."
  overload: System.DirectoryServices.DirectorySynchronization.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.Copy
  id: Copy
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: Copy()
  nameWithType: DirectorySynchronization.Copy()
  fullName: System.DirectoryServices.DirectorySynchronization.Copy()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает копию текущего <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> экземпляра."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization Copy ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "Возвращает <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> объекта."
  overload: System.DirectoryServices.DirectorySynchronization.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie
  id: GetDirectorySynchronizationCookie
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: GetDirectorySynchronizationCookie()
  nameWithType: DirectorySynchronization.GetDirectorySynchronizationCookie()
  fullName: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Получает файл cookie поиска синхронизации каталога."
  remarks: "Возвращенные результаты поиска должны быть перечислены перед извлечением куки-файл. Дополнительные сведения см. в примере кода [создания моментального снимка для более поздней версии DirSync поиска](http://msdn.microsoft.com/msdnmag/issues/05/12/DirectoryServices/default.aspx?loc=&fig=true)."
  syntax:
    content: public byte[] GetDirectorySynchronizationCookie ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Объект cookie поиска синхронизации каталога."
  overload: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.Option
  id: Option
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: Option
  nameWithType: DirectorySynchronization.Option
  fullName: System.DirectoryServices.DirectorySynchronization.Option
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает параметры поиска синхронизации каталога."
  remarks: "Параметры, которые можно использовать с помощью этого свойства можно найти на <xref:System.DirectoryServices.DirectorySynchronizationOptions>перечисления.</xref:System.DirectoryServices.DirectorySynchronizationOptions>"
  syntax:
    content: public System.DirectoryServices.DirectorySynchronizationOptions Option { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronizationOptions
      description: "A <xref href=&quot;System.DirectoryServices.DirectorySynchronizationOptions&quot;></xref> object."
  overload: System.DirectoryServices.DirectorySynchronization.Option*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Значение не является одним из <xref href=&quot;System.DirectoryServices.DirectorySynchronizationOptions&quot;> </xref> значения."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie
  id: ResetDirectorySynchronizationCookie
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: ResetDirectorySynchronizationCookie()
  nameWithType: DirectorySynchronization.ResetDirectorySynchronizationCookie()
  fullName: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Восстанавливает файл cookie поиска синхронизации каталога."
  syntax:
    content: public void ResetDirectorySynchronizationCookie ();
    parameters: []
  overload: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])
  id: ResetDirectorySynchronizationCookie(System.Byte[])
  parent: System.DirectoryServices.DirectorySynchronization
  langs:
  - csharp
  name: ResetDirectorySynchronizationCookie(Byte[])
  nameWithType: DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Восстанавливает файл cookie поиска синхронизации каталога."
  syntax:
    content: public void ResetDirectorySynchronizationCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "Объект типа байтовых данных, содержащий файл cookie поиска синхронизации каталога.  Этот метод сбрасывает куки-файл для этого <xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> экземпляр объекта для этого значения."
  overload: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.DirectorySynchronization.#ctor
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization()
  nameWithType: DirectorySynchronization.DirectorySynchronization()
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization()
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization(Byte[])
  nameWithType: DirectorySynchronization.DirectorySynchronization(Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization(DirectorySynchronization)
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronization)
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronization)
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization(DirectorySynchronizationOptions)
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions)
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions)
- uid: System.DirectoryServices.DirectorySynchronizationOptions
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronizationOptions
  nameWithType: DirectorySynchronizationOptions
  fullName: System.DirectoryServices.DirectorySynchronizationOptions
- uid: System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
  nameWithType: DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.DirectorySynchronization(DirectorySynchronizationOptions,Byte[])
- uid: System.DirectoryServices.DirectorySynchronization.Copy
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: Copy()
  nameWithType: DirectorySynchronization.Copy()
  fullName: System.DirectoryServices.DirectorySynchronization.Copy()
- uid: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: GetDirectorySynchronizationCookie()
  nameWithType: DirectorySynchronization.GetDirectorySynchronizationCookie()
  fullName: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie()
- uid: System.DirectoryServices.DirectorySynchronization.Option
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: Option
  nameWithType: DirectorySynchronization.Option
  fullName: System.DirectoryServices.DirectorySynchronization.Option
- uid: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: ResetDirectorySynchronizationCookie()
  nameWithType: DirectorySynchronization.ResetDirectorySynchronizationCookie()
  fullName: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie()
- uid: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: ResetDirectorySynchronizationCookie(Byte[])
  nameWithType: DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[])
  fullName: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(Byte[])
- uid: System.DirectoryServices.DirectorySynchronization.#ctor*
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization.Copy*
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: Copy
  nameWithType: DirectorySynchronization.Copy
- uid: System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie*
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: GetDirectorySynchronizationCookie
  nameWithType: DirectorySynchronization.GetDirectorySynchronizationCookie
- uid: System.DirectoryServices.DirectorySynchronization.Option*
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: Option
  nameWithType: DirectorySynchronization.Option
- uid: System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie*
  parent: System.DirectoryServices.DirectorySynchronization
  isExternal: false
  name: ResetDirectorySynchronizationCookie
  nameWithType: DirectorySynchronization.ResetDirectorySynchronizationCookie
