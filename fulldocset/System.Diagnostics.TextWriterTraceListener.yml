### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TextWriterTraceListener
  id: TextWriterTraceListener
  children:
  - System.Diagnostics.TextWriterTraceListener.#ctor
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  langs:
  - csharp
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  type: Class
  summary: "Направляет вывод отладки или трассировки <xref:System.IO.TextWriter>или <xref:System.IO.Stream>, такие как <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "Класс TextWriterTraceListener предоставляет <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>свойство для получения или задания модуль записи текста, который получает выходные данные отладки и трассировки.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>      Настроек [!IMPORTANT] настроек этот тип реализует <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> После завершения с помощью типа следует освободить его прямо или косвенно. Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A>метод в `try` / `catch` блока.</xref:System.IDisposable.Dispose%2A> Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable>разделе интерфейса.</xref:System.IDisposable>       Этот класс также предоставляет методы для <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>так, чтобы он больше не получал результаты трассировки или отладки, к <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A>выходного буфера для <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>и <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>сообщение на <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Write%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> </xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>       Необходимо включить для использования прослушивателя трассировки отладки и трассировки. Следующий синтаксис зависит от компилятора. При использовании компиляторов, отличных от C# или Visual Basic, см. в документации по вашим компилятором.      — Чтобы включить отладку в C#, добавьте `/d:DEBUG` флаг командную строку компилятора при компиляции кода, или можно добавить `#define DEBUG` в начало файла. В Visual Basic добавьте `/d:DEBUG=True` флаг компилятора командной строки.      — Чтобы включить трассировку в C#, добавьте `/d:TRACE` флаг командную строку компилятора при компиляции кода или добавьте `#define TRACE` в начало файла. В Visual Basic добавьте `/d:TRACE=True` флаг компилятора командной строки.       Чтобы добавить прослушиватель трассировки, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить прослушиватель, задать его тип и параметр, удалить прослушиватель или удалить все прослушиватели, ранее установленный приложением. Файл конфигурации необходимо отформатировать как в следующем примере.      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;              type=&quot;System.Diagnostics.TextWriterTraceListener&quot;              initializeData=&quot;TextWriterOutput.log&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE]Настроек при попытке записи в файл, который используется или недоступен, имени файла автоматически добавляет префикс GUID."
  example:
  - "The following example implements an instance of the TextWriterTraceListener class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \n  \n After running this sample, you can open the `TestFile.txt` file to see the output.  \n  \n [!code-cpp[Classic TextWriterTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tex_1.vb)]"
  syntax:
    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса <xref:System.IO.TextWriter>в качестве получателя выходных данных.</xref:System.IO.TextWriter>"
  remarks: "Этот конструктор использует <xref:System.IO.TextWriter>поток в качестве получателя выходных данных отладки или трассировки.</xref:System.IO.TextWriter> Его <xref:System.Diagnostics.TraceListener.Name%2A>инициализируется свойство пустая строка (&quot;», или <xref:System.String.Empty?displayProperty=fullName>).</xref:System.String.Empty?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_3_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_3_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_3_1.cs)]"
  syntax:
    content: public TextWriterTraceListener ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса, используя в качестве получателя отладки и выходные данные трассировки в поток."
  remarks: "Этот конструктор инициализирует <xref:System.Diagnostics.TraceListener.Name%2A>свойства равным пустой строке (»»).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_5_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_5_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>, представляющий поток <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> записывает.</xref:System.IO.Stream>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Поток <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса, используя заданное средство записи в качестве получателя выходных данных отладки или трассировки."
  remarks: "Этот конструктор инициализирует <xref:System.Diagnostics.TraceListener.Name%2A>свойства равным пустой строке (»»).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_6_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_6_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_6_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Объект <xref:System.IO.TextWriter>, получающий выходные данные <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Модуль записи равен <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса, используя в качестве получателя отладки и выходные данные трассировки в файл."
  remarks: "Этот конструктор инициализирует <xref:System.Diagnostics.TraceListener.Name%2A>свойства равным пустой строке (»»).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/csharp/m-system.diagnostics.tex_1_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_1_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> записывает."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Файл <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса с заданным именем, используя поток в качестве получателя отладки, а выходные данные трассировки."
  remarks: "Этот конструктор инициализирует <xref:System.Diagnostics.TraceListener.Name%2A>Свойства `name` параметр или пустая строка (&quot;»), если `name` параметр `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/csharp/904be5a7-d634-4f01-8e66-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/visualbasic/904be5a7-d634-4f01-8e66-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>, представляющий поток <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> записывает.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "Имя нового экземпляра."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Поток <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса с заданным именем, используя заданное средство записи в качестве получателя трассировки или отладки."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/csharp/81bb968a-b680-446b-b301-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/visualbasic/81bb968a-b680-446b-b301-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Объект <xref:System.IO.TextWriter>, получающий выходные данные <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "Имя нового экземпляра."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Модуль записи равен <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> класса с заданным именем, используя файл в качестве получателя отладки, а выходные данные трассировки."
  remarks: "Этот конструктор инициализирует <xref:System.Diagnostics.TraceListener.Name%2A>Свойства `name` параметр или пустая строка (&quot;»), если `name` параметр `null`.</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/visualbasic/9ea7970a-0298-4bde-b5e1-_1.vb)]\n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/csharp/9ea7970a-0298-4bde-b5e1-_1.cs)]"
  syntax:
    content: public TextWriterTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> записывает."
    - id: name
      type: System.String
      description: "Имя нового экземпляра."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Поток <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Закрывает <xref:System.Diagnostics.TextWriterTraceListener.Writer*>так, чтобы он больше не получал вывод отладки или трассировки.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: "Вызов <xref:System.Diagnostics.TextWriterTraceListener.Write%2A>или <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A>метод после вызова Close автоматически повторно открывает поток.</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> </xref:System.Diagnostics.TextWriterTraceListener.Write%2A>"
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_2_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_2_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_2_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Удаляет данный <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref> объекта."
  remarks: "Используйте <xref:System.Diagnostics.TextWriterTraceListener.Close%2A>метод <xref:System.Diagnostics.TextWriterTraceListener>класса, чтобы освободить управляемые ресурсы из <xref:System.Diagnostics.TextWriterTraceListener>объекта.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.TextWriterTraceListener.Close%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы освободить управляемые ресурсы; Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, Dispose не оказывает влияния."
  overload: System.Diagnostics.TextWriterTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Очищает выходной буфер для <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_7_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_7_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_7_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение в этот экземпляр <xref:System.Diagnostics.TextWriterTraceListener.Writer*>.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_0_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_0_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_0_1.vb)]"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: System.Diagnostics.TextWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение в этот экземпляр <xref:System.Diagnostics.TextWriterTraceListener.Writer*>с признаком конца строки.</xref:System.Diagnostics.TextWriterTraceListener.Writer*> По умолчанию признаком конца строки является символ возврата каретки и перевод строки (\\r)."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_4_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_4_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_4_1.cs)]"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает модуль записи текста, который получает выходные данные отладки и трассировки."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tex_1.vb)]"
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "Объект <xref:System.IO.TextWriter>, представляющий модуль записи, который получает выходные данные отладки и трассировки.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.TextWriterTraceListener.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
- uid: System.Diagnostics.TextWriterTraceListener.Close
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.#ctor*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener.TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Close*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: TextWriterTraceListener.Close
- uid: System.Diagnostics.TextWriterTraceListener.Dispose*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose
  nameWithType: TextWriterTraceListener.Dispose
- uid: System.Diagnostics.TextWriterTraceListener.Flush*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush
  nameWithType: TextWriterTraceListener.Flush
- uid: System.Diagnostics.TextWriterTraceListener.Write*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: TextWriterTraceListener.Write
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TextWriterTraceListener.WriteLine
- uid: System.Diagnostics.TextWriterTraceListener.Writer*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
