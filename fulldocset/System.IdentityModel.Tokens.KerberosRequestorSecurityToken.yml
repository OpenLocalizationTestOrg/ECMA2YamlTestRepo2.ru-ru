### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  id: KerberosRequestorSecurityToken
  children:
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  langs:
  - csharp
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  type: Class
  summary: "Представляет маркер безопасности, основанный на билете Kerberos, отправляемом в запросе SOAP."
  remarks: "Как правило разработчики приложений не обязательно должны использовать класс KerberosRequestorSecurityToken, когда веб-служба должна получить имя участника службы, связанное с билетом Kerberos. Чтобы возвратить значение имени участника-службы, получите значение <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>Свойства.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>       Существует два класса, которые представляют маркеры безопасности, основанные на билете Kerberos: KerberosRequestorSecurityToken и <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> Маркер безопасности KerberosRequestorSecurityToken используется клиентами, использующими KerberosRequestorSecurityToken маркер безопасности в исходящих сообщений SOAP, тогда как <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>маркер безопасности используется веб-службой, получающей сообщения SOAP с маркером безопасности.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>"
  syntax:
    content: 'public class KerberosRequestorSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> класса с помощью службы, связанный с именем участника указанной службы."
  remarks: 'Имя участника-службы должен находиться в одном из следующих форматов: `host/<hostname>@<domain>` или `<hostname>`, где `hostname` имя компьютера, на котором размещена целевая веб-службы и `domain` полное доменное имя сферы Kerberos, в котором находится компьютер. Имя участника-службы был связан с учетной записью, на котором выполняется служба, и данное сопоставление хранится в контроллере домена Kerberos (KDC).'
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "Имя участника-службы для <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> маркера безопасности. Наборы <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>свойство.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Не удается получить билет Kerberos для текущего пользователя."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> класса."
  remarks: "Имя участника-службы должен находиться в одном из следующих форматов: `host/<hostname>@<domain>` или `<hostname>`, где `hostname` имя компьютера, на котором размещена целевая веб-службы и `domain` полное доменное имя сферы Kerberos, в котором находится компьютер. Имя участника-службы был связан с учетной записью, на котором выполняется служба, и данное сопоставление хранится в контроллере домена Kerberos (KDC).       Когда `null` передается в `networkCredential` параметр <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>для текущего пользователя получается маркер безопасности.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>"
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential, string id);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "Имя участника-службы для <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> маркера безопасности. Наборы <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>свойство.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "Один из <xref:System.Security.Principal.TokenImpersonationLevel>значений, определяющее, как клиент разрешает <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> олицетворение маркера безопасности.</xref:System.Security.Principal.TokenImpersonationLevel>"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "Объект <xref:System.Net.NetworkCredential>, указывающий пользователя, чтобы получить <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> for. маркера безопасности</xref:System.Net.NetworkCredential>"
    - id: id
      type: System.String
      description: "Уникальный идентификатор маркера безопасности. Задает значение <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>Свойства.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>networkCredential</code>не является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, не равно <xref:System.Net.CredentialCache.DefaultNetworkCredentials*> и <xref:System.Net.NetworkCredential.UserName*> свойство пусто или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Не удается получить билет Kerberos для указанного пользователя."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Identity&quot; name=&quot;Identity&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "Для добавления."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "Для добавления."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  id: GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает запрос билета Kerberos."
  remarks: "Запрос билета Kerberos выполняется с помощью `InitializeSecurityContext` API."
  syntax:
    content: public byte[] GetRequest ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Массив <xref:System.Byte>, содержащий результат запроса билета Kerberos.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает уникальный идентификатор маркера безопасности."
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "Уникальный идентификатор маркера безопасности."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает значение, указывающее, соответствует ли идентификатор ключа данного экземпляра указанному идентификатору ключа."
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Объект <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> для сравнения с данным экземпляром."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> keyIdentifierClause </code> относится к типу <xref href=&quot;System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause&quot;> </xref> и результаты запроса билета Kerberos совпадают; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  id: SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает симметричный сеансовый ключ для билета Kerberos, связанного с данным маркером безопасности."
  remarks: "Свойство SecurityKey задается в том случае, когда один из конструкторов вызывается с симметричный сеансовый ключ для билета Kerberos, полученный для указанного пользователя."
  syntax:
    content: public System.IdentityModel.Tokens.SymmetricSecurityKey SecurityKey { get; }
    return:
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "Объект <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref> , содержащий симметричный сеансовый ключ для билета Kerberos, связанного с данным маркером безопасности."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает ключи шифрования, связанные с маркером безопасности."
  remarks: "Свойство SecurityKeys содержит симметричный сеансовый ключ в <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>свойство.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "Объект &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; типа <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> , содержащая набор ключей, связанных с маркером безопасности."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает имя участника-службы для <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> маркера безопасности."
  remarks: 'Имя участника-службы может быть одним из следующих форматов: `host/<hostname>@<domain>` или `<hostname>`, где `hostname` имя компьютера, на котором размещена целевая веб-службы и `domain` полное доменное имя сферы Kerberos, в котором находится компьютер.'
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "Имя участника-службы для <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> маркера безопасности."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает первый момент времени, когда данный маркер безопасности является действительным."
  remarks: "ValidFrom является свойство к моменту времени, когда получается билет Kerberos в формате UTC."
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, соответствующее моменту времени, когда данный маркер безопасности становится действительным.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает последний момент времени, когда данный маркер безопасности является действительным."
  remarks: "<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>Является свойство моменту времени, когда билет Kerberos истекает срок действия в формате UTC.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, соответствующее последнему моменту времени, когда данный маркер безопасности является действительным.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest
  nameWithType: KerberosRequestorSecurityToken.GetRequest
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
