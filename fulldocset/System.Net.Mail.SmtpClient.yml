### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.SmtpClient
  id: SmtpClient
  children:
  - System.Net.Mail.SmtpClient.#ctor
  - System.Net.Mail.SmtpClient.#ctor(System.String)
  - System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  - System.Net.Mail.SmtpClient.ClientCertificates
  - System.Net.Mail.SmtpClient.Credentials
  - System.Net.Mail.SmtpClient.DeliveryFormat
  - System.Net.Mail.SmtpClient.DeliveryMethod
  - System.Net.Mail.SmtpClient.Dispose
  - System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  - System.Net.Mail.SmtpClient.EnableSsl
  - System.Net.Mail.SmtpClient.Host
  - System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Net.Mail.SmtpClient.PickupDirectoryLocation
  - System.Net.Mail.SmtpClient.Port
  - System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  - System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  - System.Net.Mail.SmtpClient.SendAsyncCancel
  - System.Net.Mail.SmtpClient.SendCompleted
  - System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.ServicePoint
  - System.Net.Mail.SmtpClient.TargetName
  - System.Net.Mail.SmtpClient.Timeout
  - System.Net.Mail.SmtpClient.UseDefaultCredentials
  langs:
  - csharp
  name: SmtpClient
  nameWithType: SmtpClient
  fullName: System.Net.Mail.SmtpClient
  type: Class
  summary: "Позволяет приложениям для отправки электронной почты с помощью SMTP Simple Mail Transfer Protocol ()."
  remarks: "The SmtpClient class is used to send e-mail to an SMTP server for delivery. The SMTP protocol is defined in RFC 2821, which is available at [http://www.ietf.org](http://www.ietf.org/).  \n  \n The classes shown in the following table are used to construct e-mail messages that can be sent using SmtpClient.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.Net.Mail.Attachment>|Represents file attachments. This class allows you to attach files, streams, or text to an e-mail message.|  \n|<xref:System.Net.Mail.MailAddress>|Represents the e-mail address of the sender and recipients.|  \n|<xref:System.Net.Mail.MailMessage>|Represents an e-mail message.|  \n  \n To construct and send an e-mail message by using SmtpClient, you must specify the following information:  \n  \n-   The SMTP host server that you use to send e-mail. See the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties.  \n  \n-   Credentials for authentication, if required by the SMTP server. See the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.  \n  \n-   The e-mail address of the sender. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `from` parameter. Also see the <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName> property.  \n  \n-   The e-mail address or addresses of the recipients. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `recipient` parameter. Also see the <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName> property.  \n  \n-   The message content. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `body` parameter. Also see the <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=fullName> property.  \n  \n To include an attachment with an e-mail message, first create the attachment by using the <xref:System.Net.Mail.Attachment> class, and then add it to the message by using the <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=fullName> property. Depending on the e-mail reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment. For clients that cannot display the attachment in its original form, you can specify alternate views by using the <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=fullName> property.  \n  \n You can use the application or machine configuration files to specify default host, port, and credentials values for all SmtpClient objects. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n To send the e-mail message and block while waiting for the e-mail to be transmitted to the SMTP server, use one of the synchronous <xref:System.Net.Mail.SmtpClient.Send%2A> methods. To allow your program's main thread to continue executing while the e-mail is transmitted, use one of the asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods. The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised when a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation completes. To receive this event, you must add a <xref:System.Net.Mail.SendCompletedEventHandler> delegate to <xref:System.Net.Mail.SmtpClient.SendCompleted>. The <xref:System.Net.Mail.SendCompletedEventHandler> delegate must reference a callback method that handles notification of <xref:System.Net.Mail.SmtpClient.SendCompleted> events. To cancel an asynchronous e-mail transmission, use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.  \n  \n> [!NOTE]\n>  If there is an e-mail transmission in progress and you call <xref:System.Net.Mail.SmtpClient.SendAsync%2A> or <xref:System.Net.Mail.SmtpClient.Send%2A> again, you will receive an <xref:System.InvalidOperationException>.  \n  \n The connection established by the current instance of the SmtpClient class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.  \n  \n The SmtpClient class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same SmtpClient object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the SmtpClient object and it should be cleaned up.  \n  \n When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.  \n  \n The SmtpClient class has no `Finalize` method, so an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.  \n  \n Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the SmtpClient. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the SmtpClient in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the SmtpClient so the garbage collector can reclaim the memory that the SmtpClient was occupying."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/t-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/t-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/t-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: 'public class SmtpClient : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor
  id: '#ctor'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> , используя параметры файла конфигурации."
  remarks: "Этот конструктор инициализирует <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, и <xref:System.Net.Mail.SmtpClient.Port%2A>Свойства для нового <xref:System.Net.Mail.SmtpClient>с помощью параметров в приложении или файлов конфигурации компьютера.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> Дополнительные сведения см. в разделе [ \\&lt; mailSettings\\&gt; Элемент (параметры сети)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  example:
  - "The following code example demonstrates sending an e-mail message.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_4_1.cs)]  \n  \n For an example of the \\<mailSettings> node in the application or machine configuration file, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  syntax:
    content: public SmtpClient ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> класс, который отправляет по электронной почте, используя указанный SMTP-сервер."
  remarks: "The `host` parameter is used to initialize the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties are initialized by using the settings in the application or machine configuration files. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_1_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public SmtpClient (string host);
    parameters:
    - id: host
      type: System.String
      description: "Объект <xref:System.String>, содержащее имя или IP-адрес главного компьютера для SMTP-транзакций.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> класс, который отправляет по электронной почте, используя указанный SMTP-сервер и порт."
  remarks: "The `host` and `port` parameters set the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties, respectively. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files. If `port` is zero, <xref:System.Net.Mail.SmtpClient.Port%2A> is initialized using the settings in the application or machine configuration files. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> property is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public SmtpClient (string host, int port);
    parameters:
    - id: host
      type: System.String
      description: "Объект <xref:System.String>, содержащее имя или IP-адрес узла, используемый для SMTP-транзакций.</xref:System.String>"
    - id: port
      type: System.Int32
      description: "<xref:System.Int32>Больше нуля, содержащий порт для использования на `host`.</xref:System.Int32>"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>port</code>не может быть меньше нуля."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Укажите, какие сертификаты следует использовать для установления соединения Secure Sockets Layer (SSL)."
  remarks: "Сертификаты клиентов, по умолчанию необязательно; Настройка сервера может потребоваться что клиент присутствовать действительный сертификат как часть согласования начального подключения.      Настроек [!NOTE] настроек Framework кэширует сеансы SSL при их создании и пытается повторно использовать кэшированный сеанс для нового запроса, если это возможно. При попытке повторно использовать сеанс SSL, платформа использует первый элемент ClientCertificates (если есть), либо пустое значение пытается повторно использовать анонимные сеансы, если ClientCertificates."
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_3_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref>, Содержащий один или несколько сертификатов клиента. Значение по умолчанию является производным от атрибутов конфигурации почты в файле конфигурации."
  overload: System.Net.Mail.SmtpClient.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Credentials
  id: Credentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает учетные данные, используемые для проверки подлинности отправителя."
  remarks: "Some SMTP servers require that the client be authenticated before the server will send e-mail on its behalf. To use your default network credentials, you can set the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> to `true` instead of setting this property. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the Credentials property will be used for the credentials when connecting to the server. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the Credentials property has not been set, then mail is sent to the server anonymously.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using the Credentials property, this information overrides the configuration file settings.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates setting the credentials used to send an e-mail.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public System.Net.ICredentialsByHost Credentials { get; set; }
    return:
      type: System.Net.ICredentialsByHost
      description: "<xref:System.Net.ICredentialsByHost>, Представляющий учетные данные, используемые для проверки подлинности или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если учетные данные не были указаны.</xref:System.Net.ICredentialsByHost>"
  overload: System.Net.Mail.SmtpClient.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При отправке сообщения электронной почты, нельзя изменить значение этого свойства."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  id: DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает формат доставки, используемый <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> для отправки электронной почты."
  syntax:
    content: public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryFormat
      description: "Returns <xref href=&quot;System.Net.Mail.SmtpDeliveryFormat&quot;></xref>.       Формат доставки, используемый <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.DeliveryFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  id: DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Указывает, каким образом исходящие сообщения электронной почты, сообщения будут обработаны."
  remarks: "Методы доставки включают:-SMTP-сервера.      -Перемещение почты в каталог раскладки для IIS, который доставляет сообщение.      -Перемещение сообщения электронной почты в каталоге, заданном параметром <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>для последующей доставки другим приложением.</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>       Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>свойство переопределить параметры файла конфигурации.</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>"
  syntax:
    content: public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryMethod
      description: "<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> , Указывающее способ доставки сообщений электронной почты."
  overload: System.Net.Mail.SmtpClient.DeliveryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose
  id: Dispose
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет сообщение QUIT на SMTP-сервер, правильно завершает TCP-подключение и освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> класса."
  remarks: "Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient>класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP.</xref:System.Net.Mail.SmtpClient> Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.       <xref:System.Net.Mail.SmtpClient>Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер.</xref:System.Net.Mail.SmtpClient> Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient>объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP.</xref:System.Net.Mail.SmtpClient> В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient>объекта и он должен быть очищены.</xref:System.Net.Mail.SmtpClient>       При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.       Вызов метода Dispose для <xref:System.Net.Mail.SmtpClient>объект, который выполняется в асинхронном <xref:System.Net.Mail.SmtpClient.SendAsync%2A>операции будут отменены при вызове операции отправки <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>был вызван метод.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient>       <xref:System.Net.Mail.SmtpClient>Класса не имеет `Finalize` метод.</xref:System.Net.Mail.SmtpClient> Поэтому приложение должно вызвать <xref:System.Net.Mail.SmtpClient.Dispose%2A>явно освобождать ресурсы.</xref:System.Net.Mail.SmtpClient.Dispose%2A>       Метод Dispose проходит через все соединения, установленные на SMTP-сервер, указанный в <xref:System.Net.Mail.SmtpClient.Host%2A>свойство и отправляет сообщение QUIT следуют корректно Завершение подключения TCP.</xref:System.Net.Mail.SmtpClient.Host%2A> Метод Dispose также освобождает неуправляемые ресурсы, используемые базового <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>       Вызывается <xref:System.Net.Mail.SmtpClient.Dispose%2A>при завершении использования <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> <xref:System.Net.Mail.SmtpClient.Dispose%2A>Метода <xref:System.Net.Mail.SmtpClient>окажется в неработоспособном состоянии.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> После вызова метода <xref:System.Net.Mail.SmtpClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Mail.SmtpClient>, сборщик мусора мог освободить память, <xref:System.Net.Mail.SmtpClient>занимаемую.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A>       Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызывайте метод <xref:System.Net.Mail.SmtpClient.Dispose%2A>перед освобождением последней ссылки на <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> В противном случае им ресурсы не будут освобождены, сборщик мусора мог освободить память."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет сообщение QUIT на SMTP-сервер, правильно завершает TCP-соединения, освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> класса и при необходимости освобождает также управляемые ресурсы."
  remarks: "Соединения, установленные с текущим экземпляром <xref:System.Net.Mail.SmtpClient>класс на SMTP-сервер может быть повторно используется, если приложение необходимо отправить несколько сообщений на тот же сервер SMTP.</xref:System.Net.Mail.SmtpClient> Это особенно полезно при использовании проверки подлинности и шифрования подключения к SMTP-сервера. Процесс проверки подлинности и установки сеанса TLS может быть дорогостоящей операцией. Требование, чтобы заново установить соединение для каждого сообщения при отправке большого количества электронной почты на тот же сервер SMTP может оказать значительное влияние на производительность. Существует ряд крупномасштабных почтовые приложения, которые отправляют обновления состояния рассылки по электронной почте или оповещения по электронной почте. Также многие клиентские приложения электронной почты поддерживает автономный режим, в котором пользователи могут формировать несколько сообщений электронной почты, отправляемых позже, когда будет установлено подключение к серверу SMTP. Он является типичным для почтовый клиент на отправку всех сообщений SMTP конкретного SMTP-сервер (предоставляется поставщиком услуг Интернета), которая затем пересылает это сообщение электронной почты на другие серверы SMTP.       <xref:System.Net.Mail.SmtpClient>Реализацию класса пулов соединений SMTP, чтобы его можно избежать повторного подключения для каждого сообщения на тот же сервер.</xref:System.Net.Mail.SmtpClient> Приложение может повторно использовать тот же <xref:System.Net.Mail.SmtpClient>объект для отправки много разных сообщений электронной почты на тот же сервер SMTP и многим разным серверам SMTP.</xref:System.Net.Mail.SmtpClient> В результате нет возможности для определения завершении приложения с помощью <xref:System.Net.Mail.SmtpClient>объекта и он должен быть очищены.</xref:System.Net.Mail.SmtpClient>       При завершении сеанса SMTP и клиенту требуется разорвать соединение, отправьте сообщение QUIT серверу, чтобы указать, что больше нет сообщений для отправки. Это позволяет серверу для освобождения ресурсов, связанных с подключения от клиента и обработки сообщений, которые были отправлены клиентом.       Вызов метода Dispose для <xref:System.Net.Mail.SmtpClient>объект, который выполняется в асинхронном <xref:System.Net.Mail.SmtpClient.SendAsync%2A>операции будут отменены при вызове операции отправки <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>был вызван метод.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient>       <xref:System.Net.Mail.SmtpClient>Класса не имеет `Finalize` метод.</xref:System.Net.Mail.SmtpClient> Поэтому приложение должно вызвать <xref:System.Net.Mail.SmtpClient.Dispose%2A>явно освобождать ресурсы.</xref:System.Net.Mail.SmtpClient.Dispose%2A>       Метод Dispose проходит через все соединения, установленные на SMTP-сервер, указанный в <xref:System.Net.Mail.SmtpClient.Host%2A>свойство и отправляет сообщение QUIT следуют корректно Завершение подключения TCP.</xref:System.Net.Mail.SmtpClient.Host%2A> Метод Dispose также освобождает неуправляемые ресурсы, используемые <xref:System.Net.Sockets.Socket>и при необходимости освобождает также управляемые ресурсы.</xref:System.Net.Sockets.Socket>       Вызывается <xref:System.Net.Mail.SmtpClient.Dispose%2A>при завершении использования <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> <xref:System.Net.Mail.SmtpClient.Dispose%2A>Метода <xref:System.Net.Mail.SmtpClient>окажется в неработоспособном состоянии.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> После вызова метода <xref:System.Net.Mail.SmtpClient.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Net.Mail.SmtpClient>, сборщик мусора мог освободить память, <xref:System.Net.Mail.SmtpClient>занимаемую.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A>       Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызывайте метод <xref:System.Net.Mail.SmtpClient.Dispose%2A>перед освобождением последней ссылки на <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> В противном случае им ресурсы не будут освобождены, сборщик мусора мог освободить память."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.EnableSsl
  id: EnableSsl
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Укажите ли <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> использует Secure Sockets Layer (SSL) для шифрования соединения."
  remarks: "Свойство EnableSsl указывает, используется ли протокол SSL для доступа к указанным почтового SMTP-сервера.       Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные в свойство EnableSsl переопределить параметры файла конфигурации.       <xref:System.Net.Mail.SmtpClient>Класс поддерживает только расширения службы SMTP для защиты SMTP через протокол TLS как определено в документе RFC 3207.</xref:System.Net.Mail.SmtpClient> В этом режиме сеанс SMTP начинается в незашифрованном канале, а затем выдает команды STARTTLS клиента на сервере, чтобы переключиться на безопасное соединение с помощью протокола SSL. См. в RFC 3207 публикации по IETF Internet Engineering Task Force () для получения дополнительной информации.       Альтернативный способ подключения — где сеанс SSL устанавливается заранее перед любой протокол отправки команд. Этот способ подключения иногда называют SMTP/SSL, SMTP через протокол SSL или SMTPS и по умолчанию используется порт 465. Это альтернативный способ подключения с помощью протокола SSL в настоящее время не поддерживается.       Можно использовать <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>для указания, какие сертификаты клиента следует использовать для подключения SSL.</xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>Позволяет отклонять сертификат, предоставленный для SMTP-сервера.</xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> <xref:System.Net.ServicePointManager.SecurityProtocol%2A>Позволяет указать версию протокола SSL для использования.</xref:System.Net.ServicePointManager.SecurityProtocol%2A>      Настроек [!NOTE] настроек Если EnableSsl является свойство `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы создают исключение <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A>"
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> использует протокол SSL; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.EnableSsl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Host
  id: Host
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает имя или IP-адрес узла, используемый для SMTP-транзакций."
  remarks: "The value of the Host property can also be set using constructors or the application or machine configuration file. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If information is specified using this property, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, содержащее имя или IP-адрес компьютера, используемый для SMTP-транзакций.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение, указанное для операции задания, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное для операции задания равен &lt;xref:System.String?displayProperty=fullName&gt; (»»)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При отправке сообщения электронной почты, нельзя изменить значение этого свойства."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Вызывает <xref href=&quot;System.Net.Mail.SmtpClient.SendCompleted&quot;> </xref> событий."
  remarks: "Классы, наследующие от <xref:System.Net.Mail.SmtpClient>класс может переопределить OnSendCompleted метод для выполнения дополнительных задач при <xref:System.Net.Mail.SmtpClient.SendCompleted>событием.</xref:System.Net.Mail.SmtpClient.SendCompleted> </xref:System.Net.Mail.SmtpClient>       OnSendCompleted также позволяет производным классам обрабатывать <xref:System.Net.Mail.SmtpClient.SendCompleted>не присоединяя делегат.</xref:System.Net.Mail.SmtpClient.SendCompleted> Это предпочтительная методика обработки <xref:System.Net.Mail.SmtpClient.SendCompleted>в производном классе.</xref:System.Net.Mail.SmtpClient.SendCompleted>"
  syntax:
    content: protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "<xref:System.ComponentModel.AsyncCompletedEventArgs>, Содержащий данные события.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Net.Mail.SmtpClient.OnSendCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  id: PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает папку, в которой приложения сохраняют почтовые сообщения для обработки локальным SMTP-сервером."
  remarks: "Почтовые сообщения из каталога раскладки автоматически отправляются локальный SMTP-сервера (при его наличии), такими как службы IIS.       Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные в свойство PickupDirectoryLocation переопределить параметры файла конфигурации."
  syntax:
    content: public string PickupDirectoryLocation { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, определяющая каталог раскладки для почтовых сообщений.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Port
  id: Port
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает порт, используемый для SMTP-транзакций."
  remarks: "Значение свойства порта можно также задать с помощью конструкторов или приложения или в файле конфигурации компьютера. Дополнительные сведения об использовании файлов конфигурации см. в разделе [ \\&lt; mailSettings\\&gt; Элемент (параметры сети)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). Если информация задана с помощью этого свойства, она переопределяет настройки из файла конфигурации."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_5_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_5_1.cs)]"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>, Содержащее номер порта на узел SMTP.</xref:System.Int32> По умолчанию используется значение 25."
  overload: System.Net.Mail.SmtpClient.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение, указанное для операции задания меньше или равно нулю."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При отправке сообщения электронной почты, нельзя изменить значение этого свойства."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  id: Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет указанное сообщение на сервер SMTP для доставки."
  remarks: "Этот метод блокируется во время передачи сообщения электронной почты. Можно указать значение времени ожидания с помощью <xref:System.Net.Mail.SmtpClient.Timeout%2A>свойство, чтобы убедиться, что этот метод возвращает через указанный промежуток времени.</xref:System.Net.Mail.SmtpClient.Timeout%2A>       Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A>и <xref:System.Net.Mail.SmtpClient.Port%2A>свойства должны задаваться через файлы конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>конструктор.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Этот метод нельзя вызывать, если сообщения, передаваемого асинхронно.       Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>или <xref:System.Net.Mail.SmtpClient.Credentials%2A>Свойства.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       При получении <xref:System.Net.Mail.SmtpException>исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A>свойство, чтобы найти причину операцию не удалось.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException>Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.</xref:System.Net.Mail.SmtpException>       При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.Send%2A>несколько получателей и SMTP сервер принимает некоторым получателям как допустимый и отклоняет другими пользователями, <xref:System.Net.Mail.SmtpClient.Send%2A>отправляет по электронной почте получателям, принятые и затем <xref:System.Net.Mail.SmtpFailedRecipientsException>возникает исключение.</xref:System.Net.Mail.SmtpFailedRecipientsException> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> Исключение будет содержать список получателей, которые были отклонены.      Настроек [!NOTE] настроек Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы создают исключение <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates using this method.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public void Send (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Объект <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> , содержащее сообщение для отправки."
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> имеет <> </> *настроек выполняется вызов.       - или - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - или - не указаны получатели указан в &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, и &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; свойства.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <> </> *настроек равен пустой строке (»»).       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <xref:System.Net.Mail.SmtpClient.Port*>равно 0, то отрицательное число или больше 65 535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Сбой подключения к серверу SMTP.       - или - проверка подлинности не пройдена.       - или - истекло время ожидания операции.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - или - <xref:System.Net.Mail.SmtpClient.EnableSsl*>равно <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , но SMTP-сервер не объявляет STARTTLS в ответ на команду EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "<code> message </code> Не может быть доставлено к одному или нескольким получателям, указанным в &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, или &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  id: Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет указанное сообщение электронной почты на сервер SMTP для доставки. Отправитель сообщения, получателей, темы и текст сообщения задаются с помощью <xref:System.String>объектов.</xref:System.String>"
  remarks: "Этот метод блокируется во время передачи сообщения электронной почты. Можно указать значение времени ожидания с помощью <xref:System.Net.Mail.SmtpClient.Timeout%2A>свойство, чтобы убедиться, что этот метод возвращает через указанный промежуток времени.</xref:System.Net.Mail.SmtpClient.Timeout%2A>       Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A>и <xref:System.Net.Mail.SmtpClient.Port%2A>свойства должны задаваться через файлы конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>конструктор.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Этот метод нельзя вызывать, если сообщения, передаваемого асинхронно.       Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>или <xref:System.Net.Mail.SmtpClient.Credentials%2A>Свойства.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       При получении <xref:System.Net.Mail.SmtpException>исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A>свойство, чтобы найти причину операцию не удалось.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException>Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.</xref:System.Net.Mail.SmtpException>       При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.Send%2A>несколько получателей и SMTP сервер принимает некоторым получателям как допустимый и отклоняет другими пользователями, <xref:System.Net.Mail.SmtpClient.Send%2A>отправляет по электронной почте получателям, принятые и затем <xref:System.Net.Mail.SmtpFailedRecipientsException>возникает исключение.</xref:System.Net.Mail.SmtpFailedRecipientsException> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> Исключение будет содержать список получателей, которые были отклонены.      Настроек [!NOTE] настроек Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы создают исключение <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void Send (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "Объект <xref:System.String>, содержащий сведения об адресе отправителя сообщения.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Объект <xref:System.String>, содержащий адреса, будет отправлено.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Объект <xref:System.String>, содержащий строку темы сообщения.</xref:System.String>"
    - id: body
      type: System.String
      description: "Объект <xref:System.String>, содержащий тело сообщения.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipients</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> имеет <> </> *настроек выполняется вызов.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <> </> *настроек равен пустой строке (»»).       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <xref:System.Net.Mail.SmtpClient.Port*>равно 0, то отрицательное число или больше 65 535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Сбой подключения к серверу SMTP.       - или - проверка подлинности не пройдена.       - или - истекло время ожидания операции.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - или - <xref:System.Net.Mail.SmtpClient.EnableSsl*>равно <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , но SMTP-сервер не объявляет STARTTLS в ответ на команду EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "Сообщение не может быть доставлено к одному или нескольким получателям, указанным в <code> recipients </code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  id: SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет указанное сообщение электронной почты на сервер SMTP для доставки. Этот метод не блокирует вызывающий поток и позволяет вызывающему объекту передать объект в метод, вызываемый после завершения операции."
  remarks: "Чтобы получать уведомления, когда было отправлено сообщение электронной почты или операция отменена, добавьте обработчик событий для <xref:System.Net.Mail.SmtpClient.SendCompleted>событий.</xref:System.Net.Mail.SmtpClient.SendCompleted> Вы можете отменить <xref:System.Net.Mail.SmtpClient.SendAsync%2A>операции путем вызова <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>метод.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       После вызова <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, необходимо подождать завершения перед попыткой отправки другого сообщения электронной почты, с помощью <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> передачи почты</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A>и <xref:System.Net.Mail.SmtpClient.Port%2A>необходимо задать с помощью файлов конфигурации, установив соответствующие свойства или путем передачи этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>конструктор.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>или <xref:System.Net.Mail.SmtpClient.Credentials%2A>Свойства.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       При получении <xref:System.Net.Mail.SmtpException>исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A>свойство, чтобы найти причину операцию не удалось.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException>Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.</xref:System.Net.Mail.SmtpException>       При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.SendAsync%2A>нескольким получателям, если SMTP-сервер принимает некоторым получателям как допустимый и другие, отклоняет <xref:System.Net.Mail.SmtpException>со <xref:System.NullReferenceException>о внутреннем исключении.</xref:System.NullReferenceException> </xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> В этом случае <xref:System.Net.Mail.SmtpClient.SendAsync%2A>не удалось отправить все сообщения электронной почты.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Приложение может определять ошибка проверки сертификата сервера с помощью проверки <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>переданные свойство <xref:System.Net.Mail.SendCompletedEventHandler>делегировать.</xref:System.Net.Mail.SendCompletedEventHandler> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>       <xref:System.Net.Mail.SmtpClient.Timeout%2A>Свойство не имеет влияния <xref:System.Net.Mail.SmtpClient.SendAsync%2A>вызовите.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Timeout%2A>       Чтобы отправить почту и блока, передаваемые на сервер SMTP, воспользуйтесь одним из <xref:System.Net.Mail.SmtpClient.Send%2A>методы.</xref:System.Net.Mail.SmtpClient.Send%2A>      Настроек [!NOTE] настроек Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы создают исключение <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/92b04d2f-ebb5-4da9-8cad-_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/92b04d2f-ebb5-4da9-8cad-_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/92b04d2f-ebb5-4da9-8cad-_1.vb)]"
  syntax:
    content: public void SendAsync (System.Net.Mail.MailMessage message, object userToken);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Объект <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> , содержащее сообщение для отправки."
    - id: userToken
      type: System.Object
      description: "Определенный пользователем объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> имеет <> </> *настроек выполняется вызов.       - или - не указаны получатели указан в &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, и &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; свойства.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <> </> *настроек равен пустой строке (»»).       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <xref:System.Net.Mail.SmtpClient.Port*>равно 0, то отрицательное число или больше 65 535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Сбой подключения к серверу SMTP.       - или - проверка подлинности не пройдена.       - или - истекло время ожидания операции.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - или - <xref:System.Net.Mail.SmtpClient.EnableSsl*>равно <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , но SMTP-сервер не объявляет STARTTLS в ответ на команду EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>       - или - <code> message </code> не может быть доставлено к одному или нескольким получателям, указанным в &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, или &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  id: SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет сообщение электронной почты на сервер SMTP для доставки. Отправитель сообщения, получателей, темы и текст сообщения задаются с помощью <xref:System.String>объектов.</xref:System.String> Этот метод не блокирует вызывающий поток и позволяет вызывающему объекту передать объект в метод, вызываемый после завершения операции."
  remarks: "Чтобы получать уведомления, когда было отправлено сообщение электронной почты или операция отменена, добавьте обработчик событий для <xref:System.Net.Mail.SmtpClient.SendCompleted>событий.</xref:System.Net.Mail.SmtpClient.SendCompleted> Вы можете отменить <xref:System.Net.Mail.SmtpClient.SendAsync%2A>операции путем вызова <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>метод.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       После вызова <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, необходимо подождать завершения перед попыткой отправки другого сообщения электронной почты, с помощью <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> передачи почты</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Перед вызовом этого метода <xref:System.Net.Mail.SmtpClient.Host%2A>и <xref:System.Net.Mail.SmtpClient.Port%2A>свойства должны задаваться в файлах конфигурации или установив свойства или передача этих данных в <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>конструктор.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Если узел SMTP требует учетные данные, необходимо установить их перед вызовом этого метода. Чтобы указать учетные данные, используйте <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>или <xref:System.Net.Mail.SmtpClient.Credentials%2A>свойство.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       При получении <xref:System.Net.Mail.SmtpException>исключение проверки <xref:System.Net.Mail.SmtpException.StatusCode%2A>свойство, чтобы найти причину операцию не удалось.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException>Также могут содержать внутреннее исключение, указывающее причину неудачного завершения операции.</xref:System.Net.Mail.SmtpException>       При отправке электронной почты с использованием <xref:System.Net.Mail.SmtpClient.SendAsync%2A>нескольким получателям, если SMTP-сервер принимает некоторым получателям как допустимый и другие, отклоняет <xref:System.Net.Mail.SmtpException>со <xref:System.NullReferenceException>о внутреннем исключении.</xref:System.NullReferenceException> </xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> В этом случае <xref:System.Net.Mail.SmtpClient.SendAsync%2A>не удалось отправить все сообщения электронной почты.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Приложение может определять ошибка проверки сертификата сервера с помощью проверки <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>переданные свойство <xref:System.Net.Mail.SendCompletedEventHandler>делегировать.</xref:System.Net.Mail.SendCompletedEventHandler> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>       <xref:System.Net.Mail.SmtpClient.Timeout%2A>Свойство не имеет влияния <xref:System.Net.Mail.SmtpClient.SendAsync%2A>вызовите.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Timeout%2A>       Чтобы отправить почту и блока, передаваемые на сервер SMTP, воспользуйтесь одним из <xref:System.Net.Mail.SmtpClient.Send%2A>методы.</xref:System.Net.Mail.SmtpClient.Send%2A>      Настроек [!NOTE] настроек Если <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>свойству `true`, и SMTP-сервер не объявляет команды STARTTLS в ответ на команду EHLO, затем вызов <xref:System.Net.Mail.SmtpClient.Send%2A>или <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы создают исключение <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void SendAsync (string from, string recipients, string subject, string body, object userToken);
    parameters:
    - id: from
      type: System.String
      description: "Объект <xref:System.String>, содержащий сведения об адресе отправителя сообщения.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Объект <xref:System.String>, содержащий адрес, который отправляется сообщение.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Объект <xref:System.String>, содержащий строку темы сообщения.</xref:System.String>"
    - id: body
      type: System.String
      description: "Объект <xref:System.String>, содержащий тело сообщения.</xref:System.String>"
    - id: userToken
      type: System.Object
      description: "Определенный пользователем объект, который передается в метод, вызываемый при завершении асинхронной операции."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipient</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipient</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> имеет <> </> *настроек выполняется вызов.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <> </> *настроек равен пустой строке (»»).       - или - <> </> *настроек свойству <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> и <xref:System.Net.Mail.SmtpClient.Port*>равно 0, то отрицательное число или больше 65 535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Сбой подключения к серверу SMTP.       - или - проверка подлинности не пройдена.       - или - истекло время ожидания операции.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - или - <xref:System.Net.Mail.SmtpClient.EnableSsl*>равно <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , но SMTP-сервер не объявляет STARTTLS в ответ на команду EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>       - или - сообщение не может быть доставлено к одному или нескольким получателям, указанным в <code> recipients </code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отменяет асинхронную операцию отправки сообщения электронной почты."
  remarks: "Используйте метод SendAsyncCancel отменить ожидающие <xref:System.Net.Mail.SmtpClient.SendAsync%2A>операции.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> Если нет ожидающих отправки почты, данный метод освобождает ресурсы, используемые для хранения этой почты. Если нет ожидающих отправки почты, этот метод не выполняет никаких действий."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously. The user has the option to cancel the mail if it has not been sent.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_3_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_3_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/m-system.net.mail.smtpcl_3_1.vb)]"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.SendAsyncCancel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был удален."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendCompleted
  id: SendCompleted
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Происходит после завершения операции отправки асинхронных электронной почты."
  remarks: "Событие SendCompleted вызывается каждый раз, когда сообщение электронной почты отправляется асинхронно после завершения операции отправки. Чтобы отправить сообщение электронной почты в асинхронном режиме, используйте <xref:System.Net.Mail.SmtpClient.SendAsync%2A>методы.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       <xref:System.Net.Mail.SendCompletedEventHandler>Представляет делегат для SendCompleted.</xref:System.Net.Mail.SendCompletedEventHandler> <xref:System.ComponentModel.AsyncCompletedEventArgs>Класс предоставляет обработчик событий с данными событий.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/e-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/e-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/e-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: public event System.Net.Mail.SendCompletedEventHandler SendCompleted;
    return:
      type: System.Net.Mail.SendCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  id: SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет указанное сообщение на сервер SMTP для доставки в асинхронной операции."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task>настроек объекта будет выполнена после отправки сообщения.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Объект <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> , содержащее сообщение для отправки."
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>.</xref:System.Threading.Tasks.Task>       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  id: SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Отправляет указанное сообщение на сервер SMTP для доставки в асинхронной операции. . Отправитель сообщения, получателей, темы и текст сообщения задаются с помощью <xref:System.String>объектов.</xref:System.String>"
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task>настроек объекта будет выполнена после отправки сообщения.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "Объект <xref:System.String>, содержащий сведения об адресе отправителя сообщения.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Объект <xref:System.String>, содержащий адреса, будет отправлено.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Объект <xref:System.String>, содержащий строку темы сообщения.</xref:System.String>"
    - id: body
      type: System.String
      description: "Объект <xref:System.String>, содержащий тело сообщения.</xref:System.String>"
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>.</xref:System.Threading.Tasks.Task>       Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String.Empty>.       -or-       <code>recipients</code> is <xref:System.String.Empty>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ServicePoint
  id: ServicePoint
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает сетевое подключение, используемое для передачи сообщения электронной почты."
  remarks: "Свойство ServicePoint создаются с помощью значений по умолчанию, указанное в приложении или файлов конфигурации компьютера и <xref:System.Net.ServicePointManager>класса.</xref:System.Net.ServicePointManager>"
  example:
  - "The following code example demonstrates accessing the ServicePoint property.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_7_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_7_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "Объект <xref href=&quot;System.Net.ServicePoint&quot;> </xref> , при подключении к <xref:System.Net.Mail.SmtpClient.Host*>свойство, используемое для SMTP.</xref:System.Net.Mail.SmtpClient.Host*>"
  overload: System.Net.Mail.SmtpClient.ServicePoint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<>*настроек — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (»»).       -or-       <>*> is zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.TargetName
  id: TargetName
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает имя поставщика службы (SPN) для проверки подлинности при использовании расширенной защиты."
  remarks: "Свойство TargetName со встроенной проверкой подлинности Windows используется, когда приложение использует расширенную защиту. <xref:System.Net.Mail.SmtpClient>Может предоставить расширенную защиту, чтобы убедиться, что ответы на запрос учетных данных содержат сведения об определенной службы (SPN) и, при необходимости, канал конкретных сведений (токен привязки канала или CBT).</xref:System.Net.Mail.SmtpClient> С этой информацией в обмене учетных данных службы способны лучше защитить от несанкционированного использования запросам учетных данных, которые могут быть неправильно получен.       Значение по умолчанию для этого свойства можно также задать на машине или в файле конфигурации приложения. Любые изменения, внесенные в свойство TargetName переопределить параметры файла конфигурации."
  syntax:
    content: public string TargetName { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, указывающий имя участника-службы для использования расширенной защиты.</xref:System.String> Значение по умолчанию для этого имени SPN имеет форму «SMTPSVC /&lt;узла&gt;«где &lt;узла&gt; имя узла почтового SMTP-сервера."
  overload: System.Net.Mail.SmtpClient.TargetName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Timeout
  id: Timeout
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает значение, указывающее количество времени, после чего синхронной <xref:System.Net.Mail.SmtpClient.Send*>время ожидания вызова.</xref:System.Net.Mail.SmtpClient.Send*>"
  remarks: "По умолчанию, вызывает <xref:System.Net.Mail.SmtpClient.Send%2A>метод блокируется до завершения операции.</xref:System.Net.Mail.SmtpClient.Send%2A> Если значение свойства Timeout положительное значение и <xref:System.Net.Mail.SmtpClient.Send%2A>не удалось выполнить операцию за выделенное время <xref:System.Net.Mail.SmtpClient>класса вызывает <xref:System.Net.Mail.SmtpException>исключение.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Send%2A>       Чтобы отправить сообщение и продолжить выполнение в потоке приложения, используйте <xref:System.Net.Mail.SmtpClient.SendAsync%2A>метод.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>"
  example:
  - "The following code example demonstrates getting and setting the time-out value.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_6_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_6_1.cs)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>, Указывает время ожидания в миллисекундах.</xref:System.Int32> Значение по умолчанию — 100 000 (100 секунд)."
  overload: System.Net.Mail.SmtpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение, указанное для операции задания меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При отправке сообщения электронной почты, нельзя изменить значение этого свойства."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Возвращает или задает <xref:System.Boolean>ли значение, которое определяет <xref:System.Net.CredentialCache.DefaultCredentials*>отправляется вместе с запросами.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "Some SMTP servers require that the client be authenticated before the server sends e-mail on its behalf. Set this property to `true` when this <xref:System.Net.Mail.SmtpClient> object should, if requested by the server, authenticate using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If the UseDefaultCredentials property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server. If the UseDefaultCredentials property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_4_1.cs)]"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если используются учетные данные по умолчанию; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При отправке сообщения электронной почты, нельзя изменить значение этого свойства."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Mail.SmtpException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpException
  nameWithType: SmtpException
  fullName: System.Net.Mail.SmtpException
- uid: System.Net.Mail.SmtpFailedRecipientsException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpFailedRecipientsException
  nameWithType: SmtpFailedRecipientsException
  fullName: System.Net.Mail.SmtpFailedRecipientsException
- uid: System.Net.Mail.SmtpClient.#ctor
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Mail.SmtpClient.Credentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: true
  name: ICredentialsByHost
  nameWithType: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpDeliveryFormat
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryFormat
  nameWithType: SmtpDeliveryFormat
  fullName: System.Net.Mail.SmtpDeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpDeliveryMethod
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryMethod
  nameWithType: SmtpDeliveryMethod
  fullName: System.Net.Mail.SmtpDeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.SmtpClient.EnableSsl
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
- uid: System.Net.Mail.MailMessage
  parent: System.Net.Mail
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
- uid: System.Net.Mail.SmtpClient.SendCompleted
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
- uid: System.Net.Mail.SendCompletedEventHandler
  parent: System.Net.Mail
  isExternal: false
  name: SendCompletedEventHandler
  nameWithType: SendCompletedEventHandler
  fullName: System.Net.Mail.SendCompletedEventHandler
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.ServicePoint
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
- uid: System.Net.Mail.SmtpClient.#ctor*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient
  nameWithType: SmtpClient.SmtpClient
- uid: System.Net.Mail.SmtpClient.ClientCertificates*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
- uid: System.Net.Mail.SmtpClient.Credentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
- uid: System.Net.Mail.SmtpClient.DeliveryFormat*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose
  nameWithType: SmtpClient.Dispose
- uid: System.Net.Mail.SmtpClient.EnableSsl*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted
  nameWithType: SmtpClient.OnSendCompleted
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send
  nameWithType: SmtpClient.Send
- uid: System.Net.Mail.SmtpClient.SendAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync
  nameWithType: SmtpClient.SendAsync
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel
  nameWithType: SmtpClient.SendAsyncCancel
- uid: System.Net.Mail.SmtpClient.SendMailAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync
  nameWithType: SmtpClient.SendMailAsync
- uid: System.Net.Mail.SmtpClient.ServicePoint*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
