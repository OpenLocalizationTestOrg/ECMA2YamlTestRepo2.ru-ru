### YamlMime:ManagedReference
items:
- uid: System.TypeUnloadedException
  id: TypeUnloadedException
  children:
  - System.TypeUnloadedException.#ctor
  - System.TypeUnloadedException.#ctor(System.String)
  - System.TypeUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.TypeUnloadedException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TypeUnloadedException
  nameWithType: TypeUnloadedException
  fullName: System.TypeUnloadedException
  type: Class
  summary: "Исключение, которое выдается при попытке обращения к выгруженному классу."
  remarks: "TypeUnloadedException использует COR_E_TYPEUNLOADED HRESULT, который имеет значение 0x80131013.       Список начальных значений свойств для экземпляра класса TypeUnloadedException см. в разделе <xref:System.TypeUnloadedException.%23ctor%2A>конструкторов.</xref:System.TypeUnloadedException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TypeUnloadedException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TypeUnloadedException.#ctor
  id: '#ctor'
  parent: System.TypeUnloadedException
  langs:
  - csharp
  name: TypeUnloadedException()
  nameWithType: TypeUnloadedException.TypeUnloadedException()
  fullName: System.TypeUnloadedException.TypeUnloadedException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.TypeUnloadedException&quot;> </xref> класса."
  remarks: "Этот конструктор инициализирует <xref:System.Exception.Message%2A>свойство нового экземпляра системным сообщением, описывающая ошибку, такие как «Тип был выгружен.»</xref:System.Exception.Message%2A> Это сообщение учитывает текущую культуру системы.       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.TypeUnloadedException>.</xref:System.TypeUnloadedException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Пустая ссылка (`Nothing` в Visual Basic). |   | <xref:System.Exception.Message%2A>| Строка локализованного сообщения об. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TypeUnloadedException ();
    parameters: []
  overload: System.TypeUnloadedException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TypeUnloadedException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.TypeUnloadedException
  langs:
  - csharp
  name: TypeUnloadedException(String)
  nameWithType: TypeUnloadedException.TypeUnloadedException(String)
  fullName: System.TypeUnloadedException.TypeUnloadedException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.TypeUnloadedException&quot;> </xref> класса с указанным сообщением об ошибке."
  remarks: "Содержимое `message` должно быть понятно пользователю. Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.TypeUnloadedException>.</xref:System.TypeUnloadedException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Пустая ссылка (`Nothing` в Visual Basic). |   | <xref:System.Exception.Message%2A>| Строка сообщения об ошибке. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TypeUnloadedException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение, описывающее ошибку."
  overload: System.TypeUnloadedException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TypeUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.TypeUnloadedException
  langs:
  - csharp
  name: TypeUnloadedException(SerializationInfo,StreamingContext)
  nameWithType: TypeUnloadedException.TypeUnloadedException(SerializationInfo,StreamingContext)
  fullName: System.TypeUnloadedException.TypeUnloadedException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.TypeUnloadedException&quot;> </xref> сериализованными данными."
  remarks: "Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке. Дополнительные сведения см. в разделе [сериализации XML и SOAP](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected TypeUnloadedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект, содержащий сериализованные данные объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекстные сведения об источнике или назначении."
  overload: System.TypeUnloadedException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TypeUnloadedException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.TypeUnloadedException
  langs:
  - csharp
  name: TypeUnloadedException(String,Exception)
  nameWithType: TypeUnloadedException.TypeUnloadedException(String,Exception)
  fullName: System.TypeUnloadedException.TypeUnloadedException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.TypeUnloadedException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, может содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException%2A>свойство.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>Свойство возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic) Если <xref:System.Exception.InnerException%2A>свойства не предоставляет конструктору значение внутреннего исключения.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.TypeUnloadedException>.</xref:System.TypeUnloadedException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Ссылка на внутреннее исключение. |   | <xref:System.Exception.Message%2A>| Строка сообщения об ошибке. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TypeUnloadedException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: innerException
      type: System.Exception
      description: "Исключение, которое стало причиной текущего исключения. Если `innerException` параметр не является указателем null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic), текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.TypeUnloadedException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.TypeUnloadedException.#ctor
  parent: System.TypeUnloadedException
  isExternal: false
  name: TypeUnloadedException()
  nameWithType: TypeUnloadedException.TypeUnloadedException()
  fullName: System.TypeUnloadedException.TypeUnloadedException()
- uid: System.TypeUnloadedException.#ctor(System.String)
  parent: System.TypeUnloadedException
  isExternal: false
  name: TypeUnloadedException(String)
  nameWithType: TypeUnloadedException.TypeUnloadedException(String)
  fullName: System.TypeUnloadedException.TypeUnloadedException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TypeUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.TypeUnloadedException
  isExternal: false
  name: TypeUnloadedException(SerializationInfo,StreamingContext)
  nameWithType: TypeUnloadedException.TypeUnloadedException(SerializationInfo,StreamingContext)
  fullName: System.TypeUnloadedException.TypeUnloadedException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.TypeUnloadedException.#ctor(System.String,System.Exception)
  parent: System.TypeUnloadedException
  isExternal: false
  name: TypeUnloadedException(String,Exception)
  nameWithType: TypeUnloadedException.TypeUnloadedException(String,Exception)
  fullName: System.TypeUnloadedException.TypeUnloadedException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.TypeUnloadedException.#ctor*
  parent: System.TypeUnloadedException
  isExternal: false
  name: TypeUnloadedException
  nameWithType: TypeUnloadedException.TypeUnloadedException
