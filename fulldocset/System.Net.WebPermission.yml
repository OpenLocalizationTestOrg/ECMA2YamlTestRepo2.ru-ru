### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "Управляет правами на доступ к Интернет-ресурсам HTTP."
  remarks: "WebPermission предоставляет набор методов и свойств для управления доступом к ресурсам в Интернете. Можно использовать для предоставления: ограниченным или неограниченным доступом к ресурсу, на основе WebPermission <xref:System.Security.Permissions.PermissionState>, задается при создании WebPermission.</xref:System.Security.Permissions.PermissionState>       Создание экземпляра WebPermission, вызывая его конструктор, с помощью одного из следующих наборов параметров:-без параметров. По умолчанию, <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Укажите либо <xref:System.Security.Permissions.PermissionState>Чтобы разрешить любой URI, используемый в данном классе назначения или <xref:System.Security.Permissions.PermissionState>Разрешить доступ только к URI, которые вы укажете через из <xref:System.Net.WebPermission.AddPermission%2A>метод.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>значения и строку URI.</xref:System.Net.NetworkAccess> Указанный URI имеет разрешения, предоставляемые <xref:System.Net.NetworkAccess>значение.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>Описатель и регулярное выражение URI.</xref:System.Net.NetworkAccess>       <xref:System.Net.WebPermission.ConnectList%2A>И <xref:System.Net.WebPermission.AcceptList%2A>хранения URL-адреса, к которому было предоставлено разрешение на доступ.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> Чтобы добавить URI в любой из этих списков, используйте <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> Если передать <xref:System.Net.NetworkAccess>как <xref:System.Net.NetworkAccess>параметр URI будет добавляться к <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission разрешает подключения к классу назначения с URI сопоставления <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      Настроек [!CAUTION] настроек для запрета доступа к Интернет-ресурсу, необходимо запретить доступ для всех возможных путей к этому ресурсу. Это требуется вызов <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>с параметром состояния в <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> </xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> Лучшим подходом является предоставление доступа к заданному ресурсу. Дополнительные сведения по этой теме см. [NIB: использование метода Deny](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) раздела.      Настроек [!NOTE] настроек необходимо запретить доступ, используя только канонического пути к ресурсу. Нет необходимости использовать путь синтаксические вариации.      Настроек [!NOTE] настроек пользователя по умолчанию порт сведения об имени и исключается из <xref:System.Uri>перед сравнением с аргументом регулярных выражений, которые предоставляет <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>конструктор.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> Если регулярное выражение содержит сведения о пользователе или номер порта по умолчанию, то все входящие <xref:System.Uri>s не сможет выполнить соответствует регулярному выражению.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.WebPermission&quot;> </xref> класса."
  remarks: "Создает новый экземпляр <xref:System.Net.WebPermission>класса.</xref:System.Net.WebPermission> Этот конструктор создает пустое разрешение, не предоставляет никаких прав."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.WebPermission&quot;> </xref> класс, который передает или отклоняет все запросы."
  remarks: "Значение `state` имеет значение <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>или <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>соответственно дает полностью ограниченный либо полностью неограниченный доступ ко всем переменным безопасности.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> При указании <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, затем можно предоставить доступ к отдельным URI, используя <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.WebPermission&quot;> </xref> класса с заданными правами доступа для заданного URI."
  remarks: "Этот конструктор инициализирует <xref:System.Net.WebPermission>и предоставляет результирующее разрешение либо на создание удаленного узла на подключение или принимать подключения к удаленному узлу с использованием URI, описанного параметром `uriString` параметр.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Значение NetworkAccess показывает тип доступа к заданному URI. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Указывает, что приложение разрешено принимать подключения из Интернета к локальному ресурсу. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Указывает, что приложение разрешено подключаться к определенным ресурсам Интернета."
    - id: uriString
      type: System.String
      description: "Строка URI, какой доступ предоставлены права."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.WebPermission&quot;> </xref> класса с заданными правами доступа для заданного регулярного выражения URI."
  remarks: "Этот конструктор инициализирует <xref:System.Net.WebPermission>и предоставляет результирующее разрешение либо на создание удаленного узла на подключение или принимать подключения к удаленному узлу с использованием URI, описанного параметром `uriRegex`параметр.</xref:System.Net.WebPermission>      Настроек [!NOTE] настроек рекомендуется создавать `uriRegex` с помощью <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, и <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>флаги.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      Настроек [!NOTE] настроек потенциального URI строка проверяется по списку, соответствующие регулярных выражений (<xref:System.Net.WebPermission.AcceptList%2A> или <xref:System.Net.WebPermission.ConnectList%2A>) двумя способами.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Во-первых потенциального URI строка проверяется по соответствующему списку. Затем, если нет соответствия, потенциального URI строка преобразуется в <xref:System.Uri>и проверяются на соответствие соответствующий список.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Объект <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> значение, которое указывает тип доступа к заданному URI. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Указывает, что приложение разрешено принимать подключения из Интернета к локальному ресурсу. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>Указывает, что приложение разрешено подключаться к определенным ресурсам Интернета."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Регулярное выражение, описывающее URI, к которым будет предоставляться доступ."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Это свойство возвращает перечисление отдельных разрешений на доступ, хранящихся в данном <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Возможные типы, содержащихся в возвращаемом перечислении объекты <xref:System.String>и &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Это свойство возвращает список локальных ресурсов, разрешенных <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> Класс, к которому применяется <xref:System.Net.WebPermission>имеет разрешение только на прием входящего подключения к локальному ресурсу, найденному в этом списке.</xref:System.Net.WebPermission>      Настроек [!NOTE] настроек идентификаторы URI можно добавить в этот список с помощью <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      Настроек [!NOTE] настроек потенциального URI строка проверяется по списку, соответствующие регулярных выражений (AcceptList или <xref:System.Net.WebPermission.ConnectList%2A>) двумя способами.</xref:System.Net.WebPermission.ConnectList%2A> Во-первых потенциального URI строка проверяется по соответствующему списку. Затем, если нет соответствия, потенциального URI строка преобразуется в <xref:System.Uri>и проверяются на соответствие соответствующий список.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Интерфейс, который содержит принять разрешения.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Добавляет заданную строку URI с заданными правами доступа к текущему <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Если вы указали <xref:System.Security.Permissions.PermissionState>как <xref:System.Security.Permissions.PermissionState>, используйте AddPermission, чтобы разрешить использование `uriString` целевого класса.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Аналогично `uriString` можно использовать для целевого объекта задается класс `access`. Укажите <xref:System.Net.NetworkAccess>как параметр доступа для добавления URI, указанный параметром `uriString` параметр в список URI принимают строки, или укажите <xref:System.Net.NetworkAccess>как доступ для добавления в список URI URI объединение строк.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      Настроек [!NOTE] настроек вызов AddPermission на <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>не будет действовать, поскольку все URI предоставляется разрешение.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      Настроек [!NOTE] настроек потенциального URI строка проверяется по списку, соответствующие регулярных выражений (<xref:System.Net.WebPermission.AcceptList%2A> или <xref:System.Net.WebPermission.ConnectList%2A>) двумя способами.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Во-первых потенциального URI строка проверяется по соответствующему списку. Затем, если нет соответствия, потенциального URI строка преобразуется в <xref:System.Uri>и проверяются на соответствие соответствующий список.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Объект <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> , определяющее права доступа, предоставленные URI."
    - id: uriString
      type: System.String
      description: "Строка, описывающая URI, в котором предоставлены права."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Добавляет указанный URI с заданными правами доступа к текущему <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Если вы указали <xref:System.Security.Permissions.PermissionState>как <xref:System.Security.Permissions.PermissionState>, используйте <xref:System.Net.WebPermission.AddPermission%2A>на использование `uriRegex` целевого класса.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Укажите <xref:System.Net.NetworkAccess>как `access` параметр для добавления URI, указанный параметром `uriRegex` параметр в список URI принимают строки, или укажите <xref:System.Net.NetworkAccess>как доступ для добавления в список URI URI объединение строк.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      Настроек [!NOTE] настроек вызов <xref:System.Net.WebPermission.AddPermission%2A>на <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>экземпляр не будет действовать как разрешение на все URI.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      Настроек [!NOTE] настроек рекомендуется создавать `uriRegex` с помощью <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, и <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>флаги.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      Настроек [!NOTE] настроек потенциального URI строка проверяется по списку, соответствующие регулярных выражений (<xref:System.Net.WebPermission.AcceptList%2A> или <xref:System.Net.WebPermission.ConnectList%2A>) двумя способами.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Во-первых потенциального URI строка проверяется по соответствующему списку. Затем, если нет соответствия, потенциального URI строка преобразуется в <xref:System.Uri>и проверяются на соответствие соответствующий список.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "NetworkAccess, определяющее права доступа, предоставленные URI."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Регулярное выражение, описывающее набор URI, в котором предоставлены права."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Это свойство возвращает перечисление отдельных разрешений, хранящихся в данном подключения <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Возможные типы, содержащихся в возвращаемом перечислении объекты <xref:System.String>и &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Это свойство возвращает список удаленных ресурсов, которые допускаются <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> Класс, к которому применяется <xref:System.Net.WebPermission>имеет разрешение только на подключение к локальному ресурсу, найденному в этом списке.</xref:System.Net.WebPermission>      Настроек [!NOTE] настроек идентификаторы URI можно добавить в этот список с помощью <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      Настроек [!NOTE] настроек потенциального URI строка проверяется по списку, соответствующие регулярных выражений (<xref:System.Net.WebPermission.AcceptList%2A> или ConnectList) двумя способами.</xref:System.Net.WebPermission.AcceptList%2A> Во-первых потенциального URI строка проверяется по соответствующему списку. Затем, если нет соответствия, потенциального URI строка преобразуется в <xref:System.Uri>и проверяются на соответствие соответствующий список.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Интерфейс, который содержит разрешения на подключение.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает копию объекта <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "<xref:System.Security.IPermission>Возвращаемый этим методом, представляет тот же самый доступ к ресурсам, что и исходный <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> </xref:System.Security.IPermission> Этот метод переопределяет <xref:System.Security.CodeAccessPermission.Copy%2A>и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Новый экземпляр <xref href=&quot;System.Net.WebPermission&quot;> </xref> класс, имеющий те же значения, что и исходный."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Восстанавливает <xref href=&quot;System.Net.WebPermission&quot;> </xref> из кодировки XML."
  remarks: "Метод FromXml восстанавливает <xref:System.Net.WebPermission>из кодировки XML, который определен в <xref:System.Security.SecurityElement>классе.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       Используйте <xref:System.Net.WebPermission.ToXml%2A>метод для XML-кодирования <xref:System.Net.WebPermission>, включая сведения о состоянии.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> securityElement </code> Параметр<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>не является элементом разрешения для этого типа."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает логическое пересечение двух <xref href=&quot;System.Net.WebPermission&quot;> </xref> экземпляров."
  remarks: "INTERSECT возвращает <xref:System.Net.WebPermission>, содержащий разрешения, общие и `target` и текущий экземпляр.</xref:System.Net.WebPermission>       Этот метод переопределяет <xref:System.Security.CodeAccessPermission.Intersect%2A>и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Для сравнения с текущим экземпляром."
    return:
      type: System.Security.IPermission
      description: "Новый <xref href=&quot;System.Net.WebPermission&quot;> </xref> , представляющий собой пересечение текущего экземпляра и <code> target </code> параметра. Если пересечение является пустым, метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>не является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или типа<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Определяет, является ли текущий <xref href=&quot;System.Net.WebPermission&quot;> </xref> является подмножеством указанного объекта."
  remarks: "Если текущий <xref:System.Net.WebPermission>определяет набор связанных ресурсов, которые полностью содержащихся `target` параметра, а затем текущего <xref:System.Net.WebPermission>является подмножеством `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> Этот метод переопределяет IsSubsetOf и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Для сравнения с текущим <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущий экземпляр является подмножеством <code> target </code> параметр; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если целью является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, метод возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для пустого текущего разрешения, не являющегося неограниченным и <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Конечный параметр не является экземпляром <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Текущий экземпляр содержит право кодировке Regex и будет отличаться право найдено в целевом экземпляре."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Проверяет полное состояние разрешения для <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Если <xref:System.Net.WebPermission>является <xref:System.Security.Permissions.PermissionState>, а затем целевой класс может использовать все URI.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> В противном случае особое разрешение должно быть выдано для любой URI, который вы хотите использовать с целевого класса.      Настроек [!NOTE] настроек используйте <xref:System.Net.WebPermission.AddPermission%2A>для добавления URI и описания его разрешений.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает кодировку XML для <xref href=&quot;System.Net.WebPermission&quot;> </xref> и его текущего состояния."
  remarks: "Используйте <xref:System.Net.WebPermission.FromXml%2A>метод, чтобы восстановить данные состояния из <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Объект <xref href=&quot;System.Security.SecurityElement&quot;> </xref> , содержащий XML-кодированное представление <xref href=&quot;System.Net.WebPermission&quot;> </xref>, включая сведения о состоянии."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает логическое объединение между двумя экземплярами <xref href=&quot;System.Net.WebPermission&quot;> </xref> класса."
  remarks: "Возвращает объединение <xref:System.Net.WebPermission>, содержащий все разрешения в обеих `target` и текущий экземпляр.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.WebPermission&quot;> </xref> Для объединения с текущим <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Net.WebPermission&quot;> </xref> , представляющее собой объединение текущего экземпляра и <code> target </code> параметра. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. Если целью является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, метод возвращает копию текущего <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Целевая папка не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или типа <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
