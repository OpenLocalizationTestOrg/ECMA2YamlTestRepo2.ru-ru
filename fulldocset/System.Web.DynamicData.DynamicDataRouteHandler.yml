### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicDataRouteHandler
  id: DynamicDataRouteHandler
  children:
  - System.Web.DynamicData.DynamicDataRouteHandler.#ctor
  - System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)
  - System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  - System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)
  - System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)
  - System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  - System.Web.DynamicData.DynamicDataRouteHandler.Model
  - System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)
  - System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)
  langs:
  - csharp
  name: DynamicDataRouteHandler
  nameWithType: DynamicDataRouteHandler
  fullName: System.Web.DynamicData.DynamicDataRouteHandler
  type: Class
  summary: "Шаблоны маршрута процессов динамических данных ASP.NET."
  syntax:
    content: 'public class DynamicDataRouteHandler : System.Web.Routing.IRouteHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.Routing.IRouteHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: DynamicDataRouteHandler()
  nameWithType: DynamicDataRouteHandler.DynamicDataRouteHandler()
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.DynamicDataRouteHandler()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.DynamicData.DynamicDataRouteHandler&quot;> </xref> класса."
  syntax:
    content: public DynamicDataRouteHandler ();
    parameters: []
  overload: System.Web.DynamicData.DynamicDataRouteHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)
  id: CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: CreateHandler(DynamicDataRoute,MetaTable,String)
  nameWithType: DynamicDataRouteHandler.CreateHandler(DynamicDataRoute,MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(DynamicDataRoute,MetaTable,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Создает обработчик для обработки запроса."
  remarks: ''
  example:
  - .
  syntax:
    content: public virtual System.Web.IHttpHandler CreateHandler (System.Web.DynamicData.DynamicDataRoute route, System.Web.DynamicData.MetaTable table, string action);
    parameters:
    - id: route
      type: System.Web.DynamicData.DynamicDataRoute
      description: "Соответствующий маршрут."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Таблица метаданных, содержащаяся в маршруте."
    - id: action
      type: System.String
      description: "Действие, содержащееся в маршруте."
    return:
      type: System.Web.IHttpHandler
      description: "Обработчик, который может обработать запрос."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  id: GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: GetCustomPageVirtualPath(MetaTable,String)
  nameWithType: DynamicDataRouteHandler.GetCustomPageVirtualPath(MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(MetaTable,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Создает виртуальный путь к пользовательской странице."
  syntax:
    content: protected virtual string GetCustomPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Таблица метаданных модели данных, для страницы."
    - id: viewName
      type: System.String
      description: "Имя действия представления, которым является имя страницы без расширения имени файла «.aspx»."
    return:
      type: System.String
      description: "Виртуальный путь к пользовательской странице."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)
  id: GetRequestContext(System.Web.HttpContext)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: GetRequestContext(HttpContext)
  nameWithType: DynamicDataRouteHandler.GetRequestContext(HttpContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(HttpContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает <xref:System.Web.Routing.RequestContext>экземпляра для текущего веб-запроса.</xref:System.Web.Routing.RequestContext>"
  remarks: "Новый контекст создается в том случае, если это необходимо. Это может произойти, если текущий запрос не является запросом платформы динамических данных."
  syntax:
    content: public static System.Web.Routing.RequestContext GetRequestContext (System.Web.HttpContext httpContext);
    parameters:
    - id: httpContext
      type: System.Web.HttpContext
      description: "Сведения о контексте, который связан с веб-запроса."
    return:
      type: System.Web.Routing.RequestContext
      description: "Контекст запроса для веб-запроса."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>httpContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)
  id: GetRequestMetaTable(System.Web.HttpContext)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: GetRequestMetaTable(HttpContext)
  nameWithType: DynamicDataRouteHandler.GetRequestMetaTable(HttpContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(HttpContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> объекта из <xref href=&quot;System.Web.HttpContext&quot;> </xref> объекта."
  syntax:
    content: public static System.Web.DynamicData.MetaTable GetRequestMetaTable (System.Web.HttpContext httpContext);
    parameters:
    - id: httpContext
      type: System.Web.HttpContext
      description: "Сведения о контексте, который связан с веб-запроса."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Таблица метаданных модели данных, связанный с текущего веб-запроса или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если запрос является запросом платформы динамических данных"
  overload: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>httpContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  id: GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: GetScaffoldPageVirtualPath(MetaTable,String)
  nameWithType: DynamicDataRouteHandler.GetScaffoldPageVirtualPath(MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(MetaTable,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает виртуальный путь страницы, которая включена для динамических данных."
  syntax:
    content: protected virtual string GetScaffoldPageVirtualPath (System.Web.DynamicData.MetaTable table, string viewName);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Таблица метаданных, для страницы."
    - id: viewName
      type: System.String
      description: "Имя действия представления, которым является имя страницы без расширения имени файла «.aspx»."
    return:
      type: System.String
      description: "Виртуальный путь к странице."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.Model
  id: Model
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: Model
  nameWithType: DynamicDataRouteHandler.Model
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> объекта, <xref href=&quot;System.Web.DynamicData.DynamicDataRouteHandler&quot;> </xref> сопоставлен класс."
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Модель данных, <xref href=&quot;System.Web.DynamicData.DynamicDataRouteHandler&quot;> </xref> сопоставлен класс."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)
  id: SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: SetRequestMetaTable(HttpContext,MetaTable)
  nameWithType: DynamicDataRouteHandler.SetRequestMetaTable(HttpContext,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(HttpContext,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Наборы <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> объект, связанный с текущим <xref href=&quot;System.Web.HttpRequest&quot;> </xref> объекта."
  remarks: "<xref:System.Web.HttpRequest>Объект может быть `null` для данных не в динамических запросов.</xref:System.Web.HttpRequest>"
  syntax:
    content: public static void SetRequestMetaTable (System.Web.HttpContext httpContext, System.Web.DynamicData.MetaTable table);
    parameters:
    - id: httpContext
      type: System.Web.HttpContext
      description: "Сведения о контексте, который связан с веб-запроса."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Metatable, связанный с текущим запросом."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)
  id: System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)
  isEii: true
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  langs:
  - csharp
  name: System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
  nameWithType: DynamicDataRouteHandler.System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает обработчик, который обрабатывает шаблоны маршрута платформы динамических данных ASP.NET."
  remarks: "Этот метод реализует <xref:System.Web.Routing.IRouteHandler.GetHttpHandler%2A>метод интерфейса.</xref:System.Web.Routing.IRouteHandler.GetHttpHandler%2A>"
  syntax:
    content: System.Web.IHttpHandler IRouteHandler.GetHttpHandler (System.Web.Routing.RequestContext requestContext);
    parameters:
    - id: requestContext
      type: System.Web.Routing.RequestContext
      description: "Сведения о контексте, который связан с веб-запроса."
    return:
      type: System.Web.IHttpHandler
      description: "Обработчик, который обрабатывает шаблоны маршрута платформы динамических данных ASP.NET."
  overload: System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.DynamicDataRouteHandler.#ctor
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: DynamicDataRouteHandler()
  nameWithType: DynamicDataRouteHandler.DynamicDataRouteHandler()
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.DynamicDataRouteHandler()
- uid: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: CreateHandler(DynamicDataRoute,MetaTable,String)
  nameWithType: DynamicDataRouteHandler.CreateHandler(DynamicDataRoute,MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(DynamicDataRoute,MetaTable,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.DynamicData.DynamicDataRoute
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicDataRoute
  nameWithType: DynamicDataRoute
  fullName: System.Web.DynamicData.DynamicDataRoute
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetCustomPageVirtualPath(MetaTable,String)
  nameWithType: DynamicDataRouteHandler.GetCustomPageVirtualPath(MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(MetaTable,String)
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetRequestContext(HttpContext)
  nameWithType: DynamicDataRouteHandler.GetRequestContext(HttpContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(HttpContext)
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetRequestMetaTable(HttpContext)
  nameWithType: DynamicDataRouteHandler.GetRequestMetaTable(HttpContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(HttpContext)
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetScaffoldPageVirtualPath(MetaTable,String)
  nameWithType: DynamicDataRouteHandler.GetScaffoldPageVirtualPath(MetaTable,String)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(MetaTable,String)
- uid: System.Web.DynamicData.DynamicDataRouteHandler.Model
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: Model
  nameWithType: DynamicDataRouteHandler.Model
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.Model
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: SetRequestMetaTable(HttpContext,MetaTable)
  nameWithType: DynamicDataRouteHandler.SetRequestMetaTable(HttpContext,MetaTable)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(HttpContext,MetaTable)
- uid: System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
  nameWithType: DynamicDataRouteHandler.System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
  fullName: System.Web.DynamicData.DynamicDataRouteHandler.System.Web.Routing.IRouteHandler.GetHttpHandler(RequestContext)
- uid: System.Web.DynamicData.DynamicDataRouteHandler.#ctor*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: DynamicDataRouteHandler
  nameWithType: DynamicDataRouteHandler.DynamicDataRouteHandler
- uid: System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: CreateHandler
  nameWithType: DynamicDataRouteHandler.CreateHandler
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetCustomPageVirtualPath
  nameWithType: DynamicDataRouteHandler.GetCustomPageVirtualPath
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetRequestContext
  nameWithType: DynamicDataRouteHandler.GetRequestContext
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetRequestMetaTable
  nameWithType: DynamicDataRouteHandler.GetRequestMetaTable
- uid: System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: GetScaffoldPageVirtualPath
  nameWithType: DynamicDataRouteHandler.GetScaffoldPageVirtualPath
- uid: System.Web.DynamicData.DynamicDataRouteHandler.Model*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: Model
  nameWithType: DynamicDataRouteHandler.Model
- uid: System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: SetRequestMetaTable
  nameWithType: DynamicDataRouteHandler.SetRequestMetaTable
- uid: System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler*
  parent: System.Web.DynamicData.DynamicDataRouteHandler
  isExternal: false
  name: System.Web.Routing.IRouteHandler.GetHttpHandler
  nameWithType: DynamicDataRouteHandler.System.Web.Routing.IRouteHandler.GetHttpHandler
