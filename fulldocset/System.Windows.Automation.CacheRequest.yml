### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.CacheRequest
  id: CacheRequest
  children:
  - System.Windows.Automation.CacheRequest.#ctor
  - System.Windows.Automation.CacheRequest.Activate
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.CacheRequest.AutomationElementMode
  - System.Windows.Automation.CacheRequest.Clone
  - System.Windows.Automation.CacheRequest.Current
  - System.Windows.Automation.CacheRequest.Pop
  - System.Windows.Automation.CacheRequest.Push
  - System.Windows.Automation.CacheRequest.TreeFilter
  - System.Windows.Automation.CacheRequest.TreeScope
  langs:
  - csharp
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
  type: Class
  summary: "Определяет свойства и шаблоны, которые [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] framework кэширует при <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> получается."
  remarks: "Получение свойств и шаблонов с помощью [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] требует вызовов между процессами, которые могут снизить производительность. При кэшировании значения свойства и шаблоны в пакетной операции, можно улучшить производительность приложения.       Создайте новый запрос в кэш путем вызова конструктора класса. Запрос заполняется повторные вызовы <xref:System.Windows.Automation.CacheRequest.Add%2A>метод.</xref:System.Windows.Automation.CacheRequest.Add%2A>       Только один CacheRequest может быть активна. Существует два способа активации запроса:-вызовите <xref:System.Windows.Automation.CacheRequest.Activate%2A>в запросе.</xref:System.Windows.Automation.CacheRequest.Activate%2A> Это помещает запрос в стек, а запрос извлекается, если объект удален. Чтобы обеспечить удаление объектов, даже если возникает исключение, используйте возвращаемое значение <xref:System.Windows.Automation.CacheRequest.Activate%2A>в `using` блока (`Using` в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]).</xref:System.Windows.Automation.CacheRequest.Activate%2A>      -Запрос put в стек внутренней путем вызова <xref:System.Windows.Automation.CacheRequest.Push%2A>.</xref:System.Windows.Automation.CacheRequest.Push%2A> Активен только верхний запрос в стеке, и он должен быть удален из стека с помощью <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</xref:System.Windows.Automation.CacheRequest.Pop%2A> другая Вызов запроса отключает его.       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]элементы, полученные во время активного запроса будут содержать кэшированные значения свойств и шаблонов."
  example:
  - "The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]  \n  \n The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public sealed class CacheRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.#ctor
  id: '#ctor'
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
  type: Constructor
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> класса."
  remarks: "При <xref:System.Windows.Automation.CacheRequest>создания <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>идентификатор добавляется в качестве свойства по умолчанию кэш.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>"
  syntax:
    content: public CacheRequest ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Activate
  id: Activate
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Задает этот <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> как активный спецификации для элементов, которые возвращаются при <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref> запрашивается в том же потоке."
  remarks: "С помощью этого метода обычно предпочтительным является использование <xref:System.Windows.Automation.CacheRequest.Push%2A>и <xref:System.Windows.Automation.CacheRequest.Pop%2A>с точки зрения активация <xref:System.Windows.Automation.CacheRequest>.</xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.CacheRequest.Pop%2A> </xref:System.Windows.Automation.CacheRequest.Push%2A> Объект помещается в стек при вызове и затем выводятся из при удалении активировать. Чтобы обеспечить удаление объектов, поместите возвращаемое значение в `using` блока (`Using` в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  example:
  - "The following example shows how to use Activate to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public IDisposable Activate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "Объект, который может быть использовано для удаления <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  id: Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Добавляет указанный <xref href=&quot;System.Windows.Automation.AutomationPattern&quot;> </xref> идентификатор этого <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  remarks: "Добавление шаблона, который уже находится в запросе кэша не оказывает влияния."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "Идентификатор, задающий шаблон для кэширования."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> Активен."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  id: Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Добавляет указанный <xref href=&quot;System.Windows.Automation.AutomationProperty&quot;> </xref> идентификатор этого <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  remarks: "При <xref:System.Windows.Automation.CacheRequest>создания <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>идентификатор добавляется в качестве свойства по умолчанию кэш.</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> </xref:System.Windows.Automation.CacheRequest>       Добавление свойства, которое уже находится в запросе кэша не оказывает влияния."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "Идентификатор, задающий значение свойства для кэширования."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> Активен."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  id: AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Возвращает или задает значение, указывающее, должен ли возвращаемые элементы содержать полные ссылки на базовый [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], или только кэшированные данные."
  remarks: "<xref:System.Windows.Automation.AutomationElementMode>значение по умолчанию и указывает, что возвращенные элементы содержат полную ссылку на базовый [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)].</xref:System.Windows.Automation.AutomationElementMode> <xref:System.Windows.Automation.AutomationElementMode>Указывает, что возвращенные элементы не имеют ссылок базовый [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]и содержат только кэшированные данные.</xref:System.Windows.Automation.AutomationElementMode>       Определенные операции на элементы, включая <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, и <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, требуют полной ссылки; попытка выполнить их на элемент, который не имеет ни одного приводит к <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Automation.AutomationElement.SetFocus%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> </xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>       С помощью <xref:System.Windows.Automation.AutomationElementMode>может быть более эффективным, если требуются только свойства, как его избежать дополнительной нагрузки, связанных с настройкой полные ссылки.</xref:System.Windows.Automation.AutomationElementMode>"
  example:
  - "In the following example, AutomationElementMode is set to <xref:System.Windows.Automation.AutomationElementMode>, with the result that only cached properties and patterns are available for the retrieved object.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }
    return:
      type: System.Windows.Automation.AutomationElementMode
      description: "<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>Если возвращенные элементы имеют полные ссылки на базовый [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]; в противном случае <xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.AutomationElementMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Clone
  id: Clone
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Создает копию этого <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  syntax:
    content: public System.Windows.Automation.CacheRequest Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.CacheRequest
      description: "Изменяемая копия текущего объекта."
  overload: System.Windows.Automation.CacheRequest.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Current
  id: Current
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Возвращает <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> , активных в текущий поток."
  syntax:
    content: public static System.Windows.Automation.CacheRequest Current { get; }
    return:
      type: System.Windows.Automation.CacheRequest
      description: "Активный <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Pop
  id: Pop
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Удаляет активного <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> из внутреннего стека текущего потока."
  remarks: "Только текущий активный запрос можно удалить с помощью метода Pop. Попытка удалить запрос, который является не текущим, приводит к возникновению исключения.       Если вложенности запросов кэша предпочтительнее использовать <xref:System.Windows.Automation.CacheRequest.Activate%2A>поместить запрос в стеке.</xref:System.Windows.Automation.CacheRequest.Activate%2A> Причина заключается в том, что можно использовать <xref:System.Windows.Automation.CacheRequest.Activate%2A>в `using` блока (`Using` в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), гарантируя, что запрос извлекается из стека, даже если возникнет исключение.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using Pop.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Pop ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Была предпринята попытка удалить запрос кэша, который не помещается в стек последним."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Push
  id: Push
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Окружение <xref href=&quot;System.Windows.Automation.CacheRequest&quot;> </xref> в стеке внутреннее состояние, сделав его активный запрос в текущем потоке."
  remarks: "Несколько <xref:System.Windows.Automation.CacheRequest>объектов можно поместить в стек состояние.</xref:System.Windows.Automation.CacheRequest> Запросов кэша должны быть удалены из стека в порядке, в котором они были размещены на; в противном случае <xref:System.InvalidOperationException>исключения.</xref:System.InvalidOperationException>       Если вложенности запросов кэша предпочтительнее использовать <xref:System.Windows.Automation.CacheRequest.Activate%2A>поместить запрос в стеке.</xref:System.Windows.Automation.CacheRequest.Activate%2A> Причина заключается в том, что можно использовать <xref:System.Windows.Automation.CacheRequest.Activate%2A>в `using` блока (`Using` в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), гарантируя, что запрос извлекается из стека, даже если возникнет исключение.</xref:System.Windows.Automation.CacheRequest.Activate%2A>"
  example:
  - "The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using Push.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Push ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Push*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  id: TreeFilter
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Возвращает или задает значение, определяющее представление [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] дерево элементов, используемое при кэшировании."
  remarks: "Дополнительные сведения о представлениях [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] дерево элементов в разделе [Общие сведения о дереве модели автоматизации пользовательского интерфейса](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "In the following example, TreeFilter is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.Condition TreeFilter { get; set; }
    return:
      type: System.Windows.Automation.Condition
      description: "Представление [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] дерево элементов. По умолчанию используется представление <xref href=&quot;System.Windows.Automation.Automation.ControlViewCondition&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.TreeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeScope
  id: TreeScope
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Возвращает или задает значение, указывающее, выполняется ли кэширование только для корня поддерева или для дочерних элементов и потомков."
  remarks: "Область кэширования относительно объекта или объектов, выбираются, не относительно объекта, на котором <xref:System.Windows.Automation.AutomationElement.FindFirst%2A>или <xref:System.Windows.Automation.AutomationElement.FindAll%2A>называется.</xref:System.Windows.Automation.AutomationElement.FindAll%2A> </xref:System.Windows.Automation.AutomationElement.FindFirst%2A> См. пример."
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and TreeScope is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.TreeScope TreeScope { get; set; }
    return:
      type: System.Windows.Automation.TreeScope
      description: "One or more of <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>. Значение по умолчанию — <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>."
  overload: System.Windows.Automation.CacheRequest.TreeScope*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Попытка установить свойства <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref> или <xref href=&quot;System.Windows.Automation.TreeScope&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.CacheRequest.#ctor
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
- uid: System.Windows.Automation.CacheRequest.Activate
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.AutomationElementMode
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementMode
  nameWithType: AutomationElementMode
  fullName: System.Windows.Automation.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Current
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
- uid: System.Windows.Automation.CacheRequest.Push
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.CacheRequest.TreeScope
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.CacheRequest.#ctor*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Activate*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate
  nameWithType: CacheRequest.Activate
- uid: System.Windows.Automation.CacheRequest.Add*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add
  nameWithType: CacheRequest.Add
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone
  nameWithType: CacheRequest.Clone
- uid: System.Windows.Automation.CacheRequest.Current*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop
  nameWithType: CacheRequest.Pop
- uid: System.Windows.Automation.CacheRequest.Push*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push
  nameWithType: CacheRequest.Push
- uid: System.Windows.Automation.CacheRequest.TreeFilter*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
- uid: System.Windows.Automation.CacheRequest.TreeScope*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
