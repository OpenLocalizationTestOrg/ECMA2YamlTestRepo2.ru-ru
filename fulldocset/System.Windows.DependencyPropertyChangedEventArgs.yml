### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyChangedEventArgs
  id: DependencyPropertyChangedEventArgs
  children:
  - System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  - System.Windows.DependencyPropertyChangedEventArgs.NewValue
  - System.Windows.DependencyPropertyChangedEventArgs.OldValue
  - System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.Property
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
  type: Struct
  summary: "Предоставляет данные для различных событий изменения свойств. Обычно такие события сообщают об изменениях действительных значений в значения свойства зависимости только для чтения. Другой вариант использования — в рамках <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> реализации."
  remarks: "События, которые класс DependencyPropertyChangedEventArgs используется для данных события и <xref:System.Windows.DependencyPropertyChangedEventHandler>реализации методов для обработчиков, в целом следовать шаблону именования `Is*Changed`и обычно реализуется как [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] события без <xref:System.Windows.RoutedEvent>резервным (они не являются перенаправленные события).</xref:System.Windows.RoutedEvent> </xref:System.Windows.DependencyPropertyChangedEventHandler> Один из классов умение работать с методами, которые «обработки». в противном случае причинам событий, сообщающих изменений состояния с помощью изменения свойства, такие как <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, также использовать класс DependencyPropertyChangedEventArgs для данных события.</xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>       Сценарий для <xref:System.Windows.PropertyChangedCallback>заключается в использовании аргументы для отчета старое и новое значения, полученные из вычисление системы свойств свойства.</xref:System.Windows.PropertyChangedCallback> Обратный вызов, который обрабатывает старых и новых значений может выбрать специальную обработку в зависимости от этих значений, например, отказ от реакции на изменения значений, признанные несущественными."
  example:
  - "The following example uses the DependencyPropertyChangedEventArgs class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by DependencyPropertyChangedEventArgs, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public struct DependencyPropertyChangedEventArgs
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.Object)'
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> класса."
  remarks: "Средства реализации пользовательских событий, сообщающих об изменениях свойств зависимостей следует использовать этот конструктор для заполнения данных события со сведениями об изменении при возникновении события."
  syntax:
    content: public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);
    parameters:
    - id: property
      type: System.Windows.DependencyProperty
      description: "Идентификатор измененного свойства зависимостей."
    - id: oldValue
      type: System.Object
      description: "Значение свойства перед изменением соответствующего события или изменения состояния."
    - id: newValue
      type: System.Object
      description: "Значение свойства после изменения, о которых сообщили соответствующего события или изменения состояния."
  overload: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Определяет, эквивалентен ли указанный объект текущего <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  remarks: "Данная реализация полагается на эквивалентность значений всех свойств, включая внутренние свойства."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, сравниваемый с текущим <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если предоставленный объект эквивалентен текущему <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  id: Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Определяет, является ли предоставленный <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> эквивалентно значению текущего <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  remarks: "Данная реализация полагается на эквивалентность значений всех свойств, включая внутренние свойства."
  syntax:
    content: public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);
    parameters:
    - id: args
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> Для сравнения с текущим<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если предоставленный <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> эквивалентно значению текущего <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Возвращает хэш-код для этой <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код 32-разрядное целое число со знаком."
  overload: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  id: NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Возвращает значение свойства после изменения."
  remarks: "Тип указанного значения всегда должен быть приводимым к типу сообщаемого свойства зависимостей."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object NewValue { get; }
    return:
      type: System.Object
      description: "Значение свойства после изменения."
  overload: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  id: OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Возвращает значение свойства перед изменением."
  remarks: "Тип указанного значения всегда должен быть приводимым к типу сообщаемого свойства зависимостей."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object OldValue { get; }
    return:
      type: System.Object
      description: "Значение свойства перед изменением."
  overload: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Определяет, являются ли два заданных <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> объектов имеют одинаковое значение."
  remarks: "Реализация использует ту же логику, <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Первый <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> для сравнения."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Второй <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> экземпляры эквивалентны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Определяет, являются ли два заданных <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> объекты различаются."
  remarks: "Реализация возвращает инверсию ту же логику, <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Первый <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> для сравнения."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "Второй <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> экземпляров отличается; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  id: Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Возвращает идентификатор для свойства зависимостей, в котором произошло изменение значения."
  remarks: "Это свойство имеет значение, если в общий <xref:System.Windows.PropertyChangedCallback>, зарегистрированный для нескольких свойств, и это необходимо для однозначного определения, какие изменения свойства обратный вызов.</xref:System.Windows.PropertyChangedCallback> Свойство неприменимо обычно для вызова событий, так как обычно в соответствие 1:1 свойства и события изменения свойства отчета. Событие, которое было вызвано является указанием, из которых изменены свойства."
  syntax:
    content: public System.Windows.DependencyProperty Property { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "Поле идентификатора свойства зависимостей, в котором произошло изменение значения."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Property*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyChangedEventArgs.Equals
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
