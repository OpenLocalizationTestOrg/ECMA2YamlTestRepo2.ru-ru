### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.LinearGradientBrush
  id: LinearGradientBrush
  children:
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.Blend
  - System.Drawing.Drawing2D.LinearGradientBrush.Clone
  - System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  - System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  - System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  - System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.Transform
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  langs:
  - csharp
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush
  fullName: System.Drawing.Drawing2D.LinearGradientBrush
  type: Class
  summary: "Инкапсулирует <xref href=&quot;System.Drawing.Brush&quot;> </xref> линейным градиентом. Этот класс не наследуется."
  remarks: "Этот класс инкапсулирует двух цветовые градиенты и пользовательские многоцветные градиенты.       Все линейные градиенты определены вдоль линии, задаваемой ширина прямоугольника, либо двумя точками.       По умолчанию двух-линейной градиентной — равномерный горизонтальный линейный переход от начального к конечному вдоль заданной линии. Настройте blend шаблон с помощью <xref:System.Drawing.Drawing2D.Blend>класса <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>методов, или <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>методы.</xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> </xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> </xref:System.Drawing.Drawing2D.Blend> Настроить направление градиента, указав <xref:System.Drawing.Drawing2D.LinearGradientMode>перечисления или угла в конструкторе.</xref:System.Drawing.Drawing2D.LinearGradientMode>       Используйте <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>свойство для создания многоцветный градиент.</xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>       <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>Свойство задает локальное геометрическое преобразование, применяемое к градиенту.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>"
  example:
  - "The following example creates a horizontal LinearGradientBrush; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200. For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255. This example is designed for use with Windows Forms. The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n [!code-vb[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/visualbasic/t-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/csharp/t-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: 'public sealed class LinearGradientBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класса с заданными точками и цветами."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.Point
      description: "Объект <xref href=&quot;System.Drawing.Point&quot;> </xref> структуру, которая представляет начальную точку линейного градиента."
    - id: point2
      type: System.Drawing.Point
      description: "Объект <xref href=&quot;System.Drawing.Point&quot;> </xref> структуру, которая представляет конечной точки линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет линейного градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет линейного градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класса с заданными точками и цветами."
  syntax:
    content: public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.PointF
      description: "Объект <xref href=&quot;System.Drawing.PointF&quot;> </xref> структуру, которая представляет начальную точку линейного градиента."
    - id: point2
      type: System.Drawing.PointF
      description: "Объект <xref href=&quot;System.Drawing.PointF&quot;> </xref> структуру, которая представляет конечной точки линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет линейного градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет линейного градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класс на основе прямоугольника, начальный и конечный цвета и ориентацию."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> элементом перечисления, указывающее ориентацию градиента. Ориентация определяет начальную и конечную точки градиента. Например <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> указывает, что начальную точку верхнего левого угла прямоугольника и конечная точка — нижнего правого угла прямоугольника."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класс на основе прямоугольника, начальный и конечный цвета и угол ориентации."
  remarks: "Все точки вдоль любой линии, перпендикулярной линии ориентации имеют тот же цвет.       Начальная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на начальной линии имеют начальный цвет. Затем конечная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на конечной линии имеют конечный цвет.       Угол наклона линии ориентации определяет, какие углы пройти начальная и конечная строки. Например если угол лежит в диапазоне от 0 до 90 градусов, Начальная строка проходит через верхнего левого угла, и конечная строка проходит через нижнего правого угла."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: angle
      type: System.Single
      description: "Угол, измеряемый в градусах по часовой стрелке относительно оси x, ориентацию линии градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> на основе прямоугольника, начальный и конечный цвета и режима ориентации."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Объект <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> элементом перечисления, указывающее ориентацию градиента. Ориентация определяет начальную и конечную точки градиента. Например <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> указывает, что начальную точку верхнего левого угла прямоугольника и конечная точка — нижнего правого угла прямоугольника."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класс на основе прямоугольника, начальный и конечный цвета и угол ориентации."
  remarks: "Все точки вдоль любой линии, перпендикулярной линии ориентации имеют тот же цвет.       Начальная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на начальной линии имеют начальный цвет. Затем конечная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на конечной линии имеют конечный цвет.       Угол наклона линии ориентации определяет, какие углы пройти начальная и конечная строки. Например если угол лежит в диапазоне от 0 до 90 градусов, Начальная строка проходит через верхнего левого угла, и конечная строка проходит через нижнего правого угла."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Объект <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: angle
      type: System.Single
      description: "Угол, измеряемый в градусах по часовой стрелке относительно оси x, ориентацию линии градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класс на основе прямоугольника, начальный и конечный цвета и угол ориентации."
  remarks: "Все точки вдоль любой линии, перпендикулярной линии ориентации имеют тот же цвет.       Начальная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на начальной линии имеют начальный цвет. Затем конечная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на конечной линии имеют конечный цвет.       Угол наклона линии ориентации определяет, какие углы пройти начальная и конечная строки. Например если угол лежит в диапазоне от 0 до 90 градусов, Начальная строка проходит через верхнего левого угла, и конечная строка проходит через нижнего правого угла."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: angle
      type: System.Single
      description: "Угол, измеряемый в градусах по часовой стрелке относительно оси x, ориентацию линии градиента."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для указания, что угол затрагивается преобразованием, связанным с этим <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает новый экземпляр <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> класс на основе прямоугольника, начальный и конечный цвета и угол ориентации."
  remarks: "Все точки вдоль любой линии, перпендикулярной линии ориентации имеют тот же цвет.       Начальная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на начальной линии имеют начальный цвет. Затем конечная строка перпендикулярной линии ориентации и проходит через один из углов прямоугольника. Все точки на конечной линии имеют конечный цвет.       Угол наклона линии ориентации определяет, какие углы пройти начальная и конечная строки. Например если угол лежит в диапазоне от 0 до 90 градусов, Начальная строка проходит через верхнего левого угла, и конечная строка проходит через нижнего правого угла."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Объект <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> структуры, задающее границы для линейного градиента."
    - id: color1
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая начальный цвет градиента."
    - id: color2
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, представляющая конечный цвет градиента."
    - id: angle
      type: System.Single
      description: "Угол, измеряемый в градусах по часовой стрелке относительно оси x, ориентацию линии градиента."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для указания, что угол затрагивается преобразованием, связанным с этим <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  id: Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> , определяющий позиции и коэффициенты, задающие настраиваемый спад для градиента."
  remarks: "Объект <xref:System.Drawing.Drawing2D.Blend>содержит соответствующие массивы коэффициентов смешения и положений.</xref:System.Drawing.Drawing2D.Blend> Коэффициенты смешения определяют процентные отношения начального и конечного цветов для соответствующего места. Позиции задаются в процентах от расстояния вдоль линии градиента."
  syntax:
    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }
    return:
      type: System.Drawing.Drawing2D.Blend
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> , представляющий настраиваемый спад для градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает точную копию данного объекта <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/visualbasic/m-system.drawing.drawing_18_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/cpp/m-system.drawing.drawing_18_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/csharp/m-system.drawing.drawing_18_1.cs)]"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> Данным методом, приводится к объекту."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  id: GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает значение, указывающее, включена ли гамма-коррекцию для <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public bool GammaCorrection { get; set; }
    return:
      type: System.Boolean
      description: "Значение равно <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> если гамма-коррекция включена для <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  id: InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> , определяющий многоцветный линейного градиента."
  remarks: "Объект <xref:System.Drawing.Drawing2D.ColorBlend>содержит соответствующие массивы цветов и позиций.</xref:System.Drawing.Drawing2D.ColorBlend> Позиции представлены значениями от 0 до 1, задающими доли расстояния вдоль градиентной линией, в котором находится соответствующий цвет.       Задание этого свойства создает многоцветный градиент с одним цветом в каждой позиции по линии градиента. Задание этого свойства отменяет все предыдущие настройки цвета, положение и рассеивания для <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush>"
  syntax:
    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }
    return:
      type: System.Drawing.Drawing2D.ColorBlend
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> , определяющий многоцветный линейного градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  id: LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает начальный и конечный цвета градиента."
  syntax:
    content: public System.Drawing.Color[] LinearColors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "Массив из двух <xref href=&quot;System.Drawing.Color&quot;> </xref> структуры, которые представляет начальный и конечный цвета градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , представляющий локальное геометрическое преобразование объекта <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> по заданному <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> путем добавления перед указанным <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , На который умножается геометрическое преобразование."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Умножает <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , представляющий локальное геометрическое преобразование объекта <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> по заданному <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/visualbasic/90c76832-46c2-4578-8b9f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/cpp/90c76832-46c2-4578-8b9f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/csharp/90c76832-46c2-4578-8b9f-_1.cs)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , На который умножается геометрическое преобразование."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , задающий порядок, в котором для перемножения двух матриц."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  id: Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Получает прямоугольную область, которая определяет начальную и конечную точки градиента."
  remarks: "Левая сторона прямоугольника определяет начальную точку линейного градиента, и правой стороны прямоугольника указывает конечную точку."
  syntax:
    content: public System.Drawing.RectangleF Rectangle { get; }
    return:
      type: System.Drawing.RectangleF
      description: "Объект <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> структура, которая задает начальную и конечную точку градиента."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Сбрасывает <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>Свойства identity.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n-   Resets the transform.  \n  \n-   Draws a third ellipse to the screen below the first two.  \n  \n Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the ResetTransform method, the gradient has been reduced to match.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_6_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/cpp/m-system.drawing.drawing_6_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/csharp/m-system.drawing.drawing_6_1.cs)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Поворачивает локальное геометрическое преобразование на заданную величину. Этот метод добавляет поворот перед преобразованием."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Поворачивает локальное геометрическое преобразование на заданную величину в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  \n  \n Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/visualbasic/6302de64-3f75-4fc9-b2c4-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/cpp/6302de64-3f75-4fc9-b2c4-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/csharp/6302de64-3f75-4fc9-b2c4-_1.cs)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , указывающий, в конце или в начале матрица поворота."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Масштабирует локальное геометрическое преобразование на заданные значения. Этот метод добавляет матрица масштабирования для преобразования."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "Величина, на коэффициент изменения масштаба преобразования по оси х."
    - id: sy
      type: System.Single
      description: "Величина, на коэффициент изменения масштаба преобразования по оси y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Масштабирует локальное геометрическое преобразование на заданные значения в указанном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draw an ellipse to the screen using this brush.  \n  \n-   Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  \n  \n Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/visualbasic/e0c3e704-6b4f-48bc-83d2-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/cpp/e0c3e704-6b4f-48bc-83d2-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/csharp/e0c3e704-6b4f-48bc-83d2-_1.cs)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "Величина, на коэффициент изменения масштаба преобразования по оси х."
    - id: sy
      type: System.Single
      description: "Величина, на коэффициент изменения масштаба преобразования по оси y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , указывающий, в конце или в начале матрица масштабирования."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  id: SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает линейный градиент с цветом центра и линейным переходом к цветам на обоих концах."
  remarks: "Этот метод задает `focus`, который является точкой, где градиент состоит только из конечного цвета. `focus` Представляет место как пропорцию расстояния вдоль линии градиента. Градиент уменьшается к начальному цвету линейно с любой стороны."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void SetBlendTriangularShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Значение от 0 до 1, определяющее центр градиента (точка, в которой градиент состоит только из конечного цвета)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  id: SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает линейный градиент с цветом центра и линейным переходом к цветам на обоих концах."
  remarks: "Этот метод задает `focus`, который является точкой, где градиент состоит только из конечного цвета. `focus` Представляет место как пропорцию расстояния вдоль линии градиента. Градиент уменьшается к начальному цвету линейно с любой стороны."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the transformed brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/visualbasic/e6c3d0c9-aed2-4364-946f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/cpp/e6c3d0c9-aed2-4364-946f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/csharp/e6c3d0c9-aed2-4364-946f-_1.cs)]"
  syntax:
    content: public void SetBlendTriangularShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Значение от 0 до 1, определяющее центр градиента (точка, в которой градиент состоит только из конечного цвета)."
    - id: scale
      type: System.Single
      description: "Значение от 0 through1, определяющее, насколько быстро цвета переходят от начального цвета для `focus` (конечный цвет)"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  id: SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает градиентный переход на основе колоколообразной кривой."
  remarks: "Этот метод задает `focus`, который является точкой, где градиент состоит только из конечного цвета. `focus` Представляет место как пропорцию расстояния вдоль линии градиента. На основании колоколообразной кривой (нормальное распределение) с любой стороны начальный цвет градиента уменьшается."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`
  syntax:
    content: public void SetSigmaBellShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Значение от 0 до 1, определяющее центр градиента (точка, в которой имеется одинаковое смешение начального и конечного цветов)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  id: SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Создает градиентный переход на основе колоколообразной кривой."
  remarks: "Этот метод задает `focus`, который является точкой, где градиент состоит только из конечного цвета. `focus` Представляет место как пропорцию расстояния вдоль линии градиента. На основании колоколообразной кривой (нормальное распределение) с любой стороны начальный цвет градиента уменьшается."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the bell-shaped brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/visualbasic/06854fcf-f315-4b99-b3db-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/cpp/06854fcf-f315-4b99-b3db-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/csharp/06854fcf-f315-4b99-b3db-_1.cs)]"
  syntax:
    content: public void SetSigmaBellShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Значение от 0 до 1, определяющее центр градиента (точка, в которой градиент состоит только из конечного цвета)."
    - id: scale
      type: System.Single
      description: "Значение от 0 до 1, определяющее, насколько быстро цвета переходят от `focus`."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  id: Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает копию <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , определяющий локальное геометрическое преобразование для этого <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: "Геометрическое преобразование может использоваться для преобразования, масштабирования, поворота или наклона градиентной заливки. Так как матрица возвращена и преобразованием свойство представляет собой копию геометрического преобразования кисти, следует освободить память, матрицы, когда он больше не нужен."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Копия <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , определяющий геометрическое преобразование, которое применяется только к заливки, нарисованных при помощи <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Преобразует локального геометрического преобразования на заданные размеры. Этот метод добавляет смещение к преобразованию."
  remarks: ''
  example:
  - For an example, see TranslateTransform.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "Значение сдвига по оси x."
    - id: dy
      type: System.Single
      description: "Значение сдвига по оси y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Выполняет перевод локального геометрического преобразования на заданные размеры в заданном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.  \n  \n-   Draws the rectangle, with the rotated and scaled gradient, to the screen.  \n  \n-   Translates the rectangle so that it has a linear gradient running from top to bottom.  \n  \n-   Draws the translated rectangle to the screen.  \n  \n Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/visualbasic/245473a1-ce62-4749-b877-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/cpp/245473a1-ce62-4749-b877-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/csharp/245473a1-ce62-4749-b877-_1.cs)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "Значение сдвига по оси x."
    - id: dy
      type: System.Single
      description: "Значение сдвига по оси y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Порядок (в начале или в конце) в перевода."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  id: WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Возвращает или задает <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> перечисления, задающее режим переноса для <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.WrapMode
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> , указывающий способ заливки, нарисованных при помощи <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> мозаикой."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LinearGradientMode
  nameWithType: LinearGradientMode
  fullName: System.Drawing.Drawing2D.LinearGradientMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.Blend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.ColorBlend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush.LinearGradientBrush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone
  nameWithType: LinearGradientBrush.Clone
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform
  nameWithType: LinearGradientBrush.MultiplyTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform
  nameWithType: LinearGradientBrush.ResetTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform
  nameWithType: LinearGradientBrush.RotateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform
  nameWithType: LinearGradientBrush.ScaleTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape
  nameWithType: LinearGradientBrush.SetBlendTriangularShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape
  nameWithType: LinearGradientBrush.SetSigmaBellShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform
  nameWithType: LinearGradientBrush.TranslateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
