### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ReferenceConverter
  id: ReferenceConverter
  children:
  - System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  langs:
  - csharp
  name: ReferenceConverter
  nameWithType: ReferenceConverter
  fullName: System.ComponentModel.ReferenceConverter
  type: Class
  summary: "Предоставляет преобразователь типов для преобразования объектов в другие представления и обратно."
  remarks: "ReferenceConverter обычно используется внутри контекста размещенного компонентов или в среде разработки. Без узел компонента или использования <xref:System.ComponentModel.ITypeDescriptorContext>, преобразователь приносит мало.</xref:System.ComponentModel.ITypeDescriptorContext>       Преобразует этот преобразователь ссылки на объект, реализующий интерфейс <xref:System.ComponentModel.IComponent>интерфейс и отображает его свойства в **свойства** окна.</xref:System.ComponentModel.IComponent>       Дополнительные сведения о преобразователях типов см. в разделе <xref:System.ComponentModel.TypeConverter>базового класса и [как: реализация преобразователя типов](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      Настроек [!NOTE] настроек никогда не следует создавать экземпляр класса ReferenceConverter. Вместо этого необходимо вызовите <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>метод <xref:System.ComponentModel.TypeDescriptor>класса.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Дополнительные сведения см. в примерах из <xref:System.ComponentModel.TypeConverter>базового класса.</xref:System.ComponentModel.TypeConverter>       Этот класс предоставляет <xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A>метод для проверки ли определенное значение можно добавить к стандартному наборе значений.</xref:System.ComponentModel.ReferenceConverter.IsValueAllowed%2A> Если вы не хотите добавить значение в коллекцию, переопределите этот метод."
  syntax:
    content: 'public class ReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.ReferenceConverter&quot;> </xref> класса."
  syntax:
    content: public ReferenceConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип для связи с этим преобразователем ссылок.</xref:System.Type>"
  overload: System.ComponentModel.ReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта заданного исходного типа в объект ссылки, используя заданный контекст."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: sourceType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно выполнить преобразование из.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот объект может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует заданный объект к ссылочному типу."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, задающий язык и региональные параметры, используемые для представления шрифта.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованный <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.ReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует данный объект значения в ссылочный тип, с помощью указанного контекста и аргументов."
  remarks: "Чаще всего этот метод преобразует типы, строки объекты и обратно.       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, задающий язык и региональные параметры, используемые для представления шрифта.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "Целевой тип преобразования объекта."
    return:
      type: System.Object
      description: "Преобразованный объект."
  overload: System.ComponentModel.ReferenceConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию стандартных значений для ссылочного типа данных."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, содержащий стандартный набор допустимых значений или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип данных не поддерживает стандартный набор значений.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.ReferenceConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли возвращает список стандартных значений <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>является исчерпывающим списком.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>"
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Поскольку <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>возвращенные <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>является исчерпывающим списком возможных значений.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Этот метод никогда не возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Поскольку <xref:System.ComponentModel.ReferenceConverter.GetStandardValues*>может быть вызван для поиска общего набора значений, поддерживаемых объектом.</xref:System.ComponentModel.ReferenceConverter.GetStandardValues*> Этот метод никогда не возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  langs:
  - csharp
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, было ли конкретное значение быть добавлено в коллекцию стандартных значений."
  remarks: "Этот метод вызывается для каждого значения, соответствующий тип, связанный с этим <xref:System.ComponentModel.ReferenceConverter>и для каждого найденного компонента связанного типа.</xref:System.ComponentModel.ReferenceConverter> По умолчанию этот метод возвращает `true`, то есть допускается добавление значения в коллекцию стандартных значений."
  syntax:
    content: protected virtual bool IsValueAllowed (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Обеспечивает дополнительный контекст."
    - id: value
      type: System.Object
      description: "Проверяемое значение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение может быть и может быть добавлен в коллекцию стандартных значений; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если не добавить значение в коллекцию стандартных значений."
  overload: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.ReferenceConverter.#ctor(System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter(Type)
  nameWithType: ReferenceConverter.ReferenceConverter(Type)
  fullName: System.ComponentModel.ReferenceConverter.ReferenceConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.ReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.ReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.ReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed(ITypeDescriptorContext,Object)
  nameWithType: ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.ReferenceConverter.IsValueAllowed(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.ReferenceConverter.#ctor*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ReferenceConverter
  nameWithType: ReferenceConverter.ReferenceConverter
- uid: System.ComponentModel.ReferenceConverter.CanConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ReferenceConverter.CanConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertFrom*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ReferenceConverter.ConvertFrom
- uid: System.ComponentModel.ReferenceConverter.ConvertTo*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ReferenceConverter.ConvertTo
- uid: System.ComponentModel.ReferenceConverter.GetStandardValues*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: ReferenceConverter.GetStandardValues
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: ReferenceConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.ReferenceConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: ReferenceConverter.GetStandardValuesSupported
- uid: System.ComponentModel.ReferenceConverter.IsValueAllowed*
  parent: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: IsValueAllowed
  nameWithType: ReferenceConverter.IsValueAllowed
