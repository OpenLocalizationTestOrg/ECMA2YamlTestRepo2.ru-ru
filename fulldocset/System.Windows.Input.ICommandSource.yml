### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommandSource
  id: ICommandSource
  children:
  - System.Windows.Input.ICommandSource.Command
  - System.Windows.Input.ICommandSource.CommandParameter
  - System.Windows.Input.ICommandSource.CommandTarget
  langs:
  - csharp
  name: ICommandSource
  nameWithType: ICommandSource
  fullName: System.Windows.Input.ICommandSource
  type: Interface
  summary: "Определяет объект, который знает, как вызывать команду."
  remarks: "Источник команды определяет, как она вызывается конкретного объекта.  Например если <xref:System.Windows.Controls.Button>связан с командой, команда при вызове <xref:System.Windows.Controls.Button>нажатии.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Button>       Источник команды обычно отключает себя, если не удается выполнить команду, связанного с ним на текущей цели команды.  Например <xref:System.Windows.Controls.MenuItem>связанных с <xref:System.Windows.Input.ApplicationCommands.Paste%2A>команда отобразит серым сам при <xref:System.Windows.Input.ApplicationCommands.Paste%2A>Невозможно выполнить команды на текущей цели команды.</xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Controls.MenuItem>       Как правило, источник команды будет осуществлять прослушивание <xref:System.Windows.Input.ICommand.CanExecuteChanged>событий для команды.</xref:System.Windows.Input.ICommand.CanExecuteChanged>  Это позволяет сообщить источника команды при изменении условий в целевом объекте команды, например потере фокуса клавиатуры.  Источник команды может запросить команды с помощью <xref:System.Windows.Input.ICommand.CanExecute%2A>метод.</xref:System.Windows.Input.ICommand.CanExecute%2A>       Некоторые классы в [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] , реализующие руководство являются: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>и <xref:System.Windows.Documents.Hyperlink>.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Primitives.ButtonBase>       В [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] системы, заставляя <xref:System.Windows.Input.InputBinding.CommandTarget%2A>руководство свойство применяется только тогда, когда <xref:System.Windows.Input.ICommand>является <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Если <xref:System.Windows.Input.InputBinding.CommandTarget%2A>устанавливается на руководство и не имеет соответствующей команды <xref:System.Windows.Input.RoutedCommand>, цель команды игнорируется.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>"
  syntax:
    content: public interface ICommandSource
  implements: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.Command
  id: Command
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Получает команду, которая будет выполняться при вызове источника команды."
  syntax:
    content: public System.Windows.Input.ICommand Command { get; }
    return:
      type: System.Windows.Input.ICommand
      description: "Команда, которая будет выполняться при вызове источника команды."
  overload: System.Windows.Input.ICommandSource.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandParameter
  id: CommandParameter
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Представляет определенное пользователем значение данных, который может быть передан в команду при ее выполнении."
  remarks: "Как правило CommandParameter используется для передачи определенные сведения в команду при ее выполнении.  Тип данных определяется с помощью команды."
  syntax:
    content: public object CommandParameter { get; }
    return:
      type: System.Object
      description: "Связанные с командой данные."
  overload: System.Windows.Input.ICommandSource.CommandParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandTarget
  id: CommandTarget
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Объект, для которого выполняется команда."
  remarks: "В [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] системы, заставляя <xref:System.Windows.Input.InputBinding.CommandTarget%2A>свойство <xref:System.Windows.Input.ICommandSource>применимо, только когда <xref:System.Windows.Input.ICommand>является <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Если <xref:System.Windows.Input.InputBinding.CommandTarget%2A>устанавливается на <xref:System.Windows.Input.ICommandSource>и соответствующей команды не <xref:System.Windows.Input.RoutedCommand>, цель команды игнорируется.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>       При использовании с <xref:System.Windows.Input.RoutedCommand>, цель команды — это объект, на котором <xref:System.Windows.Input.CommandManager.Executed>и <xref:System.Windows.Input.CommandManager.CanExecute>событий.</xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.RoutedCommand> Если целью команды свойство не задано, элемент с фокусом клавиатуры будут использоваться как целевой объект."
  syntax:
    content: public System.Windows.IInputElement CommandTarget { get; }
    return:
      type: System.Windows.IInputElement
      description: "Объект, для которого выполняется команда."
  overload: System.Windows.Input.ICommandSource.CommandTarget*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.ICommandSource.Command
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.ICommandSource.CommandParameter
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommandSource.CommandTarget
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.ICommandSource.Command*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
- uid: System.Windows.Input.ICommandSource.CommandParameter*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
- uid: System.Windows.Input.ICommandSource.CommandTarget*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
