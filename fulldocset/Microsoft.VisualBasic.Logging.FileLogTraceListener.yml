### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Предоставляет простой прослушиватель, который направляет вывод журнала в файл."
  remarks: "Класс FileLogTraceListener предоставляет возможности автоматического обслуживания для архивации файлов журнала, при необходимости на основе ежедневно или на уровне приложений. Эти функции автоматической архивации помогает сократить обслуживания обязанностей разработчиков и администраторов.       Экземпляр FileLogTraceListener могут добавляться к <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>или <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>коллекций перенаправлять выходные данные ведения журнала в текстовый файл.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> Экземпляры этого класса можно также добавить к `My.Application.Log` или `My.Log` (для веб-приложений) в [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] приложений. Дополнительные сведения см. в разделе [Пошаговое руководство: изменение информация](~/add/includes/ajax-current-ext-md.md) `.` основные возможности этого класса: 1.  *Функции архивации*. Файлы журналов, создаваемые этим классом присваиваются в соответствии с базовым именем и даты, вместе с номером, чтобы отличать файл журнала от последовательных версий журнала. Новые файлы журнала создаются по мере необходимости.           Явное имя файла является `baseName`[-`dateStamp`] [-`version`] .log, где: - `baseName` часть — это имя фундаментальные журнала, определяемое <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          - `dateStamp` Часть имеет формат «Гггг-мм-дд» и при его отображении <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          — Если требуется несколько файлов журнала с таким же `baseName` и `dateStamp`, `version` часть положительное `Integer`, добавляется к имени файла.      2.  *Несколько экземпляров класса*. Если экземпляр класса FileLogTraceListener записывает в файл, который используется:-класса совместно использует файл, если он используется другим экземпляром класса FileLogTraceListener в том же процессе.          -Класс создает новый файл журнала, используя следующее доступное имя, если файл используется другим процессом.      3.  *Потокобезопасность*. Класс FileLogTraceListener является потокобезопасным. Это позволяет безопасно записывать сообщения в журнал из нескольких потоков без использования блокировки.       **Расположение файла журнала** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>принимает свойство <xref:Microsoft.VisualBasic.Logging.LogFileLocation>перечисления, чтобы указать один из каталогов, типичные для записи файла журнала.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Для записи журнала в другое расположение, установите <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>свойство к этому расположению.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **Имя файла журнала** -базовое имя для файла журнала задается <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -Текущее имя файла журнала может быть считано из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Он является производным от других свойств и текущего состояния журналов в файловой системе.       **Журнал обслуживания** -минимальную частоту для создания новых файлов журнала определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Если значение равно <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>или <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, создается новый файл журнала создается по крайней мере один раз, каждый день или неделю и дату создания встроен в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>имя.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -Максимальный размер (в байтах) файла журнала определяется <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Если размер файла журнала превышает этот размер, дополнительные сообщения, записывается в журнал, удаляется, а, в зависимости от <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Свойства, создается исключение.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>Свойство определяет объем свободного места (в байтах) должны быть доступны.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Это позволяет гарантировать, что класс FileLogTraceListener не использует свободное место на диске. Используйте <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>свойство, чтобы указать параметры журнала записывает при наличии меньше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>свободных байтов.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Параметры вывода в файл журнала** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>свойство указывает, является ли базовый поток должны быть очищены автоматически после каждой операции записи в файл журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>Свойство указывает, следует ли добавить сообщения к текущему файлу журнала, если это разрешено, или записывать их в новый файл журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>Свойство указывает строку, используемую для разграничения полей в сообщении журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>Свойство указывает кодировку для использования при создании нового файла журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Выходной файл журнала** — <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>и <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>методы записывают сообщения в файл журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Эти методы проверяют <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>Свойства, включая все имеющиеся журналы с тем же базовым именем, чтобы определить, если должен быть создан новый журнал.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>Метод очищает все сообщения в настоящее время в буфер вывода в файле журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>Метод закрывает файл журнала, чтобы он может использоваться другими процессами.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Включение вывода** необходимо включить для использования прослушивателя трассировки отладки и трассировки. Следующий синтаксис зависит от компилятора. При использовании компиляторов, отличных от C# или [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], обратитесь к документации этого компилятора.      — Чтобы включить отладку в C#, добавьте `/d:DEBUG` флаг командную строку компилятора при компиляции кода, или можно добавить `#define DEBUG` в начало файла. В [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], добавьте `/d:DEBUG=True` флаг компилятора командной строки.      — Чтобы включить трассировку в C#, добавьте `/d:TRACE` флаг командную строку компилятора при компиляции кода или добавьте `#define TRACE` в начало файла. В [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], добавьте `/d:TRACE=True` флаг компилятора командной строки.       Чтобы задать уровень прослушивателя, измените файл конфигурации для приложения. В этом файле можно добавить прослушиватель, задать его тип и параметры, удалить прослушиватель или удалить все прослушиватели, ранее установленный приложением. Файл конфигурации необходимо отформатировать как в следующем примере.       Для выполнения этого примера необходимо предоставить полное имя сборки. Сведения о том, как получить полное имя сборки см. в разделе [имена сборок](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> класс с именем по умолчанию."
  remarks: "Этот метод задает имя экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класса FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Можно получить доступ к имени экземпляра через <xref:System.Diagnostics.TraceListener.Name%2A>свойство.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> класс с указанным именем."
  remarks: "Этот метод задает имя экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класса `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Можно получить доступ к имени экземпляра рассматривать <xref:System.Diagnostics.TraceListener.Name%2A>свойство.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Имя экземпляра объекта."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Определяет, следует ли добавлять выходные данные в текущий файл или писать его в новый файл."
  remarks: "Если свойство Append не `False`, выходные данные записываются в новый файл. Если свойство не `True`, выходные данные добавляются в текущий файл, если не:-выходной файл заблокирован другим процессом. В этом случае создается новый файл журнала с номером версии, которые встроены в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>имя.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -Текущий размер файла больше, чем то, что <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>свойство позволяет.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> В этом случае дополнительные сообщения, удаляется, а, в зависимости от <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Свойства, создается исключение.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      — Имя существующего файла является устаревшим в соответствии с расписанием создания журнала, заданным по <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> В этом случае создается новый файл журнала и отметка даты включается в <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>имя.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, с <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> , указывающее, что выходные данные добавляются к текущему файлу и <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> , указывающее, что выходные данные записываются в новый файл. Значение по умолчанию для этого свойства равно <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Указывает ли запись в потоке файла журнала очищает буфер."
  remarks: "`False` Установка для свойства AutoFlush обеспечивает лучшую производительность для большинства приложений, так как он является более эффективным для записи нескольких сообщений в файл журнала за один раз. Можно использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>метода, чтобы очистить все сообщения в данный момент в файле журнала выходного буфера.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Можно также использовать <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>метод, который неявно сбрасывает поток перед закрытием файла журнала.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, с <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> , указывающее, что поток очищается после каждой операции записи; в противном случае записи журнала буферизуются и записываются более эффективно. Значение по умолчанию для этого свойства равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает базовое имя для файлов журнала, который используется для создания имени полного файла журнала."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Базовое имя для файлов журнала. По умолчанию используется имя продукта приложения."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Закрывает основной поток для текущего файла журнала и освобождает все ресурсы, связанные с текущим потоком."
  remarks: "Необязательно для вызова метода Close явно, так как <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класс управляет базовый поток.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает каталог файлов журнала при <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>свойству <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "Если свойству CustomLocation также устанавливает <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>Свойства <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       Свойство CustomLocation вызовет исключение, если каталог не удается разрешить."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, являющееся именем в каталог файла журнала. Значение по умолчанию для этого свойства — пользовательский каталог для данных приложений."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает разделитель, используемый для разделения полей в сообщении журнала."
  remarks: "Свойство разделитель дает возможность изменения разделителя по умолчанию."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, который является разделитель, используемый для полей в сообщении журнала. Для этого свойства по умолчанию является символ табуляции."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Определяет, что нужно делать при записи в файл журнала и меньше свободного места от указанных <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "Если значение свойства DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, сообщения журнала удаляются без уведомления, если недостаточно места на диске, зарезервированное.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Это поведение по умолчанию и позволяет предотвратить сбои при переполнении диска простых приложений.       Более надежные приложения можно задать свойство DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>и добавьте `Try...Catch` блоки кода записи в журнал</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Определяет, что нужно делать при попытке записи в журнал файлов и меньше свободного места от указанных <> </> *настроек свойств, или если размер файла журнала больше, чем то, что <> </> *настроек свойство позволяет. Значение по умолчанию — <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Закрывает основной поток и при необходимости освобождает также управляемые ресурсы."
  remarks: "При `disposing` параметр `True`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>ссылки.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Этот метод вызывает `Dispose` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Освобождает управляемые и неуправляемые ресурсы; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> освобождает только неуправляемые ресурсы."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает кодировку для использования при создании нового файла журнала."
  remarks: "При наращивании текст в существующий файл журнала, для этого файла используется вместо кодировку, заданную свойством Encoding."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, которой является кодировка для создания файла журнала.</xref:System.Text.Encoding> Значение по умолчанию этого свойства — <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Сохраняет базовый поток, который записывает в текущий файл журнала."
  remarks: "Используйте метод Flush для записи всех буферизованных данных в текущий файл журнала."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает имя текущего полного файла журнала."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, — имя текущего полного файла журнала."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает настраиваемые атрибуты конфигурации XML, поддерживаемые прослушивателем трассировки."
  remarks: "Настраиваемые атрибуты, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>можно использовать в XML-файл конфигурации для управления поведением экземпляра <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класса.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> При использовании любого другого атрибута возникает исключение конфигурации."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>Массив, содержащий атрибуты конфигурации XML, распознаваемые данным прослушивателем."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Указывает, включать ли имя узла компьютера, ведение журнала в выходных данных."
  remarks: "Свойство для настройки поведения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>и <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>методы.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Используйте <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если идентификатор сервера должна быть включена; в противном случае используйте <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает расположение для файлов журнала."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, — расположение для файла журнала. Значение по умолчанию — <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Определяет, какую дату включать в имена файлов журнала."
  remarks: "Назначить один из <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>значений перечисления для свойства LogFileCreationSchedule, чтобы указать, какую дату включать в имена файлов журнала.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       Формат даты: гггг-мм-дд. Дополнительные сведения о формате имени файла журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **Значение LogFileCreationSchedule**|**даты в имя файла журнала**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Включить текущую дату в имя файла журнала. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Не включать дату в имя файла журнала. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Включать в имя файла журнала первый день текущей недели.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> Неделя начинается с субботы. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Указывает, какую дату включать в имена файлов журнала. Значение по умолчанию — <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает максимально допустимый размер файла журнала, в байтах."
  remarks: "Используйте это свойство, чтобы убедиться в том, что файлы журналов не слишком большой рост размера.       Если размер файла журнала (в байтах) больше, чем значение этого свойства, затем при <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класс пытается записать сообщение в журнал сообщение отбрасывается и сбоя автоматическое или исключение возникает в зависимости от значения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> В противном случае сообщение записывается в журнал, если объем свободного места на диске (в байтах) меньше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Это максимальный допустимый файл журнала размер в байтах. Значение по умолчанию является 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если этому свойству присвоено значение меньше 1000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Возвращает или задает объем свободного места на диске, в байтах, необходимые перед сообщения могут записываться в файл журнала."
  remarks: "Используйте это свойство, чтобы убедиться в том, что файлы журнала не полностью занимает диска.       Если объем свободного дискового пространства (в байтах) меньше, чем значение этого свойства, затем при <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>класс пытается записать сообщение в журнал сообщение отбрасывается и сбоя автоматическое или исключение возникает в зависимости от значения <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>свойство.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> В противном случае сообщение записывается в журнал, если размер файла журнала (в байтах) больше, чем <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Это объем свободного места на диске. Значение по умолчанию — 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если этому свойству присвоено значение меньше 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Записывает сведения трассировки, объект данных и сведения о событии в выходной файл или поток."
  remarks: "Этот метод: 1.  Форматирование данных и сведений о контексте для вывода.      2.  При необходимости, создает новый файл журнала.      3.  Записывает сведения в файл журнала.       Дополнительные сведения о создании файлов журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       В следующей таблице перечислены поля вывода в порядке их следования. Поля разделяются на строку, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>указывает свойство и следует признак конца строки.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Поле**|**вывода условие**|**описание**|   |---------------|--------------------------|---------------------|   | `source`| Всегда | Значение `name`. |   | `severity`| Всегда | Имя значения перечисления `eventType`. |   | `id`| Всегда | Строковое представление `id`. |   | `message`| Всегда | Строковое представление `data`. |   | `callStack`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ProcessID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ThreadID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `HostName`| Если свойство <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>не `True`. | Имя компьютера. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя источника трассировки, вызвавшего этот метод."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значений перечисления."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object
      description: "Выдаваемые данные трассировки."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Записывает сведения трассировки, массив объектов данных и сведения о событии в выходной файл или поток."
  remarks: "Этот метод: 1.  Форматирование данных и сведений о контексте для вывода 2.  Создает новый журнал файла, при необходимости 3.  Записывает сведения в файл журнала.       Дополнительные сведения о создании файлов журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       В этой таблице приведены поля вывода в порядке их следования. Поля разделяются на строку, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>указывает свойство и следует признак конца строки.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Поле**|**вывода условие**|**описание**|   |---------------|--------------------------|---------------------|   | `source`| Всегда | Значение `name`. |   | `severity`| Всегда | Имя значения перечисления `eventType`. |   | `id`| Всегда | Строковое представление `id`. |   | `message`| Всегда | Строка, состоящая из строкового представления каждого элемента в `data`, разделяя их <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ProcessID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ThreadID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `HostName`| Если свойство <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>не `True`. | Имя компьютера. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя источника трассировки, вызвавшего этот метод."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значений перечисления."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object[]
      description: "Массив объектов для выдачи в качестве данных."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Записывает сведения трассировки, сообщение и сведения о событиях в выходной файл или поток."
  remarks: "Этот метод: 1.  Форматирование данных и сведений о контексте для вывода.      2.  При необходимости, создает новый файл журнала.      3.  Записывает сведения в файл журнала.       Дополнительные сведения о создании файлов журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       В этой таблице приведены поля вывода в порядке, в котором они отображаются. Поля разделяются на строку, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>указывает свойство и следует признак конца строки.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Поле**|**вывода условие**|**описание**|   |---------------|--------------------------|---------------------|   | `source`| Всегда. | Значение `name`. |   | `severity`| Всегда. | Имя значения перечисления `eventType`. |   | `id`| Всегда. | Строковое представление `id`. |   | `message`| Всегда. | Значение `message`. |   | `callStack`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ProcessID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ThreadID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `HostName`| Если свойство <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>не `True`. | Имя компьютера. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя источника трассировки, вызвавшего этот метод."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значений перечисления."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Записывает сведения трассировки, форматированный массив объектов и сведения о событии в выходной файл или поток."
  remarks: "Этот метод: 1.  Форматирование данных и сведений о контексте для вывода.      2.  Создает новый файл журнала, при необходимости.      3.  Записывает сведения в файл журнала.       Дополнительные сведения о создании нового файла журнала см. в разделе <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       В этой таблице приведены поля вывода в порядке, в котором они отображаются. Поля разделяются на строку, <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>указывает свойство и с признаком конца строки.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Поле**|**вывода условие**|**описание**|   |---------------|--------------------------|---------------------|   | `source`| Всегда | Значение `name`. |   | `severity`| Всегда | Имя значения перечисления `eventType`. |   | `id`| Всегда | Строковое представление `id`. |   | `message`| Всегда | Данные в `args` отформатирован `format` строку и с помощью инвариантного языка и региональных параметров для преобразования строк. |   | `callStack`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.DateTime%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ProcessID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `ThreadID`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Свойство <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Если флаг <xref:System.Diagnostics.TraceOptions>задано в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Строковое представление <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>свойство `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Инвариантный язык и региональные параметры используются для преобразования строк. |   | `HostName`| Если свойство <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>не `True`. | Имя компьютера. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя источника трассировки, вызвавшего этот метод."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значений перечисления."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: format
      type: System.String
      description: "Строка формата, содержащая ноль или более элементов формата, связанных с объектами в `args` массива."
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> Массив, содержащий ноль или более объектов для форматирования."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Дословно записывает сообщение на диск без любой дополнительной контекстной информации."
  remarks: "Метод Write записывает конкретное сообщение в файл журнала, без любой дополнительной контекстной информации.       Используйте одну из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>методы для включения в выходные данные журнала сведений о контексте.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Настраиваемое сообщение для записи."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Дословно записывает сообщение на диск, текущий признак конца строки, без любой дополнительной контекстной информации."
  remarks: "Метод WriteLine записывает сообщение в файл журнала, без любой дополнительной контекстной информации.       Используйте одну из <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>методы для включения в выходные данные журнала сведений о контексте.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Настраиваемое сообщение для записи."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
