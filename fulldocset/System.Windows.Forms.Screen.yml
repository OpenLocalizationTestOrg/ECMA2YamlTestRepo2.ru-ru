### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Screen
  id: Screen
  children:
  - System.Windows.Forms.Screen.AllScreens
  - System.Windows.Forms.Screen.BitsPerPixel
  - System.Windows.Forms.Screen.Bounds
  - System.Windows.Forms.Screen.DeviceName
  - System.Windows.Forms.Screen.Equals(System.Object)
  - System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  - System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  - System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  - System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.GetHashCode
  - System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  - System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  - System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  - System.Windows.Forms.Screen.Primary
  - System.Windows.Forms.Screen.PrimaryScreen
  - System.Windows.Forms.Screen.ToString
  - System.Windows.Forms.Screen.WorkingArea
  langs:
  - csharp
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen
  type: Class
  summary: "Представляет устройство отображения или несколько устройств отображения в одной системе."
  remarks: "Конструктор для этого объекта не является общедоступным, поэтому невозможно явно создать объект экрана. Объект создается при вызове его открытых методов."
  example:
  - "The following code example shows how to use various methods and properties of the Screen class. The example calls the <xref:System.Windows.Forms.Screen.AllScreens%2A> property to retrieve an array of all the screens connected to the system. For each returned Screen, the example adds the device name, bounds, type, working area, and primary screen to a <xref:System.Windows.Forms.ListBox>. To use the example, add a <xref:System.Windows.Forms.ListBox> and a <xref:System.Windows.Forms.Button> to a form, and then add a <xref:System.Windows.Forms.Control.Click> event handler for the button.  \n  \n [!code-cs[Screen Object Example#1](~/add/codesnippet/csharp/t-system.windows.forms.s_7_1.cs)]\n [!code-vb[Screen Object Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.s_7_1.vb)]\n [!code-cpp[Screen Object Example#1](~/add/codesnippet/cpp/t-system.windows.forms.s_7_1.cpp)]"
  syntax:
    content: public class Screen
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.AllScreens
  id: AllScreens
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: AllScreens
  nameWithType: Screen.AllScreens
  fullName: System.Windows.Forms.Screen.AllScreens
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает массив всех отображения в системе."
  syntax:
    content: public static System.Windows.Forms.Screen[] AllScreens { get; }
    return:
      type: System.Windows.Forms.Screen[]
      description: "Массив объектов типа <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>, содержащий все устройства отображения в системе."
  overload: System.Windows.Forms.Screen.AllScreens*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.BitsPerPixel
  id: BitsPerPixel
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
  fullName: System.Windows.Forms.Screen.BitsPerPixel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает количество бит памяти, связанных с одной точки данных."
  remarks: "Как правило количество битов на пиксель для экрана полезно при работе с растровыми изображениями. Дополнительные сведения о растровых изображений см. в разделе [типы точечных рисунков](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int BitsPerPixel { get; }
    return:
      type: System.Int32
      description: "Количество бит памяти, связанных с одной точки данных"
  overload: System.Windows.Forms.Screen.BitsPerPixel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Bounds
  id: Bounds
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Bounds
  nameWithType: Screen.Bounds
  fullName: System.Windows.Forms.Screen.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает границы области отображения."
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, представляющий границы области отображения."
  overload: System.Windows.Forms.Screen.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.DeviceName
  id: DeviceName
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: DeviceName
  nameWithType: Screen.DeviceName
  fullName: System.Windows.Forms.Screen.DeviceName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает имя устройства, связанного с отображением."
  remarks: "Эта строка может содержать непечатаемые символы."
  syntax:
    content: public string DeviceName { get; }
    return:
      type: System.String
      description: "Имя устройства, связанного с отображением."
  overload: System.Windows.Forms.Screen.DeviceName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Screen.Equals(Object)
  fullName: System.Windows.Forms.Screen.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, равен ли указанный объект к этому <xref uid=&quot;langword_csharp_Screen&quot; name=&quot;Screen&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект для сравнения с <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный объект равен этому <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Screen.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  id: FromControl(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromControl(Control)
  nameWithType: Screen.FromControl(Control)
  fullName: System.Windows.Forms.Screen.FromControl(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть заданного элемента управления."
  syntax:
    content: public static System.Windows.Forms.Screen FromControl (System.Windows.Forms.Control control);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "Объект <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> для которого требуется извлечь <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>."
    return:
      type: System.Windows.Forms.Screen
      description: "Объект <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть заданного элемента управления. В нескольких средах отображения, где не содержит элемент управления возвращается дисплей, ближайший к указанному элементу управления."
  overload: System.Windows.Forms.Screen.FromControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Screen.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Screen.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть объекта ссылается заданный дескриптор."
  syntax:
    content: public static System.Windows.Forms.Screen FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Дескриптор окна, для которого требуется извлечь <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>."
    return:
      type: System.Windows.Forms.Screen
      description: "Объект <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть объекта. В среде с несколькими экран не выводятся содержит какая-либо часть указанного окна возвращается дисплей, ближайший к объекту."
  overload: System.Windows.Forms.Screen.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  id: FromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: Screen.FromPoint(Point)
  fullName: System.Windows.Forms.Screen.FromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего заданную точку."
  remarks: ''
  example:
  - "The following code example shows how to use the FromPoint method. This example creates a <xref:System.Drawing.Point> referencing the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> coordinates passed by a <xref:System.Windows.Forms.MouseEventArgs>, and then uses the FromPoint method to determine if the point clicked is on the primary screen.  \n  \n [!code-cpp[Screen.FromPoint#1](~/add/codesnippet/cpp/m-system.windows.forms.s_5_1.cpp)]\n [!code-cs[Screen.FromPoint#1](~/add/codesnippet/csharp/m-system.windows.forms.s_5_1.cs)]\n [!code-vb[Screen.FromPoint#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_5_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.Screen FromPoint (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "Объект <xref href=&quot;System.Drawing.Point&quot;> </xref> , задающий расположение, для которого требуется извлечь <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref>."
    return:
      type: System.Windows.Forms.Screen
      description: "Объект <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, которая содержит точку. В нескольких средах отображения, где не содержит точку возвращается дисплей, ближайший к заданной точке."
  overload: System.Windows.Forms.Screen.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  id: FromRectangle(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: FromRectangle(Rectangle)
  nameWithType: Screen.FromRectangle(Rectangle)
  fullName: System.Windows.Forms.Screen.FromRectangle(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть прямоугольника."
  syntax:
    content: public static System.Windows.Forms.Screen FromRectangle (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , определяющий область, для которого требуется извлечь отображения."
    return:
      type: System.Windows.Forms.Screen
      description: "Объект <xref href=&quot;System.Windows.Forms.Screen&quot;> </xref> для отображения, содержащего наибольшую часть заданного прямоугольника. В среде с несколькими экран не выводятся содержит прямоугольник возвращается дисплей, ближайший к этому прямоугольнику."
  overload: System.Windows.Forms.Screen.FromRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  id: GetBounds(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Point)
  nameWithType: Screen.GetBounds(Point)
  fullName: System.Windows.Forms.Screen.GetBounds(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает границы области отображения, содержащего заданную точку."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Объект <xref href=&quot;System.Drawing.Point&quot;> </xref> , определяющий координаты, для которой возвращаются границы области отображения."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающее границы области отображения, содержащего заданную точку. В среде с несколькими отображения без отображения содержит заданную точку возвращается дисплей, ближайшего к точке."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  id: GetBounds(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Rectangle)
  nameWithType: Screen.GetBounds(Rectangle)
  fullName: System.Windows.Forms.Screen.GetBounds(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает границы области отображения, содержащей наибольшую часть заданного прямоугольника."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , определяющий область, для которой возвращаются границы области отображения."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающее границы области отображения, содержит заданный прямоугольник. В среде с несколькими отображения ни один монитор не содержит заданный прямоугольник возвращается монитор, ближайший к этому прямоугольнику."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  id: GetBounds(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetBounds(Control)
  nameWithType: Screen.GetBounds(Control)
  fullName: System.Windows.Forms.Screen.GetBounds(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает границы области отображения, содержащей наибольшую часть заданного элемента управления."
  syntax:
    content: public static System.Drawing.Rectangle GetBounds (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> Для которой возвращаются границы области отображения."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающее границы области отображения, который содержит указанный элемент управления. В нескольких средах отображения, где не содержит указанный элемент управления возвращается дисплей, ближайший к элементу управления."
  overload: System.Windows.Forms.Screen.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Screen.GetHashCode()
  fullName: System.Windows.Forms.Screen.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вычисляет и возвращает хэш-код для объекта."
  remarks: "Этот метод реализует <xref:System.Object>метод.</xref:System.Object>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для объекта."
  overload: System.Windows.Forms.Screen.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  id: GetWorkingArea(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Point)
  nameWithType: Screen.GetWorkingArea(Point)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает рабочую область, ближайшую к заданной точке. Рабочая область — это системная область отображения, за исключением панелей задач, закрепленные окна и присоединенные панели инструментов."
  remarks: ''
  example:
  - "The following code example demonstrates the use of <xref:System.Windows.Forms.Screen.PrimaryScreen%2A> property and the GetWorkingArea method. This method requires a form containing a button named `Button1`  \n  \n [!code-cs[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/csharp/m-system.windows.forms.s_4_1.cs)]\n [!code-cpp[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/cpp/m-system.windows.forms.s_4_1.cpp)]\n [!code-vb[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/visualbasic/m-system.windows.forms.s_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Объект <xref href=&quot;System.Drawing.Point&quot;> </xref> , определяющий координаты, для которого требуется извлечь рабочую область."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающий рабочую область. В среде с несколькими отображения без отображения содержит заданную точку возвращается дисплей, ближайшего к точке."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  id: GetWorkingArea(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Rectangle)
  nameWithType: Screen.GetWorkingArea(Rectangle)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает рабочую область для отображения, содержащего наибольшую часть заданного прямоугольника. Рабочая область — это системная область отображения, за исключением панелей задач, закрепленные окна и присоединенные панели инструментов."
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , Определяющий область, для которого требуется извлечь рабочую область."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающий рабочую область. В среде с несколькими отображения без отображения содержит заданный прямоугольник возвращается дисплей, ближайший к этому прямоугольнику."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  id: GetWorkingArea(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: GetWorkingArea(Control)
  nameWithType: Screen.GetWorkingArea(Control)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает рабочую область для отображения, содержащего наибольшую часть заданного элемента управления. Рабочая область — это системная область отображения, за исключением панелей задач, закрепленные окна и присоединенные панели инструментов."
  syntax:
    content: public static System.Drawing.Rectangle GetWorkingArea (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref> Для которого требуется извлечь рабочую область."
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , задающий рабочую область. В нескольких средах отображения, где не содержит указанный элемент управления возвращается дисплей, ближайший к элементу управления."
  overload: System.Windows.Forms.Screen.GetWorkingArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.Primary
  id: Primary
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: Primary
  nameWithType: Screen.Primary
  fullName: System.Windows.Forms.Screen.Primary
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли дисплей основное устройство."
  syntax:
    content: public bool Primary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данное устройство отображения является основным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Screen.Primary*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.PrimaryScreen
  id: PrimaryScreen
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
  fullName: System.Windows.Forms.Screen.PrimaryScreen
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает основное устройство отображения."
  remarks: "В системе с одного экрана основного монитора является единственным дисплеем."
  example:
  - "The following code example demonstrates the use of PrimaryScreen property and the <xref:System.Windows.Forms.Screen.GetWorkingArea%2A> method. This method requires a form containing a button named `Button1`.  \n  \n [!code-cs[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/csharp/p-system.windows.forms.s_57_1.cs)]\n [!code-cpp[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/cpp/p-system.windows.forms.s_57_1.cpp)]\n [!code-vb[System.Windows.Forms.ScreenExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.s_57_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.Screen PrimaryScreen { get; }
    return:
      type: System.Windows.Forms.Screen
      description: "Основное устройство отображения."
  overload: System.Windows.Forms.Screen.PrimaryScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.ToString
  id: ToString
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: ToString()
  nameWithType: Screen.ToString()
  fullName: System.Windows.Forms.Screen.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает строку, представляющую этот объект."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строковое представление объекта."
  overload: System.Windows.Forms.Screen.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Screen.WorkingArea
  id: WorkingArea
  parent: System.Windows.Forms.Screen
  langs:
  - csharp
  name: WorkingArea
  nameWithType: Screen.WorkingArea
  fullName: System.Windows.Forms.Screen.WorkingArea
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает рабочую область отображения. Рабочая область — это системная область отображения, за исключением панелей задач, закрепленные окна и присоединенные панели инструментов."
  remarks: "Рабочая область — это системная область отображения, за исключением панелей задач, закрепленные окна и присоединенные панели инструментов.       WorkingArea возвращает всю область экрана, если на панели задач Windows имеет значение автоматического скрытия, независимо от того, на панели задач в настоящее время Отображение или нет."
  syntax:
    content: public System.Drawing.Rectangle WorkingArea { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, предоставляющий рабочую область отображения."
  overload: System.Windows.Forms.Screen.WorkingArea*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Screen.AllScreens
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: AllScreens
  nameWithType: Screen.AllScreens
  fullName: System.Windows.Forms.Screen.AllScreens
- uid: System.Windows.Forms.Screen[]
  parent: System.Windows.Forms
  isExternal: false
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen[]
  spec.csharp:
  - uid: System.Windows.Forms.Screen
    name: Screen
    nameWithType: Screen
    fullName: Screen[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Screen.BitsPerPixel
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
  fullName: System.Windows.Forms.Screen.BitsPerPixel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Screen.Bounds
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Bounds
  nameWithType: Screen.Bounds
  fullName: System.Windows.Forms.Screen.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Screen.DeviceName
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: DeviceName
  nameWithType: Screen.DeviceName
  fullName: System.Windows.Forms.Screen.DeviceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Screen.Equals(System.Object)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Equals(Object)
  nameWithType: Screen.Equals(Object)
  fullName: System.Windows.Forms.Screen.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Screen.FromControl(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromControl(Control)
  nameWithType: Screen.FromControl(Control)
  fullName: System.Windows.Forms.Screen.FromControl(Control)
- uid: System.Windows.Forms.Screen
  parent: System.Windows.Forms
  isExternal: false
  name: Screen
  nameWithType: Screen
  fullName: System.Windows.Forms.Screen
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Screen.FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Screen.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Screen.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Screen.FromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromPoint(Point)
  nameWithType: Screen.FromPoint(Point)
  fullName: System.Windows.Forms.Screen.FromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Screen.FromRectangle(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromRectangle(Rectangle)
  nameWithType: Screen.FromRectangle(Rectangle)
  fullName: System.Windows.Forms.Screen.FromRectangle(Rectangle)
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Point)
  nameWithType: Screen.GetBounds(Point)
  fullName: System.Windows.Forms.Screen.GetBounds(Point)
- uid: System.Windows.Forms.Screen.GetBounds(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Rectangle)
  nameWithType: Screen.GetBounds(Rectangle)
  fullName: System.Windows.Forms.Screen.GetBounds(Rectangle)
- uid: System.Windows.Forms.Screen.GetBounds(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds(Control)
  nameWithType: Screen.GetBounds(Control)
  fullName: System.Windows.Forms.Screen.GetBounds(Control)
- uid: System.Windows.Forms.Screen.GetHashCode
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetHashCode()
  nameWithType: Screen.GetHashCode()
  fullName: System.Windows.Forms.Screen.GetHashCode()
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Point)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Point)
  nameWithType: Screen.GetWorkingArea(Point)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Point)
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Rectangle)
  nameWithType: Screen.GetWorkingArea(Rectangle)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Rectangle)
- uid: System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea(Control)
  nameWithType: Screen.GetWorkingArea(Control)
  fullName: System.Windows.Forms.Screen.GetWorkingArea(Control)
- uid: System.Windows.Forms.Screen.Primary
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Primary
  nameWithType: Screen.Primary
  fullName: System.Windows.Forms.Screen.Primary
- uid: System.Windows.Forms.Screen.PrimaryScreen
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
  fullName: System.Windows.Forms.Screen.PrimaryScreen
- uid: System.Windows.Forms.Screen.ToString
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: ToString()
  nameWithType: Screen.ToString()
  fullName: System.Windows.Forms.Screen.ToString()
- uid: System.Windows.Forms.Screen.WorkingArea
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: WorkingArea
  nameWithType: Screen.WorkingArea
  fullName: System.Windows.Forms.Screen.WorkingArea
- uid: System.Windows.Forms.Screen.AllScreens*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: AllScreens
  nameWithType: Screen.AllScreens
- uid: System.Windows.Forms.Screen.BitsPerPixel*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: BitsPerPixel
  nameWithType: Screen.BitsPerPixel
- uid: System.Windows.Forms.Screen.Bounds*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Bounds
  nameWithType: Screen.Bounds
- uid: System.Windows.Forms.Screen.DeviceName*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: DeviceName
  nameWithType: Screen.DeviceName
- uid: System.Windows.Forms.Screen.Equals*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Equals
  nameWithType: Screen.Equals
- uid: System.Windows.Forms.Screen.FromControl*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromControl
  nameWithType: Screen.FromControl
- uid: System.Windows.Forms.Screen.FromHandle*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromHandle
  nameWithType: Screen.FromHandle
- uid: System.Windows.Forms.Screen.FromPoint*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromPoint
  nameWithType: Screen.FromPoint
- uid: System.Windows.Forms.Screen.FromRectangle*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: FromRectangle
  nameWithType: Screen.FromRectangle
- uid: System.Windows.Forms.Screen.GetBounds*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetBounds
  nameWithType: Screen.GetBounds
- uid: System.Windows.Forms.Screen.GetHashCode*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetHashCode
  nameWithType: Screen.GetHashCode
- uid: System.Windows.Forms.Screen.GetWorkingArea*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: GetWorkingArea
  nameWithType: Screen.GetWorkingArea
- uid: System.Windows.Forms.Screen.Primary*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: Primary
  nameWithType: Screen.Primary
- uid: System.Windows.Forms.Screen.PrimaryScreen*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: PrimaryScreen
  nameWithType: Screen.PrimaryScreen
- uid: System.Windows.Forms.Screen.ToString*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: ToString
  nameWithType: Screen.ToString
- uid: System.Windows.Forms.Screen.WorkingArea*
  parent: System.Windows.Forms.Screen
  isExternal: false
  name: WorkingArea
  nameWithType: Screen.WorkingArea
