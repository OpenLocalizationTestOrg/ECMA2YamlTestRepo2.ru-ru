### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebHttpSecurity
  id: WebHttpSecurity
  children:
  - System.ServiceModel.WebHttpSecurity.#ctor
  - System.ServiceModel.WebHttpSecurity.Mode
  - System.ServiceModel.WebHttpSecurity.ShouldSerializeMode
  - System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport
  - System.ServiceModel.WebHttpSecurity.Transport
  langs:
  - csharp
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity
  fullName: System.ServiceModel.WebHttpSecurity
  type: Class
  summary: "Указывает типы безопасности, доступные для конечной точки службы, настроенной для получения HTTP-запросов."
  remarks: "WebHttpSecurity предоставляет требования безопасности для конечной точки, настроенной с <xref:System.ServiceModel.WebHttpBinding>.</xref:System.ServiceModel.WebHttpBinding>       Если <xref:System.ServiceModel.WebHttpSecurityMode>указал значение <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>метод, то параметры, предоставляемые <xref:System.ServiceModel.WebHttpSecurity.Transport%2A>свойства вступают в силу для конечной точки службы.</xref:System.ServiceModel.WebHttpSecurity.Transport%2A> </xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode> Значение <xref:System.ServiceModel.WebHttpSecurityMode>может быть задано только в <xref:System.ServiceModel.WebHttpBinding>конструктор, который принимает его в качестве явного параметра и его значение не может быть снова задать после создания экземпляра привязки.</xref:System.ServiceModel.WebHttpBinding> </xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public sealed class WebHttpSecurity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpSecurity.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WebHttpSecurity
  langs:
  - csharp
  name: WebHttpSecurity()
  nameWithType: WebHttpSecurity.WebHttpSecurity()
  fullName: System.ServiceModel.WebHttpSecurity.WebHttpSecurity()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Создает новый экземпляр <xref href=&quot;System.ServiceModel.WebHttpSecurity&quot;> </xref> класса."
  syntax:
    content: public WebHttpSecurity ();
    parameters: []
  overload: System.ServiceModel.WebHttpSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpSecurity.Mode
  id: Mode
  parent: System.ServiceModel.WebHttpSecurity
  langs:
  - csharp
  name: Mode
  nameWithType: WebHttpSecurity.Mode
  fullName: System.ServiceModel.WebHttpSecurity.Mode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Возвращает или задает режим безопасности, используемый конечной точкой, настроенной для получения HTTP-запросов с <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;> </xref>."
  remarks: "Это свойство определяет, является ли параметры из <xref:System.ServiceModel.WebHttpSecurity.Transport%2A>свойство вступает в силу.</xref:System.ServiceModel.WebHttpSecurity.Transport%2A>"
  syntax:
    content: public System.ServiceModel.WebHttpSecurityMode Mode { get; set; }
    return:
      type: System.ServiceModel.WebHttpSecurityMode
      description: "Значение <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref> , указывающее, используется ли конечной точкой безопасность транспортного уровня или безопасность не обеспечивается. Значение по умолчанию — <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>."
  overload: System.ServiceModel.WebHttpSecurity.Mode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение не является допустимым <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode
  id: ShouldSerializeMode
  parent: System.ServiceModel.WebHttpSecurity
  langs:
  - csharp
  name: ShouldSerializeMode()
  nameWithType: WebHttpSecurity.ShouldSerializeMode()
  fullName: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Указывает, является ли <xref:System.ServiceModel.WebHttpSecurity.Mode*>свойства отличается от значения по умолчанию и должно быть сериализовано.</xref:System.ServiceModel.WebHttpSecurity.Mode*> Используется для интеграции XAML."
  syntax:
    content: public bool ShouldSerializeMode ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ServiceModel.WebHttpSecurity.Mode*>значение свойства должно быть сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WebHttpSecurity.Mode*>"
  overload: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport
  id: ShouldSerializeTransport
  parent: System.ServiceModel.WebHttpSecurity
  langs:
  - csharp
  name: ShouldSerializeTransport()
  nameWithType: WebHttpSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Возвращает значение, указывающее, отличается от значения по умолчанию и должно быть сериализовано свойство транспорта. Это используется WCF для интеграции XAML."
  syntax:
    content: public bool ShouldSerializeTransport ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ServiceModel.WebHttpSecurity.Transport*>значение свойства должно быть сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WebHttpSecurity.Transport*>"
  overload: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpSecurity.Transport
  id: Transport
  parent: System.ServiceModel.WebHttpSecurity
  langs:
  - csharp
  name: Transport
  nameWithType: WebHttpSecurity.Transport
  fullName: System.ServiceModel.WebHttpSecurity.Transport
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Возвращает объект, содержащий параметры безопасности транспортного уровня для этой привязки."
  remarks: "Используйте <xref:System.ServiceModel.HttpTransportSecurity>объект, возвращаемый этим свойством, для задания параметров безопасности транспорта для <xref:System.ServiceModel.WebHttpBinding>.</xref:System.ServiceModel.WebHttpBinding> </xref:System.ServiceModel.HttpTransportSecurity>       Если <xref:System.ServiceModel.WebHttpSecurityMode>или <xref:System.ServiceModel.WebHttpSecurityMode>указал значение <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>метод, то параметры, предоставляемые свойства транспорта, вступают в силу для конечной точки службы.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode> </xref:System.ServiceModel.WebHttpSecurityMode>       Если <xref:System.ServiceModel.WebHttpSecurityMode>указал значение <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>метод, то параметры, предоставляемые свойства транспорта, вступают в силу для конечной точки службы.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> </xref:System.ServiceModel.WebHttpSecurityMode> Значение <xref:System.ServiceModel.WebHttpSecurityMode>может быть задано только в <xref:System.ServiceModel.WebHttpBinding>конструктор, который принимает его в качестве явного параметра и его значение не может быть снова задать после создания экземпляра привязки.</xref:System.ServiceModel.WebHttpBinding> </xref:System.ServiceModel.WebHttpSecurityMode>"
  syntax:
    content: public System.ServiceModel.HttpTransportSecurity Transport { get; set; }
    return:
      type: System.ServiceModel.HttpTransportSecurity
      description: "<xref:System.ServiceModel.HttpTransportSecurity>Для этой привязки.</xref:System.ServiceModel.HttpTransportSecurity>       Значения по умолчанию: <> </> *настроек из <xref:System.ServiceModel.HttpClientCredentialType>, <> </> *настроек из <xref href=&quot;System.ServiceModel.HttpProxyCredentialType&quot;> </xref>, и <xref:System.ServiceModel.HttpTransportSecurity.Realm*>= «».</xref:System.ServiceModel.HttpTransportSecurity.Realm*> </xref:System.ServiceModel.HttpClientCredentialType>"
  overload: System.ServiceModel.WebHttpSecurity.Transport*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.WebHttpSecurity.#ctor
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: WebHttpSecurity()
  nameWithType: WebHttpSecurity.WebHttpSecurity()
  fullName: System.ServiceModel.WebHttpSecurity.WebHttpSecurity()
- uid: System.ServiceModel.WebHttpSecurity.Mode
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: Mode
  nameWithType: WebHttpSecurity.Mode
  fullName: System.ServiceModel.WebHttpSecurity.Mode
- uid: System.ServiceModel.WebHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurityMode
  nameWithType: WebHttpSecurityMode
  fullName: System.ServiceModel.WebHttpSecurityMode
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: ShouldSerializeMode()
  nameWithType: WebHttpSecurity.ShouldSerializeMode()
  fullName: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: ShouldSerializeTransport()
  nameWithType: WebHttpSecurity.ShouldSerializeTransport()
  fullName: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport()
- uid: System.ServiceModel.WebHttpSecurity.Transport
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: Transport
  nameWithType: WebHttpSecurity.Transport
  fullName: System.ServiceModel.WebHttpSecurity.Transport
- uid: System.ServiceModel.HttpTransportSecurity
  parent: System.ServiceModel
  isExternal: true
  name: HttpTransportSecurity
  nameWithType: HttpTransportSecurity
  fullName: System.ServiceModel.HttpTransportSecurity
- uid: System.ServiceModel.WebHttpSecurity.#ctor*
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity.WebHttpSecurity
- uid: System.ServiceModel.WebHttpSecurity.Mode*
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: Mode
  nameWithType: WebHttpSecurity.Mode
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeMode*
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: ShouldSerializeMode
  nameWithType: WebHttpSecurity.ShouldSerializeMode
- uid: System.ServiceModel.WebHttpSecurity.ShouldSerializeTransport*
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: ShouldSerializeTransport
  nameWithType: WebHttpSecurity.ShouldSerializeTransport
- uid: System.ServiceModel.WebHttpSecurity.Transport*
  parent: System.ServiceModel.WebHttpSecurity
  isExternal: false
  name: Transport
  nameWithType: WebHttpSecurity.Transport
