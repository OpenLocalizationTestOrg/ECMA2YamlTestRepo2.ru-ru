### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  id: DesignerSerializerAttribute
  children:
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId
  langs:
  - csharp
  name: DesignerSerializerAttribute
  nameWithType: DesignerSerializerAttribute
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  type: Class
  summary: "Обозначает сериализатор, диспетчер сериализации, используемый для сериализации значения типа, которому применяется этот атрибут. Этот класс не наследуется."
  remarks: "DesignerSerializerAttribute предоставляет возможность указать, чтобы диспетчер сериализации конструктора использование типа преобразователя при сериализации значения объекта. Это позволяет указать сериализатор, способный сериализовать пользовательский тип, для экземпляра. Поместите этот атрибут для класса, чтобы показать объект сериализации, используемый при сериализации класса."
  example:
  - "The following code uses a DesignerSerializerAttribute to associate an example serializer with an example component.  \n  \n [!code-cpp[DesignerSerializerAttribute#1](~/add/codesnippet/cpp/t-system.componentmodel._9_1.cpp)]\n [!code-cs[DesignerSerializerAttribute#1](~/add/codesnippet/csharp/t-system.componentmodel._9_1.cs)]\n [!code-vb[DesignerSerializerAttribute#1](~/add/codesnippet/visualbasic/t-system.componentmodel._9_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      public sealed class DesignerSerializerAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: DesignerSerializerAttribute(String,String)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot;> </xref> класса."
  syntax:
    content: public DesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName);
    parameters:
    - id: serializerTypeName
      type: System.String
      description: "Полное имя типа данных сериализатора."
    - id: baseSerializerTypeName
      type: System.String
      description: "Полное имя базовый тип данных сериализатора. Может быть предоставлено несколько сериализаторов класса при условии, что сериализаторы имеют разные базовые типы."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: DesignerSerializerAttribute(String,Type)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot;> </xref> класса."
  syntax:
    content: public DesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType);
    parameters:
    - id: serializerTypeName
      type: System.String
      description: "Полное имя типа данных сериализатора."
    - id: baseSerializerType
      type: System.Type
      description: "Базовый тип данных сериализатора. Может быть предоставлено несколько сериализаторов класса при условии, что сериализаторы имеют разные базовые типы."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: DesignerSerializerAttribute(Type,Type)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot;> </xref> класса."
  syntax:
    content: public DesignerSerializerAttribute (Type serializerType, Type baseSerializerType);
    parameters:
    - id: serializerType
      type: System.Type
      description: "Тип данных сериализатора."
    - id: baseSerializerType
      type: System.Type
      description: "Базовый тип данных сериализатора. Может быть предоставлено несколько сериализаторов класса при условии, что сериализаторы имеют разные базовые типы."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName
  id: SerializerBaseTypeName
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: SerializerBaseTypeName
  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает полное имя типа базового типа сериализатора."
  syntax:
    content: public string SerializerBaseTypeName { get; }
    return:
      type: System.String
      description: "Полное имя типа имя базового типа сериализатора."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName
  id: SerializerTypeName
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: SerializerTypeName
  nameWithType: DesignerSerializerAttribute.SerializerTypeName
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает полное имя типа сериализатора."
  syntax:
    content: public string SerializerTypeName { get; }
    return:
      type: System.String
      description: "Полное имя типа сериализатора."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: DesignerSerializerAttribute.TypeId
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Указывает уникальный идентификатор для этого типа атрибута."
  remarks: "Этот идентификатор используется в алгоритмах фильтрации для определения двух атрибутов, которые относятся к одному типу. Для большинства атрибутов данное свойство просто возвращает <xref:System.Type>экземпляр атрибута.</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>переопределяет этот параметр для включения типа базового типа редактора.</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Уникальный идентификатор для этого типа атрибута."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: DesignerSerializerAttribute(String,String)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: DesignerSerializerAttribute(String,Type)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(String,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: DesignerSerializerAttribute(Type,Type)
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.DesignerSerializerAttribute(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: SerializerBaseTypeName
  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: SerializerTypeName
  nameWithType: DesignerSerializerAttribute.SerializerTypeName
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerSerializerAttribute.TypeId
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: DesignerSerializerAttribute
  nameWithType: DesignerSerializerAttribute.DesignerSerializerAttribute
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: SerializerBaseTypeName
  nameWithType: DesignerSerializerAttribute.SerializerBaseTypeName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: SerializerTypeName
  nameWithType: DesignerSerializerAttribute.SerializerTypeName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  isExternal: false
  name: TypeId
  nameWithType: DesignerSerializerAttribute.TypeId
