### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.NullableConverter
  id: NullableConverter
  children:
  - System.ComponentModel.NullableConverter.#ctor(System.Type)
  - System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.NullableConverter.NullableType
  - System.ComponentModel.NullableConverter.UnderlyingType
  - System.ComponentModel.NullableConverter.UnderlyingTypeConverter
  langs:
  - csharp
  name: NullableConverter
  nameWithType: NullableConverter
  fullName: System.ComponentModel.NullableConverter
  type: Class
  summary: "Обеспечивает автоматическое преобразование между обнуляемым типом и его базовым типом-примитивом."
  syntax:
    content: 'public class NullableConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: NullableConverter(Type)
  nameWithType: NullableConverter.NullableConverter(Type)
  fullName: System.ComponentModel.NullableConverter.NullableConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.NullableConverter&quot;> </xref> класса."
  syntax:
    content: public NullableConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Указанный тип, допускающий значение NULL."
  overload: System.ComponentModel.NullableConverter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>не является типом значения NULL."
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NullableConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.NullableConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает, может ли этот преобразователь выполнить преобразование объекта заданного типа в тип этого преобразователя, используя заданный контекст."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: sourceType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно преобразовать.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.NullableConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NullableConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.NullableConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает, может ли этот преобразователь преобразовать объект указанного типа, используя заданный контекст."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: destinationType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно преобразовать.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.NullableConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NullableConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.NullableConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует заданный объект в тип этого преобразователя, используя указанные сведения о контексте и языка и региональных параметров."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Для использования в качестве текущего языка и региональных параметров.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованное значение.</xref:System.Object>"
  overload: System.ComponentModel.NullableConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NullableConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.NullableConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует данный объект значения в указанный тип, используя указанные сведения о контексте и языка и региональных параметров."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Для использования в качестве текущего языка и региональных параметров.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>Преобразуемое значение параметра.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованное значение.</xref:System.Object>"
  overload: System.ComponentModel.NullableConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: NullableConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.NullableConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Создает экземпляр типа, это <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> связана, используя заданный контекст, задающий набор значений свойств для объекта."
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Новых значений свойств.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "<xref:System.Object>Представляющий данного <xref:System.Collections.IDictionary>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , если объект не может быть создан.</xref:System.Collections.IDictionary> </xref:System.Object> Этот метод всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.NullableConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает ли изменение значения в этом объекте требуется вызов <xref:System.ComponentModel.TypeConverter.CreateInstance*>для создания нового значения, используя заданный контекст.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если для изменения свойства в этом объекте требуется вызов <xref:System.ComponentModel.TypeConverter.CreateInstance*>для создания нового значения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.NullableConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: NullableConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.NullableConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию свойств для типа массива, заданного параметром value, используя заданный контекст и атрибуты."
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Задающий тип массива, для которого нужно получить свойства.</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "Массив объектов типа <xref:System.Attribute>, используемый в качестве фильтра.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> со свойствами, доступными для этого типа данных или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если свойства отсутствуют."
  overload: System.ComponentModel.NullableConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, поддерживает ли объект свойства, используя заданный контекст."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ComponentModel.TypeConverter.GetProperties*>должен быть вызван для поиска свойств этого объекта; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.NullableConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию стандартных значений для типа данных, для которого предназначен этот преобразователь типов при предоставлении с контекстом формата."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, содержащий стандартный набор допустимых значений или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип данных не поддерживает стандартный набор значений.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.NullableConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает ли коллекция стандартных значений, возвращаемая методом <xref:System.ComponentModel.TypeConverter.GetStandardValues*>является исчерпывающим списком возможных значений, используя заданный контекст.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>возвращенный <xref:System.ComponentModel.TypeConverter.GetStandardValues*>является исчерпывающим списком возможных значений; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если возможны другие значения.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.NullableConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, показывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка, используя заданный контекст."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ComponentModel.TypeConverter.GetStandardValues*>должен быть вызван для поиска общего набора значений, поддерживаемых объектом, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.NullableConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: NullableConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.NullableConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, показывающее, допустимо ли данное значение для этого типа и для заданного контекста."
  syntax:
    content: public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для проверки на допустимость.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное значение является допустимым для этого объекта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.NullableConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.NullableType
  id: NullableType
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: NullableType
  nameWithType: NullableConverter.NullableType
  fullName: System.ComponentModel.NullableConverter.NullableType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает тип, допускающий значение NULL."
  syntax:
    content: public Type NullableType { get; }
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, допускающий значение NULL.</xref:System.Type>"
  overload: System.ComponentModel.NullableConverter.NullableType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.UnderlyingType
  id: UnderlyingType
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: NullableConverter.UnderlyingType
  fullName: System.ComponentModel.NullableConverter.UnderlyingType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает базовый тип."
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий базовый тип.</xref:System.Type>"
  overload: System.ComponentModel.NullableConverter.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NullableConverter.UnderlyingTypeConverter
  id: UnderlyingTypeConverter
  parent: System.ComponentModel.NullableConverter
  langs:
  - csharp
  name: UnderlyingTypeConverter
  nameWithType: NullableConverter.UnderlyingTypeConverter
  fullName: System.ComponentModel.NullableConverter.UnderlyingTypeConverter
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает преобразователь базового типа."
  syntax:
    content: public System.ComponentModel.TypeConverter UnderlyingTypeConverter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "Объект <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> , представляющий базовый тип преобразователя."
  overload: System.ComponentModel.NullableConverter.UnderlyingTypeConverter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.NullableConverter.#ctor(System.Type)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: NullableConverter(Type)
  nameWithType: NullableConverter.NullableConverter(Type)
  fullName: System.ComponentModel.NullableConverter.NullableConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NullableConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.NullableConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NullableConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.NullableConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NullableConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.NullableConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NullableConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.NullableConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: NullableConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.NullableConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: NullableConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.NullableConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.NullableConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: NullableConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.NullableConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.NullableConverter.NullableType
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: NullableType
  nameWithType: NullableConverter.NullableType
  fullName: System.ComponentModel.NullableConverter.NullableType
- uid: System.ComponentModel.NullableConverter.UnderlyingType
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: UnderlyingType
  nameWithType: NullableConverter.UnderlyingType
  fullName: System.ComponentModel.NullableConverter.UnderlyingType
- uid: System.ComponentModel.NullableConverter.UnderlyingTypeConverter
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: UnderlyingTypeConverter
  nameWithType: NullableConverter.UnderlyingTypeConverter
  fullName: System.ComponentModel.NullableConverter.UnderlyingTypeConverter
- uid: System.ComponentModel.NullableConverter.#ctor*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: NullableConverter
  nameWithType: NullableConverter.NullableConverter
- uid: System.ComponentModel.NullableConverter.CanConvertFrom*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: NullableConverter.CanConvertFrom
- uid: System.ComponentModel.NullableConverter.CanConvertTo*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: NullableConverter.CanConvertTo
- uid: System.ComponentModel.NullableConverter.ConvertFrom*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: NullableConverter.ConvertFrom
- uid: System.ComponentModel.NullableConverter.ConvertTo*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: ConvertTo
  nameWithType: NullableConverter.ConvertTo
- uid: System.ComponentModel.NullableConverter.CreateInstance*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: CreateInstance
  nameWithType: NullableConverter.CreateInstance
- uid: System.ComponentModel.NullableConverter.GetCreateInstanceSupported*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: NullableConverter.GetCreateInstanceSupported
- uid: System.ComponentModel.NullableConverter.GetProperties*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetProperties
  nameWithType: NullableConverter.GetProperties
- uid: System.ComponentModel.NullableConverter.GetPropertiesSupported*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: NullableConverter.GetPropertiesSupported
- uid: System.ComponentModel.NullableConverter.GetStandardValues*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: NullableConverter.GetStandardValues
- uid: System.ComponentModel.NullableConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: NullableConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.NullableConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: NullableConverter.GetStandardValuesSupported
- uid: System.ComponentModel.NullableConverter.IsValid*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: IsValid
  nameWithType: NullableConverter.IsValid
- uid: System.ComponentModel.NullableConverter.NullableType*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: NullableType
  nameWithType: NullableConverter.NullableType
- uid: System.ComponentModel.NullableConverter.UnderlyingType*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: UnderlyingType
  nameWithType: NullableConverter.UnderlyingType
- uid: System.ComponentModel.NullableConverter.UnderlyingTypeConverter*
  parent: System.ComponentModel.NullableConverter
  isExternal: false
  name: UnderlyingTypeConverter
  nameWithType: NullableConverter.UnderlyingTypeConverter
