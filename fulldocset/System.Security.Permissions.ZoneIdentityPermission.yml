### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ZoneIdentityPermission
  id: ZoneIdentityPermission
  children:
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  - System.Security.Permissions.ZoneIdentityPermission.Copy
  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  - System.Security.Permissions.ZoneIdentityPermission.ToXml
  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission
  fullName: System.Security.Permissions.ZoneIdentityPermission
  type: Class
  summary: "Определяет разрешение удостоверения для зоны, из которого происходит код. Этот класс не наследуется."
  remarks: "Это разрешение можно определить, является ли вызывающий код из определенной зоны. Зоны настраиваются в соответствии с параметрами Microsoft Internet Explorer и сопоставляются с URL-адреса путем IInternetSecurityManager Internet Explorer и связанные API. Только полные соответствия зон определяются для разрешения. URL-адрес может принадлежать только одной зоне.      -Местная интрасеть: зона местной интрасети используется для содержимого, расположенного в интрасети компании. Так как серверы находятся внутри корпоративного брандмауэра, содержимому интрасети назначается более высокий уровень доверия.      -Зона надежных узлов: зона надежных узлов используется для содержимого, расположенного на веб-сайты, которые считаются более надежными или заслуживающими доверия, чем другие сайты в Интернете. Пользователи могут использовать эту зону для назначения высокого уровня доверия для конкретного веб-сайты. URL-адреса этих надежных веб-узлов должны быть добавлены в эту зону пользователем. По умолчанию сайты в зону надежных узлов получают не более высокий уровень доверия, чем в зоне Интернета. Необходимо изменить уровень доверия, назначенный этой зоне, если хотите, чтобы узлы, он содержит должен быть предоставлен более высокий уровень доверия пользователя или организации.      -Интернет зоны: зона Интернета используется для веб-сайтов в Интернете, не входящих в другую зону. Параметры по умолчанию позволяют кода загружаются из этих узлов, только минимальный доступ к ресурсам компьютера пользователя. Веб-сайтов, которые не сопоставлены в другие зоны автоматически попадают в эту зону.      -Зона ограниченных узлов: зона ограниченных узлов используется для веб-сайтов, содержимое которых может вызвать или ранее вызывало проблемы при загрузке. Эта зона может использоваться для предотвращения кода, загруженные из этих узлов на компьютере пользователя. URL-адреса этих ненадежных веб-узлов должны быть добавлены в эту зону пользователем.      -Зона локального компьютера: зона локального компьютера — это неявная зона, который используется для содержимого, которое существует на компьютере пользователя. Содержимое, находящееся на компьютере пользователя, за исключением содержимого в кэше Internet Explorer в локальной системе обрабатывается с очень высоким уровнем доверия.      Настроек [!IMPORTANT] настроек начиная с [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], права доступа для удостоверения не используются.   >> В .NET Framework версий 1.0 и 1.1 требования разрешениям идентификации остаются в силе, даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, требование разрешения идентификации завершается сбоем, если сборку не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, являются неэффективными, если вызывающая сборка имеет полное доверие к разрешениям идентификации. Тем самым обеспечивается согласованность всех разрешений, что исключает интерпретации разрешений идентификации как особый случай."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Создает либо полностью ограниченный (`None`) или `Unrestricted` разрешение.      Настроек [!NOTE] настроек в .NET Framework версий 1.0 и 1.1, не могут иметь разрешения идентификации <xref:System.Security.Permissions.PermissionState>значение состояния разрешения.</xref:System.Security.Permissions.PermissionState> Начиная с .NET Framework версии 2.0 разрешениям идентификации может быть любое значение состояния разрешения. Это означает, что в версиях 2.0 и более поздних, разрешения идентификации отличается от разрешения, которые реализуют <xref:System.Security.Permissions.IUnrestrictedPermission>интерфейса.</xref:System.Security.Permissions.IUnrestrictedPermission> То есть требование идентификации всегда завершается успешно, независимо от того, идентификатор сборки, если сборки было предоставлено полное доверие.       В .NET Framework версий 1.0 и 1.1 требования разрешениям идентификации остаются в силе, даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, требование разрешения идентификации завершается сбоем, если сборку не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, являются неэффективными, если вызывающая сборка имеет полное доверие к разрешениям идентификации. Тем самым обеспечивается согласованность всех разрешений, что исключает интерпретации разрешений идентификации как особый случай."
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/visualbasic/15a7f59e-a46d-4cbf-89a9-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/csharp/15a7f59e-a46d-4cbf-89a9-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  id: '#ctor(System.Security.SecurityZone)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref> класс для представления идентификатора указанной зоны."
  remarks: ''
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/visualbasic/66b125e0-a7cf-4ec2-89f3-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/csharp/66b125e0-a7cf-4ec2-89f3-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);
    parameters:
    - id: zone
      type: System.Security.SecurityZone
      description: "Идентификатор зоны."
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает идентичную копию текущего разрешения."
  remarks: "Копия разрешения предоставляет такой же доступ к ресурсам, что само разрешение."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего разрешения."
  overload: System.Security.Permissions.ZoneIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Восстанавливает разрешение с указанным состоянием из кодировки XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления разрешения."
  overload: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code> Параметр не является допустимым элементом разрешения.       - или - <code> esd </code> номер версии параметра не является допустимым."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений."
  remarks: "Пересечение двух разрешений является разрешением, которое описывает набор операций, в обоих разрешениях. Только запрос, передающий оба исходных разрешения, передает их пересечение.       Пересечение двух идентичных <xref:System.Security.Permissions.ZoneIdentityPermission>объекты — это же разрешение.</xref:System.Security.Permissions.ZoneIdentityPermission> Другие сочетания приводит разрешение, представляющее собой `null`."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, пересекающееся с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой пересечение текущего и указанного разрешений. Это новое разрешение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пересечение является пустым."
  overload: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Определяет, является ли текущее разрешение подмножеством указанного разрешения."
  remarks: "Текущее разрешение является подмножеством указанного разрешения, если два разрешения равны или если текущее разрешение представляет <xref:System.Security.SecurityZone>зоны безопасности.</xref:System.Security.SecurityZone>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, для которого требуется проверить отношение подмножества. Это разрешение должно быть того же типа, что и текущее разрешение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является подмножеством указанного разрешения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, это разрешение не представляет <xref href=&quot;System.Security.SecurityZone&quot;> </xref> зоны безопасности и указанного разрешений не равно текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  id: SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает зону, представленную текущим <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>."
  syntax:
    content: public System.Security.SecurityZone SecurityZone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: "Один из <xref href=&quot;System.Security.SecurityZone&quot;> </xref> значения."
  overload: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение параметра не является допустимым значением для <xref href=&quot;System.Security.SecurityZone&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает кодировку XML для разрешения и его текущего состояния."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Кодировка XML разрешения, включающая сведения о состоянии."
  overload: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает разрешение, представляющее собой объединение текущего и указанного разрешений."
  remarks: "Результатом вызова на объединение является разрешение, представляющее представлены зоны безопасности текущего разрешения и указанного разрешений. Любой запрос, передающий любое разрешение, передает их объединение. Объединение двух идентичных <xref:System.Security.Permissions.ZoneIdentityPermission>объекты — это же разрешение.</xref:System.Security.Permissions.ZoneIdentityPermission> Объединение null разрешения и <xref:System.Security.Permissions.ZoneIdentityPermission>разрешений является разрешением, которое не имеет значение null.</xref:System.Security.Permissions.ZoneIdentityPermission>       Обратите внимание, что<xref:System.Security.Permissions.ZoneIdentityPermission> объект, представляющий <xref:System.Security.SecurityZone>зоны безопасности считается пустым разрешением и обрабатываются как особый случай.</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> Объединение <xref:System.Security.Permissions.ZoneIdentityPermission>объект, представляющий <xref:System.Security.SecurityZone>зоны безопасности и null разрешение имеет значение null.</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> В результате объединения двух разрешений идентификации другую зону <xref:System.ArgumentException>исключения, когда ни один из двух разрешений представляет <xref:System.Security.SecurityZone>зоны безопасности.</xref:System.Security.SecurityZone> </xref:System.ArgumentException>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение для объединения с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой объединение текущего и указанного разрешений."
  overload: System.Security.Permissions.ZoneIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения.       - или - два разрешения не равны, и текущее разрешение не представляет <xref href=&quot;System.Security.SecurityZone&quot;> </xref> зоне безопасности."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: ZoneIdentityPermission.Copy
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: ZoneIdentityPermission.FromXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: ZoneIdentityPermission.Intersect
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ZoneIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: ZoneIdentityPermission.ToXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Union*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union
  nameWithType: ZoneIdentityPermission.Union
