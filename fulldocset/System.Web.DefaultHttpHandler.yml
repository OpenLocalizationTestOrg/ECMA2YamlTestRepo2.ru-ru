### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "Представляет свойства и методы обработчика HTTP по умолчанию."
  remarks: "Объект дескриптор DefaultHttpHandler перехватывает входящие запросы в конвейере HTTP при перехват запроса был настроен через Internet Information Services (IIS) 6.0 и без явной привязки применимы ко запрашиваемое расширение.       Перехват запроса можно настроить через функцию универсальное приложение обработки запросов, введенную в IIS 6.0. Дополнительные сведения см. в разделе [библиотеки MSDN](http://go.microsoft.com/fwlink/?linkid=37118) сведения об использовании универсальных приложений для повторного сопоставления URL-адрес.       Этот класс реализует дескриптор DefaultHttpHandler <xref:System.Web.IHttpAsyncHandler>интерфейс для обеспечения обработки асинхронного запроса.</xref:System.Web.IHttpAsyncHandler> Общие сведения о создании обработчиков HTTP см. в разделе [обработчики HTTP-данных и общие сведения о модулях HTTP](~/add/includes/ajax-current-ext-md.md). Кроме того, Дополнительные сведения см. в следующих: - о создании асинхронные обработчики HTTP в разделе [Пошаговое руководство: создание асинхронного обработчика HTTP](~/add/includes/ajax-current-ext-md.md).      -Сведения о регистрации обработчиков HTTP, в разделе [как: Регистрация обработчиков HTTP](~/add/includes/ajax-current-ext-md.md).       Классы могут наследовать от класса дескриптор DefaultHttpHandler для предоставления настраиваемого обработки запросов. Переопределить асинхронного обработчика HTTP, который является производным от дескриптор DefaultHttpHandler <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>метод, чтобы изменить способ обработки запросов.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       Дескриптор DefaultHttpHandler не использует ошибки ASP.NET. Существующее содержимое, использующем ошибки IIS, а также клиентов пользовательского механизма ошибок ISAPI будет работать без изменений."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> класса."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициирует асинхронный вызов обработчика HTTP."
  remarks: "При создании обработчика HTTP-данных для использования асинхронного, ваш обработчик должен реализовывать асинхронного запроса BeginProcessRequest и <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>методы, вызываемые асинхронно с помощью ASP.NET.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Объект, предоставляющий ссылки на внутренние серверные объекты, которые используются для обслуживания HTTP-запросов."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый при завершении асинхронного вызова метода. Если `callback` — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, делегат не вызывается."
    - id: state
      type: System.Object
      description: "Все данные о состоянии, необходимые для обработки запроса."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Содержащий сведения о состоянии процесса.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предварительные условия для обработки запроса завершены с ошибкой и запрошенный файл имеет суффикс .asp или запрос был отправлен с помощью POST."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает контекст, связанный с текущим <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> объекта."
  remarks: "Контекстное свойство предоставляет доступ к текущему <xref:System.Web.HttpContext>объекта для производных классов.</xref:System.Web.HttpContext> <xref:System.Web.HttpContext>Объект предоставляет доступ к встроенным <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, и <xref:System.Web.HttpApplication.Server%2A>Свойства запроса.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Дополнительные сведения о доступе к информации см. в разделе <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Объект, содержащий текущий контекст."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Предоставляет метод end для асинхронного процесса."
  remarks: "Метод EndProcessRequest исключения, перехваченные во время асинхронного процесса."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Объект, содержащий сведения о состоянии процесса."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает коллекцию заголовков запроса и значений запросов для передачи вместе с запросом."
  remarks: "Свойство ExecuteUrlHeaders возвращает пустую коллекцию, если не заполняется в класс, производный от <xref:System.Web.DefaultHttpHandler>класса.</xref:System.Web.DefaultHttpHandler> Заголовки, которые будут добавлены, добавляются в коллекцию заголовков запроса перед передачей запроса обратно в Internet Information Services (IIS)."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> содержащая заголовков запроса и значения."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает логическое значение, указывающее, что другой запрос может использовать текущий экземпляр <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> класса."
  remarks: "Для явного задания свойства значение свойства IsReusable `true` или `false`, переопределите это свойство в значение свойства IsReusable."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> для повторного использования; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Вызывается, когда предусловия предотвратить <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> объекта из обработки запроса."
  remarks: "Предусловия указанное клиентом в полях заголовка запроса и оцениваются на веб-сервере. Например при использовании предварительных условий, клиентам можно предотвратить запрошенный метод (например, GET), применяемые к ресурсу, отличному от назначенного. Дополнительные сведения см. в разделе 14, «Определения полей заголовков», в [протокол HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) спецификация на веб-сайте консорциума World Wide Web (W3C).       Метод OnExecuteUrlPreconditionFailure вызывается при предусловия предотвратить <xref:System.Web.DefaultHttpHandler>объекта из обработки запроса.</xref:System.Web.DefaultHttpHandler> Производный класс может переопределить метод OnExecuteUrlPreconditionFailure для создания исключения при сбое предварительные условия. <xref:System.Web.DefaultHttpHandler>Не вызывает исключение в методе OnExecuteUrlPreconditionFailure.</xref:System.Web.DefaultHttpHandler>       Любой из следующих приведет к сбою предварительных условий:-вызов <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Вызов <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Вызов <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Изменение политики кэширования для ответа.      -Добавление <xref:System.IO.Stream>объект в качестве фильтра для <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>свойство.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Переопределяет целевой URL-адрес текущего запроса."
  remarks: "Возвращает метод OverrideExecuteUrlPath `null` Если переопределяется в классе, который является производным от <xref:System.Web.DefaultHttpHandler>класса.</xref:System.Web.DefaultHttpHandler>       Метод OverrideExecuteUrlPath вызывается, только если ASP.NET выполняется в изолированном режиме рабочего процесса в IIS 6.0, и если ответ не был изменен до <xref:System.Web.DefaultHttpHandler>объекта был вызван.</xref:System.Web.DefaultHttpHandler> Ответ изменяется каким-либо из следующих действий:-вызов <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Вызов <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Вызов <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Изменение политики кэширования для ответа.      -Добавление <xref:System.IO.Stream>объект в качестве фильтра для <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>свойство.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "Переопределенный URL-адрес для использования в запросе; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если переопределенный URL-адрес не предоставляется."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Включает <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> объектов для обработки веб-запросов НТТР."
  remarks: "Метод ProcessRequest не должен вызываться синхронно. Классы, которые являются производными от <xref:System.Web.DefaultHttpHandler>класс может переопределить ProcessRequest можно указать настраиваемый запросов обработку.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Объект, предоставляющий ссылки на внутренние объекты сервера используется для обслуживания HTTP-запросов."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ProcessRequest вызывается синхронно."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
