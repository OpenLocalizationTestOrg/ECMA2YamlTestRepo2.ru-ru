### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.FileSystem
  id: FileSystem
  children:
  - Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  - Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.Drives
  - Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystem
  nameWithType: FileSystem
  fullName: Microsoft.VisualBasic.FileIO.FileSystem
  type: Class
  summary: "Предоставляет свойства и методы для работы с дисками, файлами и каталогами."
  remarks: "В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem` объекта.      |||   |-|-|   | Чтобы | См. |   | Чтение из текстового файла | [Как: чтение из текстовых файлов](~/add/includes/ajax-current-ext-md.md)|   | Чтение из файла с разделителями | [Как: чтение из файлов с разделителями-запятыми](~/add/includes/ajax-current-ext-md.md)|   | Чтение из файла фиксированной ширины | [Как: чтение фиксированной ширины текстовых файлов](~/add/includes/ajax-current-ext-md.md)|   | Чтение из текстового файла с несколькими форматами | [Как: чтение из текстовых файлов различных форматов](~/add/includes/ajax-current-ext-md.md)|   | Чтение из двоичного файла | [Как: чтение из двоичного файла](~/add/includes/ajax-current-ext-md.md)|   | Чтение из текстового файла с <xref:System.IO.StreamReader>|[ Как: чтение текста из файлов с помощью StreamReader](~/add/includes/ajax-current-ext-md.md)|   | Запись в текстовый файл | [Как: запись текста в файлы](~/add/includes/ajax-current-ext-md.md)|   | Добавьте в текстовый файл | [Как: Дозапись в текстовый файл](~/add/includes/ajax-current-ext-md.md)|   | Запись в двоичный файл | [Как: запись в двоичные файлы](~/add/includes/ajax-current-ext-md.md)|   | Запись текста в файлы **Мои документы** directory |[ Как: запись текста в файлы в каталоге Мои документы](~/add/includes/ajax-current-ext-md.md)|   | Запись в текстовый файл с `StreamWriter` | [как: запись текста в файлы с помощью StreamWriter](~/add/includes/ajax-current-ext-md.md)|   | Копирование файлов по определенному шаблону | [Как: копирование файлов по заданному шаблону в каталог](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в тот же каталог | [Как: Создание копии файла в том же каталоге](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в другом каталоге | [Как: Создание копии файла в другой каталог](~/add/includes/ajax-current-ext-md.md)|   | Создайте файл | [Как: создайте файл](~/add/includes/ajax-current-ext-md.md)|   | Удаление файла | [Как: удаление файла](~/add/includes/ajax-current-ext-md.md)|   | Поиск файлов по конкретному шаблону | [Как: поиск файлов по конкретному шаблону](~/add/includes/ajax-current-ext-md.md)|   | Переместите файл | [Как: переместить файл](~/add/includes/ajax-current-ext-md.md)|   | Переименовать файл | [Как: переименовать файл](~/add/includes/ajax-current-ext-md.md)|   | Копирование каталога в другой каталог | [Как: копирование каталога в другой каталог](~/add/includes/ajax-current-ext-md.md)|   | Создайте каталог | [Как: создайте каталог](~/add/includes/ajax-current-ext-md.md)|   | Поиск подкаталогов по заданному шаблону | [Как: поиск подкаталогов по заданному шаблону](~/add/includes/ajax-current-ext-md.md)|   | Получение коллекции содержащихся в каталоге файлов | [Как: получение коллекции содержащихся в каталоге файлов](~/add/includes/ajax-current-ext-md.md)|   | Чтение из **Мои документы** directory |[ Как: извлечение содержимого каталога Мои документы](~/add/includes/ajax-current-ext-md.md)|   | Синтаксический анализ пути к файлу | [Как: анализ путей к файлам](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._1_1.vb)]"
  syntax:
    content: public class FileSystem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.FileIO.FileSystem&quot;> </xref> класса."
  remarks: ''
  example:
  - '[Objects (Visual Basic)](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public FileSystem ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Объединяет два пути и возвращает путь в правильном формате."
  remarks: "Этот метод удаляет лишние косые черты, чтобы создать путь в правильном формате.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CombinePath` метод.      |||   |-|-|   | Чтобы | См. |   | Объединить путь и имя каталога | [Как: анализ путей к файлам в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public static string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Первый путь для объединения."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Второй путь для объединения."
    return:
      type: System.String
      description: "Комбинация из указанных путей."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>или <code>relativePath</code> имеет неправильный формат пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует содержимое каталога в другой каталог."
  remarks: "Этот метод копирует содержимое исходного каталога в конечный каталог. Если целевой каталог не существует, он создается. Если каталог с тем же именем существует в месте назначения, содержимое двух каталогов объединяется. Можно указать новое имя для каталога во время операции.       При копировании файлов в каталоге, могут быть исключения, вызванные определенного файла. При возникновении таких исключений, они объединяются в одно исключение которого `Data` свойство содержит записи в виде <xref:System.Collections.IDictionary>путь к файлу или каталогу является ключом и содержится сообщение конкретного исключения в соответствующее значение.</xref:System.Collections.IDictionary> Используйте `For…Each` для перебора записей.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CopyDirectory` метод.      |||   |-|-|   | Чтобы | См. |   | Копирование каталога | [Как: копирование каталога в другой каталог в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/02942d01-133a-478f-ae50-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Каталог для копирования."
    - id: destinationDirectoryName
      type: System.String
      description: "Расположение, в которую должны копироваться содержимое каталога."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>или <code>sourceDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Исходный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Исходный и целевой путь совпадают."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя папки в пути содержит двоеточие (:) или находится в недопустимом формате."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Конечный файл существует, но не доступен."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует содержимое каталога в другой каталог."
  remarks: "Этот метод копирует содержимое исходного каталога в конечный каталог. Если целевой каталог не существует, он создается. Если каталог с тем же именем существует в месте назначения, содержимое двух каталогов объединяется. Можно указать новое имя для каталога во время операции.       При копировании файлов в каталоге, могут быть исключения, вызванные определенного файла. При возникновении таких исключений, они объединяются в одно исключение которого `Data` свойство содержит записи в виде <xref:System.Collections.IDictionary>путь к файлу или каталогу является ключом и содержится сообщение конкретного исключения в соответствующее значение.</xref:System.Collections.IDictionary> Используйте `For…Each` для перебора записей.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CopyDirectory` метод.      |||   |-|-|   | Чтобы | См. |   | Копирование каталога | [Как: копирование каталога в другой каталог в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/8f7d2df3-4266-47ac-8381-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Каталог для копирования."
    - id: destinationDirectoryName
      type: System.String
      description: "Расположение, в которую должны копироваться содержимое каталога."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>или <code>sourceDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Исходный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Исходный и целевой путь совпадают."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя папки в пути содержит двоеточие (:) или находится в недопустимом формате."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Конечный файл существует, но не доступен."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>имеет значение <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> и пользователь отменяет операцию, или не удается скопировать один или несколько файлов в каталоге."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует содержимое каталога в другой каталог."
  remarks: "Этот метод копирует содержимое исходного каталога в конечный каталог. Если целевой каталог не существует, он создается. Если каталог с тем же именем существует в месте назначения, содержимое двух каталогов объединяется. Можно указать новое имя для каталога во время операции.       При копировании файлов в каталоге, могут быть исключения, вызванные конкретного файла, например файл, существующий во время слияния при `overwrite` равно `False`. При возникновении таких исключений, они объединяются в одно исключение которого `Data` свойство содержит записи в виде <xref:System.Collections.IDictionary>путь к файлу или каталогу является ключом и содержится сообщение конкретного исключения в соответствующее значение.</xref:System.Collections.IDictionary> Используйте `For…Each` для перебора записей.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CopyDirectory` метод.      |||   |-|-|   | Чтобы | См. |   | Копирование каталога | [Как: копирование каталога в другой каталог в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/fdc93a8a-3025-4efd-8987-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Каталог для копирования."
    - id: destinationDirectoryName
      type: System.String
      description: "Расположение, в которую должны копироваться содержимое каталога."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Чтобы перезаписать существующие файлы. в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>или <code>sourceDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Исходный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Исходный и целевой путь совпадают."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя папки в пути содержит двоеточие (:) или находится в недопустимом формате."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Конечный файл существует, но не доступен."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует содержимое каталога в другой каталог."
  remarks: "Этот метод копирует содержимое исходного каталога в конечный каталог. Если целевой каталог не существует, он создается. Если каталог с тем же именем существует в месте назначения, содержимое двух каталогов объединяется. Можно указать новое имя для каталога во время операции.       При копировании файлов в каталоге, могут быть исключения, вызванные определенного файла. При возникновении таких исключений, они объединяются в одно исключение которого `Data` свойство содержит записи в виде <xref:System.Collections.IDictionary>путь к файлу или каталогу является ключом и содержится сообщение конкретного исключения в соответствующее значение.</xref:System.Collections.IDictionary> Используйте `For…Each` для перебора записей.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CopyDirectory` метод.      |||   |-|-|   | Чтобы | См. |   | Копирование каталога | [Как: копирование каталога в другой каталог в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/c0cf1625-22a4-46e5-a6cf-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Каталог для копирования."
    - id: destinationDirectoryName
      type: System.String
      description: "Расположение, в которую должны копироваться содержимое каталога."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, что следует выполнить, если пользователь нажимает кнопку **отменить** во время операции. Значение по умолчанию — <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>или <code>sourceDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Исходный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Исходный и целевой путь совпадают."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя папки в пути содержит двоеточие (:) или находится в недопустимом формате."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Конечный файл существует, но не доступен."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>имеет значение <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> и пользователь отменяет операцию, или не удается скопировать один или несколько файлов в каталоге."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует файл в новое расположение."
  remarks: "`CopyFile`не сохраняет записи управления доступом (записи управления доступом). Вновь созданный файл наследует по умолчанию записи ACE из каталога, в котором он создан.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.CopyFile` метод.      |||   |-|-|   | Чтобы | См. |   | Скопируйте файл в тот же каталог. | [Как: Создание копии файла в том же каталоге, в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в другом каталоге. | [Как: Создание копии файла в другом каталоге в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Файл для копирования."
    - id: destinationFileName
      type: System.String
      description: "Расположение, в котором должен быть скопирован файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>содержит сведения о пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>или <code>sourceFileName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл в целевом каталоге с тем же именем уже используется."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует файл в новое расположение."
  remarks: "`CopyFile`не сохраняет записи управления доступом (записи управления доступом). Вновь созданный файл наследует по умолчанию записи ACE из каталога, в котором он создан.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.CopyFile` метод.      |||   |-|-|   | Чтобы | См. |   | Скопируйте файл в тот же каталог. | [Как: Создание копии файла в том же каталоге, в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в другом каталоге. | [Как: Создание копии файла в другом каталоге в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Файл для копирования."
    - id: destinationFileName
      type: System.String
      description: "Расположение, в котором должен быть скопирован файл."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>содержит сведения о пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>или <code>sourceFileName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Конечный файл существует и <code> overwrite </code> равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует файл в новое расположение."
  remarks: "`CopyFile`не сохраняет записи управления доступом (записи управления доступом). Вновь созданный файл наследует по умолчанию записи ACE из каталога, в котором он создан.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.CopyFile` метод.      |||   |-|-|   | Чтобы | См. |   | Скопируйте файл в тот же каталог. | [Как: Создание копии файла в том же каталоге, в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в другом каталоге. | [Как: Создание копии файла в другом каталоге в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Файл для копирования."
    - id: destinationFileName
      type: System.String
      description: "Расположение, в котором должен быть скопирован файл."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если нужно перезаписать существующие файлы; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>содержит сведения о пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>или <code>sourceFileName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Конечный файл существует и <code> overwrite </code> равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Копирует файл в новое расположение."
  remarks: "`CopyFile`не сохраняет записи управления доступом (записи управления доступом). Вновь созданный файл наследует по умолчанию записи ACE из каталога, в котором он создан.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.CopyFile` метод.      |||   |-|-|   | Чтобы | См. |   | Скопируйте файл в тот же каталог. | [Как: Создание копии файла в том же каталоге, в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Скопируйте файл в другом каталоге. | [Как: Создание копии файла в другом каталоге в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Файл для копирования."
    - id: destinationFileName
      type: System.String
      description: "Расположение, в котором должен быть скопирован файл."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, что следует выполнить, если пользователь нажимает кнопку **отменить** во время операции. Значение по умолчанию — <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>содержит сведения о пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>или <code>sourceFileName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Конечный файл существует и <code> overwrite </code> равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>имеет значение <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>и пользователь отменил операцию, или неопределенная ошибка ввода-вывода."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Создает каталог."
  remarks: "Если каталог уже существует, исключение не возникает.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.CreateDirectory` метод.      |||   |-|-|   | Чтобы | См. |   | Создайте каталог | [Как: создания каталога в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._120_1.vb)]"
  syntax:
    content: public static void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Имя и расположение каталога."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя каталога имеет неправильный формат. Например он содержит недопустимые символы или состоит только из пробелов."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Указано слишком длинное имя каталога."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя каталога содержит только двоеточие (:)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Родительский каталог, каталог должен быть создан только для чтения"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет разрешений для создания каталога."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает или задает текущий каталог."
  remarks: '`CurrentDirectory`— это переменная среды уровня системы.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_2.vb)]"
  syntax:
    content: public static string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "Текущий каталог для операций файлового ввода-вывода."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Путь не является допустимым."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет каталог."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для удаления."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "Указывает, какие действия должны выполняться, если каталог содержит файлы или каталоги. Значение по умолчанию — <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Путь представляет собой строку нулевой длины, имеет неправильный формат, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь представляет собой путь к устройству (начинается с \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует или является файлом."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл в каталоге или подкаталоге уже используется."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя каталога содержит двоеточие (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет необходимых разрешений."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Пользователь отменяет операцию или не удается удалить каталог."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет каталог."
  remarks: "`showUI` И `recycle` параметры не поддерживаются в приложениях, которые не являются интерактивными, такие как службы Windows для пользователя."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для удаления."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Указывает, следует ли отправлять удаленный файл в **корзины**. Значение по умолчанию — <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Путь представляет собой строку нулевой длины, имеет неправильный формат, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь представляет собой путь к устройству (начинается с \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует или является файлом."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл в каталоге или подкаталоге уже используется."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя каталога содержит двоеточие (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет необходимых разрешений."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Пользователь отменяет операцию или не удается удалить каталог."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет каталог."
  remarks: "`showUI`, `recycle`, И `onUserCancel` параметры не поддерживаются в приложениях, которые не являются интерактивными, такие как службы Windows для пользователя."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для удаления."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Указывает, следует ли отправлять удаленный файл в **корзины**. Значение по умолчанию — <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, будет ли выбрасываться исключение при нажатии кнопки **отменить**."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Путь представляет собой строку нулевой длины, имеет неправильный формат, содержит только пробелы или содержит недопустимые символы (включая знаки подстановки). Путь представляет собой путь к устройству (начинается с \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует или является файлом."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл в каталоге или подкаталоге уже используется."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя каталога содержит двоеточие (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет необходимых разрешений."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Пользователь отменяет операцию или не удается удалить каталог."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет файл."
  remarks: "В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.DeleteFile` метод.      |||   |-|-|   | Чтобы | См. |   | Чтобы удалить файл | [Как: удаление файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к удаляемому файлу."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; он содержит косую черту в конце, где должен быть указан файл; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет разрешения на удаление файла или файл доступен только для чтения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет файл."
  remarks: "`showUI` И `recycle` параметры не поддерживаются в приложениях, которые не являются интерактивными, такие как службы Windows для пользователя.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.DeleteFile` метод.      |||   |-|-|   | Чтобы | См. |   | Чтобы удалить файл | [Как: удаление файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к удаляемому файлу."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Ли удаленный файл будет передан **корзины**. Значение по умолчанию — <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; он содержит косую черту в конце, где должен быть указан файл; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет разрешения на удаление файла или файл доступен только для чтения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Удаляет файл."
  remarks: "`showUI`, `recycle`, И `onUserCancel` параметры не поддерживаются в приложениях, которые не являются интерактивными, такие как службы Windows для пользователя.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.DeleteFile` метод.      |||   |-|-|   | Чтобы | См. |   | Чтобы удалить файл | [Как: удаление файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к удаляемому файлу."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Ли удаленный файл будет передан **корзины**. Значение по умолчанию — <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, является ли исключение при отмене пользователем операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; он содержит косую черту в конце, где должен быть указан файл; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет разрешения на удаление файла или файл доступен только для чтения."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "Пользователь отменил операцию и <code> onUserCancel </code> равно <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если указанный каталог существует."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._66_1.vb)]"
  syntax:
    content: public static bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Путь к каталогу."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если каталог существует; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  id: Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает коллекцию только для чтения всех доступных имен дисков."
  remarks: "Это свойство возвращает все логические диски."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._109_1.vb)]"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "Только для чтения коллекция всех доступных дисков как <xref href=&quot;System.IO.DriveInfo&quot;> </xref> объектов."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если указанный файл существует."
  remarks: "Если приложение не имеет достаточных полномочий на чтение заданного файла, `FileExists` возвращает `False`, независимо от наличия пути; метод не вызывает исключение."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._163_1.vb)]"
  syntax:
    content: public static bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к файлу."
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если файл существует; в противном случае этим методом <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла заканчивается обратной косой чертой (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает коллекцию только для чтения строк, представляющих имена файлов, содержащих указанный текст."
  remarks: "Если файлы, соответствующие указанному шаблону, не найдены, возвращается пустая коллекция.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.FindInFiles` метод.      |||   |-|-|   | Чтобы | См. |   | Поиск в каталоге файлов, содержащих определенную строку | [Пошаговое руководство: управлению файлами и каталогами в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/c1aba623-4b25-4809-b962-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для поиска."
    - id: containsText
      type: System.String
      description: "Текст для поиска."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если при поиске учитывать регистр; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Следует ли включить вложенные папки. Значение по умолчанию — <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекцию имен файлов, содержащих указанный текст..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Указанный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Указанный каталог указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Заданный путь каталога содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает коллекцию только для чтения строк, представляющих имена файлов, содержащих указанный текст."
  remarks: "Если файлы, соответствующие указанному шаблону, не найдены, возвращается пустая коллекция.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.FindInFiles` метод.      |||   |-|-|   | Чтобы | См. |   | Поиск в каталоге файлов, содержащих определенную строку | [Пошаговое руководство: управлению файлами и каталогами в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/3de7a74a-9724-4c87-9247-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для поиска."
    - id: containsText
      type: System.String
      description: "Текст для поиска."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если при поиске учитывать регистр; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Следует ли включить вложенные папки. Значение по умолчанию — <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: fileWildcards
      type: System.String[]
      description: "Шаблон для сопоставления."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекцию имен файлов, содержащих указанный текст..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Указанный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Указанный каталог указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Заданный путь каталога содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает коллекцию строк, представляющих имена путей подкаталогов в каталоге."
  remarks: "В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.GetDirectories` метод.      |||   |-|-|   | Чтобы | См. |   | Список подкаталогов по заданному шаблону | [Как: поиск подкаталогов по заданному шаблону в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._39_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Имя и путь к каталогу."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекция имена путей подкаталогов в указанном каталоге..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Указанный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Указанный каталог указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает коллекцию строк, представляющих имена путей подкаталогов в каталоге."
  remarks: "Можно использовать `wildcards` параметр для указания определенного шаблона. Если вы хотите включить в поиск содержимое подкаталогов, задайте `searchType` параметр `SearchAllSubDirectories`.       Если каталоги, соответствующие указанному шаблону, не найдены, возвращается пустая коллекция.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.GetDirectories` метод.      |||   |-|-|   | Чтобы | См. |   | Список подкаталогов по заданному шаблону | [Как: поиск подкаталогов по заданному шаблону в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/7bb013c4-a081-4298-a67c-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Имя и путь к каталогу."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Следует ли включить вложенные папки. Значение по умолчанию — <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Шаблон для сопоставления имен."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекция имена путей подкаталогов в указанном каталоге."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или несколько указанных подстановочных знаков являются <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, является пустой строкой или содержит только пробелы."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Указанный каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Указанный каталог указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> объекта для заданного пути."
  remarks: "Если каталог не существует, исключение не создается до момента первого свойства для <xref:System.IO.DirectoryInfo>доступ к объекту.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._121_1.vb)]"
  syntax:
    content: public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Путь к каталогу."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>объект для указанного пути."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Путь к каталогу содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает <xref href=&quot;System.IO.DriveInfo&quot;> </xref> объекта для указанного диска."
  remarks: "<xref:System.IO.DriveInfo>Класс моделирует диск и предоставляет методы и свойства для запроса сведений о диске.</xref:System.IO.DriveInfo> Используйте <xref:System.IO.DriveInfo>для определения того, какие диски доступны и являются тип дисков.</xref:System.IO.DriveInfo> Также можно запрашивать свойства для определения емкости и объема свободного места на диске."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._132_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public static System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "Диск, который необходимо проверить."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>объект для указанного диска."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает <xref href=&quot;System.IO.FileInfo&quot;> </xref> объекта для указанного файла."
  remarks: "Исключение не возникает, если файл не существует; Вместо этого они будут созданы при первом запуске доступа к свойствам объекта.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.GetFileInfo` метод.      |||   |-|-|   | Чтобы | См. |   | Определить имя и путь файла | [Как: анализ путей к файлам в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._167_1.vb)]"
  syntax:
    content: public static System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к файлу."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>объект для указанного файла"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя пути имеет неправильный формат. Например он содержит недопустимые символы или состоит только из пробелов. Имя файла имеет черту в конце."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Путь содержит двоеточие в середине строки."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Указан слишком длинный путь."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя нет доступа к файлу ACL (список управления доступом)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает только для чтения коллекцию строк, представляющих собой имена файлов в каталоге."
  remarks: "Если файлы, соответствующие указанному шаблону, не найдены, возвращается пустая коллекция.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.GetFiles` метод.      |||   |-|-|   | Чтобы | См. |   | Получение коллекции содержащихся в каталоге файлов | [Как: получение коллекции содержащихся в каталоге файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Поиск файлов по заданному шаблону в каталог | [Как: поиск файлов по заданному шаблону в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для поиска."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекцию имен файлов из указанного каталога."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог для поиска не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>Указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает только для чтения коллекцию строк, представляющих собой имена файлов в каталоге."
  remarks: "Если файлы, соответствующие указанному шаблону, не найдены, возвращается пустая коллекция.       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.GetFiles` метод.      |||   |-|-|   | Чтобы | См. |   | Получение коллекции содержащихся в каталоге файлов | [Как: получение коллекции содержащихся в каталоге файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Поиск файлов по заданному шаблону в каталог | [Как: поиск файлов по заданному шаблону в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Каталог для поиска."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Следует ли включить вложенные папки. Значение по умолчанию — <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Шаблон для сопоставления."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Только для чтения коллекцию имен файлов из указанного каталога."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог для поиска не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>Указывает на существующий файл."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "У пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Анализирует имя файла без пути."
  remarks: "Это строковая операция; `FileSystem` не проверяется.       `GetName` Метод игнорирует косую черту в конце пути.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.GetFileName` метод.      |||   |-|-|   | Чтобы | См. |   | Синтаксический анализ пути к файлу | [Как: анализ путей к файлам в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._3_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public static string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "Обязательный параметр. Путь может быть проанализирован. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "Имя файла из указанного пути."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает родительский путь объекта по указанному пути."
  remarks: "Это строковая операция; файловая система не проверяется."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: public static string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Путь, который необходимо проверить."
    return:
      type: System.String
      description: "Родительский путь объекта по указанному пути."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Путь не имеет родительского пути, так как это корневой путь."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла."
  remarks: "Этот метод можно использовать для создания временного файла."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._71_1.vb)]"
  syntax:
    content: public static string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>содержащий полный путь к временному файлу."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает папку из одного расположения в другое."
  remarks: "Если попытка переместить каталог в каталоге, который не существует, создается в целевой структуре."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Путь к каталогу для перемещения."
    - id: destinationDirectoryName
      type: System.String
      description: "Путь к каталогу, в который перемещается исходный каталог."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>или <code>destinationDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Источником является корневой каталог или путь источника и целевой путь совпадают."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает папку из одного расположения в другое."
  remarks: "Если попытка переместить каталог в каталоге, который не существует, создается в целевой структуре."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Путь к каталогу для перемещения."
    - id: destinationDirectoryName
      type: System.String
      description: "Путь к каталогу, в который перемещается исходный каталог."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>или <code>destinationDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Целевой каталог уже существует и o<code> verwrite </code> равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает папку из одного расположения в другое."
  remarks: "Если попытка переместить каталог в каталоге, который не существует, создается в целевой структуре."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Путь к каталогу для перемещения."
    - id: destinationDirectoryName
      type: System.String
      description: "Путь к каталогу, в который перемещается исходный каталог."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если нужно перезаписать существующие каталоги; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>или <code>destinationDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Целевой каталог уже существует и o<code> verwrite </code> равно <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает папку из одного расположения в другое."
  remarks: "Если попытка переместить каталог в каталоге, который не существует, создается в целевой структуре."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Путь к каталогу для перемещения."
    - id: destinationDirectoryName
      type: System.String
      description: "Путь к каталогу, в который перемещается исходный каталог."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, является ли исключение при отмене пользователем операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>или <code>destinationDirectoryName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>имеет значение <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> и один файл может быть скопирован."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>имеет значение <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>и пользователь отменяет операцию, или не удается выполнить операцию."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция является циклической."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает файл в новое расположение."
  remarks: "Если каталог назначения не существует, он создается.       `MoveFile` Метод сохраняет записи управления доступом (записи управления доступом) только при перемещении файла в тот же том. Это включает наследуемые ACE, которые становятся прямыми ACE при перемещении (прямые элементы управления доступом имеют приоритет над наследуемые ACE). Если файл перемещается между томами, записи управления доступом не копируются.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.MoveFile` метод.      |||   |-|-|   | Чтобы | См. |   | Переместите файл | [Как: перемещение файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Путь к файлу для перемещения."
    - id: destinationFileName
      type: System.String
      description: "Путь к каталогу, в который следует переместить файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает файл в новое расположение."
  remarks: "Если каталог назначения не существует, он создается.       `MoveFile` Метод сохраняет записи управления доступом (записи управления доступом) только при перемещении файла в тот же том. Это включает наследуемые ACE, которые становятся прямыми ACE при перемещении (прямые элементы управления доступом имеют приоритет над наследуемые ACE). Если файл перемещается между томами, записи управления доступом не копируются.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.MoveFile` метод.      |||   |-|-|   | Чтобы | См. |   | Переместите файл | [Как: перемещение файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Путь к файлу для перемещения."
    - id: destinationFileName
      type: System.String
      description: "Путь к каталогу, в который следует переместить файл."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает файл в новое расположение."
  remarks: "Если каталог назначения не существует, он создается.       `MoveFile` Метод сохраняет записи управления доступом (записи управления доступом) только при перемещении файла в тот же том. Это включает наследуемые ACE, которые становятся прямыми ACE при перемещении (прямые элементы управления доступом имеют приоритет над наследуемые ACE). Если файл перемещается между томами, записи управления доступом не копируются.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.MoveFile` метод.      |||   |-|-|   | Чтобы | См. |   | Переместите файл | [Как: перемещение файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Путь к файлу для перемещения."
    - id: destinationFileName
      type: System.String
      description: "Путь к каталогу, в который следует переместить файл."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Чтобы перезаписать существующие файлы. в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Перемещает файл в новое расположение."
  remarks: "Если каталог назначения не существует, он создается.       `MoveFile` Метод сохраняет записи управления доступом (записи управления доступом) только при перемещении файла в тот же том. Это включает наследуемые ACE, которые становятся прямыми ACE при перемещении (прямые элементы управления доступом имеют приоритет над наследуемые ACE). Если файл перемещается между томами, записи управления доступом не копируются.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.MoveFile` метод.      |||   |-|-|   | Чтобы | См. |   | Переместите файл | [Как: перемещение файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Путь к файлу для перемещения."
    - id: destinationFileName
      type: System.String
      description: "Путь к каталогу, в который следует переместить файл."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Указывает, следует ли отображать ход выполнения операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Указывает, является ли исключение при отмене пользователем операции. Значение по умолчанию — <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>— <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Исходный файл не является допустимым или не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>имеет значение <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>и либо пользователь отменил операцию, или неопределенная ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> Метод позволяет создавать <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> объекта, который позволяет легко и эффективно синтаксический анализ структурированных текстовых файлов, таких как журналы. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> Объект может использоваться для чтения файлов с разделителями и фиксированной ширины."
  remarks: "В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.OpenTextFieldParser` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из файла с разделителями | [Как: чтение из файлов с разделителями-запятыми в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из файла фиксированной ширины | [Как: чтение фиксированной ширины текстовых файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из текстового файла с несколькими форматами | [Как: чтение из текстовых файлов различных форматов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._156_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "Файл должен открываться с <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>Чтобы прочитать указанный файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Строка не может быть проанализирована с использованием указанного формата. Сообщение об исключении определяет строку, вызвавшую исключение, а <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>текст, содержащийся в строке присваивается.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> Метод позволяет создавать <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> объекта, который позволяет легко и эффективно синтаксический анализ структурированных текстовых файлов, таких как журналы. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> Объект может использоваться для чтения файлов с разделителями и фиксированной ширины."
  remarks: "В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.OpenTextFieldParser` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из файла с разделителями | [Как: чтение из файлов с разделителями-запятыми в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из файла фиксированной ширины | [Как: чтение фиксированной ширины текстовых файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из текстового файла с несколькими форматами | [Как: чтение из текстовых файлов различных форматов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/23049b6e-0913-4641-bd0f-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "Файл должен открываться с <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: fieldWidths
      type: System.Int32[]
      description: "Ширина поля."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>Чтобы прочитать указанный файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Строка не может быть проанализирована с использованием указанного формата. Сообщение об исключении определяет строку, вызвавшую исключение, а <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>текст, содержащийся в строке присваивается.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "<xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> Метод позволяет создавать <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> объекта, который позволяет легко и эффективно синтаксический анализ структурированных текстовых файлов, таких как журналы. <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> Объект может использоваться для чтения файлов с разделителями и фиксированной ширины."
  remarks: "В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.OpenTextFieldParser` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из файла с разделителями | [Как: чтение из файлов с разделителями-запятыми в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из файла фиксированной ширины | [Как: чтение фиксированной ширины текстовых файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Чтение из текстового файла с несколькими форматами | [Как: чтение из текстовых файлов различных форматов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/714bc4c9-ee52-4bdc-875b-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "Файл должен открываться с <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: delimiters
      type: System.String[]
      description: "Разделители для полей."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>Чтобы прочитать указанный файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Строка не может быть проанализирована с использованием указанного формата. Сообщение об исключении определяет строку, вызвавшую исключение, а <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>текст, содержащийся в строке присваивается.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Открывает <xref:System.IO.StreamReader>объекта для чтения из файла.</xref:System.IO.StreamReader>"
  remarks: "Только текстовые файлы, которые могут быть прочитаны с <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.OpenTextFileReader` метод.      |||   |-|-|   | Чтобы | См. |   | Откройте файл с <xref:System.IO.StreamReader>|[ Как: чтение текста из файлов с помощью StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._86_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "Файл для чтения."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>объект для чтения из файла</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла заканчивается обратной косой чертой (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Не удается найти указанный файл."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на чтение из файла."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Открывает <xref:System.IO.StreamReader>объекта для чтения из файла.</xref:System.IO.StreamReader>"
  remarks: "Только текстовые файлы, которые могут быть прочитаны с <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.OpenTextFileReader` метод.      |||   |-|-|   | Чтобы | См. |   | Откройте файл с <xref:System.IO.StreamReader>|[ Как: чтение текста из файлов с помощью StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/86e418b6-8642-47bd-853b-_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Файл для чтения."
    - id: encoding
      type: System.Text.Encoding
      description: "Кодировка, используемая для содержимого файла. По умолчанию — ASCII."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>объект для чтения из файла</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла заканчивается обратной косой чертой (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Не удается найти указанный файл."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на чтение из файла."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Открывает <xref:System.IO.StreamWriter>объект для записи в указанный файл.</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter` Метод открывает и инициализирует поток для файла и возвращает <xref:System.IO.StreamWriter>объект для этого потока.</xref:System.IO.StreamWriter> Можно записывать в поток необходимое число раз и закройте его завершении.      Настроек [!NOTE] настроек необходимо вызвать <xref:System.IO.StreamWriter.Close%2A>метод <xref:System.IO.StreamWriter>объекта, чтобы убедиться в том, что все данные, правильно записываются в основной поток.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       При написании лишь нескольких строк в файл, возможно, проще в использовании <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>метода.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.OpenTextFileWriter` метод.      |||   |-|-|   | Чтобы | См. |   | Запись текста в файл с `StreamWriter` | [как: запись текста в файлы с помощью StreamWriter в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/01606e79-13a9-4f6b-a18a-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Файл для записи."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для добавления содержимого файла. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> перезаписать содержимое файла. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>объект для записи в указанный файл.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла заканчивается косой чертой."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Открывает <xref:System.IO.StreamWriter>для записи в указанный файл.</xref:System.IO.StreamWriter>"
  remarks: "`OpenTextFileWriter` Метод открывает и инициализирует поток для файла и возвращает <xref:System.IO.StreamWriter>объект для этого потока.</xref:System.IO.StreamWriter> Можно записывать в поток необходимое число раз и закройте его завершении.      Настроек [!NOTE] настроек необходимо вызвать <xref:System.IO.StreamWriter.Close%2A>метод <xref:System.IO.StreamWriter>объекта, чтобы убедиться в том, что все данные, правильно записываются в основной поток.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       При написании лишь нескольких строк в файл, возможно, проще в использовании <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>метода.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.OpenTextFileWriter` метод.      |||   |-|-|   | Чтобы | См. |   | Запись текста в файл с `StreamWriter` | [как: запись текста в файлы с помощью StreamWriter в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/dde0fe7a-3324-4e07-ba75-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Файл для записи."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для добавления содержимого в файл; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> перезаписать содержимое файла. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Кодировка, которую необходимо использовать при записи в файл. По умолчанию — ASCII."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>объект для записи в указанный файл.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла заканчивается косой чертой."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает содержимое файла в виде массива байтов."
  remarks: "`ReadAllBytes` Метод `My.Computer.FileSystem` объекта позволяет считывать из двоичного файла. Содержимое файла возвращается в виде массива байтов.       Нельзя судить о его содержимом файла на основе имени файла. Например файл Form1.vb не может быть исходным файлом Visual Basic. Проверьте все входные данные перед использованием их в приложении.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.ReadAllBytes` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из двоичного файла | [Как: чтение из двоичного файла в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._186_1.vb)]"
  syntax:
    content: public static byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "Файл для чтения."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>Массив, содержащий содержимое файла."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает содержимое текстового файла в виде <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "`ReadAllText` Метод `My.Computer.FileSystem` позволяет чтение из текстового файла. Содержимое файла возвращается в виде строки.       Кодировка файла может быть указан, если содержимое файла используется кодировка как ASCII или UTF-8. При чтении из файла с символами национальных алфавитов, необходимо указать кодировку файла, используя другую перегрузку <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>метод.</xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>       Нельзя судить о его содержимом файла на основе имени файла. Например файл Form1.vb не может быть исходным файлом Visual Basic. Проверьте все входные данные перед использованием их в приложении.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.ReadAllText` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из текстового файла | [Как: чтение из текстовых файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к файлу для чтения."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>с содержимым файла."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Возвращает содержимое текстового файла в виде <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "`ReadAllText` Метод `My.Computer.FileSystem` позволяет чтение из текстового файла. Содержимое файла возвращается в виде строки.       Кодировка файла может быть указан, если содержимое файла используется кодировка как ASCII или UTF-8. При чтении из файла с символами национальных алфавитов, необходимо указать кодировку файла.       Нельзя судить о его содержимом файла на основе имени файла. Например файл Form1.vb не может быть исходным файлом Visual Basic. Проверьте все входные данные перед использованием их в приложении.       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.ReadAllText` метод.      |||   |-|-|   | Чтобы | См. |   | Чтение из текстового файла | [Как: чтение из текстовых файлов в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Имя и путь к файлу для чтения."
    - id: encoding
      type: System.Text.Encoding
      description: "Кодировка символов, используемый при чтении файла. По умолчанию — UTF-8."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>с содержимым файла."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Переименовывает папку."
  remarks: "Этот метод не может использоваться для перемещения каталога; Используйте `MoveDirectory` метод, чтобы переместить и переименовать папку."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/313534a3-4c32-4f3e-9ae2-_1.vb)]"
  syntax:
    content: public static void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "Путь и имя каталога, который требуется переименовать."
    - id: newName
      type: System.String
      description: "Новое имя для каталога."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>содержит сведения о пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - или - <code>newName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Имеется существующий файл или каталог с именем, указанным в <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает 248 знаков."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Переименование файла."
  remarks: "Этот метод не может использоваться для перемещения файла; Используйте <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>метод перемещение и переименование файла.</xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.RenameFile` метод.      |||   |-|-|   | Чтобы | См. |   | Переименовать файл | [Как: переименовать файл в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/39c53cd2-9477-4e35-83cb-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public static void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "Файл, который требуется переименовать."
    - id: newName
      type: System.String
      description: "Новое имя файла."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>содержит сведения о пути или заканчиваются символом обратной косой черты (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - или - <code>newName</code> — <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Каталог не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Имеется существующий файл или каталог с именем, указанным в <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь не имеет необходимого разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Записывает данные в двоичный файл."
  remarks: "Если по указанному пути, за исключением имени файла является недопустимым, <xref:System.IO.DirectoryNotFoundException>будет создано исключение.</xref:System.IO.DirectoryNotFoundException> Если путь является допустимым, но файл не существует, файл будет создан.      Настроек [!NOTE] настроек `WriteAllBytes` метод открывает файл, записывает в него и закрывает его. Код, использующий `WriteAllBytes` проще, чем код, использующий метод <xref:System.IO.BinaryWriter>объекта.</xref:System.IO.BinaryWriter> Тем не менее, при добавлении данных в файл с помощью цикла, <xref:System.IO.BinaryWriter>объект может обеспечить лучшую производительность, поскольку имеется только для открытия и закрытия файл один раз.</xref:System.IO.BinaryWriter>       В следующей таблице перечислены задачи с использованием пример `My.Computer.FileSystem.WriteAllBytes` метод.      |||   |-|-|   | Чтобы | См. |   | Запись в двоичный файл | [Как: запись в двоичные файлы в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/45dbfd83-d122-4e5f-a7b8-_1.vb)]"
  syntax:
    content: public static void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Путь и имя файла для записи."
    - id: data
      type: System.Byte[]
      description: "Запись в файл данных."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для добавления содержимого файла; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> перезаписать содержимое файла. Значение по умолчанию — <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Записывает текст в файл."
  remarks: "Кодировка UTF-8 используется для записи в файл. Чтобы указать другую кодировку, используйте другую перегрузку метода <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>метод.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       Если указанный файл не существует, он создается.       Если указанной кодировки не соответствует существующей кодировку файла, то заданная кодировка игнорируется.      Настроек [!NOTE] настроек `WriteAllText` метод открывает файл, записывает в него и закрывает его. Код, использующий `WriteAllText` проще, чем код, использующий метод <xref:System.IO.StreamWriter>объекта.</xref:System.IO.StreamWriter> Тем не менее, при добавлении строки в файл с помощью цикла, <xref:System.IO.StreamWriter>объект может обеспечить лучшую производительность, поскольку имеется только для открытия и закрытия файл один раз.</xref:System.IO.StreamWriter> Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>метод.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.WriteAllText` метод.      |||   |-|-|   | Чтобы | См. |   | Запись текста в файл | [Как: запись текста в файлы в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Добавление текста в файл | [Как: Дозапись в текстовый файл в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Файл для записи."
    - id: text
      type: System.String
      description: "Текст, который необходимо записать в файл."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для добавления содержимого файла. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> перезаписать содержимое файла."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Записывает текст в файл."
  remarks: "Если указанный файл не существует, он создается.       Если указанной кодировки не соответствует существующей кодировку файла, то заданная кодировка игнорируется.      Настроек [!NOTE] настроек `WriteAllText` метод открывает файл, записывает в него и закрывает его. Код, использующий `WriteAllText` проще, чем код, использующий метод <xref:System.IO.StreamWriter>объекта.</xref:System.IO.StreamWriter> Тем не менее, при добавлении строки в файл с помощью цикла, <xref:System.IO.StreamWriter>объект может обеспечить лучшую производительность, поскольку имеется только для открытия и закрытия файл один раз.</xref:System.IO.StreamWriter> Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>метод.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       В следующей таблице перечислены примеры задач, связанных с `My.Computer.FileSystem.WriteAllText` метод.      |||   |-|-|   | Чтобы | См. |   | Запись текста в файл | [Как: запись текста в файлы в Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Добавление текста в файл | [Как: Дозапись в текстовый файл в Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Файл для записи."
    - id: text
      type: System.String
      description: "Текст, который необходимо записать в файл."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для добавления содержимого файла. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> перезаписать содержимое файла."
    - id: encoding
      type: System.Text.Encoding
      description: "Кодировка для использования при записи в файл."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Путь не является допустимым по одной из следующих причин: он является строкой нулевой длины; он содержит только пробелы; оно содержит недопустимые символы; или это путь к устройству (начинается с \\ \\.\\); заканчивается косой чертой.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл не существует."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Файл уже используется другим процессом или происходит ошибка ввода-вывода."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Длина пути превышает максимальную длину, определенную систему."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Имя файла или каталога в пути содержит двоеточие (:) или имеет недопустимый формат."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для записи строки в буфер."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У пользователя отсутствуют необходимые разрешения на просмотр пути."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: FileSystem.FileSystem
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath
  nameWithType: FileSystem.CombinePath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystem.CopyDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile
  nameWithType: FileSystem.CopyFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystem.DeleteFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystem.DirectoryExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists
  nameWithType: FileSystem.FileExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystem.FindInFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystem.GetDirectories
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystem.GetDirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystem.GetDriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystem.GetFileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles
  nameWithType: FileSystem.GetFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName
  nameWithType: FileSystem.GetName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystem.GetParentPath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystem.GetTempFileName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystem.MoveDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile
  nameWithType: FileSystem.MoveFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystem.OpenTextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystem.OpenTextFileReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystem.OpenTextFileWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystem.ReadAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystem.ReadAllText
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystem.RenameDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile
  nameWithType: FileSystem.RenameFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystem.WriteAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystem.WriteAllText
