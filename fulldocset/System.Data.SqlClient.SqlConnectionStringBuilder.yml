### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnectionStringBuilder
  id: SqlConnectionStringBuilder
  children:
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  - System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  - System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  - System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  - System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  - System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  - System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  - System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  - System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  - System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  - System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  - System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  - System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  - System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  - System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  - System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  - System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Password
  - System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  - System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  - System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  - System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  - System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  - System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  - System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  - System.Data.SqlClient.SqlConnectionStringBuilder.Values
  - System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  langs:
  - csharp
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder
  type: Class
  summary: "Предоставляет простой способ создания и управления содержимым строки соединения, используемые <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> класса."
  remarks: "Построитель строк подключения позволяет разработчикам программным способом создавать синтаксически правильные строки подключения и анализировать и перестраивать существующие строки подключения с помощью свойств и методов этого класса. Построитель строк подключения предоставляет строго типизированные свойства, соответствующие пары «известные ключ значение», допускаемым сервером SQL Server. Разработчики, создающие строки подключения в рамках приложений можно использовать класс SqlConnectionStringBuilder создавать и изменять строки подключения. Класс также облегчает управление строками подключения, хранимыми в файле конфигурации приложения.       SqlConnectionStringBuilder выполняет проверку пары допустимый ключ значение. Таким образом этот класс нельзя использовать для создания недопустимых строк подключения; При попытке добавления недопустимых пар будет вызывать исключение. Этот класс поддерживает фиксированную коллекцию синонимов и может переводить синоним в соответствующее общеизвестное имя ключа.       Например, при использовании **элемент** свойства для получения значения, можно указать строку, содержащую любой синоним для нужного ключа. Например, можно указать «Network Address», «addr» или любой другой допустимый синоним этого ключа в строке подключения при использовании любой элемент, который требуется строка, содержащая имя раздела, таких как **элемент** свойство или <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A>метод.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A> В разделе <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>свойство полный список допустимых синонимов.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       **Элемент** обрабатывает попытки вставки вредных записей. Например, следующий код, с помощью свойства элемента по умолчанию (индексатор в C#) корректно исключает вложенных паре ключ/значение: [Visual Basic] ```   Dim builder As New System.Data.SqlClient.SqlConnectionStringBuilder   builder(&quot;Data Source&quot;) = &quot;(local)&quot;   builder(&quot;Integrated Security&quot;) = True   builder(&quot;Initial Catalog&quot;) = &quot;AdventureWorks;NewValue=Bad&quot;   Console.WriteLine(builder.ConnectionString)   ``` [C#] ```   System.Data.SqlClient.SqlConnectionStringBuilder builder =     new System.Data.SqlClient.SqlConnectionStringBuilder();   builder[&quot;Data Source&quot;] = &quot;(local)&quot;;   builder[&quot;integrated Security&quot;] = true;   builder[&quot;Initial Catalog&quot;] = &quot;AdventureWorks;NewValue=Bad&quot;;   Console.WriteLine(builder.ConnectionString);      ``` результатом является следующая строка подключения, в которой недопустимое значение обрабатывается безопасным образом:```   Source=(local);Initial Catalog=&quot;AdventureWorks;NewValue=Bad&quot;;   Integrated Security=True   ```"
  example:
  - "The following console application builds connection strings for a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. The code uses a SqlConnectionStringBuilder class to create the connection string, and then passes the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property of the SqlConnectionStringBuilder instance to the constructor of the connection class. The example also parses an existing connection string and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how SqlConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.sqlclient._13_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DataSource")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlConnectionStringBuilderConverter))]

      public sealed class SqlConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref> class."
  syntax:
    content: public SqlConnectionStringBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref> class. Предоставленная строка подключения содержит данные для сведений о внутреннем подключении экземпляра."
  remarks: "<xref:System.Data.SqlClient.SqlConnectionStringBuilder>Класс предоставляет фиксированную внутреннюю коллекцию пар «ключ значение».</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Даже если предоставляется только небольшой набор возможных значений строки подключения в конструкторе, объект всегда предоставит значения по умолчанию для каждой пары ключ значение. Когда `ConnectionString` извлекается свойство объекта, строка содержит только пары ключ значение, в которых значение не является значением по умолчанию для элемента."
  example:
  - "The following example supplies a simple SQL Server connection string in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object's constructor, and then iterates through all the key/value pairs within the object. Note that the collection provides default values for each item. Also note that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the well-known keys so that they are consistent with the well-known names.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/csharp/m-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._44_1.vb)]"
  syntax:
    content: public SqlConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Основа для сведений о внутреннем подключении объекта. Разбито на пары имя значение. Недопустимое имя ключа вызывать <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "Недопустимое имя ключа в строке подключения."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Недопустимое значение в строке подключения (в частности, когда логическое или числовое значение ожидалось, но не указано)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Предоставленный <code> connectionString </code> является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  id: ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Объявляет тип рабочей нагрузки приложения при подключении к базе данных в группе доступности SQL Server. Можно задать значение этого свойства и <xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;> </xref>. Дополнительные сведения о поддержке SqlClient для групп доступности AlwaysOn см. в разделе [поддержка SqlClient для высокого уровня доступности и аварийного восстановления](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.ApplicationIntent ApplicationIntent { get; set; }
    return:
      type: System.Data.SqlClient.ApplicationIntent
      description: "Возвращает текущее значение свойства (значение типа <xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;> </xref>)."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  id: ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя приложения, связанного со строкой подключения."
  remarks: "Это свойство соответствует ключам «Application Name» и «приложение» в строке подключения."
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and assigns a connection string in the object's constructor. The code displays the parsed and recreated version of the connection string, and then modifies the ApplicationName property of the object. Finally, the code displays the new connection string, including the new key/value pair.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/csharp/p-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._44_1.vb)]  \n  \n The sample displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nApplicationName=\".Net SqlClient Data Provider\"  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True;Application Name=\"My Application\"  \n```"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения или «.NET SqlClient Data Provider», если не указано без имени."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  id: AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, допускается ли асинхронная обработка соединением, созданным с использованием данной строки подключения."
  remarks: "Это свойство соответствует ключам «Asynchronous Processing» и «async» в строке подключения. Чтобы воспользоваться преимуществами асинхронной обработкой, предоставляемой <xref:System.Data.SqlClient.SqlCommand>данной паре &quot;ключ значение&quot; должен быть включен в строке подключения связанного объекта <xref:System.Data.SqlClient.SqlConnection>объекта.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example retrieves a connection string and verifies that the connection string is configured to allow for asynchronous processing. (In this case, the string comes from a procedure within the application, but in a production application, the connection string might come from a configuration file, or some other source.) Then, the example performs an asynchronous operation, updating values within a sample database on a background thread.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._47_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/csharp/p-system.data.sqlclient._47_1.cs)]"
  syntax:
    content: public bool AsynchronousProcessing { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства AsynchronousProcessing или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если значение не предоставлено."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  id: AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает строку, содержащую имя первичного файла данных. Это включает в себя полный путь к подключаемой базе данных."
  remarks: "Это свойство соответствует ключам «исходное имя файла» в строке подключения, «extended properties» и «AttachDBFilename».       `AttachDBFilename`поддерживается только для первичных файлов данных с расширением .mdf.       Если файл журнала существует в том же каталоге, что и файл данных, а при прикреплении первичного файла данных было использовано ключевое слово «database», будет сформирована ошибка. В этом случае следует удалите файл журнала. После присоединения базы данных, создается новый файл журнала будет автоматически создаваться на основе физического пути."
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, and sets the `AttachDBFilename` property in order to specify the name of an attached data file.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._58_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/csharp/p-system.data.sqlclient._58_1.cs)]"
  syntax:
    content: public string AttachDBFilename { get; set; }
    return:
      type: System.String
      description: "Значение <xref uid=&quot;langword_csharp_AttachDBFilename&quot; name=&quot;AttachDBFilename&quot; href=&quot;&quot;> </xref> свойства, или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Если значение не предоставлено."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  id: Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает проверки подлинности в строке подключения."
  syntax:
    content: public System.Data.SqlClient.SqlAuthenticationMethod Authentication { get; set; }
    return:
      type: System.Data.SqlClient.SqlAuthenticationMethod
      description: "Проверка подлинности в строке подключения."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Удаляет содержимое <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> экземпляра."
  remarks: "<xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A>Метод удаляет все пары &quot;ключ значение&quot; из <xref:System.Data.SqlClient.SqlConnectionStringBuilder>и сбрасывает все соответствующие свойства.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> </xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> Это включает настройку <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>свойство в значение 0, а <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>свойства равным пустой строке.</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> </xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>"
  example:
  - "The following example demonstrates calling the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method. This example populates the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> with some key/value pairs, and then calls the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method and shows the results.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.sqlclient._15_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._15_1.vb)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает и задает столбец, параметры шифрования для построителя строки соединения."
  syntax:
    content: public System.Data.SqlClient.SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
      description: "Параметры шифрования столбца для построителя строки соединения."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  id: ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Устаревшие. Возвращает или задает логическое значение, указывающее, следует ли сбрасывать соединение при извлечении его из пула соединений."
  remarks: "Это свойство соответствует ключу «Connection Reset» в <xref:System.Data.SqlClient.SqlConnection>строку подключения, которая была удалена из .NET Framework версии 3.5 с пакетом обновления 1.</xref:System.Data.SqlClient.SqlConnection>"
  syntax:
    content: public bool ConnectionReset { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства ConnectionReset, или значение true, если значение не предоставлено."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  id: ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Количество повторных попыток подключения после идентификации сбоя неактивного подключения. Это должен быть целым числом от 0 до 255. По умолчанию — 1. Значение 0, чтобы запретить повторное подключение при сбое подключения. <xref:System.ArgumentException>Создается, если устанавливается в значение вне допустимого диапазона.</xref:System.ArgumentException>"
  syntax:
    content: public int ConnectRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Количество повторных попыток подключения после идентификации сбоя неактивного подключения."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Количество времени (в секундах) между попытками повторного подключения после идентификации сбоя неактивного подключения. Это должен быть целым числом от 1 до 60. Значение по умолчанию — 10 секунд. <xref:System.ArgumentException>Создается, если устанавливается в значение вне допустимого диапазона.</xref:System.ArgumentException>"
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    return:
      type: System.Int32
      description: "Количество времени (в секундах) между попытками повторного подключения после идентификации сбоя неактивного подключения."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  id: ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает продолжительность времени (в секундах) ожидания соединения с сервером перед прекращением попытки и созданием ошибки."
  remarks: "Это свойство соответствует ключам «timeout» в строке подключения, «connection timeout» и «Connect Timeout».       При открытии соединения с базой данных SQL Azure, задайте время ожидания соединения равным 30 секундам."
  example:
  - "The following example first displays the contents of a connection string that does not specify the \"Connect Timeout\" value, sets the ConnectTimeout property, and then displays the new connection string.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._3_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/csharp/p-system.data.sqlclient._3_1.cs)]"
  syntax:
    content: public int ConnectTimeout { get; set; }
    return:
      type: System.Int32
      description: "Значение свойства ConnectTimeout или 15 секунд, если значение не предоставлено."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Определяет, является ли <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> содержит конкретный ключ."
  remarks: "Поскольку <xref:System.Data.SqlClient.SqlConnectionStringBuilder>содержит коллекцию пар ключ/значение фиксированного размера <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>метод определяет, только если данное имя ключа допустимым.</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A> </xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the **ContainsKey** method.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/csharp/m-system.data.sqlclient._9_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._9_1.vb)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nConnection string = Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nTrue  \nTrue  \nTrue  \nFalse  \n```"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ для поиска в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "значение true, если <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> содержит элемент с указанным ключом; в противном случае — значение false."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>имеет значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  id: ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, указывающее, следует ли сделать клиент серверное или внутрипроцессное подключение к SQL Server."
  remarks: "Это свойство соответствует ключу «Context Connection» в строке подключения.      Настроек [!NOTE] настроек <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>возвращает `null` Если строка соединения для <xref:System.Data.SqlClient.SqlConnection>— «Контекстное соединение = true».</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A>"
  syntax:
    content: public bool ContextConnection { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства ContextConnection или <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  id: CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя записи языка SQL Server."
  remarks: "Это свойство соответствует ключам «Current Language» и «language» в строке подключения."
  syntax:
    content: public string CurrentLanguage { get; set; }
    return:
      type: System.String
      description: "Значение свойства CurrentLanguage или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> Если значение не предоставлено."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя или сетевой адрес экземпляра SQL Server для подключения к."
  remarks: "Это свойство соответствует «Data Source», «сервер», «адрес», «addr» и ключам «network address» в строке подключения. Независимо от того, какие из этих значений были предоставлены в предоставленной строке подключения, строку подключения, созданную путем `SqlConnectionStringBuilder` будет использовать хорошо известный ключ «Data Source»."
  example:
  - "The following example demonstrates that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the \"Data Source\" connection string key into the well-known key:  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._51_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/csharp/p-system.data.sqlclient._51_1.cs)]"
  syntax:
    content: public string DataSource { get; set; }
    return:
      type: System.String
      description: "Значение свойства источника данных, или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  id: Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, использует ли SQL Server шифрование SSL для всех данных, передаваемых между клиентом и сервером, если сервер имеет установленный сертификат."
  remarks: "Это свойство соответствует ключу «Encrypt» в строке подключения."
  syntax:
    content: public bool Encrypt { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства шифрования или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  id: Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, добавляет ли автоматически процесс SQL Server, обслуживающий соединение в контекст текущей транзакции создающего ее потока."
  remarks: "Это свойство соответствует ключу «Enlist» в строке подключения."
  syntax:
    content: public bool Enlist { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства Enlist или <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;> </xref>, если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  id: FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя или адрес сервера-участника, для подключения к, если основной сервер недоступен."
  syntax:
    content: public string FailoverPartner { get; set; }
    return:
      type: System.String
      description: "Значение свойства FailoverPartner или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  id: InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя базы данных, связанной с подключением."
  remarks: "Это свойство соответствует ключам «Initial Catalog» и «базы данных» в строке подключения."
  example:
  - "The following example creates a simple connection string and then uses the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to add the name of the database to the connection string. The code displays the contents of the InitialCatalog property, just to verify that the class was able to convert from the synonym (\"Database\") to the appropriate property value.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/csharp/p-system.data.sqlclient._46_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._46_1.vb)]"
  syntax:
    content: public string InitialCatalog { get; set; }
    return:
      type: System.String
      description: "Значение свойства InitialCatalog или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  id: IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, заданы ли в подключении идентификатор пользователя и пароль (при <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>) или же для проверки подлинности используются текущие учетные данные Windows (когда <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  remarks: "Это свойство соответствует ключам «Integrated Security» и «trusted_connection» в строке подключения."
  example:
  - "The following example converts an existing connection string from using SQL Server Authentication to using integrated security. The example does its work by removing the user name and password from the connection string and then setting the IntegratedSecurity property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/csharp/p-system.data.sqlclient._35_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._35_1.vb)]"
  syntax:
    content: public bool IntegratedSecurity { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства IntegratedSecurity или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> имеет фиксированный размер."
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>в любом случае так как <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> предоставляет коллекцию пар «ключ значение» фиксированного размера."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, связанное с указанным ключом. В C# это свойство является индексатором."
  remarks: "Так как <xref:System.Data.SqlClient.SqlConnectionStringBuilder>содержит словарь фиксированного размера, попытка добавить ключ, который не существует в словаре, вызывает исключение <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException> </xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and adds key/value pairs to its connection string, using the Item property.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._4_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.sqlclient._4_1.cs)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ элемента, чтобы получить или задать."
    return:
      type: System.Object
      description: "Значение, связанное с указанным ключом."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "Попытка добавить ключ, который не существует в списке доступных ключей."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Недопустимое значение в строке подключения (в частности, логическое или числовое значение ожидалось, но так и не указано)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref:System.Collections.ICollection>, содержащую ключи в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Порядок значений в <xref:System.Collections.ICollection>не указан, но это отличном от порядка соответствующих значений в <xref:System.Collections.ICollection>возвращенных <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A>свойство.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>"
  example:
  - "The following console application example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._0_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>, Содержащую ключи в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает минимальное время в секундах, для соединения, находящегося в пуле соединений, перед его удалением."
  remarks: "Это свойство соответствует ключам «connection lifetime» в строке подключения и «Load Balance Timeout»."
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    return:
      type: System.Int32
      description: "Значение свойства LoadBalanceTimeout, или 0, если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  id: MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает максимальное количество подключений в пуле для данной строки подключения."
  remarks: "Это свойство соответствует ключу «Max Pool Size» в строке подключения."
  syntax:
    content: public int MaxPoolSize { get; set; }
    return:
      type: System.Int32
      description: "Значение свойства MaxPoolSize или 100, если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  id: MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает минимальное количество подключений в пуле для данной строки подключения."
  remarks: "Это свойство соответствует ключу «Min Pool Size» в строке подключения."
  syntax:
    content: public int MinPoolSize { get; set; }
    return:
      type: System.Int32
      description: "Значение свойства MinPoolSize или 0, если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Если значение равно true, приложение может поддерживать несколько активных результирующих наборов (MARS). Если задано значение false, приложение необходимо обработать или отменить все результирующие наборы из одного пакета, прежде чем выполнять любой другой пакет для этого соединения.       Дополнительные сведения см. в разделе [несколько активные результирующие наборы (MARS)](http://msdn.microsoft.com//library/cfa084cz.aspx)."
  remarks: "Это свойство соответствует ключу «MultipleActiveResultSets» в строке подключения."
  example:
  - "The following example explicitly disables the Multiple Active Result Sets feature.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/csharp/p-system.data.sqlclient._53_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._53_1.vb)]"
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства MultipleActiveResultSets или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Если приложение пытается подключиться к группе доступности (AG) в разных подсетях, установив свойство MultiSubnetFailover = true обеспечивается более быстрое обнаружение и подключение к серверу (активного). Дополнительные сведения о поддержке SqlClient для групп доступности AlwaysOn см. в разделе [поддержка SqlClient для высокого уровня доступности и аварийного восстановления](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    return:
      type: System.Boolean
      description: "Возвращает <xref:System.Boolean>, указывающее текущее значение свойства.</xref:System.Boolean>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  id: NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает строку, которая содержит имя сетевой библиотеки, используемой для подключения к SQL Server."
  remarks: "Это свойство соответствует «Network Library», «network» и «net» ключи в строке подключения.       Поддерживаемые значения для этого свойства: dbnmpntw (Named Pipes), dbmsrpcn (Multiprotocol), dbmsadsn (AppleTalk), dbmsgnet (VIA), dbmslpcn (Shared Memory) и dbmsspxn (IPX/SPX), а также dbmssocn (TCP/IP). Соответствующая сетевая библиотека DLL должна устанавливаться в системе, с которой устанавливается соединение. Если сеть не указана и используется локальный сервер (например, «.» или «(local)»), общая память используется."
  syntax:
    content: public string NetworkLibrary { get; set; }
    return:
      type: System.String
      description: "Значение свойства сетевой библиотеки, или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает размер в байтах сетевых пакетов, используемых при взаимодействии с экземпляром SQL Server."
  remarks: "Это свойство соответствует ключу «Packet Size» в строке подключения."
  syntax:
    content: public int PacketSize { get; set; }
    return:
      type: System.Int32
      description: "Свойство PacketSize или 8000, если не указано значение."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  id: Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает пароль для учетной записи SQL Server."
  remarks: "Это свойство соответствует ключам «Password» и «pwd» в строке подключения.       Если не задать пароль и получить значение, возвращаемое значение — <xref:System.String>.</xref:System.String> Чтобы сбросить пароль для строки подключения, передайте значение null к свойству элемента."
  example:
  - "The following example shows how to set Password.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._40_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/csharp/p-system.data.sqlclient._40_1.cs)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Значение свойства пароль, или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Пароль был неправильно установлен в значение null.  См. в следующем примере."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, если конфиденциальные сведения, такие как пароль, не возвращаются как часть подключения, если оно открыто или когда-либо находилось в открытом состоянии."
  remarks: "Это свойство соответствует ключам «Persist Security Info» и «persistsecurityinfo» в строке подключения."
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства PersistSecurityInfo или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  id: PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Поведение периода блокировки для пула подключений."
  remarks: "Когда пул подключений включен и возникает ошибка времени ожидания или другая ошибка входа, будет вызвано исключение и последующие попытки подключения завершаются ошибкой для следующих пяти секунд «интервала блокирования». Если приложение пытается установить подключение в течение интервала блокирования, первое исключение возникнет снова. Последующие ошибки после завершения интервала блокирования приведет к нового интервала блокирования дважды, при условии, что предыдущий период времени блокирования, но не более одной минуты.       Попытка подключения к базам данных Azure SQL может завершиться временных ошибок, которые обычно будет осуществляться через несколько секунд. Тем не менее в пуле соединений, поведение периода блокировки, вы может не иметь доступ к вашей базы данных для широко периодов несмотря на то, что база данных доступна. Это особенно проблематично для приложений, необходимые для быстрого отображения. **PoolBlockingPeriod** позволяет выбрать интервала блокирования, лучше всего подходит для вашего приложения. В разделе [PoolBlockingPeriod перечисления](~/add/includes/ajax-current-ext-md.md) доступных параметров."
  syntax:
    content: public System.Data.SqlClient.PoolBlockingPeriod PoolBlockingPeriod { get; set; }
    return:
      type: System.Data.SqlClient.PoolBlockingPeriod
      description: "Доступные параметры блокировки срока."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  id: Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, будет ли соединение в составе пула или явно открываться каждый раз, запрос на подключение."
  remarks: "Это свойство соответствует ключу «Pooling» в строке подключения."
  syntax:
    content: public bool Pooling { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства Pooling или <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Удаляет запись с указанным ключом из <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> экземпляра."
  remarks: "Поскольку **удалить** метод возвращает значение, указывающее, его успешное выполнение, не требуется проверять наличие ключа перед удалением пара &quot;ключ значение&quot; из <xref:System.Data.SqlClient.SqlConnectionStringBuilder>экземпляра.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Поскольку <xref:System.Data.SqlClient.SqlConnectionStringBuilder>поддерживает коллекцию пар ключ/значение, вызов метода Remove просто сбрасывает значение из пары &quot;ключ значение&quot; обратно в значение по умолчанию фиксированного размера.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>       Поскольку коллекция ключей, поддерживаемая классом <xref:System.Data.SqlClient.SqlConnectionStringBuilder>— фиксирована, каждый элемент в коллекции имеет известное значение по умолчанию.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> В следующей таблице перечислены ключи и значения для каждого из них при <xref:System.Data.SqlClient.SqlConnectionStringBuilder>первой инициализации, или после вызова метода Remove.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>      | Ключ | Значение по умолчанию |   |---------|-------------------|   | Имя приложения |». Поставщик данных SqlClient NET» |   | Асинхронная обработка | False |   | AttachDBFilename | Пустая строка |   | Время ожидания подключения |&15; |   | Контекстное соединение | False |   | Текущий язык | Пустая строка |   | Источник данных | Пустая строка |   | Шифрование | False |   | Прикрепить | Значение true |   | FailOver Partner | Пустая строка |   | Начальный каталог | Пустая строка |   | Встроенная безопасность | False |   | Загрузить Balance Timeout |&0; |   | Максимальный размер пула |&100; |   | Минимальный размер пула |&0; |   | MultipleActiveResultSets | False |   | Сетевая библиотека | Пустая строка |   | Размер пакета |&8000; |   | Пароль | Пустая строка |   | Сохранять сведения о безопасности | False |   | Создание пулов | Значение true |   | Репликация | False |   | Привязка транзакций | Неявные отменить привязку |   | Идентификатор пользователя | Пустая строка |   | Пользовательский экземпляр | False |   | Идентификатор рабочей станции | Пустая строка |"
  example:
  - "The following example converts an existing connection string from using Windows Authentication to using integrated security. The example works by removing the user name and password from the connection string, and then setting the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.sqlclient._7_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._7_1.vb)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;User ID=ab;Password= a1Pass@@11  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nDatabase = AdventureWorks  \n```"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ из пары ключ значение удаляется из строки подключения в этом <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ключ существовал в строке подключения и был удален; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если ключ не существовал."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>имеет значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  id: Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение, указывающее, поддерживается ли репликация с помощью соединения."
  remarks: "Это свойство соответствует ключу «Репликация» в строке подключения."
  syntax:
    content: public bool Replication { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства репликации, или значение false, если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  id: ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Указывает, существует ли указанный ключ в этом <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> экземпляра."
  remarks: "Этот метод работает идентично <xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>метод.</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>"
  syntax:
    content: public override bool ShouldSerialize (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ для поиска в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> содержит запись с указанным ключом; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  id: TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает строковое значение, указывающее, как соединение поддерживает связь с прикрепленной <xref uid=&quot;langword_csharp_System.Transactions&quot; name=&quot;System.Transactions&quot; href=&quot;&quot;> </xref> транзакции."
  remarks: "Ключевые слова Transaction Binding в <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>управлять как <xref:System.Data.SqlClient.SqlConnection>привязывает на прикрепление <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       В следующей таблице показаны возможные значения для свойства TransactionBinding: | Значение | Описание |   |-----------|-----------------|   | Неявные отменить привязку | Значение по умолчанию. Вызывает отсоединение подключения от транзакции по ее завершении. После отсоединения дополнительные запросы на соединение выполняются в режиме автоматической фиксации. <xref:System.Transactions.Transaction.Current%2A>Свойства не проверяется при выполнении запросов в то время транзакция активна.</xref:System.Transactions.Transaction.Current%2A> После завершения транзакции дополнительные запросы выполняются в режиме автоматической фиксации. |   | Явные отменить привязку | Причины сеанс может оставаться присоединяется к транзакции до закрытия соединения или появления <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>вызывается с `null` (`Nothing` в Visual Basic) значение.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> <xref:System.InvalidOperationException>Создается, если <xref:System.Transactions.Transaction.Current%2A>не является прикрепленной транзакцией или если прикрепленная транзакция не активна.</xref:System.Transactions.Transaction.Current%2A> </xref:System.InvalidOperationException> Это поведение принудительно реализует строгие правила выбора области, необходимые для <xref:System.Transactions.TransactionScope>поддержки. |</xref:System.Transactions.TransactionScope>"
  syntax:
    content: public string TransactionBinding { get; set; }
    return:
      type: System.String
      description: "Значение свойства TransactionBinding или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  id: TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает логическое значение."
  syntax:
    content: public bool TransparentNetworkIPResolution { get; set; }
    return:
      type: System.Boolean
      description: "Логическое значение."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  id: TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, указывающее, будет ли шифроваться канал, если обход цепочки сертификатов для проверки доверия."
  remarks: "Когда `TrustServerCertificate` равен `true`, то транспортный уровень будет использовать SSL для шифрования канала и обходить цепочку сертификатов для проверки доверия. Если `TrustServerCertificate` равно `true` и шифрование включено, уровень шифрования, заданный на сервере будет использоваться даже в том случае, если `Encrypt` имеет значение `false`. Соединение будет разорвано, в противном случае.       Дополнительные сведения см. в разделе «Иерархия средств шифрования» и «Использование шифрования без проверки» в электронной документации по SQL Server."
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Recognized values are <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_yes&quot; name=&quot;yes&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_no&quot; name=&quot;no&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает значение, соответствующее заданному ключу из этого <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>."
  remarks: "Метод TryGetValue позволяет разработчикам получать значение из <xref:System.Data.SqlClient.SqlConnectionStringBuilder>без необходимости убедитесь, что указанное имя ключа имени ключа допустимым.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Поскольку **TryGetValue** исключение не создается при его вызове путем передачи несуществующего ключа, не нужно проверять наличие ключа перед возвращением его значения.  Вызов **TryGetValue** с помощью несуществующего ключа, будут помещать значение null (`Nothing` в Visual Basic) в `value` параметра."
  example:
  - "The following example demonstrates the behavior of the **TryGetValue** method.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/25aa2e92-0892-4821-a220-_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/25aa2e92-0892-4821-a220-_1.cs)]  \n  \n The sample displays the following results:  \n  \n```  \nData Source=(local)  \nTrusted_Connection=True  \nUnable to retrieve value for 'InvalidKey'  \nUnable to retrieve value for null key.  \n```"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ извлекаемого элемента."
    - id: value
      type: System.Object
      description: "Значение, соответствующее`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> keyword </code> было найдено в строке подключения, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>содержит значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  id: TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает строковое значение, указывающее, что приложение систему типов, ожидаемую."
  remarks: "`TypeSystemVersion` Свойство может использоваться для указания версии низкого уровня из [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] для приложения, написанные для этой версии. Это позволяет избежать проблем с несовместимыми типами в новой версии [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , может привести к сбою приложения."
  syntax:
    content: public string TypeSystemVersion { get; set; }
    return:
      type: System.String
      description: "В следующей таблице показаны возможные значения для свойства TypeSystemVersion:       <table><thead><tr><th> Значение       </th><th> Описание       </th></tr></thead><tbody><tr><td> [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 2005       </td><td> Использует [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 2005 системы типов. Преобразования не выполняются для текущей версии ADO.NET.       </td></tr><tr><td> SQL Server 2008       </td><td> Использует систему типов SQL Server 2008.       </td></tr><tr><td> Последние       </td><td> Используйте последнюю версию, чем Эта пара клиент сервер может обработать. Это автоматически будет увеличиваться как клиентские и серверные компоненты будут обновлены.       </td></tr></tbody></table>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  id: UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает идентификатор пользователя, который будет использоваться при подключении к SQL Server."
  remarks: "Это свойство соответствует ключам «User ID», «пользователь» и «uid» в строке подключения."
  syntax:
    content: public string UserID { get; set; }
    return:
      type: System.String
      description: "Значение свойства UserID или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  id: UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, указывающее, следует ли перенаправлять подключение от экземпляра по умолчанию SQL Server Express к запущенному исполняющей средой экземпляру, который выполняется под учетной записью вызывающего объекта."
  remarks: "Это свойство соответствует ключу «User Instance» в строке подключения.      Настроек [!NOTE] настроек эта функция доступна только с [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] экспресс-выпуск. Дополнительные сведения о пользовательских экземплярах см. в разделе [экземпляров SQL Server Express пользователя](~/add/includes/ajax-current-ext-md.md) и «экземпляров для не-администраторов пользователей» в [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] электронной документации."
  syntax:
    content: public bool UserInstance { get; set; }
    return:
      type: System.Boolean
      description: "Значение свойства UserInstance или <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  id: Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref:System.Collections.ICollection>, содержащий значения в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Порядок значений в <xref:System.Collections.ICollection>не указан, но это отличном от порядка соответствующих ключей в <xref:System.Collections.ICollection>возвращенных <xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A>свойство.</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Поскольку каждый экземпляр <xref:System.Data.SqlClient.SqlConnectionStringBuilder>всегда содержит тот же набор основных разделов, параметров, свойство всегда возвращает значения, соответствующие фиксированному набору ключей, в том же порядке, как ключи.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example first creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, and then iterates through all the values within the object.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._29_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/csharp/p-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>, Содержащий значения в <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  id: WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя рабочей станции, подключающейся к SQL Server."
  remarks: "Это свойство соответствует ключам «Workstation ID» и «wsid» в строке подключения."
  syntax:
    content: public string WorkstationID { get; set; }
    return:
      type: System.String
      description: "Значение свойства WorkstationID или <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref> , если не указано."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Чтобы задать значение null, используйте <xref href=&quot;System.DBNull.Value&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: false
  name: ApplicationIntent
  nameWithType: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlAuthenticationMethod
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlAuthenticationMethod
  nameWithType: SqlAuthenticationMethod
  fullName: System.Data.SqlClient.SqlAuthenticationMethod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnectionColumnEncryptionSetting
  nameWithType: SqlConnectionColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.PoolBlockingPeriod
  parent: System.Data.SqlClient
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: PoolBlockingPeriod
  fullName: System.Data.SqlClient.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: SqlConnectionStringBuilder.Clear
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: SqlConnectionStringBuilder.ContainsKey
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: SqlConnectionStringBuilder.GetProperties
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: SqlConnectionStringBuilder.Item
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: SqlConnectionStringBuilder.Remove
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: SqlConnectionStringBuilder.TryGetValue
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
