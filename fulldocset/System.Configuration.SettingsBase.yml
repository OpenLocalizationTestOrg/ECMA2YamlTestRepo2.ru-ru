### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsBase
  id: SettingsBase
  children:
  - System.Configuration.SettingsBase.#ctor
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Item(System.String)
  - System.Configuration.SettingsBase.Properties
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Save
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  langs:
  - csharp
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
  type: Class
  summary: "Предоставляет базовый класс, используемый для поддержки параметров свойств пользователя."
  remarks: "Веб-форм ASP.NET и Windows Forms используют одну инфраструктуру параметры конфигурации для поддержки параметров пользователя. Пользовательские настройки в ASP.NET, часто называют профиля ASP.NET. Инфраструктура параметров включает SettingsBase базовый класс, <xref:System.Configuration.SettingsProperty>класс, <xref:System.Configuration.SettingsPropertyValue>класс, <xref:System.Configuration.SettingsContext>класс, <xref:System.Configuration.SettingsProvider>класс и <xref:System.Configuration.SettingAttribute>класса.</xref:System.Configuration.SettingAttribute> </xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsContext> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>       Базовые классы параметров предоставляют только общую инфраструктуру для определения и хранения свойств параметров. В зависимости от того, как эти базовые классы являются производными и их среды выполнения параметры API могут обеспечить различные уровни функциональности. Например профиль ASP.NET использует базовые классы параметров для предоставления параметров для каждого пользователя, сохраняются и загружаются в соответствии с семантикой запроса."
  syntax:
    content: public abstract class SettingsBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.SettingsBase&quot;></xref> class."
  syntax:
    content: protected SettingsBase ();
    parameters: []
  overload: System.Configuration.SettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Context
  id: Context
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает связанный контекст параметров."
  remarks: "Объект <xref:System.Configuration.SettingsContext>используется приложением для предоставления информации о контексте, поставщик может использовать для сохранения настроек.</xref:System.Configuration.SettingsContext>       Каждый класс параметров, производный от <xref:System.Configuration.SettingsBase>имеет контекст, связанный с ним.</xref:System.Configuration.SettingsBase> Контекст, передаваемый поставщику параметров для определения дополнительной информации о сведения о параметрах. Поэтому контекст действует как подсказка, чтобы помочь определить, как сохранить соответствующие значения параметров поставщика параметров."
  syntax:
    content: public virtual System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> , связанного с экземпляром параметров."
  overload: System.Configuration.SettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  id: Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует внутренние свойства, используемые <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> объекта."
  syntax:
    content: public void Initialize (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties, System.Configuration.SettingsProviderCollection providers);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Контекст параметры, относящиеся к свойствам параметров."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Свойства параметров, которые будут доступны из <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> экземпляра."
    - id: providers
      type: System.Configuration.SettingsProviderCollection
      description: "Инициализированные поставщики, которые должны использоваться при загрузке и сохранении значений свойств."
  overload: System.Configuration.SettingsBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, является ли доступ к объекту синхронизированным (потокобезопасным)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> является синхронизированным; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsBase.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает значение определенного свойства параметров."
  remarks: "Свойство элемента, также известные как индексатор, обычно используется в параметры класса, производного от <xref:System.Configuration.SettingsBase>.</xref:System.Configuration.SettingsBase> Свойство Item привязывает открытого свойства класса к соответствующему свойству параметры.       При первом обращении к свойству <xref:System.Configuration.SettingsBase>экземпляр найдет все свойства, которые совместно используют один и тот же поставщик как запрошенное свойство.</xref:System.Configuration.SettingsBase> <xref:System.Configuration.SettingsBase>Экземпляр затем вызовет поставщика, передав набор <xref:System.Configuration.SettingsProperty>объекты, представляющие поставщик должен получить данные.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsBase>       Обратите внимание, индексатор будет get и set свойства данных в потокобезопасным способом, если <xref:System.Configuration.SettingsBase.IsSynchronized%2A>является `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A> Объект <xref:System.Configuration.SettingsBase>экземпляр по умолчанию не является потокобезопасным.</xref:System.Configuration.SettingsBase> Тем не менее, можно вызвать <xref:System.Configuration.SettingsBase.Synchronized%2A>, передавая <xref:System.Configuration.SettingsBase>экземпляра <xref:System.Configuration.SettingsBase>индексатора работать в потокобезопасным способом.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase.Synchronized%2A>"
  syntax:
    content: public virtual object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Объект <xref:System.String>содержит имя свойства для доступа к.</xref:System.String>"
    return:
      type: System.Object
      description: "Если найдено, значение именованного свойства параметров."
  overload: System.Configuration.SettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Нет свойств, связанных с текущим объектом или не удалось найти указанное свойство."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Была предпринята попытка задать свойство только для чтения."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Указанное значение имеет тип, несовместимый со свойством параметров во время операции установки."
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Properties
  id: Properties
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию свойств параметров."
  remarks: "`get` Метод доступа свойства свойства возвращает коллекцию <xref:System.Configuration.SettingsProperty>экземпляры, связанные со свойствами, которые управляются <xref:System.Configuration.SettingsBase>экземпляра.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsProperty>       <xref:System.Configuration.SettingsBase>Класс изначально распознает определенные характеристики параметра, например его имя, тип свойства, поставщик параметров, значение по умолчанию и состояние только для чтения и преимущество сериализации.</xref:System.Configuration.SettingsBase> Эти характеристики отражаются как свойства в <xref:System.Configuration.SettingsProperty>классе.</xref:System.Configuration.SettingsProperty> Все остальные атрибуты <xref:System.Configuration.SettingsProperty>класса просто передаются связанному поставщику параметров как <xref:System.Configuration.SettingsAttributeDictionary>.</xref:System.Configuration.SettingsAttributeDictionary> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> коллекция, содержащая все <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> объектов."
  overload: System.Configuration.SettingsBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию параметров, значений свойств."
  syntax:
    content: public virtual System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Коллекция <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> объекты, представляющие фактическими значениями данных для свойств, управляемых объектом <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> экземпляра."
  overload: System.Configuration.SettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Providers
  id: Providers
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию поставщиков параметров."
  syntax:
    content: public virtual System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> содержащий <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> объектов."
  overload: System.Configuration.SettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Save
  id: Save
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Сохраняет текущие значения свойств параметров."
  remarks: "<xref:System.Configuration.SettingsBase>Экземпляр группы свойства в зависимости от поставщика, который связан с каждого свойства.</xref:System.Configuration.SettingsBase> Каждый поставщик вызывается последовательности и передается набор свойств, которые должен сохранить поставщик."
  syntax:
    content: public virtual void Save ();
    parameters: []
  overload: System.Configuration.SettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  id: Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Предоставляет <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> класс, являющийся синхронизированную (потокобезопасную)."
  remarks: "Индексатор будет получать и задавать свойства данных в потокобезопасным способом, если <xref:System.Configuration.SettingsBase.IsSynchronized%2A>свойству `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A>  Объект <xref:System.Configuration.SettingsBase>экземпляр по умолчанию не является потокобезопасной.</xref:System.Configuration.SettingsBase>  Тем не менее, можно вызвать Synchronized, передав <xref:System.Configuration.SettingsBase>экземпляра <xref:System.Configuration.SettingsBase>индексатора работать в потокобезопасным способом.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase>"
  syntax:
    content: public static System.Configuration.SettingsBase Synchronized (System.Configuration.SettingsBase settingsBase);
    parameters:
    - id: settingsBase
      type: System.Configuration.SettingsBase
      description: "Класс, используемый для поддержки параметров свойств пользователя."
    return:
      type: System.Configuration.SettingsBase
      description: "Объект <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> класс, который синхронизирован."
  overload: System.Configuration.SettingsBase.Synchronized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.SettingsBase.#ctor
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
- uid: System.Configuration.SettingsBase.Context
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.SettingsBase.IsSynchronized
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsBase.Item(System.String)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsBase.Properties
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsBase.Providers
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
- uid: System.Configuration.SettingsBase
  parent: System.Configuration
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
- uid: System.Configuration.SettingsBase.#ctor*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase.SettingsBase
- uid: System.Configuration.SettingsBase.Context*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
- uid: System.Configuration.SettingsBase.Initialize*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize
  nameWithType: SettingsBase.Initialize
- uid: System.Configuration.SettingsBase.IsSynchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
- uid: System.Configuration.SettingsBase.Item*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item
  nameWithType: SettingsBase.Item
- uid: System.Configuration.SettingsBase.Properties*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
- uid: System.Configuration.SettingsBase.Providers*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save
  nameWithType: SettingsBase.Save
- uid: System.Configuration.SettingsBase.Synchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized
  nameWithType: SettingsBase.Synchronized
