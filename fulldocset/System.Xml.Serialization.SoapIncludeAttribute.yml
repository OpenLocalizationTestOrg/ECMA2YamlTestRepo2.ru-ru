### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapIncludeAttribute
  id: SoapIncludeAttribute
  children:
  - System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  - System.Xml.Serialization.SoapIncludeAttribute.Type
  langs:
  - csharp
  name: SoapIncludeAttribute
  nameWithType: SoapIncludeAttribute
  fullName: System.Xml.Serialization.SoapIncludeAttribute
  type: Class
  summary: "Позволяет <xref:System.Xml.Serialization.XmlSerializer>распознавать тип при сериализации или десериализации объекта как закодированного SOAP XML.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Класс SoapIncludeAttribute принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer>сериализует или десериализует объект как закодированный SOAP XML.</xref:System.Xml.Serialization.XmlSerializer> Получаемый код XML соответствует разделу 5 документа консорциума World Wide Web (www.w3.org), «Simple Object Access Protocol (SOAP) 1.1». Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие кодированной SOAP сериализацией](~/add/includes/ajax-current-ext-md.md).       Чтобы сериализовать объект как закодированное сообщение SOAP, необходимо создать <xref:System.Xml.Serialization.XmlSerializer>с помощью <xref:System.Xml.Serialization.XmlTypeMapping>создания с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>метода <xref:System.Xml.Serialization.SoapReflectionImporter>класса.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       При применении SoapIncludeAttribute, укажите <xref:System.Type>производного класса.</xref:System.Type> Когда <xref:System.Xml.Serialization.XmlSerializer>сериализует объекты, включающие базового и производных классов, он сможет распознать оба типа объектов.</xref:System.Xml.Serialization.XmlSerializer>       SoapIncludeAttribute можно использовать для включения производные классы в документы описания служб, которые записаны в язык описания веб-служб (WSDL). Например, если метод возвращает <xref:System.Object>, примените к методу SoapIncludeAttribute и указать фактические типы, которые должны быть возвращены.</xref:System.Object>       Дополнительные сведения о WSDL см. в спецификации консорциума World Wide Web (www.w3.org), «Языке WSDL (WSDL) 1.1».       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example applies the SoapIncludeAttribute twice to an XML Web service method. The method returns an object of type `Vehicle` (a base class). The SoapIncludeAttribute allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)]

      public class SoapIncludeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.SoapIncludeAttribute
  langs:
  - csharp
  name: SoapIncludeAttribute(Type)
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute(Type)
  fullName: System.Xml.Serialization.SoapIncludeAttribute.SoapIncludeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapIncludeAttribute&quot;> </xref> класса, используя указанный тип."
  remarks: "Применить несколько экземпляров <xref:System.Xml.Serialization.SoapIncludeAttribute>поле или свойство, возвращающее массив объектов, <xref:System.Collections.ArrayList>, содержащий коллекцию объектов, или объект, который может иметь несколько типов.</xref:System.Collections.ArrayList> </xref:System.Xml.Serialization.SoapIncludeAttribute> Задать <xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>свойство для каждого типа, который следует использовать поле или свойство может содержать.</xref:System.Xml.Serialization.SoapIncludeAttribute.Type%2A>"
  example:
  - "The following example applies the <xref:System.Xml.Serialization.SoapIncludeAttribute> twice to an XML Web services method. The method returns an object of type `Vehicle` (a base class). The <xref:System.Xml.Serialization.SoapIncludeAttribute> allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public SoapIncludeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип объекта для включения."
  overload: System.Xml.Serialization.SoapIncludeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type
  id: Type
  parent: System.Xml.Serialization.SoapIncludeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: SoapIncludeAttribute.Type
  fullName: System.Xml.Serialization.SoapIncludeAttribute.Type
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает тип объекта для использования при сериализации или десериализации объекта."
  remarks: "Применить несколько экземпляров <xref:System.Xml.Serialization.SoapIncludeAttribute>поле или свойство, возвращающее массив объектов, <xref:System.Collections.ArrayList>, содержащий коллекцию объектов, или объект, который может иметь несколько типов.</xref:System.Collections.ArrayList> </xref:System.Xml.Serialization.SoapIncludeAttribute> Установите свойство типа для каждого типа, который следует использовать поле или свойство может содержать."
  example:
  - "The following example applies the <xref:System.Xml.Serialization.SoapIncludeAttribute> twice to an XML Web services method. The method returns an object of type `Vehicle` (a base class). The <xref:System.Xml.Serialization.SoapIncludeAttribute> allows the method to return instances of classes derived from the `Vehicle` class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: "Тип объекта для включения."
  overload: System.Xml.Serialization.SoapIncludeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: SoapIncludeAttribute(Type)
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute(Type)
  fullName: System.Xml.Serialization.SoapIncludeAttribute.SoapIncludeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: Type
  nameWithType: SoapIncludeAttribute.Type
  fullName: System.Xml.Serialization.SoapIncludeAttribute.Type
- uid: System.Xml.Serialization.SoapIncludeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: SoapIncludeAttribute
  nameWithType: SoapIncludeAttribute.SoapIncludeAttribute
- uid: System.Xml.Serialization.SoapIncludeAttribute.Type*
  parent: System.Xml.Serialization.SoapIncludeAttribute
  isExternal: false
  name: Type
  nameWithType: SoapIncludeAttribute.Type
