### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.Providers.ClientRoleProvider
  id: ClientRoleProvider
  children:
  - System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  - System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  - System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  - System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  - System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  langs:
  - csharp
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider
  type: Class
  summary: "Возвращает сведения о приложениях Windows из роли [!INCLUDE[ajax_current_short](~/add/includes/ajax-current-short-md.md)] службы ролей."
  remarks: "Службы клиентских приложений можно использовать для получения сведений о ролях из существующей службы ролей по настройке приложения с помощью класса ClientRoleProvider. После настройки можно определить, выполняется ли прошедшего проверку подлинности пользователя в определенной роли, вызвав <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод <xref:System.Security.Principal.IPrincipal>возвращенных `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>свойство.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Для приложений, настроенных для использования служб клиентских приложений это свойство возвращает <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Поскольку этот класс реализует <xref:System.Security.Principal.IPrincipal>интерфейса, необязательно явно ссылаться на него.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>Автоматически вызывает метод <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName>метод.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=fullName> </xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>       Класс ClientRoleProvider является поставщика членства роли только для чтения, который извлекает сведения о роли для прошедших проверку пользователей из службы ролей, обозначенном <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>свойство.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Значение <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A>свойства обычно получается из файла конфигурации приложения и другие значения конфигурации.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Дополнительные сведения см. в разделе [как: Настройка служб клиентских приложений](~/add/includes/ajax-current-ext-md.md).       Можно получить через текущий экземпляр ClientRoleProvider `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>свойство.</xref:System.Web.Security.Roles.Provider%2A?displayProperty=fullName>       Класс ClientRoleProvider поддерживает только <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>и <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>методы <xref:System.Web.Security.RoleProvider>абстрактного класса.</xref:System.Web.Security.RoleProvider> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> При вызове одного из этих методов для определенного пользователя, поставщик услуг сначала проверяет локальный кэш данных для сведений о ролях. Если кэш не содержит сведения о ролях, или истек срок действия кэша, поставщик услуг извлекает сведения о роли из службы ролей и добавляет его в кэш.       Тайм-аут кэша ролей можно указать при настройке служб клиентских приложений. Чтобы принудительно <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>метод для извлечения данных роли из службы, а не локального кэша, вызов <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A>метод первой.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Класс ClientRoleProvider нельзя использовать для создания или удаления роли или изменить членство в роли пользователей. Для создания или изменения сведений о ролях, необходимо изменить конфигурацию службы роли на сервере."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: 'public class ClientRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;></xref> class."
  syntax:
    content: public ClientRoleProvider ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Не используется."
    - id: roleNames
      type: System.String[]
      description: "Не используется."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Это свойство не используется данным классом."
  remarks: "Задание этого свойства не оказывает влияния."
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения для поставщика."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Не используется."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Не используется."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Не используется."
    return:
      type: System.Boolean
      description: "Неприменимо. Этот метод всегда создает исключение."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Не используется."
    - id: usernameToMatch
      type: System.String
      description: "Не используется."
    return:
      type: System.String[]
      description: "Неприменимо. Этот метод всегда создает исключение."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Неприменимо. Этот метод всегда создает исключение."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Получает имена ролей, к которым принадлежит указанный пользователь."
  remarks: "Метод GetRolesForUser извлекает сведения о роли для текущего пользователя, который необходимо указать в `username` параметра. Имя пользователя можно получить с помощью `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>свойства следующим образом: `Thread.CurrentPrincipal.Identity.Name`.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       Поставщик услуг кэширует сведения о локальной файловой системе, чтобы избежать излишних вызовов служб ролях. Дополнительные сведения см. в разделе <xref:System.Web.ClientServices.Providers.ClientRoleProvider>Общие сведения о классе.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to use this method to determine whether the user login has expired before testing role membership. This code assumes that all valid users are associated with one or more roles. In this case, the GetRolesForUser method will not return any roles for a previously-authenticated user whose login has expired. If the user login has expired, this code displays the login dialog box. Otherwise, it calls the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> method to determine whether the user is in the \"manager\" role. The restricted code is in a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Имя извлекаемого роли для пользователя."
    return:
      type: System.String[]
      description: "Именами ролей, <code> username </code> принадлежит или пустой массив, если пользователь не прошел проверку подлинности."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>username</code> не является именем пользователя для текущего пользователя."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Не используется."
    return:
      type: System.String[]
      description: "Неприменимо. Этот метод всегда создает исключение."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Инициализирует поставщика."
  remarks: "[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] Модель расширяемости вызывает метод инициализации для инициализации <xref:System.Web.ClientServices.Providers.ClientRoleProvider>с помощью данных в файле конфигурации приложения.</xref:System.Web.ClientServices.Providers.ClientRoleProvider> Этот метод принимает следующие атрибуты конфигурации службы роли:- `name`       -    `description`       -    `cacheTimeout`       -    `connectionStringName`       -    `serviceUri`       -    `honorCookieExpiry` Дополнительные сведения об этих атрибутах см. в разделе [как: Настройка служб клиентских приложений](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Понятное имя поставщика."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Коллекция пар имя значение, представляющих атрибуты поставщика, указанные в конфигурации для этого поставщика."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>config</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>является пустым.       - или - <code>config</code> содержит неопознанное значение. Дополнительные сведения см. в разделе «Примечания»."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это <xref href=&quot;System.Web.ClientServices.Providers.ClientRoleProvider&quot;> </xref> уже инициализирован."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>config</code>содержит `cacheTimeout` значение, которое не находится в формате, необходимом для преобразования в <xref:System.Int32> значение."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "<code>config</code>содержит `cacheTimeout` значение, которое представляет число меньше, чем <xref:System.Int32.MinValue> или больше, чем <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Возвращает значение, указывающее, является ли указанный пользователь в указанной роли."
  remarks: "Можно определить, выполняется ли прошедшего проверку подлинности пользователя в определенной роли, вызвав <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод <xref:System.Security.Principal.IPrincipal>возвращенных `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>свойство.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> Для приложений, настроенных для использования служб клиентских приложений это свойство возвращает <xref:System.Web.ClientServices.ClientRolePrincipal>.</xref:System.Web.ClientServices.ClientRolePrincipal> Поскольку этот класс реализует <xref:System.Security.Principal.IPrincipal>интерфейса, необязательно явно ссылаться на него.</xref:System.Security.Principal.IPrincipal> <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName>Внутренним образом вызывает метод IsUserInRole.</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=fullName> Использует метод IsUserInRole <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>метод, чтобы определить, является ли пользователь обозначенном `username` в роли, обозначенном `roleName`.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Поставщик услуг кэширует сведения о локальной файловой системе, чтобы избежать излишних вызовов служб ролях. Дополнительные сведения см. в разделе <xref:System.Web.ClientServices.Providers.ClientRoleProvider>Общие сведения о классе.</xref:System.Web.ClientServices.Providers.ClientRoleProvider>"
  example:
  - "The following example code demonstrates how to access this method directly to determine whether the user is in a particular role. This code first tests whether the user login has expired. An explicit <xref:System.Web.ClientServices.Providers.ClientRoleProvider> reference is required to call the <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> method, so the same reference is used to call the IsUserInRole method. If the user is in the \"manager\" role, this code calls a `PerformManagerTask` method, which is not provided.  \n  \n [!code-vb[ClientApplicationServices#321](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#321)]\n [!code-cs[ClientApplicationServices#321](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#321)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя."
    - id: roleName
      type: System.String
      description: "Имя роли."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный пользователь находится в указанной роли; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если указанный пользователь не прошел проверку подлинности или не находится в указанной роли."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>is <xref:System.String> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>username</code> не является именем пользователя для текущего пользователя."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Пользователь не прошел проверку.       - или - служба ролей недоступна."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Не используется."
    - id: roleNames
      type: System.String[]
      description: "Не используется."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  id: ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Удаляет кэшированные данные о ролях и сбрасывает период времени ожидания кэша."
  remarks: "Метод ResetCache удаляет все сведения о роли из локального кэша и вызывает истечения срока действия кэша. После вызова этого метода, в следующем вызове метода <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>или <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A>метод будет извлекать данные ролей из настроенную роль службы, а не локального кэша.</xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> </xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>       Этот метод можно использовать, чтобы пользователи могли обновлять кэш ролей при изменении их роли, но еще не истек кэша. Сведения об установке интервала времени ожидания кэша ролей см. в разделе [как: Настройка служб клиентских приложений](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to reset the local roles cache.  \n  \n [!code-vb[ClientApplicationServices#314](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#314)]\n [!code-cs[ClientApplicationServices#314](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#314)]"
  syntax:
    content: public void ResetCache ();
    parameters: []
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Этот метод не используется данным классом."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Не используется."
    return:
      type: System.Boolean
      description: "Неприменимо. Этот метод всегда создает исключение."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  id: ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  langs:
  - csharp
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices.Providers
  summary: "Возвращает или задает URI службы роли."
  remarks: "Свойство ServiceUri можно задать в коде приложения, но обычно, значение будет задано в файле конфигурации приложения. Это позволяет менять расположение службы без повторной компиляции кода. Дополнительные сведения см. в разделе [как: Настройка служб клиентских приложений](~/add/includes/ajax-current-ext-md.md).       Если задать расположение службы программно, необходимо указать полный URI службы, который всегда будет заканчиваться «Role_JSON_AppService.axd»."
  example:
  - "The following example code demonstrates how to use this property to programmatically set the roles service location.  \n  \n [!code-vb[ClientApplicationServices#302](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#302)]\n [!code-cs[ClientApplicationServices#302](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#302)]"
  syntax:
    content: public string ServiceUri { get; set; }
    return:
      type: System.String
      description: "URI службы ролей."
  overload: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "При получении этого свойства, не был найден URI службы в файле конфигурации приложения, и это свойство не было задано ранее."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider()
  nameWithType: ClientRoleProvider.ClientRoleProvider()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ClientRoleProvider()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: ClientRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: ClientRoleProvider.CreateRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: ClientRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: ClientRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: ClientRoleProvider.GetAllRoles()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: ClientRoleProvider.GetRolesForUser(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: ClientRoleProvider.GetUsersInRole(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ClientRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: ClientRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(String,String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache()
  nameWithType: ClientRoleProvider.ResetCache()
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache()
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: ClientRoleProvider.RoleExists(String)
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(String)
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
  fullName: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.#ctor*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ClientRoleProvider
  nameWithType: ClientRoleProvider.ClientRoleProvider
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: ClientRoleProvider.AddUsersToRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: ClientRoleProvider.ApplicationName
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: ClientRoleProvider.CreateRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: ClientRoleProvider.DeleteRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: ClientRoleProvider.FindUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: ClientRoleProvider.GetAllRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: ClientRoleProvider.GetRolesForUser
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: ClientRoleProvider.GetUsersInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.Initialize*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: ClientRoleProvider.Initialize
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: ClientRoleProvider.IsUserInRole
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: ClientRoleProvider.RemoveUsersFromRoles
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ResetCache
  nameWithType: ClientRoleProvider.ResetCache
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: ClientRoleProvider.RoleExists
- uid: System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri*
  parent: System.Web.ClientServices.Providers.ClientRoleProvider
  isExternal: false
  name: ServiceUri
  nameWithType: ClientRoleProvider.ServiceUri
