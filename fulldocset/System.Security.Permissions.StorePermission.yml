### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StorePermission
  id: StorePermission
  children:
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  - System.Security.Permissions.StorePermission.Copy
  - System.Security.Permissions.StorePermission.Flags
  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsUnrestricted
  - System.Security.Permissions.StorePermission.ToXml
  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: StorePermission
  nameWithType: StorePermission
  fullName: System.Security.Permissions.StorePermission
  type: Class
  summary: "Управляет доступом к хранилищам, содержащим сертификаты X.509. Этот класс не наследуется."
  remarks: "Элементы управления StorePermission — доступ из кода предоставлен для X.509 сохраняются. Разрешение основано на флагах, представляющих уровни доступа, которые применяются к каждому хранилищу."
  syntax:
    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> класса с состоянием либо полностью ограниченное или неограниченное разрешение."
  remarks: "Предоставляет объект разрешения, либо полностью ограниченный (`None`) или `Unrestricted` доступ к хранилищу X.509. Если полностью ограниченный (`None`), <xref:System.Security.Permissions.StorePermission.Flags%2A>свойство затем может быть присвоено укажите тип разрешенного доступа.</xref:System.Security.Permissions.StorePermission.Flags%2A>"
  syntax:
    content: public StorePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>не является допустимым <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значение."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> класса с заданным доступом."
  remarks: "`flag` Параметр задает разрешенный доступ к хранилищу X.509. Заданный разрешенный доступ применяется для всех магазинов. Указать доступ к отдельному хранилищу невозможна."
  syntax:
    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.StorePermissionFlags
      description: "Побитовое сочетание <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> значения."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flag</code>не является допустимым сочетанием <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Copy
  id: Copy
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Создает и возвращает идентичную копию текущего разрешения."
  remarks: "Копия разрешения предоставляет такой же доступ к ресурсам, что само разрешение."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего разрешения."
  overload: System.Security.Permissions.StorePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Flags
  id: Flags
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Возвращает или задает тип <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Store&quot;> </xref> доступа текущим разрешением."
  remarks: "Свойство флагов задает разрешенный доступ к хранилищу X.509. Хранилища X.509 являются физическими хранилищами, используемыми для хранения и управления сертификатов X.509."
  syntax:
    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.StorePermissionFlags
      description: "Побитовое сочетание <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> значения."
  overload: System.Security.Permissions.StorePermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Попытка задать это свойство имеет недопустимое значение. В разделе <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> допустимые значения."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Восстанавливает разрешение с указанным состоянием из кодировки XML."
  remarks: "Метод FromXml восстанавливает <xref:System.Security.Permissions.StorePermission>объект из кодировки XML определяются <xref:System.Security.SecurityElement>классом.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.StorePermission> Используйте <xref:System.Security.Permissions.StorePermission.ToXml%2A>метод для XML-кодирования <xref:System.Security.Permissions.StorePermission>, включая сведения о состоянии.</xref:System.Security.Permissions.StorePermission> </xref:System.Security.Permissions.StorePermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Объект <xref href=&quot;System.Security.SecurityElement&quot;> </xref> , содержащего XML-кодировка, используемая для восстановления разрешения."
  overload: System.Security.Permissions.StorePermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>не является допустимым элементом разрешения.       - или - номер версии в <code>securityElement</code> является недопустимым."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений."
  remarks: "Пересечение двух разрешений является разрешением, которое описывает набор операций, которые оба разрешения в разрешениях. Только запрос, передающий оба исходных разрешения, передает их пересечение."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, пересекающееся с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой пересечение текущего и указанного разрешений. Это новое разрешение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пересечение является пустым."
  overload: System.Security.Permissions.StorePermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>s не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Определяет, является ли текущее разрешение подмножеством указанного разрешения."
  remarks: "Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении. Например, разрешение, которое предоставляет доступ к C:\\example.txt является подмножеством разрешения, предоставляющего доступ к C:\\\\. Если этот метод возвращает `true`, текущее разрешение не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение на проверку наличия связи подмножеств. Это разрешение должно быть того же типа, что и текущее разрешение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является подмножеством указанного разрешения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StorePermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>не является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Возвращает значение, указывающее, является ли текущее разрешение является неограниченным."
  remarks: "Неограниченное разрешение предоставляет доступ ко всем ресурсам, защищенным с помощью разрешений."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является неограниченным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StorePermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Создает кодировку XML для разрешения и его текущего состояния."
  remarks: "Используйте <xref:System.Security.Permissions.StorePermission.FromXml%2A>метод, чтобы восстановить данные состояния из <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.StorePermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Объект <xref href=&quot;System.Security.SecurityElement&quot;> </xref> , содержащий кодировку XML разрешения, включающая сведения о состоянии."
  overload: System.Security.Permissions.StorePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Создает разрешение, представляющее собой объединение текущего и указанного разрешений."
  remarks: "Результатом вызова на объединение является разрешение, представляющее все действия, представленные текущего разрешения и указанного разрешений. Любой запрос, передающий любое разрешение, передает их объединение."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение для объединения с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой объединение текущего и указанного разрешений."
  overload: System.Security.Permissions.StorePermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>не является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
- uid: System.Security.Permissions.StorePermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: StorePermissionFlags
  nameWithType: StorePermissionFlags
  fullName: System.Security.Permissions.StorePermissionFlags
- uid: System.Security.Permissions.StorePermission.Copy
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StorePermission.Flags
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
- uid: System.Security.Permissions.StorePermission.ToXml
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
- uid: System.Security.Permissions.StorePermission.#ctor*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission
  nameWithType: StorePermission.StorePermission
- uid: System.Security.Permissions.StorePermission.Copy*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy
  nameWithType: StorePermission.Copy
- uid: System.Security.Permissions.StorePermission.Flags*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml
  nameWithType: StorePermission.FromXml
- uid: System.Security.Permissions.StorePermission.Intersect*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect
  nameWithType: StorePermission.Intersect
- uid: System.Security.Permissions.StorePermission.IsSubsetOf*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StorePermission.IsSubsetOf
- uid: System.Security.Permissions.StorePermission.IsUnrestricted*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: StorePermission.IsUnrestricted
- uid: System.Security.Permissions.StorePermission.ToXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml
  nameWithType: StorePermission.ToXml
- uid: System.Security.Permissions.StorePermission.Union*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union
  nameWithType: StorePermission.Union
