### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CultureInfoConverter
  id: CultureInfoConverter
  children:
  - System.ComponentModel.CultureInfoConverter.#ctor
  - System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)
  - System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: CultureInfoConverter
  nameWithType: CultureInfoConverter
  fullName: System.ComponentModel.CultureInfoConverter
  type: Class
  summary: "Предоставляет преобразователь типов для преобразования <xref:System.Globalization.CultureInfo>объектов в другие представления и обратно.</xref:System.Globalization.CultureInfo>"
  remarks: "Этот конвертер может преобразовывать только <xref:System.Globalization.CultureInfo>объект в строку и обратно.</xref:System.Globalization.CultureInfo>       Дополнительные сведения о преобразователях типов см. в разделе <xref:System.ComponentModel.TypeConverter>базового класса и [как: реализация преобразователя типов](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      Настроек [!NOTE] настроек никогда не следует создавать экземпляр класса CultureInfoConverter. Вместо этого необходимо вызовите <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>метод <xref:System.ComponentModel.TypeDescriptor>класса.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Дополнительные сведения см. в примерах из <xref:System.ComponentModel.TypeConverter>базового класса.</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example converts a variable of type <xref:System.Globalization.CultureInfo> to a string, and vice versa. First it constructs a <xref:System.Globalization.CultureInfo> variable using the Greek culture (represented by \"el\") and converts it to the string \"Greek\". Then it converts the string \"Russian\" to the <xref:System.Globalization.CultureInfo> representation \"ru\".  \n  \n [!code-cs[Converters#8](~/add/codesnippet/csharp/t-system.componentmodel._35_1.cs)]\n [!code-vb[Converters#8](~/add/codesnippet/visualbasic/t-system.componentmodel._35_1.vb)]\n [!code-cpp[Converters#8](~/add/codesnippet/cpp/t-system.componentmodel._35_1.cpp)]"
  syntax:
    content: 'public class CultureInfoConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: CultureInfoConverter()
  nameWithType: CultureInfoConverter.CultureInfoConverter()
  fullName: System.ComponentModel.CultureInfoConverter.CultureInfoConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.CultureInfoConverter&quot;> </xref> класса."
  syntax:
    content: public CultureInfoConverter ();
    parameters: []
  overload: System.ComponentModel.CultureInfoConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта заданного исходного типа в <xref:System.Globalization.CultureInfo>с помощью указанного контекста.</xref:System.Globalization.CultureInfo>"
  remarks: "Этот конвертер может преобразовывать только <xref:System.Globalization.CultureInfo>объект в строку и обратно.</xref:System.Globalization.CultureInfo>       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: sourceType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно выполнить преобразование из.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.CultureInfoConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: CultureInfoConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CultureInfoConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли этот преобразователь преобразовать объект в заданный тип, используя контекст."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: destinationType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно выполнить преобразование.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.CultureInfoConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CultureInfoConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CultureInfoConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует указанный объект значения в <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
  remarks: "Этот конвертер может преобразовывать только <xref:System.Globalization.CultureInfo>объект в строку и обратно.</xref:System.Globalization.CultureInfo>       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, задающий язык и региональные параметры, к которому необходимо привести.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованное значение.</xref:System.Object>"
  overload: System.ComponentModel.CultureInfoConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>Указывает язык и региональные параметры, не является допустимым."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CultureInfoConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CultureInfoConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует данный объект значения в указанный тип."
  remarks: "Этот конвертер может преобразовывать только <xref:System.Globalization.CultureInfo>объект в строку и обратно.</xref:System.Globalization.CultureInfo>       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, задающий язык и региональные параметры, к которому необходимо привести.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>Преобразуемое значение.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованный <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.CultureInfoConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)
  id: GetCultureName(System.Globalization.CultureInfo)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: GetCultureName(CultureInfo)
  nameWithType: CultureInfoConverter.GetCultureName(CultureInfo)
  fullName: System.ComponentModel.CultureInfoConverter.GetCultureName(CultureInfo)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает имя указанного языка и региональных параметров."
  syntax:
    content: protected virtual string GetCultureName (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>, Задающий язык и региональные параметры, чтобы получить имя.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.String
      description: "Имя указанного языка и региональных параметров."
  overload: System.ComponentModel.CultureInfoConverter.GetCultureName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию стандартных значений для <xref:System.Globalization.CultureInfo>объекта, используя заданный контекст.</xref:System.Globalization.CultureInfo>"
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>содержащий стандартный набор допустимых значений или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип данных не поддерживает стандартный набор значений.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.CultureInfoConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли возвращает список стандартных значений <xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*>является исчерпывающим списком.</xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*>"
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`.       Если список не является исчерпывающим, затем существуют другие допустимые значения помимо список стандартных значений, <xref:System.ComponentModel.CultureInfoConverter.GetStandardValues%2A>предоставляет.</xref:System.ComponentModel.CultureInfoConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Поскольку <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>возвращенные <xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*>не является исчерпывающим списком возможных значений (то есть, возможны другие значения).</xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Этот метод никогда не возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка, используя заданный контекст."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Поскольку <xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*>должен быть вызван для поиска общего набора значений, поддерживаемых объектом.</xref:System.ComponentModel.CultureInfoConverter.GetStandardValues*> Этот метод никогда не возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.CultureInfoConverter.#ctor
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CultureInfoConverter()
  nameWithType: CultureInfoConverter.CultureInfoConverter()
  fullName: System.ComponentModel.CultureInfoConverter.CultureInfoConverter()
- uid: System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CultureInfoConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: CultureInfoConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CultureInfoConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CultureInfoConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CultureInfoConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CultureInfoConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CultureInfoConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetCultureName(CultureInfo)
  nameWithType: CultureInfoConverter.GetCultureName(CultureInfo)
  fullName: System.ComponentModel.CultureInfoConverter.GetCultureName(CultureInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.CultureInfoConverter.#ctor*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CultureInfoConverter
  nameWithType: CultureInfoConverter.CultureInfoConverter
- uid: System.ComponentModel.CultureInfoConverter.CanConvertFrom*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: CultureInfoConverter.CanConvertFrom
- uid: System.ComponentModel.CultureInfoConverter.CanConvertTo*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: CultureInfoConverter.CanConvertTo
- uid: System.ComponentModel.CultureInfoConverter.ConvertFrom*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: CultureInfoConverter.ConvertFrom
- uid: System.ComponentModel.CultureInfoConverter.ConvertTo*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: ConvertTo
  nameWithType: CultureInfoConverter.ConvertTo
- uid: System.ComponentModel.CultureInfoConverter.GetCultureName*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetCultureName
  nameWithType: CultureInfoConverter.GetCultureName
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValues*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: CultureInfoConverter.GetStandardValues
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: CultureInfoConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.CultureInfoConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: CultureInfoConverter.GetStandardValuesSupported
