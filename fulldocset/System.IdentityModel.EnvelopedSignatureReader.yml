### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.EnvelopedSignatureReader
  id: EnvelopedSignatureReader
  children:
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Read
  - System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  - System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  langs:
  - csharp
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader
  fullName: System.IdentityModel.EnvelopedSignatureReader
  type: Class
  summary: "Заключает в оболочку средство чтения, которое указывает запечатанная подписанный XML, чтобы обеспечить средство чтения, которое можно использовать для считывания содержимого без необходимости обрабатывать подпись. Подпись проверяется автоматически при чтении последнего элемента конверта. Этот класс не наследуется."
  syntax:
    content: 'public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader'
  inheritance:
  - System.Xml.XmlDictionaryReader
  - System.IdentityModel.DelegatingXmlDictionaryReader
  implements: []
  inheritedMembers:
  - System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount
  - System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.Close
  - System.IdentityModel.DelegatingXmlDictionaryReader.Depth
  - System.IdentityModel.DelegatingXmlDictionaryReader.EOF
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.HasValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)
  - System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.LocalName
  - System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.Name
  - System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.NameTable
  - System.IdentityModel.DelegatingXmlDictionaryReader.NodeType
  - System.IdentityModel.DelegatingXmlDictionaryReader.Prefix
  - System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadState
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity
  - System.IdentityModel.DelegatingXmlDictionaryReader.Value
  - System.IdentityModel.DelegatingXmlDictionaryReader.ValueType
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> , используя указанное средство чтения и сериализатор маркеров безопасности."
  remarks: "Вызывается конструктор <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>следующие дополнительные параметры: | Имя параметра | Значение |   |--------------------|-----------|   | `signingTokenResolver`|`null`|   | `requireSignature`|`true`|   | `automaticallyReadSignature`|`true`|   | `resolveIntrinsicSigningKeys`|`true`|</xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Средство чтения, которое указывает запечатанной подписи XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Сериализатор маркеров, используемый для десериализации <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> подписи."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> , используя указанное средство чтения, сериализатор маркеров безопасности и арбитр маркеров."
  remarks: "Вызывается конструктор <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>следующие дополнительные параметры: | Имя параметра | Значение |   |--------------------|-----------|   | `requireSignature`|`true`|   | `automaticallyReadSignature`|`true`|   | `resolveIntrinsicSigningKeys`|`true`|</xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Средство чтения, которое указывает запечатанной подписи XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Сериализатор маркеров, используемый для десериализации <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> подписи."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Сопоставитель маркеров, который будет использоваться для разрешения подписи маркера. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Указывает, что следует использовать арбитр маркеров безопасности по умолчанию."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;> </xref> , используя указанное средство чтения, сериализатор маркеров безопасности, арбитр маркеров и поведение."
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Средство чтения, которое указывает запечатанной подписи XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Сериализатор маркеров, используемый для десериализации <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> подписи."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Сопоставитель маркеров, который будет использоваться для разрешения подписи маркера. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Указывает, что следует использовать арбитр маркеров безопасности по умолчанию."
    - id: requireSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если подпись является обязательным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: automaticallyReadSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если подпись должны считываться; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: resolveIntrinsicSigningKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если встроенная функция ключи подписывания должна быть разрешена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Для добавления."
  overload: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  id: Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Считывает следующий узел из потока."
  remarks: "Проверяет достигается конец конверта и проверяет подпись, если `requireSignature` был указан параметр `true` в конструкторе. Если средство чтения возвращает расположено на `<Signature>` элемент, в случае, если считывается весь подписи `automaticallyReadSignature` был указан параметр `true` в конструкторе."
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если чтение прошло успешно; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если нет дополнительных узлов."
  overload: System.IdentityModel.EnvelopedSignatureReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Возвращает учетные данные подписи, используемые в сигнатуре, после конверт потребляется и при проверке подписи."
  syntax:
    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Учетные данные подписи."
  overload: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  id: TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Считывает подпись, если средство чтения расположено на <xref uid=&quot;langword_csharp_&lt;Signature&gt;&quot; name=&quot;&lt;Signature&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Если средство чтения расположено на `<Signature>` элемент, вызывает <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>метод для чтения подпись.</xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>"
  syntax:
    content: public bool TryReadSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если подпись были успешно получены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.DelegatingXmlDictionaryReader
  isExternal: false
  name: System.IdentityModel.DelegatingXmlDictionaryReader
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose
  nameWithType: EnvelopedSignatureReader.Dispose
- uid: System.IdentityModel.EnvelopedSignatureReader.Read*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read
  nameWithType: EnvelopedSignatureReader.Read
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature
  nameWithType: EnvelopedSignatureReader.TryReadSignature
