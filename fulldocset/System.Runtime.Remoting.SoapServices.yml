### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.SoapServices
  id: SoapServices
  children:
  - System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  - System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  - System.Runtime.Remoting.SoapServices.XmlNsForClrType
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  langs:
  - csharp
  name: SoapServices
  nameWithType: SoapServices
  fullName: System.Runtime.Remoting.SoapServices
  type: Class
  summary: "Предоставляет несколько методов для использования и публикации удаленных объектов в формате SOAP."
  remarks: "Этот класс выполняет запрос ссылки. Если непосредственный вызывающий объект не имеет разрешения инфраструктуры возникает исключение безопасности. В разделе [требования связывания](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации."
  example:
  - "The following code example shows how to use the members in the SoapServices class to convert between a <xref:System.Type> object and an XML type.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#100](~/add/codesnippet/csharp/t-system.runtime.remotin_62_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#100](~/add/codesnippet/cpp/t-system.runtime.remotin_62_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class SoapServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  id: CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: CodeXmlNamespaceForClrTypeNamespace(String,String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  fullName: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает имя пространства имен типа общих языка среды выполнения из предоставленных имен сборки и пространства имен."
  remarks: "Текущий метод используется .NET Framework и средством SoapSuds для создания пространства имен XML для типа объекта времени выполнения.       Дополнительные сведения о SoapSuds см. в разделе [программы Soapsuds (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#101](~/add/codesnippet/csharp/53ae53cc-bf92-4f2d-ac8a-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#101](~/add/codesnippet/cpp/53ae53cc-bf92-4f2d-ac8a-_1.cpp)]"
  syntax:
    content: public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);
    parameters:
    - id: typeNamespace
      type: System.String
      description: "Пространство имен, Кодируемое."
    - id: assemblyName
      type: System.String
      description: "Имя сборки, Кодируемое."
    return:
      type: System.String
      description: "Общий язык имя типа среды выполнения пространство имен из предоставленных имен сборки и пространства имен."
  overload: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> assemblyName </code> И <code> typeNamespace </code> параметры оба являются либо <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустым."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  id: DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Декодирует имена пространства имен и сборки XML из указанных имен среды CLR."
  remarks: 'Когда .NET Framework проводит синтаксический разбор XML-потока, необходимо знать, как преобразовать в типы среды выполнения, считанных из потока XML. Сведения о том, как .NET Framework создает и синтаксического анализа XML-поток хранится в настраиваемых атрибутах, которые находятся в <xref:System.Runtime.Remoting.Metadata>пространства имен.</xref:System.Runtime.Remoting.Metadata> Существует два способа задать эти сведения в файле конфигурации: явно указать отображения или указать тип объекта для предварительной загрузки. Текущий метод поддерживает получение указанных сопоставлений.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#102](~/add/codesnippet/csharp/e7807679-3724-449e-97ab-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#102](~/add/codesnippet/cpp/e7807679-3724-449e-97ab-_1.cpp)]"
  syntax:
    content: public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);
    parameters:
    - id: inNamespace
      type: System.String
      description: "Имен среды CLR."
    - id: typeNamespace
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий декодированную пространства имен.</xref:System.String> Этот параметр передается неинициализированным."
    - id: assemblyName
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий декодированную имя_сборки.</xref:System.String> Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имена пространства имен и сборки были успешно декодированный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> inNamespace </code> Параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустым."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Извлекает тип поля из имя атрибута XML, пространства имен и <xref:System.Type>края содержащего его объекта.</xref:System.Type>"
  remarks: "Указанный тип содержащего его объекта XML-атрибутов и пространство имен XML, считываемое платформой .NET Framework, текущий метод возвращает действительное имя поля среды выполнения и тип поля. Платформа .NET Framework, затем использует эти сведения для заполнения поля с данными, считываемыми из XML-потока."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#150](~/add/codesnippet/csharp/b26b322e-1447-4d9f-9a05-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/add/codesnippet/cpp/b26b322e-1447-4d9f-9a05-_1.cpp)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: "<xref:System.Type>Объекта, который содержит поле.</xref:System.Type>"
    - id: xmlAttribute
      type: System.String
      description: "Имя атрибута XML типа поля."
    - id: xmlNamespace
      type: System.String
      description: "Пространство имен XML типа поля."
    - id: type
      type: System.Type
      description: "При возвращении этого метода содержит <xref:System.Type>поля.</xref:System.Type> Этот параметр передается неинициализированным."
    - id: name
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя поля.</xref:System.String> Этот параметр передается неинициализированным."
  overload: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Извлекает <xref:System.Type>и имя поля из предоставленного имени элемента XML, пространства имен и содержащего типа.</xref:System.Type>"
  remarks: "Указанный тип содержащего его объекта XML-элемент и пространство имен XML, считываемое платформой .NET Framework, этот метод возвращает действительное имя поля среды выполнения и тип поля. Платформа .NET Framework, затем использует эти сведения для заполнения поля с данными, считываемыми из XML-потока."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#150](~/add/codesnippet/csharp/4884e506-9a86-44b8-bad5-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/add/codesnippet/cpp/4884e506-9a86-44b8-bad5-_1.cpp)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: "<xref:System.Type>Объекта, который содержит поле.</xref:System.Type>"
    - id: xmlElement
      type: System.String
      description: "Имя элемента XML поля."
    - id: xmlNamespace
      type: System.String
      description: "Пространство имен XML типа поля."
    - id: type
      type: System.Type
      description: "При возвращении этого метода содержит <xref:System.Type>поля.</xref:System.Type> Этот параметр передается неинициализированным."
    - id: name
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя поля.</xref:System.String> Этот параметр передается неинициализированным."
  overload: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  id: GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlElement(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Извлекает <xref:System.Type>, следует использовать во время десериализации нераспознанного типа объекта с данным именем элемента XML и пространством имен.</xref:System.Type>"
  remarks: "Текущий метод возвращает значения, заданные через <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A>и <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.</xref:System.Runtime.Remoting.SoapServices.PreLoad%2A> </xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A>"
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#160](~/add/codesnippet/csharp/9326cc5b-7f2c-4586-92f1-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/add/codesnippet/cpp/9326cc5b-7f2c-4586-92f1-_1.cpp)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);
    parameters:
    - id: xmlElement
      type: System.String
      description: "Имя элемента XML неизвестного типа объекта."
    - id: xmlNamespace
      type: System.String
      description: "Пространство имен XML неизвестного типа объекта."
    return:
      type: System.Type
      description: "<xref:System.Type>Объекта, связанного с указанным именем элемента XML и пространством имен.</xref:System.Type>"
  overload: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  id: GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlType(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Извлекает объект <xref:System.Type>, следует использовать во время десериализации нераспознанного типа объекта с данным именем типа XML и пространством имен.</xref:System.Type>"
  remarks: "Текущий метод возвращает значения, заданные через <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A>и <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.</xref:System.Runtime.Remoting.SoapServices.PreLoad%2A> </xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A>"
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#160](~/add/codesnippet/csharp/a8b65fb9-1a8f-49bf-bdba-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/add/codesnippet/cpp/a8b65fb9-1a8f-49bf-bdba-_1.cpp)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);
    parameters:
    - id: xmlType
      type: System.String
      description: "Тип XML неизвестного типа объекта."
    - id: xmlTypeNamespace
      type: System.String
      description: "Пространство имен типов XML для неизвестного типа объекта."
    return:
      type: System.Type
      description: "<xref:System.Type>Объекта, связанного с указанным кодом XML, введите имя и пространство имен.</xref:System.Type>"
  overload: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  id: GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает значение SOAPAction, связанное с методом, указанным в заданной <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  remarks: "Если <xref:System.Reflection.MethodBase>не был зарегистрирован с любым значением SOAPAction, GetSoapActionFromMethodBase, метод возвращает SOAPAction, автоматически кэшируются с <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase> </xref:System.Reflection.MethodBase> данного"
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/csharp/6569b1fb-b94c-4a8d-8096-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/cpp/6569b1fb-b94c-4a8d-8096-_1.cpp)]"
  syntax:
    content: public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>, Содержащий метод, для которого запрашивается SOAPAction.</xref:System.Reflection.MethodBase>"
    return:
      type: System.String
      description: "Значение SOAPAction, связанное с методом, указанным в заданной <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  overload: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  id: GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetTypeAndMethodNameFromSoapAction(String,String,String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Определяет тип и имя метода, связанного с указанным значением SOAPAction."
  remarks: '`true`в случае успеха, поиск имен типов и методов в противном случае `false`.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/csharp/3a8b45cb-e81e-4420-8fda-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/cpp/3a8b45cb-e81e-4420-8fda-_1.cpp)]"
  syntax:
    content: public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);
    parameters:
    - id: soapAction
      type: System.String
      description: "SOAPAction метода, для которого запрашиваются имена типов и методов."
    - id: typeName
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя типа метода в вопросе.</xref:System.String> Этот параметр передается неинициализированным."
    - id: methodName
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя метода в вопросе.</xref:System.String> Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если были успешно восстановлены, тип и имя; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Значение SOAPAction не начинаться и заканчиваться кавычки."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlElementForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает сведения об элементе XML, который должен использоваться при сериализации заданного типа."
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#103](~/add/codesnippet/csharp/1551f7e4-a7be-41bb-b704-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#103](~/add/codesnippet/cpp/1551f7e4-a7be-41bb-b704-_1.cpp)]"
  syntax:
    content: public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>для которого запрашиваются имена XML-элемент и пространство имен.</xref:System.Type>"
    - id: xmlElement
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя элемента XML указанного типа объекта.</xref:System.String> Этот параметр передается неинициализированным."
    - id: xmlNamespace
      type: System.String
      description: "При возвращении этого метода содержит <xref:System.String>, содержащий имя пространства имен XML для указанного типа объекта.</xref:System.String> Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запрошенные значения были заданы отмечены <xref href=&quot;System.Runtime.Remoting.Metadata.SoapTypeAttribute&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Получает пространство имен XML, используемое во время удаленных вызовов метода, указанного в данной <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#105](~/add/codesnippet/csharp/77c3b5a2-397c-4847-8a1f-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/add/codesnippet/cpp/77c3b5a2-397c-4847-8a1f-_1.cpp)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>Метода, для которого был запрошен пространство имен XML.</xref:System.Reflection.MethodBase>"
    return:
      type: System.String
      description: "Пространство имен XML, используемое во время удаленных вызовов указанного метода."
  overload: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Получает пространство имен XML, используемое во время создания ответов для удаленного вызова метода, указанного в данной <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#105](~/add/codesnippet/csharp/beb94339-95d5-4317-ad6b-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/add/codesnippet/cpp/beb94339-95d5-4317-ad6b-_1.cpp)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>Метода, для которого был запрошен пространство имен XML.</xref:System.Reflection.MethodBase>"
    return:
      type: System.String
      description: "Пространство имен XML, используемое во время создания ответов на удаленный вызов метода."
  overload: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlTypeForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает XML типа сведений, который должен использоваться при сериализации заданного <xref:System.Type>.</xref:System.Type>"
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#104](~/add/codesnippet/csharp/f4916f1d-42a8-4bd7-88cc-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#104](~/add/codesnippet/cpp/f4916f1d-42a8-4bd7-88cc-_1.cpp)]"
  syntax:
    content: public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>для которого запрашиваются имена XML-элемент и пространство имен.</xref:System.Type>"
    - id: xmlType
      type: System.String
      description: "Тип XML для указанного объекта <xref:System.Type>.</xref:System.Type>"
    - id: xmlTypeNamespace
      type: System.String
      description: "Пространство имен типов XML указанного объекта <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запрошенные значения были заданы отмечены <xref href=&quot;System.Runtime.Remoting.Metadata.SoapTypeAttribute&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  id: IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает логическое значение, указывающее, является ли указанное пространство имен машинного кода к общеязыковая среда выполнения."
  remarks: "Текущий метод используется средством SoapSuds, чтобы определить, представляет ли пространство имен XML, тип среды CLR или типа из системы среды CLR.       Дополнительные сведения о SoapSuds см. в разделе [программы Soapsuds (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#106](~/add/codesnippet/csharp/m-system.runtime.remotin_4_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#106](~/add/codesnippet/cpp/m-system.runtime.remotin_4_1.cpp)]"
  syntax:
    content: public static bool IsClrTypeNamespace (string namespaceString);
    parameters:
    - id: namespaceString
      type: System.String
      description: "Пространство имен для проверки в среде CLR."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заданное пространство имен является собственным для среда; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  id: IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsSoapActionValidForMethodBase(String,MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Определяет, является ли указанный SOAPAction допустимых для данного <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/csharp/1f3328d1-b5a0-4fa4-83b5-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/add/codesnippet/cpp/1f3328d1-b5a0-4fa4-83b5-_1.cpp)]"
  syntax:
    content: public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);
    parameters:
    - id: soapAction
      type: System.String
      description: "SOAPAction, необходимо проверить на соответствие данного <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>Проверяется указанный SOAPAction.</xref:System.Reflection.MethodBase>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный SOAPAction приемлем для данного <xref:System.Reflection.MethodBase>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodBase>"
  overload: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  id: PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Предварительно загружает каждый <xref:System.Type>в указанном <xref:System.Reflection.Assembly>из сведений, указанных в <xref href=&quot;System.Runtime.Remoting.Metadata.SoapTypeAttribute&quot;> </xref> связанные с каждым типом.</xref:System.Reflection.Assembly> </xref:System.Type>"
  remarks: 'Когда .NET Framework проводит синтаксический разбор XML-потока, необходимо знать, как преобразовать в типы среды выполнения, считанных из потока XML. Сведения о том, как .NET Framework создает и синтаксического анализа XML-поток хранится в настраиваемых атрибутах, которые находятся в <xref:System.Runtime.Remoting.Metadata>пространства имен.</xref:System.Runtime.Remoting.Metadata> Существует два способа задать эти сведения в файле конфигурации: явно указать отображения или указать тип объекта для предварительной загрузки. Пользовательские атрибуты считываются во время процесса предварительной загрузки и данных в них доступны синтаксического разбора SOAP.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#120](~/add/codesnippet/csharp/m-system.runtime.remotin_19_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#120](~/add/codesnippet/cpp/m-system.runtime.remotin_19_1.cpp)]"
  syntax:
    content: public static void PreLoad (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>Для каждого типа, который вызывается <xref:System.Runtime.Remoting.SoapServices.PreLoad*>.</xref:System.Runtime.Remoting.SoapServices.PreLoad*> </xref:System.Reflection.Assembly>"
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  id: PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Предварительно загружает данного <xref:System.Type>зависимости от значения, заданные в <xref href=&quot;System.Runtime.Remoting.Metadata.SoapTypeAttribute&quot;> </xref> на тип.</xref:System.Type>"
  remarks: 'Когда .NET Framework проводит синтаксический разбор XML-потока, необходимо знать, как преобразовать в типы среды выполнения, считанных из потока XML. Сведения о том, как .NET Framework создает и синтаксического анализа XML-поток хранится в настраиваемых атрибутах, которые находятся в <xref:System.Runtime.Remoting.Metadata>пространства имен.</xref:System.Runtime.Remoting.Metadata> Существует два способа задать эти сведения в файле конфигурации: явно указать отображения или указать тип объекта для предварительной загрузки. Пользовательские атрибуты считываются во время процесса предварительной загрузки и данных в них доступны синтаксического разбора SOAP.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#121](~/add/codesnippet/csharp/m-system.runtime.remotin_113_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#121](~/add/codesnippet/cpp/m-system.runtime.remotin_113_1.cpp)]"
  syntax:
    content: public static void PreLoad (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для предварительной загрузки.</xref:System.Type>"
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  id: RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlElement(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(String,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Связывает данное имя элемента XML и пространство имен с типом среды выполнения, который необходимо использовать для десериализации."
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#180](~/add/codesnippet/csharp/540ee4c4-7b7b-447e-8307-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#180](~/add/codesnippet/cpp/540ee4c4-7b7b-447e-8307-_1.cpp)]"
  syntax:
    content: public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);
    parameters:
    - id: xmlElement
      type: System.String
      description: "Имя элемента XML, используемый при десериализации."
    - id: xmlNamespace
      type: System.String
      description: "Пространство имен XML, используемый при десериализации."
    - id: type
      type: System.Type
      description: "Время выполнения <xref:System.Type>используемый при десериализации.</xref:System.Type>"
  overload: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  id: RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlType(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(String,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Связывает данное имя типа XML и пространство имен с типом среды выполнения, который необходимо использовать для десериализации."
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#190](~/add/codesnippet/csharp/b25ead9b-6133-4a13-8b3c-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#190](~/add/codesnippet/cpp/b25ead9b-6133-4a13-8b3c-_1.cpp)]"
  syntax:
    content: public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);
    parameters:
    - id: xmlType
      type: System.String
      description: "Тип XML, используемый при десериализации."
    - id: xmlTypeNamespace
      type: System.String
      description: "Пространство имен XML, используемый при десериализации."
    - id: type
      type: System.Type
      description: "Время выполнения <xref:System.Type>используемый при десериализации.</xref:System.Type>"
  overload: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Связывает указанный <xref:System.Reflection.MethodBase>с SOAPAction кэшируются с ним.</xref:System.Reflection.MethodBase>"
  remarks: "SOAPAction указанного метода, содержащихся в <xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=fullName>Свойства, или чтения из сети.</xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=fullName> Текущий метод связывает SOAPAction посредством <xref:System.Reflection.MethodBase>для использования в приемники.</xref:System.Reflection.MethodBase>       Поля заголовка запроса SOAPAction HTTP указывает на намерение SOAP HTTP-запроса. Значение URI, идентифицирующий цель. SOAP не накладывает ограничений на формат или специфичность URI или что он разрешается. При выдаче запроса SOAP HTTP, HTTP-клиента необходимо использовать это поле заголовка."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#170](~/add/codesnippet/csharp/c4b149a5-2d74-4126-a345-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/add/codesnippet/cpp/c4b149a5-2d74-4126-a345-_1.cpp)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>Для связи с SOAPAction метода в кэше с ним.</xref:System.Reflection.MethodBase>"
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase,String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Связывает указанное значение SOAPAction с заданной <xref:System.Reflection.MethodBase>для использования в приемники.</xref:System.Reflection.MethodBase>"
  remarks: "Поля заголовка запроса SOAPAction HTTP указывает на намерение SOAP HTTP-запроса. Значение URI, идентифицирующий цель. SOAP не накладывает ограничений на формат или специфичность URI или что он разрешается. При выдаче запроса SOAP HTTP, HTTP-клиента необходимо использовать это поле заголовка."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#170](~/add/codesnippet/csharp/7cc46222-b277-42c9-9ad2-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/add/codesnippet/cpp/7cc46222-b277-42c9-9ad2-_1.cpp)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "<xref:System.Reflection.MethodBase>Для связи с предоставленным SOAPAction.</xref:System.Reflection.MethodBase>"
    - id: soapAction
      type: System.String
      description: "Значение SOAPAction, связанное с данной <xref:System.Reflection.MethodBase>.</xref:System.Reflection.MethodBase>"
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  id: XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает префикс пространства имен XML для типами среды CLR."
  remarks: "Протоколы WSDL и SOAP кодируют классы среды CLR в пространствах имен XML. Текущее свойство указывает формат для пространств имен XML. Запуск всех пространств имен XML для общего класса среды выполнения языка с <xref:System.String>, возвращает текущее свойство.</xref:System.String>"
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#130](~/add/codesnippet/csharp/p-system.runtime.remotin_74_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#130](~/add/codesnippet/cpp/p-system.runtime.remotin_74_1.cpp)]"
  syntax:
    content: public static string XmlNsForClrType { get; }
    return:
      type: System.String
      description: "Префикс пространства имен XML для типами среды CLR."
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  id: XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает префикс пространства имен XML по умолчанию, который должен использоваться для XML-кодирования класса среды выполнения, имеющего сборку, но нет собственного пространства имен."
  remarks: "Протоколы WSDL и SOAP кодируют классы среды CLR в пространствах имен XML. Текущее свойство указывает формат для пространств имен XML. Если общий класс среды выполнения языка сборки, но без пространства имен, текущее свойство возвращает используемое пространство имен XML по умолчанию."
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#131](~/add/codesnippet/csharp/p-system.runtime.remotin_20_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#131](~/add/codesnippet/cpp/p-system.runtime.remotin_20_1.cpp)]"
  syntax:
    content: public static string XmlNsForClrTypeWithAssembly { get; }
    return:
      type: System.String
      description: "Префикс пространства имен XML по умолчанию, который должен использоваться для XML-кодирование класса среды выполнения, имеющего сборку, но нет собственного пространства имен."
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  id: XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает префикс пространства имен XML, который должен использоваться для XML-кодировки класса среды выполнения, являющегося частью файла mscorlib.dll."
  remarks: "Протоколы WSDL и SOAP кодируют классы среды CLR в пространствах имен XML. Текущее свойство указывает формат для пространств имен XML. Если общий класс среды выполнения языка является частью сборки mscorlib, используется пространство имен XML, возвращаемый текущего свойства."
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#132](~/add/codesnippet/csharp/p-system.runtime.remotin_85_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#132](~/add/codesnippet/cpp/p-system.runtime.remotin_85_1.cpp)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNs { get; }
    return:
      type: System.String
      description: "Префикс пространства имен XML, который должен использоваться для XML-кодировки класса среды выполнения, являющегося частью файла mscorlib.dll."
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  id: XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Возвращает префикс пространства имен XML по умолчанию, который должен использоваться для XML-кодировки класса среды выполнения, имеющего имен среды CLR и сборки."
  remarks: "Протоколы WSDL и SOAP кодируют классы среды CLR в пространствах имен XML. Текущее свойство указывает формат для пространств имен XML. Если общий класс среды выполнения языка сборки и имен среды CLR, текущее свойство возвращает используемое пространство имен XML по умолчанию."
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cs[System.Runtime.Remoting.SoapServices#133](~/add/codesnippet/csharp/p-system.runtime.remotin_34_1.cs)]\n [!code-cpp[System.Runtime.Remoting.SoapServices#133](~/add/codesnippet/cpp/p-system.runtime.remotin_34_1.cpp)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNsAndAssembly { get; }
    return:
      type: System.String
      description: "Префикс пространства имен XML по умолчанию, который должен использоваться для XML-кодировки класса среды выполнения, имеющего имен среды CLR и сборки."
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: CodeXmlNamespaceForClrTypeNamespace(String,String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  fullName: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlElement(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(String,String)
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlType(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(String,String)
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(MethodBase)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetTypeAndMethodNameFromSoapAction(String,String,String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlElementForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(Type,String,String)
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlTypeForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(Type,String,String)
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(String)
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsSoapActionValidForMethodBase(String,MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlElement(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(String,String,Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlType(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(String,String,Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase,String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrType
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: CodeXmlNamespaceForClrTypeNamespace
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: DecodeXmlNamespaceForClrTypeNamespace
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlAttribute
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlElement
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlElement
  nameWithType: SoapServices.GetInteropTypeFromXmlElement
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlType
  nameWithType: SoapServices.GetInteropTypeFromXmlType
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetSoapActionFromMethodBase
  nameWithType: SoapServices.GetSoapActionFromMethodBase
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetTypeAndMethodNameFromSoapAction
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlElementForInteropType
  nameWithType: SoapServices.GetXmlElementForInteropType
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodCall
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodResponse
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlTypeForInteropType
  nameWithType: SoapServices.GetXmlTypeForInteropType
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsClrTypeNamespace
  nameWithType: SoapServices.IsClrTypeNamespace
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsSoapActionValidForMethodBase
  nameWithType: SoapServices.IsSoapActionValidForMethodBase
- uid: System.Runtime.Remoting.SoapServices.PreLoad*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad
  nameWithType: SoapServices.PreLoad
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlElement
  nameWithType: SoapServices.RegisterInteropXmlElement
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlType
  nameWithType: SoapServices.RegisterInteropXmlType
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase
  nameWithType: SoapServices.RegisterSoapActionForMethodBase
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
