### YamlMime:ManagedReference
items:
- uid: System.Activities.AsyncCodeActivity
  id: AsyncCodeActivity
  children:
  - System.Activities.AsyncCodeActivity.#ctor
  - System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  - System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  - System.Activities.AsyncCodeActivity.Implementation
  - System.Activities.AsyncCodeActivity.ImplementationVersion
  - System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  name: AsyncCodeActivity
  nameWithType: AsyncCodeActivity
  fullName: System.Activities.AsyncCodeActivity
  type: Class
  summary: "Управляет выполнением асинхронного кода от начала до завершения. Это абстрактный класс."
  remarks: ''
  example:
  - "The following example shows how to derive a class from AsyncCodeActivity to create a custom activity.  \n  \n [!code-cs[Async#0](~/add/codesnippet/csharp/t-system.activities.asyn_1.cs)]"
  syntax:
    content: 'public abstract class AsyncCodeActivity : System.Activities.Activity'
  inheritance:
  - System.Object
  - System.Activities.Activity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.#ctor
  id: '#ctor'
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: AsyncCodeActivity()
  nameWithType: AsyncCodeActivity.AsyncCodeActivity()
  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Создает новый экземпляр <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref> класса."
  syntax:
    content: protected AsyncCodeActivity ();
    parameters: []
  overload: System.Activities.AsyncCodeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "При реализации в производном классе и с помощью указанного контекста выполнения, метод обратного вызова и состояния пользователя помещает асинхронное действие в рабочем процессе во время выполнения."
  remarks: ''
  example:
  - "The following example shows how to override the BeginExecute method in a custom activity.  \n  \n [!code-cs[Async#1](~/add/codesnippet/csharp/fea949eb-d912-4322-a111-_1.cs)]"
  syntax:
    content: protected abstract IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Сведения, определяющие среду выполнения для <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый после завершения асинхронного действия и уведомление о завершении."
    - id: state
      type: System.Object
      description: "Объект, который сохраняет сведения о переменных для экземпляра асинхронного действия."
    return:
      type: System.IAsyncResult
      description: "Объект, который сохраняет сведения о переменных для экземпляра асинхронного действия."
  overload: System.Activities.AsyncCodeActivity.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  id: CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Не реализовано. Используйте <xref:System.Activities.AsyncCodeActivity.CacheMetadata*>вместо.</xref:System.Activities.AsyncCodeActivity.CacheMetadata*>"
  syntax:
    content: protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.ActivityMetadata
      description: "Не реализовано."
  overload: System.Activities.AsyncCodeActivity.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Служит виртуальным методом и преобразует сведения, получаемые путем отражения кэша в аргументы для асинхронного действия."
  remarks: "Авторы настраиваемых действий могут размещать логику проверки в переопределение метода CacheMetadata действия. Любые исключения, возникающие в CacheMetadata, не считаются ошибками проверки. Эти исключения перейдут из метода <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>и должны быть обработаны вызывающим.</xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>"
  syntax:
    content: protected virtual void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "<xref href=&quot;System.Activities.CodeActivityMetadata&quot;></xref>Объект, содержащий данные для набора аргументов асинхронного действия."
  overload: System.Activities.AsyncCodeActivity.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  id: Cancel(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: Cancel(AsyncCodeActivityContext)
  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "При реализации в производном классе и использовании указанных сведений среды выполнения, уведомляет среду выполнения рабочего процесса, что операция асинхронного действия достиг преждевременное завершение. Служит виртуальным методом."
  syntax:
    content: protected virtual void Cancel (System.Activities.AsyncCodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Сведения, определяющие среду выполнения для <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>."
  overload: System.Activities.AsyncCodeActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "При реализации в производном классе и использовании указанных сведений среды выполнения, уведомляет среду выполнения рабочего процесса, которая завершилась операция связанного асинхронного действия."
  remarks: ''
  example:
  - "The following example shows how to override the EndExecute method in a custom activity.  \n  \n [!code-cs[Async#2](~/add/codesnippet/csharp/250cdc3d-e27b-4bfa-a113-_1.cs)]"
  syntax:
    content: protected abstract void EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Сведения, определяющие среду выполнения для <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref>."
    - id: result
      type: System.IAsyncResult
      description: "Реализованный <xref:System.IAsyncResult>, возвращающий состояние асинхронного действия при завершении выполнения.</xref:System.IAsyncResult>"
  overload: System.Activities.AsyncCodeActivity.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.Implementation
  id: Implementation
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
  fullName: System.Activities.AsyncCodeActivity.Implementation
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или вызывает ошибку при попытке задать значение этого свойства."
  syntax:
    content: protected override sealed Func<System.Activities.Activity> Implementation { get; set; }
    return:
      type: System.Func{System.Activities.Activity}
      description: "Функция действия."
  overload: System.Activities.AsyncCodeActivity.Implementation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion
  id: ImplementationVersion
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает или задает версию реализации действия."
  syntax:
    content: protected override sealed Version ImplementationVersion { get; set; }
    return:
      type: System.Version
      description: "Версия реализации действия."
  overload: System.Activities.AsyncCodeActivity.ImplementationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.AsyncCodeActivity
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Вызывает событие при создании карты для динамического обновления."
  syntax:
    content: protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.UpdateMapMetadata
      description: "Метаданные, используемые."
    - id: originalActivity
      type: System.Activities.Activity
      description: "Исходное действие."
  overload: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Activity
  isExternal: false
  name: System.Activities.Activity
- uid: System.Activities.AsyncCodeActivity.#ctor
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: AsyncCodeActivity()
  nameWithType: AsyncCodeActivity.AsyncCodeActivity()
  fullName: System.Activities.AsyncCodeActivity.AsyncCodeActivity()
- uid: System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.AsyncCodeActivity.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.AsyncCodeActivity.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Cancel(AsyncCodeActivityContext)
  nameWithType: AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
  fullName: System.Activities.AsyncCodeActivity.Cancel(AsyncCodeActivityContext)
- uid: System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.AsyncCodeActivity.EndExecute(AsyncCodeActivityContext,IAsyncResult)
- uid: System.Activities.AsyncCodeActivity.Implementation
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
  fullName: System.Activities.AsyncCodeActivity.Implementation
- uid: System.Func{System.Activities.Activity}
  parent: System
  isExternal: true
  name: Func<Activity>
  nameWithType: Func<Activity>
  fullName: System.Func<System.Activities.Activity>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
  fullName: System.Activities.AsyncCodeActivity.ImplementationVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
- uid: System.Activities.AsyncCodeActivity.#ctor*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: AsyncCodeActivity
  nameWithType: AsyncCodeActivity.AsyncCodeActivity
- uid: System.Activities.AsyncCodeActivity.BeginExecute*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: BeginExecute
  nameWithType: AsyncCodeActivity.BeginExecute
- uid: System.Activities.AsyncCodeActivity.CacheMetadata*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: CacheMetadata
  nameWithType: AsyncCodeActivity.CacheMetadata
- uid: System.Activities.AsyncCodeActivity.Cancel*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Cancel
  nameWithType: AsyncCodeActivity.Cancel
- uid: System.Activities.AsyncCodeActivity.EndExecute*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: EndExecute
  nameWithType: AsyncCodeActivity.EndExecute
- uid: System.Activities.AsyncCodeActivity.Implementation*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: Implementation
  nameWithType: AsyncCodeActivity.Implementation
- uid: System.Activities.AsyncCodeActivity.ImplementationVersion*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: AsyncCodeActivity.ImplementationVersion
- uid: System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap*
  parent: System.Activities.AsyncCodeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: AsyncCodeActivity.OnCreateDynamicUpdateMap
