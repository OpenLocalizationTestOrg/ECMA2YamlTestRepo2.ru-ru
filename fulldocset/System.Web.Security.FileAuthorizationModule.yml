### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "Проверяет, имеет ли пользователь разрешение на доступ к запрошенному файлу. Этот класс не наследуется."
  remarks: "Этот модуль предоставляет службы проверки подлинности к файловой системе, списки управления доступом (ACL). Когда `mode` атрибут [проверки подлинности (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) элемента конфигурации задано значение `Windows` , чтобы <xref:System.Web.Security.WindowsAuthenticationModule>используется для приложения, FileAuthorizationModule, модуль гарантирует, что запрашивающий пользователь может считывать или записи доступа к ресурсу, в зависимости от глагола запроса перед выполнением запроса.</xref:System.Web.Security.WindowsAuthenticationModule> Дополнительные сведения см. в разделе <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>метод.</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> класса."
  remarks: "Этот конструктор не предназначен для вызова из кода приложения.       ASP.NET вызывает этот конструктор для создания экземпляра <xref:System.Web.Security.FileAuthorizationModule>класса.</xref:System.Web.Security.FileAuthorizationModule> После вызова конструктора, он вызывает <xref:System.Web.Security.FileAuthorizationModule.Init%2A>метод для инициализации нового <xref:System.Web.Security.FileAuthorizationModule>объекта.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule.Init%2A>"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Определяет, имеет ли пользователь доступ к запрошенному файлу."
  remarks: "Метод CheckFileAccessForUser проверяет, является ли текущего пользователя, представленного токен доступа Windows предоставляется доступ к запрошенному файлу в файловой системе списках управления доступом (ACL). Виртуальный путь сопоставляется пути физической файловой системы перед проверкой.       Если команду HTTP, используемую для выполнения запроса является `GET`, `POST`, или `HEAD`, метод CheckFileAccessForUser проверяет доступ для чтения к файлу. Если используется любой другой глагол, метод CheckFileAccessForUser проверяет разрешения на чтение и запись в файл.       **Примечание по безопасности** Если <xref:System.Web.Security.FileAuthorizationModule>модуля не определен в `httpModules` раздел конфигурации для приложения, <xref:System.Web.Security.FileAuthorizationModule>модуль всегда возвращает `true`.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь к файлу."
    - id: token
      type: System.IntPtr
      description: "Токен доступа Windows, представляющий пользователя."
    - id: verb
      type: System.String
      description: "Команду HTTP, используемую для выполнения запроса."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущий пользователь Windows, представленный <code> token </code> имеет доступ к файлу, используя указанную команду HTTP или если <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> модуль не определен в файле конфигурации приложения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>не в структуре каталогов приложения веб-приложения."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <code> virtualPath </code> не существует."
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Освобождает все ресурсы, кроме памяти, используемой <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> объекта."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       Метод Init гарантирует, что <xref:System.Web.Security.FileAuthorizationModule>включается в обработку <xref:System.Web.HttpApplication.AuthorizeRequest>событий.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Текущий <xref href=&quot;System.Web.HttpApplication&quot;> </xref> экземпляра."
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
