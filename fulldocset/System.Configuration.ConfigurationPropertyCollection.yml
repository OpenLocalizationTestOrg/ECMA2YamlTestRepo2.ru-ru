### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPropertyCollection
  id: ConfigurationPropertyCollection
  children:
  - System.Configuration.ConfigurationPropertyCollection.#ctor
  - System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationPropertyCollection.Clear
  - System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  - System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  - System.Configuration.ConfigurationPropertyCollection.Count
  - System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  - System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  - System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  - System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  - System.Configuration.ConfigurationPropertyCollection.SyncRoot
  - System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
  type: Class
  summary: "Представляет коллекцию свойств элементов конфигурации."
  remarks: "Класс ConfigurationPropertyCollection представляет коллекцию <xref:System.Configuration.ConfigurationProperty>объекты, которые могут быть атрибутами или <xref:System.Configuration.ConfigurationElement>объектов элемента конфигурации.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationProperty>       <xref:System.Configuration.ConfigurationProperty>Класс представляет индивидуальную настройку конфигурации.</xref:System.Configuration.ConfigurationProperty> Он позволяет получить или задать имя, тип и значение по умолчанию для отдельной сущности конфигурации (атрибут или элемент). Дополнительные параметры позволяют задать ли атрибут является обязательным, ключом или представляет элемент коллекции по умолчанию."
  example:
  - "The following example shows one possible use of the ConfigurationPropertyCollection. Refer to the example of the related type <xref:System.Configuration.ConfigurationProperty>.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following is an excerpt from the configuration used by the above example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"CustomSection\" type=\"Samples.AspNet, ConfigurationProperty, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" allowDefinition=\"Everywhere\" allowExeDefinition=\"MachineToApplication\" restartOnExternalChanges=\"true\" />  \n    </configSections>  \n    <CustomSection fileName=\"default.txt\" alias=\"alias.txt\" maxUsers=\"1000\"  \n      maxIdleTime=\"00:05:00\" />  \n</configuration>  \n```"
  syntax:
    content: 'public class ConfigurationPropertyCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: ConfigurationPropertyCollection()
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> класса."
  remarks: "Используется для создания новой коллекции, который будет содержать ConfigurationPropertyCollection <xref:System.Configuration.ConfigurationProperty>объекты, применяемые в элемент конфигурации.</xref:System.Configuration.ConfigurationProperty>"
  example:
  - "The following example shows how to use the ConfigurationPropertyCollection constructor.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public ConfigurationPropertyCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationPropertyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  id: Add(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Add(ConfigurationProperty)
  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Добавляет в коллекцию свойство конфигурации."
  remarks: "По умолчанию, добавить указанный метод Add <xref:System.Configuration.ConfigurationProperty>объекта, если он уже не содержится в коллекции.</xref:System.Configuration.ConfigurationProperty>"
  example:
  - "The following example shows how to use the Add method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Add (System.Configuration.ConfigurationProperty property);
    parameters:
    - id: property
      type: System.Configuration.ConfigurationProperty
      description: "The <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> to add."
  overload: System.Configuration.ConfigurationPropertyCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Clear
  id: Clear
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConfigurationPropertyCollection.Clear()
  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Удаляет все объекты свойств конфигурации из коллекции."
  remarks: ''
  example:
  - "The following example shows how to use the Clear method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method and save the changes to the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.ConfigurationPropertyCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConfigurationPropertyCollection.Contains(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Указывает, содержится ли свойство конфигурации в этой коллекции."
  remarks: ''
  example:
  - "The following example shows how to use the Contains method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Идентификатор для <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> содержится в коллекции; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationProperty[],Int32)
  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Копирует этот ConfigurationPropertyCollection в массив."
  remarks: ''
  example:
  - "The following example shows how to use the CopyTo method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationProperty[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationProperty[]
      description: "Массив, в который выполняется копирование."
    - id: index
      type: System.Int32
      description: "Индекс, с которого начинается копирование."
  overload: System.Configuration.ConfigurationPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
  fullName: System.Configuration.ConfigurationPropertyCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает количество свойств в коллекции."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Количество свойств в коллекции."
  overload: System.Configuration.ConfigurationPropertyCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationPropertyCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает <xref:System.Collections.IEnumerator>объекта применительно к коллекции.</xref:System.Collections.IEnumerator>"
  remarks: ''
  example:
  - "The following example shows how to use the GetEnumerator method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method to enumerate the <xref:System.Configuration.ConfigurationProperty> objects in the collection.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Объект применительно к коллекции</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным)."
  remarks: ''
  example:
  - "The following example shows how to get the IsSynchronized property value.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> является синхронизированным; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConfigurationPropertyCollection.Item(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает элемент коллекции с указанным именем."
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyCollection.Count%2A> property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Configuration.ConfigurationProperty this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "<xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> Для возврата."
    return:
      type: System.Configuration.ConfigurationProperty
      description: "The <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> with the specified <code>name</code>."
  overload: System.Configuration.ConfigurationPropertyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConfigurationPropertyCollection.Remove(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Удаляет свойство конфигурации из коллекции."
  remarks: "Возвращаемое значение `false` указывает, что указанный <xref:System.Configuration.ConfigurationProperty>объекта, не входи в коллекции.</xref:System.Configuration.ConfigurationProperty>"
  example:
  - "The following example shows how to use the Remove method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to call the above method and save the changes to the configuration file.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> Для удаления."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> был удален; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает объект для синхронизации доступа к коллекции."
  remarks: ''
  example:
  - "The following example shows how to get the SyncRoot property value.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект для синхронизации доступа к коллекции."
  overload: System.Configuration.ConfigurationPropertyCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationPropertyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Копирует этой коллекции в массив."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Массив, в который выполняется копирование."
    - id: index
      type: System.Int32
      description: "Расположение индекса, с которого начинается копирование."
  overload: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: ConfigurationPropertyCollection()
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection()
  fullName: System.Configuration.ConfigurationPropertyCollection.ConfigurationPropertyCollection()
- uid: System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Add(ConfigurationProperty)
  nameWithType: ConfigurationPropertyCollection.Add(ConfigurationProperty)
  fullName: System.Configuration.ConfigurationPropertyCollection.Add(ConfigurationProperty)
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.Configuration.ConfigurationPropertyCollection.Clear
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Clear()
  nameWithType: ConfigurationPropertyCollection.Clear()
  fullName: System.Configuration.ConfigurationPropertyCollection.Clear()
- uid: System.Configuration.ConfigurationPropertyCollection.Contains(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConfigurationPropertyCollection.Contains(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: CopyTo(ConfigurationProperty[],Int32)
  nameWithType: ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.CopyTo(ConfigurationProperty[],Int32)
- uid: System.Configuration.ConfigurationProperty[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationProperty
    name: ConfigurationProperty
    nameWithType: ConfigurationProperty
    fullName: ConfigurationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationPropertyCollection.Count
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
  fullName: System.Configuration.ConfigurationPropertyCollection.Count
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationPropertyCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationPropertyCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationPropertyCollection.IsSynchronized
- uid: System.Configuration.ConfigurationPropertyCollection.Item(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Item(String)
  nameWithType: ConfigurationPropertyCollection.Item(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Item(String)
- uid: System.Configuration.ConfigurationPropertyCollection.Remove(System.String)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConfigurationPropertyCollection.Remove(String)
  fullName: System.Configuration.ConfigurationPropertyCollection.Remove(String)
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
  fullName: System.Configuration.ConfigurationPropertyCollection.SyncRoot
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationPropertyCollection.#ctor*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection.ConfigurationPropertyCollection
- uid: System.Configuration.ConfigurationPropertyCollection.Add*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Add
  nameWithType: ConfigurationPropertyCollection.Add
- uid: System.Configuration.ConfigurationPropertyCollection.Clear*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Clear
  nameWithType: ConfigurationPropertyCollection.Clear
- uid: System.Configuration.ConfigurationPropertyCollection.Contains*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Contains
  nameWithType: ConfigurationPropertyCollection.Contains
- uid: System.Configuration.ConfigurationPropertyCollection.CopyTo*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationPropertyCollection.CopyTo
- uid: System.Configuration.ConfigurationPropertyCollection.Count*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationPropertyCollection.Count
- uid: System.Configuration.ConfigurationPropertyCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationPropertyCollection.GetEnumerator
- uid: System.Configuration.ConfigurationPropertyCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationPropertyCollection.IsSynchronized
- uid: System.Configuration.ConfigurationPropertyCollection.Item*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Item
  nameWithType: ConfigurationPropertyCollection.Item
- uid: System.Configuration.ConfigurationPropertyCollection.Remove*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: Remove
  nameWithType: ConfigurationPropertyCollection.Remove
- uid: System.Configuration.ConfigurationPropertyCollection.SyncRoot*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationPropertyCollection.SyncRoot
- uid: System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationPropertyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo
