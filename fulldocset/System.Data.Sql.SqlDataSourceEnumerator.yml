### YamlMime:ManagedReference
items:
- uid: System.Data.Sql.SqlDataSourceEnumerator
  id: SqlDataSourceEnumerator
  children:
  - System.Data.Sql.SqlDataSourceEnumerator.GetDataSources
  - System.Data.Sql.SqlDataSourceEnumerator.Instance
  langs:
  - csharp
  name: SqlDataSourceEnumerator
  nameWithType: SqlDataSourceEnumerator
  fullName: System.Data.Sql.SqlDataSourceEnumerator
  type: Class
  summary: "Предоставляет механизм для перечисления всех доступных экземпляров SQL Server в локальной сети."
  remarks: "SQL Server 2000 и SQL Server 2005 позволяют для приложений для определения существования экземпляров SQL Server в существующей сети. Класс SqlDataSourceEnumerator предоставляет эти сведения для разработчика приложения, предоставляя <xref:System.Data.DataTable>содержащий сведения о доступных серверов.</xref:System.Data.DataTable> Эта возвращенная таблица содержит список экземпляров сервера, совпадает со списком при условии, если пользователь пытается создать новое соединение и на `Connection Properties` диалоговое окно, при развертывании раскрывающегося списка, содержащий все доступные серверы."
  syntax:
    content: 'public sealed class SqlDataSourceEnumerator : System.Data.Common.DbDataSourceEnumerator'
  inheritance:
  - System.Object
  - System.Data.Common.DbDataSourceEnumerator
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources
  id: GetDataSources
  parent: System.Data.Sql.SqlDataSourceEnumerator
  langs:
  - csharp
  name: GetDataSources()
  nameWithType: SqlDataSourceEnumerator.GetDataSources()
  fullName: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Sql
  summary: "Извлекает <xref href=&quot;System.Data.DataTable&quot;> </xref> содержащий сведения обо всех видимых экземплярах SQL Server 2000 или SQL Server 2005."
  remarks: "Таблицы, возвращаемой этим методом содержит следующие столбцы, которые содержат строки: | Столбец | Описание |   |------------|-----------------|   | **ServerName**| Имя сервера. |   | **InstanceName**| Имя экземпляра сервера. Пустым, если сервер работает как экземпляр по умолчанию. |   | **IsClustered**| Указывает, является ли сервер частью кластера. |   | **Version**| Версия сервера (8.00.x для SQL Server 2000) и 9.00.x для SQL Server 2005. |      Настроек [!NOTE] настроек из-за особенностей механизма, используемого <xref:System.Data.Sql.SqlDataSourceEnumerator>для поиска источников данных в сети, метод не всегда возвращает полный список доступных серверов, а список не может быть одинаковым при каждом вызове.</xref:System.Data.Sql.SqlDataSourceEnumerator> Если вы планируете использовать эту функцию, чтобы позволить пользователю выбрать сервер из списка, убедитесь, что всегда также предоставить возможность ввести имя, которое не входит в список, в случае, если перечисление серверов не возвращает все доступные серверы. Кроме того этот метод может занять значительное время на выполнение, поэтому следует с осторожностью, когда производительность критически важна."
  example:
  - "The following console application retrieves information about all the visible SQL Server instances and displays the information in the console window.  \n  \n```vb#  \nImports System.Data.Sql  \n  \nModule Module1  \n  Sub Main()  \n    ' Retrieve the enumerator instance and then the data.  \n    Dim instance As SqlDataSourceEnumerator = _  \n     SqlDataSourceEnumerator.Instance  \n    Dim table As System.Data.DataTable = instance.GetDataSources()  \n  \n    ' Display the contents of the table.  \n    DisplayData(table)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal table As DataTable)  \n    For Each row As DataRow In table.Rows  \n      For Each col As DataColumn In table.Columns  \n        Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n      Next  \n      Console.WriteLine(\"============================\")  \n    Next  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System.Data.Sql;  \n  \nclass Program  \n{  \n  static void Main()  \n  {  \n    // Retrieve the enumerator instance and then the data.  \n    SqlDataSourceEnumerator instance =  \n      SqlDataSourceEnumerator.Instance;  \n    System.Data.DataTable table = instance.GetDataSources();  \n  \n    // Display the contents of the table.  \n    DisplayData(table);  \n  \n    Console.WriteLine(\"Press any key to continue.\");  \n    Console.ReadKey();  \n  }  \n  \n  private static void DisplayData(System.Data.DataTable table)  \n  {  \n    foreach (System.Data.DataRow row in table.Rows)  \n    {  \n      foreach (System.Data.DataColumn col in table.Columns)  \n      {  \n        Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n      }  \n      Console.WriteLine(\"============================\");  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public override System.Data.DataTable GetDataSources ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Возвращает <xref href=&quot;System.Data.DataTable&quot;> </xref> содержащий сведения обо всех видимых экземплярах SQL Server."
  overload: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Sql.SqlDataSourceEnumerator.Instance
  id: Instance
  parent: System.Data.Sql.SqlDataSourceEnumerator
  langs:
  - csharp
  name: Instance
  nameWithType: SqlDataSourceEnumerator.Instance
  fullName: System.Data.Sql.SqlDataSourceEnumerator.Instance
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Sql
  summary: "Возвращает экземпляр <xref href=&quot;System.Data.Sql.SqlDataSourceEnumerator&quot;> </xref>, который может использоваться для получения сведений о доступных экземпляров SQL Server."
  remarks: "<xref:System.Data.Sql.SqlDataSourceEnumerator>Класс не предоставляет конструктор.</xref:System.Data.Sql.SqlDataSourceEnumerator> Свойство экземпляра извлекаемого экземпляра класса."
  example:
  - "The following console application displays a list of all the available SQL Server 2005 instances within the local network. This code uses the <xref:System.Data.DataTable.Select%2A> method to filter the rows in the table returned by the <xref:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources%2A> method.  \n  \n```vb#  \nImports System.Data.Sql  \n  \nModule Module1  \n  Sub Main()  \n    ' Retrieve the enumerator instance, and  \n    ' then retrieve the data sources.  \n    Dim instance As SqlDataSourceEnumerator = _  \n     SqlDataSourceEnumerator.Instance  \n    Dim table As System.Data.DataTable = instance.GetDataSources()  \n  \n    ' Filter the sources to just show SQL Server 2005 instances.  \n    Dim rows() As DataRow = table.Select(\"Version LIKE '9%'\")  \n    For Each row As DataRow In rows  \n      Console.WriteLine(row(\"ServerName\"))  \n    Next  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System.Data.Sql;  \n  \nclass Program  \n{  \n  static void Main()  \n  {  \n    // Retrieve the enumerator instance, and  \n    // then retrieve the data sources.  \n    SqlDataSourceEnumerator instance =  \n      SqlDataSourceEnumerator.Instance;  \n    System.Data.DataTable table = instance.GetDataSources();  \n  \n    // Filter the sources to just show SQL Server 2005 instances.  \n    System.Data.DataRow[] rows = table.Select(\"Version LIKE '9%'\");  \n    foreach (System.Data.DataRow row in rows)  \n    {  \n      Console.WriteLine(row[\"ServerName\"]);  \n    }  \n    Console.WriteLine(\"Press any key to continue.\");  \n    Console.ReadKey();  \n  }  \n}  \n```"
  syntax:
    content: public static System.Data.Sql.SqlDataSourceEnumerator Instance { get; }
    return:
      type: System.Data.Sql.SqlDataSourceEnumerator
      description: "Экземпляр <xref href=&quot;System.Data.Sql.SqlDataSourceEnumerator&quot;> </xref> используется для извлечения сведений о доступных экземпляров SQL Server."
  overload: System.Data.Sql.SqlDataSourceEnumerator.Instance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataSourceEnumerator
  isExternal: false
  name: System.Data.Common.DbDataSourceEnumerator
- uid: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources
  parent: System.Data.Sql.SqlDataSourceEnumerator
  isExternal: false
  name: GetDataSources()
  nameWithType: SqlDataSourceEnumerator.GetDataSources()
  fullName: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Sql.SqlDataSourceEnumerator.Instance
  parent: System.Data.Sql.SqlDataSourceEnumerator
  isExternal: false
  name: Instance
  nameWithType: SqlDataSourceEnumerator.Instance
  fullName: System.Data.Sql.SqlDataSourceEnumerator.Instance
- uid: System.Data.Sql.SqlDataSourceEnumerator
  parent: System.Data.Sql
  isExternal: false
  name: SqlDataSourceEnumerator
  nameWithType: SqlDataSourceEnumerator
  fullName: System.Data.Sql.SqlDataSourceEnumerator
- uid: System.Data.Sql.SqlDataSourceEnumerator.GetDataSources*
  parent: System.Data.Sql.SqlDataSourceEnumerator
  isExternal: false
  name: GetDataSources
  nameWithType: SqlDataSourceEnumerator.GetDataSources
- uid: System.Data.Sql.SqlDataSourceEnumerator.Instance*
  parent: System.Data.Sql.SqlDataSourceEnumerator
  isExternal: false
  name: Instance
  nameWithType: SqlDataSourceEnumerator.Instance
