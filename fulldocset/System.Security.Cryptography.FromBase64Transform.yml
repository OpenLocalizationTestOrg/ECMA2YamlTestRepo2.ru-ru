### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.FromBase64Transform
  id: FromBase64Transform
  children:
  - System.Security.Cryptography.FromBase64Transform.#ctor
  - System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  - System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  - System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  - System.Security.Cryptography.FromBase64Transform.Clear
  - System.Security.Cryptography.FromBase64Transform.Dispose
  - System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  - System.Security.Cryptography.FromBase64Transform.Finalize
  - System.Security.Cryptography.FromBase64Transform.InputBlockSize
  - System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  - System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: FromBase64Transform
  nameWithType: FromBase64Transform
  fullName: System.Security.Cryptography.FromBase64Transform
  type: Class
  summary: "Преобразует <xref href=&quot;System.Security.Cryptography.CryptoStream&quot;> </xref> из кодировки Base64."
  remarks: "Base 64 Content-Transfer-Encoding представляет произвольные разрядные последовательности в форме, которая не является доступной для чтения."
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/t-system.security.crypto_20_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_20_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/t-system.security.crypto_20_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class FromBase64Transform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;></xref> class."
  remarks: "В конфигурации по умолчанию пробелы игнорируются. В разделе <xref:System.Security.Cryptography.FromBase64TransformMode>Подробнее.</xref:System.Security.Cryptography.FromBase64TransformMode>"
  syntax:
    content: public FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  id: '#ctor(System.Security.Cryptography.FromBase64TransformMode)'
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> класса с заданным режимом преобразования."
  remarks: ''
  example:
  - "The following example decodes a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/6e8f7a21-5a5f-4a36-9e3b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/6e8f7a21-5a5f-4a36-9e3b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/6e8f7a21-5a5f-4a36-9e3b-_1.cs)]"
  syntax:
    content: public FromBase64Transform (System.Security.Cryptography.FromBase64TransformMode whitespaces);
    parameters:
    - id: whitespaces
      type: System.Security.Cryptography.FromBase64TransformMode
      description: "Один из <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> значения."
  overload: System.Security.Cryptography.FromBase64Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает значение, указывающее, возможно ли повторное использование текущего преобразования."
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает значение, указывающее, возможно ли преобразование нескольких блоков."
  remarks: "В текущей реализации только один блок можно преобразовать во время, поэтому данное свойство всегда имеет `false`."
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  id: Clear
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>."
  remarks: "Этот метод является простым вызовом <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Вызов `Dispose` позволяет ресурсы, используемые <xref:System.Security.Cryptography.FromBase64Transform>перераспределить для других целей.</xref:System.Security.Cryptography.FromBase64Transform> Дополнительные сведения о `Dispose`, в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> класса."
  remarks: "Вызовите `Dispose` после использования <xref:System.Security.Cryptography.FromBase64Transform>.</xref:System.Security.Cryptography.FromBase64Transform> `Dispose` Метода <xref:System.Security.Cryptography.FromBase64Transform>окажется в неработоспособном состоянии.</xref:System.Security.Cryptography.FromBase64Transform> После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.Security.Cryptography.FromBase64Transform>, сборщик мусора мог освободить память, <xref:System.Security.Cryptography.FromBase64Transform>занимаемую.</xref:System.Security.Cryptography.FromBase64Transform> </xref:System.Security.Cryptography.FromBase64Transform>       Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек вызова всегда `Dispose` перед освобождением последней ссылки на <xref:System.Security.Cryptography.FromBase64Transform>.</xref:System.Security.Cryptography.FromBase64Transform> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Security.Cryptography.FromBase64Transform>объекта `Finalize` метод.</xref:System.Security.Cryptography.FromBase64Transform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые `Dispose()` метод и `Finalize` метод. `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром disposing установлено значение `true`. `Finalize`вызывает `Dispose` с disposing равен `false`.       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Security.Cryptography.FromBase64Transform>ссылки.</xref:System.Security.Cryptography.FromBase64Transform> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Security.Cryptography.FromBase64Transform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  id: Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref>."
  syntax:
    content: ~FromBase64Transform ();
    parameters: []
  overload: System.Security.Cryptography.FromBase64Transform.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает размер входного блока."
  remarks: "Размер входного блока для этого преобразования составляет один байт."
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "Размер входных данных блока в байтах."
  overload: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает размер выходного блока."
  remarks: "Размер выходного блока для этого преобразования составляет 3 байта."
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "Размер выходных данных блока в байтах."
  overload: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Преобразует заданной области входного массива байтов из кодировки Base64 и копирует результат в заданную область выходного массива байтов."
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/89d8dcd5-d4bc-45bd-bddf-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/89d8dcd5-d4bc-45bd-bddf-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/89d8dcd5-d4bc-45bd-bddf-_1.cs)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "Входные данные для вычисления из кодировки Base64."
    - id: inputOffset
      type: System.Int32
      description: "Смещение в массив байтов, из которого следует использовать данные."
    - id: inputCount
      type: System.Int32
      description: "Число байтов в массиве байтов для использования в качестве данных."
    - id: outputBuffer
      type: System.Byte[]
      description: "Выходные данные, в который записывается результат."
    - id: outputOffset
      type: System.Int32
      description: "Смещение в выходном массиве байтов, с которого начинается запись данных."
    return:
      type: System.Int32
      description: "Число записанных байтов."
  overload: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> объект уже удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputCount</code>использует недопустимое значение.       - или - <code>inputBuffer</code> имеет недопустимое смещение длины."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>находится вне диапазона. Параметра должно быть неотрицательным числом."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Преобразует заданную область из заданного массива байтов из кодировки Base64."
  remarks: ''
  example:
  - "The following example decrypts a base 64-encoded file to an output text file.  \n  \n [!code-cpp[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/cpp/77c58bc9-6ff0-4b4a-ba5b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/visualbasic/77c58bc9-6ff0-4b4a-ba5b-_1.vb)]\n [!code-cs[System.Security.Cryptography.FromBase64Transform Example#1](~/add/codesnippet/csharp/77c58bc9-6ff0-4b4a-ba5b-_1.cs)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "Входные данные для преобразования из кодировки Base64."
    - id: inputOffset
      type: System.Int32
      description: "Смещение в массиве байтов, из которого следует использовать данные."
    - id: inputCount
      type: System.Int32
      description: "Число байтов в массиве байтов для использования в качестве данных."
    return:
      type: System.Byte[]
      description: "Вычисляемое преобразование."
  overload: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий <xref href=&quot;System.Security.Cryptography.FromBase64Transform&quot;> </xref> объект уже удален."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputBuffer</code>имеет недопустимое значение смещения.       - или - <code>inputCount</code> имеет недопустимое значение."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>находится вне диапазона. Параметра должно быть неотрицательным числом."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputBuffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.FromBase64Transform.#ctor
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform()
  nameWithType: FromBase64Transform.FromBase64Transform()
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform()
- uid: System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform(FromBase64TransformMode)
  nameWithType: FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
  fullName: System.Security.Cryptography.FromBase64Transform.FromBase64Transform(FromBase64TransformMode)
- uid: System.Security.Cryptography.FromBase64TransformMode
  parent: System.Security.Cryptography
  isExternal: false
  name: FromBase64TransformMode
  nameWithType: FromBase64TransformMode
  fullName: System.Security.Cryptography.FromBase64TransformMode
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
  fullName: System.Security.Cryptography.FromBase64Transform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear()
  nameWithType: FromBase64Transform.Clear()
  fullName: System.Security.Cryptography.FromBase64Transform.Clear()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose()
  nameWithType: FromBase64Transform.Dispose()
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose()
- uid: System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FromBase64Transform.Dispose(Boolean)
  fullName: System.Security.Cryptography.FromBase64Transform.Dispose(Boolean)
- uid: System.Security.Cryptography.FromBase64Transform.Finalize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize()
  nameWithType: FromBase64Transform.Finalize()
  fullName: System.Security.Cryptography.FromBase64Transform.Finalize()
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
  fullName: System.Security.Cryptography.FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.FromBase64Transform.#ctor*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: FromBase64Transform
  nameWithType: FromBase64Transform.FromBase64Transform
- uid: System.Security.Cryptography.FromBase64Transform.CanReuseTransform*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanReuseTransform
  nameWithType: FromBase64Transform.CanReuseTransform
- uid: System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: FromBase64Transform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.FromBase64Transform.Clear*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Clear
  nameWithType: FromBase64Transform.Clear
- uid: System.Security.Cryptography.FromBase64Transform.Dispose*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Dispose
  nameWithType: FromBase64Transform.Dispose
- uid: System.Security.Cryptography.FromBase64Transform.Finalize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: Finalize
  nameWithType: FromBase64Transform.Finalize
- uid: System.Security.Cryptography.FromBase64Transform.InputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: InputBlockSize
  nameWithType: FromBase64Transform.InputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.OutputBlockSize*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: OutputBlockSize
  nameWithType: FromBase64Transform.OutputBlockSize
- uid: System.Security.Cryptography.FromBase64Transform.TransformBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformBlock
  nameWithType: FromBase64Transform.TransformBlock
- uid: System.Security.Cryptography.FromBase64Transform.TransformFinalBlock*
  parent: System.Security.Cryptography.FromBase64Transform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: FromBase64Transform.TransformFinalBlock
