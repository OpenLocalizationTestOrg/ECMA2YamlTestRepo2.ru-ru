### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.KeyInfoName
  id: KeyInfoName
  children:
  - System.Security.Cryptography.Xml.KeyInfoName.#ctor
  - System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  - System.Security.Cryptography.Xml.KeyInfoName.GetXml
  - System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.KeyInfoName.Value
  langs:
  - csharp
  name: KeyInfoName
  nameWithType: KeyInfoName
  fullName: System.Security.Cryptography.Xml.KeyInfoName
  type: Class
  summary: "Представляет <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> подэлемент XMLDSIG или XML-шифрования <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "`<KeyName>` Элемент содержит строковый идентификатор, для идентификации соответствующего ключа субъекта, проверку и расшифровку XML-документа.  Например, при получении зашифрованного или подписанного XML-документ, имеющий `<KeyName>` значение элемента «AsymmetricKey1» будет использовать ключ, который отправитель и получатель имя «AsymmetricKey1», для расшифровки и проверки документа.  Обе стороны должны согласовать сопоставление имени ключа заранее.  Обратите внимание, что фактический ключ не включается в XML-документе.       Дополнительные сведения о `<KeyName>` элемента, в разделе 4.4.1 спецификации XMLDSIG, которое доступно из консорциума World Wide Web (W3C): www.w3.org/TR/xmldsig-core/ или см. в спецификации XML-шифрования, которое доступно из W3C в www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example uses the KeyInfoName object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/t-system.security.crypto_38_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/t-system.security.crypto_38_1.cpp)]  \n  \n The following code example uses the KeyInfoName object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/t-system.security.crypto_38_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/t-system.security.crypto_38_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_2.vb)]  \n  \n The following code example uses the KeyInfoName object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_3.cpp)]  \n  \n The following code example uses the KeyInfoName object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_38_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/t-system.security.crypto_38_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/t-system.security.crypto_38_4.cpp)]"
  syntax:
    content: 'public class KeyInfoName : System.Security.Cryptography.Xml.KeyInfoClause'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.KeyInfoClause
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: KeyInfoName()
  nameWithType: KeyInfoName.KeyInfoName()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_113_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_113_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_113_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_113_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_2.vb)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_3.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_113_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/m-system.security.crypto_113_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/m-system.security.crypto_113_4.cpp)]"
  syntax:
    content: public KeyInfoName ();
    parameters: []
  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: KeyInfoName(String)
  nameWithType: KeyInfoName.KeyInfoName(String)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> класса путем указания идентификатора строки, значение <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "`keyName` Параметр может содержать любую строку; интерпретация строки зависит от конкретного приложения. Пробел учитывается в значении строки.       `keyName` Параметр указывает значение <xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A>Свойства.</xref:System.Security.Cryptography.Xml.KeyInfoName.Value%2A>"
  syntax:
    content: public KeyInfoName (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: "Идентификатор строки, который является значением <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: GetXml()
  nameWithType: KeyInfoName.GetXml()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает XML-представление <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> объекта."
  remarks: "<xref:System.Xml.XmlElement>Объект, возвращаемый этим методом подходит для использования в качестве вложенного элемента XMLDSIG или XML-шифрования `<KeyInfo>` элемент.</xref:System.Xml.XmlElement>"
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML-представление <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.KeyInfoName.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: KeyInfoName.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Выполняет синтаксический анализ входных данных <xref href=&quot;System.Xml.XmlElement&quot;> </xref> объекта и настраивает внутреннее состояние <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> объекта для сопоставления."
  remarks: "Метод LoadXml обычно используется для обработки `<KeyName>` вложенного элемента `<KeyInfo>` элемент."
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> , Указывающий состояние <xref href=&quot;System.Security.Cryptography.Xml.KeyInfoName&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value
  id: Value
  parent: System.Security.Cryptography.Xml.KeyInfoName
  langs:
  - csharp
  name: Value
  nameWithType: KeyInfoName.Value
  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает идентификатор строки, содержащийся в <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Значение свойства может содержать любую строку; Интерпретация строки зависит от конкретного приложения. Пробел учитывается в значении строки."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_73_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_73_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_73_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_73_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_2.vb)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example embeds an encrypted key within the encrypted XML document.  \n  \n [!code-cs[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_3.cs)]\n [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_3.vb)]\n [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_3.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfoName> object when encrypting an XML document. This example maps a name to a symmetric key to identify it to the decryption method.  \n  \n [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_73_4.vb)]\n [!code-cs[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/csharp/p-system.security.crypto_73_4.cs)]\n [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/add/codesnippet/cpp/p-system.security.crypto_73_4.cpp)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Идентификатор строки, который является значением <xref uid=&quot;langword_csharp_&lt;KeyName&gt;&quot; name=&quot;&lt;KeyName&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.KeyInfoName.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.KeyInfoClause
  isExternal: false
  name: System.Security.Cryptography.Xml.KeyInfoClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName()
  nameWithType: KeyInfoName.KeyInfoName()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName()
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName(String)
  nameWithType: KeyInfoName.KeyInfoName(String)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.KeyInfoName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: GetXml()
  nameWithType: KeyInfoName.GetXml()
  fullName: System.Security.Cryptography.Xml.KeyInfoName.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: KeyInfoName.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.KeyInfoName.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: Value
  nameWithType: KeyInfoName.Value
  fullName: System.Security.Cryptography.Xml.KeyInfoName.Value
- uid: System.Security.Cryptography.Xml.KeyInfoName.#ctor*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: KeyInfoName
  nameWithType: KeyInfoName.KeyInfoName
- uid: System.Security.Cryptography.Xml.KeyInfoName.GetXml*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: GetXml
  nameWithType: KeyInfoName.GetXml
- uid: System.Security.Cryptography.Xml.KeyInfoName.LoadXml*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: LoadXml
  nameWithType: KeyInfoName.LoadXml
- uid: System.Security.Cryptography.Xml.KeyInfoName.Value*
  parent: System.Security.Cryptography.Xml.KeyInfoName
  isExternal: false
  name: Value
  nameWithType: KeyInfoName.Value
