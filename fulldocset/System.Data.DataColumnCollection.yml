### YamlMime:ManagedReference
items:
- uid: System.Data.DataColumnCollection
  id: DataColumnCollection
  children:
  - System.Data.DataColumnCollection.Add
  - System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Add(System.String)
  - System.Data.DataColumnCollection.Add(System.String,System.Type)
  - System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  - System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  - System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Clear
  - System.Data.DataColumnCollection.CollectionChanged
  - System.Data.DataColumnCollection.Contains(System.String)
  - System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  - System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  - System.Data.DataColumnCollection.IndexOf(System.String)
  - System.Data.DataColumnCollection.Item(System.Int32)
  - System.Data.DataColumnCollection.Item(System.String)
  - System.Data.DataColumnCollection.List
  - System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Remove(System.String)
  - System.Data.DataColumnCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataColumnCollection
  nameWithType: DataColumnCollection
  fullName: System.Data.DataColumnCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Data.DataColumn&quot;> </xref> объектов для <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "DataColumnCollection определяет схему <xref:System.Data.DataTable>и определяет, какие данные каждого <xref:System.Data.DataColumn>может содержать.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> Можно получить доступ к DataColumnCollection через <xref:System.Data.DataTable.Columns%2A>свойство <xref:System.Data.DataTable>объекта.</xref:System.Data.DataTable> </xref:System.Data.DataTable.Columns%2A>       Использует DataColumnCollection <xref:System.Data.DataColumnCollection.Add%2A>и <xref:System.Data.DataColumnCollection.Remove%2A>методов для вставки и удаления <xref:System.Data.DataColumn>объектов.</xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection.Remove%2A> </xref:System.Data.DataColumnCollection.Add%2A> Используйте <xref:System.Data.InternalDataCollectionBase.Count%2A>свойство, чтобы определить, сколько <xref:System.Data.DataColumn>объекты находятся в коллекции.</xref:System.Data.DataColumn> </xref:System.Data.InternalDataCollectionBase.Count%2A> Используйте <xref:System.Data.DataColumnCollection.Contains%2A>способ проверить, существует ли указанное имя индекса или столбца в коллекции.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/csharp/t-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datacolumn_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add
  id: Add
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Создает и добавляет <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "К столбцу присваивается имя по умолчанию («Column1», «Column2» и т. д.).       Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_9_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add ();
    parameters: []
    return:
      type: System.Data.DataColumn
      description: "Вновь созданный <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  id: Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Создает и добавляет указанный <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "The <xref href=&quot;System.Data.DataColumn&quot;></xref> to add."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Столбец уже принадлежит к этой коллекции или в другую коллекцию."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Коллекция уже содержит столбец с указанным именем. (Сравнение не учитывает регистр.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "Выражение является недопустимым. В разделе <xref:System.Data.DataColumn.Expression*>получения дополнительных сведений о том, как создавать выражения.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Создает и добавляет <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект с указанным именем в <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "По умолчанию <xref:System.Data.DataColumn.DataType%2A>для нового столбца `string`.</xref:System.Data.DataColumn.DataType%2A>       Если `null` или пустая строка (&quot;») передается в имени столбца присваивается имя по умолчанию («Column1», «Column2» и т. д.).       Используйте <xref:System.Data.DataColumnCollection.Contains%2A>метод, чтобы определить, является ли столбец с предложенное имя уже существует в коллекции.</xref:System.Data.DataColumnCollection.Contains%2A>       Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Имя столбца."
    return:
      type: System.Data.DataColumn
      description: "Вновь созданный <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Коллекция уже содержит столбец с указанным именем. (Сравнение не учитывает регистр.)"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Создает и добавляет <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект, который имеет указанное имя и тип на <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Если `null` или пустая строка (&quot;») передается в имени столбца присваивается имя по умолчанию («Column1», «Column2» и т. д.).       Используйте <xref:System.Data.DataColumnCollection.Contains%2A>метод, чтобы определить, является ли столбец с предложенное имя уже существует в коллекции.</xref:System.Data.DataColumnCollection.Contains%2A>       Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_7_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type);
    parameters:
    - id: columnName
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>Для использования при создании столбца.</xref:System.Data.DataColumn.ColumnName*>"
    - id: type
      type: System.Type
      description: "<xref:System.Data.DataColumn.DataType*>Нового столбца.</xref:System.Data.DataColumn.DataType*>"
    return:
      type: System.Data.DataColumn
      description: "Вновь созданный <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Коллекция уже содержит столбец с указанным именем. (Сравнение не учитывает регистр.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "Выражение является недопустимым. В разделе <xref:System.Data.DataColumn.Expression*>получения дополнительных сведений о том, как создавать выражения.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  id: Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Создает и добавляет <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект с указанным именем, типом и выражение <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Если `null` или пустая строка (&quot;») передается в имени столбца присваивается имя по умолчанию («Column1», «Column2» и т. д.).       Используйте <xref:System.Data.DataColumnCollection.Contains%2A>метод, чтобы определить, является ли столбец с предложенное имя уже существует в коллекции.</xref:System.Data.DataColumnCollection.Contains%2A>       Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type, string expression);
    parameters:
    - id: columnName
      type: System.String
      description: "Имя, используемое при создании столбца."
    - id: type
      type: System.Type
      description: "<xref:System.Data.DataColumn.DataType*>Нового столбца.</xref:System.Data.DataColumn.DataType*>"
    - id: expression
      type: System.String
      description: "Выражение для назначения <xref:System.Data.DataColumn.Expression*>свойство.</xref:System.Data.DataColumn.Expression*>"
    return:
      type: System.Data.DataColumn
      description: "Вновь созданный <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "Коллекция уже содержит столбец с указанным именем. (Сравнение не учитывает регистр.)"
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "Выражение является недопустимым. В разделе <xref:System.Data.DataColumn.Expression*>получения дополнительных сведений о том, как создавать выражения.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  id: AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Копирует элементы указанного <xref href=&quot;System.Data.DataColumn&quot;> </xref> массива в конец коллекции."
  syntax:
    content: public void AddRange (System.Data.DataColumn[] columns);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "Массив <xref href=&quot;System.Data.DataColumn&quot;> </xref> объекты для добавления в коллекцию."
  overload: System.Data.DataColumnCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  id: CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Проверяет, может ли быть удален из коллекции указанный столбец."
  remarks: "Метод CanRemove выполняет несколько проверок до возвращения `true` или `false` результат. Сюда входят следующие: ли столбец существует, принадлежит к таблице или участвует в ограничении или отношении.       Используйте метод CanRemove, прежде чем пытаться удалить столбец из коллекции. Можно также использовать <xref:System.Data.DataColumnCollection.Contains%2A>метод, чтобы определить, существует ли определенный столбец, прежде чем пытаться удалить его.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If found, the CanRemove method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_16_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_16_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Объект <xref href=&quot;System.Data.DataColumn&quot;> </xref> в коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если столбец может быть удален. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>if,      -   The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -Столбец не принадлежит данной коллекции.      -Столбец является частью отношения.      -Выражение другого столбца зависит от этого столбца."
  overload: System.Data.DataColumnCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Clear
  id: Clear
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Удаляет столбцы из коллекции."
  remarks: "Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example clears the columns collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_0_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_0_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataColumnCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Происходит при изменении коллекции столбцов, либо путем добавления или удаления столбца."
  remarks: "Используйте <xref:System.Data.DataColumnCollection.Contains%2A>и <xref:System.Data.DataColumnCollection.CanRemove%2A>методов, чтобы определить, существует ли столбец и может быть удален.</xref:System.Data.DataColumnCollection.CanRemove%2A> </xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example adds an event handler for the CollectionChanged event.  \n  \n [!code-cs[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datacolumn_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Проверяет, содержит ли коллекция столбец с указанным именем."
  remarks: "Метод Contains используется для подтверждения наличия столбца, прежде чем выполнять дополнительные операции по столбцу. Метод возвращает `false` когда два или несколько столбцов имеют одинаковые имена, но разные пространства имен. Вызов завершается неудачно при наличии неоднозначности при сравнении имени столбца ровно один столбец."
  example:
  - "The following example uses the Contains method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed. If so, the column is removed.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_3_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_3_1.cs)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>Для поиска for. столбца</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если существует столбец с таким именем; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  id: CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Копирует всю коллекцию в существующий массив, начиная с указанного индекса в массиве."
  syntax:
    content: public void CopyTo (System.Data.DataColumn[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataColumn[]
      description: "Массив <xref href=&quot;System.Data.DataColumn&quot;> </xref> объектов для копирования в коллекции."
    - id: index
      type: System.Int32
      description: "Начальный индекс."
  overload: System.Data.DataColumnCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  id: IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает индекс столбца, указанного по имени."
  remarks: "Метод IndexOf не учитывает регистр."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>. If so, the IndexOf method returns the index of the column.  \n  \n [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Имя возвращаемого столбца."
    return:
      type: System.Int32
      description: "Индекс столбца, указанного <code> column </code> , если он найден; в противном случае — значение -1."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает индекс столбца с определенным именем (имя не с учетом регистра)."
  syntax:
    content: public int IndexOf (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Имя столбца для поиска."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс столбца с указанным именем или значение -1, если столбец не существует в коллекции."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает <xref href=&quot;System.Data.DataColumn&quot;> </xref> из коллекции по указанному индексу."
  remarks: "<xref:System.Data.DataColumnCollection.Contains%2A>Метод может использоваться для проверки наличия столбца.</xref:System.Data.DataColumnCollection.Contains%2A> Это полезно в том случае, прежде чем пытаться использовать элемент."
  example:
  - "The following example uses the Item property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index. The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.  \n  \n [!code-cs[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_11_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс возвращаемого столбца."
    return:
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> По указанному индексу."
  overload: System.Data.DataColumnCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Значение индекса больше, чем число элементов в коллекции."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает <xref href=&quot;System.Data.DataColumn&quot;> </xref> с указанным именем из коллекции."
  remarks: "<xref:System.Data.DataColumnCollection.Item%2A>— задать чувствительность к регистру, когда он выполняет поиск имен столбцов.</xref:System.Data.DataColumnCollection.Item%2A> Например, если один <xref:System.Data.DataColumn>называется «mydatacolumn» и другой называется «Mydatacolumn», строка, используемая для поиска столбцов, рассматривается как с учетом регистра.</xref:System.Data.DataColumn> Тем не менее если существует «mydatacolumn» и «Mydatacolumn» — нет, строка поиска считается без учета регистра."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.  \n  \n [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public System.Data.DataColumn this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>Столбца для возвращения.</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> В коллекции с указанным <xref:System.Data.DataColumn.ColumnName*>; в противном случае — значение null, если <xref href=&quot;System.Data.DataColumn&quot;> </xref> не существует.</xref:System.Data.DataColumn.ColumnName*>"
  overload: System.Data.DataColumnCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.List
  id: List
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "Для добавления."
  overload: System.Data.DataColumnCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  id: Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Удаляет указанный <xref href=&quot;System.Data.DataColumn&quot;> </xref> из коллекции."
  remarks: "Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists. If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column. The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the Remove method removes it.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_10_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_10_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Для удаления."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Столбец не принадлежит данной коллекции.       - Или - столбец является частью отношения.       - Или - выражение другого столбца зависит от этого столбца."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Удаляет <xref href=&quot;System.Data.DataColumn&quot;> </xref> объект с указанным именем из коллекции."
  remarks: "Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_12_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_12_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя столбца для удаления."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Коллекция не имеет столбца с указанным именем."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Удаляет столбец по указанному индексу из коллекции."
  remarks: "Если коллекция успешно изменена путем добавления или удаления столбцов, <xref:System.Data.DataColumnCollection.CollectionChanged>событием.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_4_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс столбца для удаления."
  overload: System.Data.DataColumnCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Коллекция не содержит столбец по указанному индексу."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidExpressionException
  parent: System.Data
  isExternal: false
  name: InvalidExpressionException
  nameWithType: InvalidExpressionException
  fullName: System.Data.InvalidExpressionException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataColumnCollection.Add
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
- uid: System.Data.DataColumnCollection.Add(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataColumnCollection.Clear
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
- uid: System.Data.DataColumnCollection.CollectionChanged
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataColumnCollection.Contains(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
- uid: System.Data.DataColumnCollection.Item(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
- uid: System.Data.DataColumnCollection.List
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
- uid: System.Data.DataColumnCollection.Remove(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
- uid: System.Data.DataColumnCollection.Add*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add
  nameWithType: DataColumnCollection.Add
- uid: System.Data.DataColumnCollection.AddRange*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange
  nameWithType: DataColumnCollection.AddRange
- uid: System.Data.DataColumnCollection.CanRemove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataColumnCollection.CanRemove
- uid: System.Data.DataColumnCollection.Clear*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear
  nameWithType: DataColumnCollection.Clear
- uid: System.Data.DataColumnCollection.Contains*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains
  nameWithType: DataColumnCollection.Contains
- uid: System.Data.DataColumnCollection.CopyTo*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataColumnCollection.CopyTo
- uid: System.Data.DataColumnCollection.IndexOf*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataColumnCollection.IndexOf
- uid: System.Data.DataColumnCollection.Item*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item
  nameWithType: DataColumnCollection.Item
- uid: System.Data.DataColumnCollection.List*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
- uid: System.Data.DataColumnCollection.Remove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove
  nameWithType: DataColumnCollection.Remove
- uid: System.Data.DataColumnCollection.RemoveAt*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataColumnCollection.RemoveAt
