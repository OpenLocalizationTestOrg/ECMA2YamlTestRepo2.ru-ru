### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  id: CodeDomSerializerBase
  children:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  langs:
  - csharp
  name: CodeDomSerializerBase
  nameWithType: CodeDomSerializerBase
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  type: Class
  summary: "Предоставляет базовый класс для <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> классы."
  remarks: "Класс CodeDomSerializerBase используется в качестве общей базы между <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>и <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>классы.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> Открытые <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>классы являются производными от класса CodeDomSerializerBase.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> Каждый открытый класс определяет собственный открытый API. Класс CodeDomSerializerBase определяет нет открытого API, но предлагает множество служебных методов, которые можно использовать для облегчения процесса сериализации."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class CodeDomSerializerBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  id: DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет десериализацию заданного выражения в объект в памяти."
  remarks: "Это вспомогательный метод, который производные классы могут вызывать для десериализации выражения. Он выполняет десериализацию оператора путем обработки и выполнения выражения CodeDOM, заданного атрибутом `expression` параметра, а затем возвращает результаты. Если объект должен быть создан в результате этого выражения, он получит имя, указанное в `name` параметра. Имя может быть `null` , если нет необходимости имя объекта. В следующей таблице описаны конкретных выражения обрабатываются.      | Выражение | Поведение |   |----------------|--------------|   | <xref:System.CodeDom.CodeThisReferenceExpression>| Это выражение представляет `this` или `Me`.</xref:System.CodeDom.CodeThisReferenceExpression> Чтобы найти объект, связанный с этого выражения, метод DeserializeExpression будет выглядеть в стек контекстов для <xref:System.ComponentModel.Design.Serialization.RootContext>.</xref:System.ComponentModel.Design.Serialization.RootContext> Этот объект содержит корневой объект графа и выражение, которое он представляет. Если объект существует, а выражение совпадает, возвращается корневой объект. Сообщено об ошибке, если экземпляр не найден. |   | <xref:System.CodeDom.CodeFieldReferenceExpression>| Если целевой ссылки на это поле имеет значение корневого объекта <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>метод параметра manager будет использоваться для получения экземпляра объекта, на основе имени.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeFieldReferenceExpression> В противном случае — стандартное отражение используется для поиска запрошенного поля с целевым объектом. Сообщено об ошибке, если не удается найти поле. |   | <xref:System.CodeDom.CodeVariableReferenceExpression>| <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>Метод `manager` параметр используется для поиска экземпляра, представляющий имя данной переменной.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeVariableReferenceExpression> Сообщено об ошибке, если экземпляр не найден. |       DeserializeExpression продолжает интерпретировать выражения до их полностью разрешения на объект или больше не может упростить выражение. В этом случае будет возвращать DeserializeExpression <xref:System.CodeDom.CodeExpression>, содержащее выражение, наиболее упрощенной.</xref:System.CodeDom.CodeExpression> Не поддерживаются следующие выражения:- <xref:System.CodeDom.CodeEventReferenceExpression>- <xref:System.CodeDom.CodeMethodReferenceExpression>- <xref:System.CodeDom.CodeDelegateCreateExpression></xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodReferenceExpression> </xref:System.CodeDom.CodeEventReferenceExpression>"
  syntax:
    content: protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: name
      type: System.String
      description: "Имя объекта, получаемое из выражения. Может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если нет необходимости имя объекта."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> Интерпретировать."
    return:
      type: System.Object
      description: "Объект, полученный из интерпретацию <code> expression </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  id: DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает экземпляр данного типа."
  remarks: "Метод DeserializeInstance вызывается во время десериализации для получения экземпляра объекта. При вызове, должны возвращаться экземпляр запрошенного типа. Реализация по умолчанию вызывает <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>метод `manager` параметр.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для возврата экземпляра.</xref:System.Type>"
    - id: parameters
      type: System.Object[]
      description: "Параметры для передачи конструктору для `type`."
    - id: name
      type: System.String
      description: "Имя Десериализованный объект."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для добавления этого объекта в контейнер конструктора; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Объект должен реализовать <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> для этого в действие."
    return:
      type: System.Object
      description: "Экземпляр <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет десериализацию свойств заданного объекта в набор ресурсов инвариантного языка и региональных параметров."
  remarks: "Метод DeserializePropertiesFromResources — что можно вызвать вспомогательный метод, который производных классов. Он выполняет поиск свойств данного объекта и пытается загрузить их значения из набора ресурсов инвариантного языка и региональных параметров. Обычно используется для обработки свойства времени проектирования, которые не преобразуются в исходный код. Он должен не использоваться для локализованные свойства, так как он работает только с инвариантным языком и региональными параметрами.       Этот метод проверяет все свойства `value` параметр, который соответствует атрибутами, заданными `filter` параметра, а затем проверяет наличие этих свойств в двоичном объекте ресурса. Это полезно для десериализации свойств, которые не могут быть представлены в коде, например свойства во время разработки.       Этот метод требует, что загрузчик конструктора предлагает <xref:System.ComponentModel.Design.IResourceService>для чтения ресурсов.</xref:System.ComponentModel.Design.IResourceService> Если <xref:System.ComponentModel.Design.IResourceService>предоставляет <xref:System.Resources.ResXResourceReader>для инвариантных региональных параметров, затем DeserializePropertiesFromResources будет чтения ресурсов из раздела метаданных XML-файл ресурсов (RESX), который не включен в окончательный скомпилированный код.</xref:System.Resources.ResXResourceReader> </xref:System.ComponentModel.Design.IResourceService> Если эта служба не доступна, ресурсы не будут считываться."
  syntax:
    content: protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект, из которого выполняется десериализация свойств."
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>Массив, который фильтрует свойства, которые будут десериализованы.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  id: DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет десериализацию оператора путем обработки и выполнения инструкции CodeDOM."
  remarks: "Метод DeserializeStatement — что можно вызвать вспомогательный метод, который производных классов. Он интерпретирует `statement` параметра.       <xref:System.CodeDom.CodeStatement>Десериализуемого помещаются в стек контекста.</xref:System.CodeDom.CodeStatement>"
  syntax:
    content: protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statement
      type: System.CodeDom.CodeStatement
      description: "<xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> Для десериализации."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает коллекцию атрибутов, как определено в проект с целевой версией платформы .NET Framework."
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: type
      type: System.Type
      description: "Тип целевого объекта."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Коллекция атрибутов в проект целевой версии платформы .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает коллекцию атрибутов, как определено в проект с целевой версией платформы .NET Framework."
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: instance
      type: System.Object
      description: "Объект типа целевого объекта."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Коллекция атрибутов в проект целевой версии платформы .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает коллекцию событий, как определено в проект с целевой версией платформы .NET Framework."
  syntax:
    content: protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: instance
      type: System.Object
      description: "Объект типа целевого объекта."
    - id: attributes
      type: System.Attribute[]
      description: "Массив атрибутов, которые будут переданы целевой версии платформы .NET Framework."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Коллекция событий, определенных в проекте целевой версии платформы .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает выражение для данного объекта."
  remarks: "Метод GetExpression Возвращает выражение, представляющее данный объект. Она может возвращать `null`, означающее, что выражение не было установлено, описывающую объект. Получение выражений осуществляется одним из трех способов:-выражение может быть результатом предыдущего вызова <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>метод.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>      -Выражение может найдено в списке <xref:System.ComponentModel.Design.Serialization.RootContext>.</xref:System.ComponentModel.Design.Serialization.RootContext>      -Выражение может быть получен посредством <xref:System.ComponentModel.Design.IReferenceService>.</xref:System.ComponentModel.Design.IReferenceService>       Для создания выражений с помощью <xref:System.ComponentModel.Design.IReferenceService>, метод GetExpression запрашивает службу ссылку на имя для данного объекта.</xref:System.ComponentModel.Design.IReferenceService> Если служба выражение возвращает допустимое имя <xref:System.ComponentModel.Design.IReferenceService>, GetExpression метод проверяет, существует ли «.» в имени.</xref:System.ComponentModel.Design.IReferenceService> Это означает, что службу выражений найти этот объект как возвращаемое значение свойства только для чтения на другом объекте. При наличии «.», GetExpression будет разделить ссылки на части. Крайней левой части имеет имя, которое будет вычисляться с <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>метод.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> Для каждой последующей части будет строиться выражение со ссылкой на свойство. Затем будет возвращаться окончательное выражение.       Если объект не содержал значение выражения или если объект не найден в службе ссылочных, возвращает GetExpression `null`, указывающее, имеется существующий вычисляемое выражение для объекта."
  syntax:
    content: protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект, для которого необходимо получить выражение."
    return:
      type: System.CodeDom.CodeExpression
      description: "Объект <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> представляющий v<code>alue</code>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при наличии существующего вычисляемое выражение для v<code>alue</code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает коллекцию свойств, как определено в проект с целевой версией платформы .NET Framework."
  syntax:
    content: protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: instance
      type: System.Object
      description: "Объект типа целевого объекта."
    - id: attributes
      type: System.Attribute[]
      description: "Массив атрибутов, которые будут переданы целевой версии платформы .NET Framework."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Коллекция свойств в проект целевой версии платформы .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Получает тип отражения, созданный из типа метаданных."
  remarks: "Возвращаемое значение не будет равен `type` и не должен использоваться для сравнения с типами, не связанными с отражением."
  syntax:
    content: protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: type
      type: System.Type
      description: "Тип, используемые метаданные."
    return:
      type: System.Type
      description: "Тип отражения, созданный из метаданных <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Получает тип отражения, созданный из метаданных объекта."
  remarks: "Возвращаемое значение не может быть равным тип объекта и не должен использоваться для сравнения с типами, не связанными с отражением."
  syntax:
    content: protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Диспетчер сериализации."
    - id: instance
      type: System.Object
      description: "Объект для использования метаданных."
    return:
      type: System.Type
      description: "Тип отражения, созданный из метаданных <code> object </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Определяет местоположение сериализатора для значения заданного объекта."
  remarks: "Метод GetSerializer — это расширение <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>метод.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>Метод принимает тип объекта, а не значение объекта.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> Если третьих переопределен метаданные для объекта через <xref:System.ComponentModel.TypeDescriptor>, что переопределение метаданных бы не видны <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>метод, который принимает только тип.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> </xref:System.ComponentModel.TypeDescriptor> Метод GetSerializer проверяет метаданные значение и тип значения. Если два отличаются, GetSerializer будет выглядеть для просмотра, если отсутствует атрибут настраиваемого сериализатора конструктора значение. В этом случае GetSerializer попытается использовать его. В противном случае он будет откладываться для <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект, указывающий сериализатора."
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "Объект <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> подходит для <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Определяет местоположение сериализатора для заданного типа."
  remarks: "Метод GetSerializer — это расширение <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>метод.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>Метод принимает тип объекта, а не значение объекта.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: valueType
      type: System.Type
      description: "<xref:System.Type>Указание сериализатора.</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "Объект <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> подходит для <code> valueType </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>valueType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  id: GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> , известно о целевой версии платформы .NET Framework, для использования в фильтрация по типу."
  syntax:
    content: protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Служба поставщика описания типа."
    - id: instance
      type: System.Object
      description: "Объект, от которого можно наследовать служба поставщик описания типа, если `provider` — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: ".NET Framework поддержкой поставщик описания типа."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает уникальное имя для данного объекта."
  remarks: "Вызовы метода GetUniqueName <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>метод.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> Если этот метод не возвращает имя, а затем использует GetUniqueName <xref:System.ComponentModel.Design.Serialization.INameCreationService>при изготовлении допустимое имя для объекта.</xref:System.ComponentModel.Design.Serialization.INameCreationService> Если служба недоступна, GetUniqueName будет используется имя, основанное на сокращенное имя вместе с индексом, чтобы сделать его уникальным. Результирующее имя связано с диспетчер сериализации, путем вызова <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>метод перед возвращением новое имя.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>"
  syntax:
    content: protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект, для которого извлекается имя."
    return:
      type: System.String
      description: "Уникальное имя для <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает значение, указывающее, ли сериализация заданного объекта."
  remarks: "Для `value` сериализации параметра следует учитывать, `manager` параметр или другой сериализатор необходимо вызвать метод <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>метод, чтобы создать связь между `value` и ссылающийся выражение.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для предыдущей сериализации."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> value </code> были сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает значение, указывающее, ли сериализация заданного объекта, при необходимости рассматривается заранее установленное."
  remarks: "Для `value` сериализации параметра следует учитывать, `manager` параметр или другой сериализатор необходимо вызвать метод <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>метод, чтобы создать связь между `value` и ссылающийся выражение.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для предыдущей сериализации."
    - id: honorPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить готовые выражения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> value </code> были сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  id: SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает выражение, представляющее создание данного объекта."
  remarks: "Метод SerializeCreationExpression используется для сериализации выражение, представляющее создание `value` параметра. Ему известно о дескрипторах экземпляров.       `isComplete` Параметра равным `true` Если выражение представляет полностью настроенный объект, или `false` при дальнейшей сериализации необходимо использовать свойства объекта."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если `value` были полностью сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Выражение, представляющее создание <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  id: SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Сериализует заданное событие в указанную коллекцию инструкций."
  remarks: "Метод SerializeEvent — можно вызвать вспомогательный метод, который производные классы для сериализации одного события в данной <xref:System.CodeDom.CodeStatementCollection>.</xref:System.CodeDom.CodeStatementCollection> Диспетчер сериализации для запросов SerializeEvent <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>для данного события и запрашивает <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>для сериализации его.</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> </xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       Окружение SerializeEvent `statements` и `descriptor` параметры <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack>       Требуется SerializeEvent <xref:System.ComponentModel.Design.IEventBindingService>для обнаружения связи с событиями методы, которые не компилируются.</xref:System.ComponentModel.Design.IEventBindingService> Если эта служба отсутствует, привязки событий в методы нескомпилированных не записывается. По-прежнему будут сериализованы привязки событий к скомпилированным методам, если объекты, с которыми связаны события, могут быть преобразованы в выражениях."
  syntax:
    content: protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> , В который будет сериализовано событие."
    - id: value
      type: System.Object
      description: "Объект, к которому `descriptor` привязан."
    - id: descriptor
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Указания события для сериализации."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>descriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Design.Serialization.CodeDomSerializerException
    commentId: T:System.ComponentModel.Design.Serialization.CodeDomSerializerException
    description: "<xref href=&quot;System.ComponentModel.Design.IEventBindingService&quot;></xref>недоступен."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Сериализует заданные события в указанную коллекцию инструкций."
  remarks: "Метод SerializeEvents — что можно вызвать вспомогательный метод, который производных классов. Он выполняет поиск событий `value` параметр, который соответствует `filter` параметра, а затем вызывает <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>метод для каждого события.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>       Метод мест SerializeEvents <xref:System.ComponentModel.InheritanceAttribute>для `value` <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> , В который будет сериализовано событие."
    - id: value
      type: System.Object
      description: "Объект, на котором будут сериализованы события."
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>Массив, который фильтрует события, для сериализации.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Сериализует свойства заданного объекта в указанную коллекцию инструкций."
  remarks: "Метод SerializeProperties — что можно вызвать вспомогательный метод, который производных классов. Он просматривает свойства в `value` параметр, который соответствует `filter` параметра, а затем вызывает <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>метод для каждого свойства.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>       Метод мест SerializeProperties <xref:System.ComponentModel.InheritanceAttribute>для `value` <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> , В который будут сериализованы свойства."
    - id: value
      type: System.Object
      description: "Объект, на котором будут сериализованы свойства."
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>Массив, который фильтрует свойства, которые будут сериализованы.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Сериализует свойства заданного объекта в набор ресурсов инвариантного языка и региональных параметров."
  remarks: "Метод SerializePropertiesToResources — что можно вызвать вспомогательный метод, который производных классов. Он просматривает свойства в `value` параметр, который соответствует `filter` параметра, а затем выполняет сериализацию свойств в набор ресурсов инвариантного языка и региональных параметров. Если служба ресурсов возвращает <xref:System.Resources.ResXResourceWriter>, значения свойств, которые будут храниться в метаданных части XML-файл ресурсов (RESX).</xref:System.Resources.ResXResourceWriter> `statements` Параметр не используется.       Должны быть сериализованы как ресурс, свойство должно быть простое (не свойством содержимого) и его значение должны быть сериализуемыми. Свойства, которые не соответствуют этому шаблону, пропускаются.       Требуется SerializePropertiesToResources <xref:System.ComponentModel.Design.IResourceService>для получения <xref:System.Resources.ResourceWriter>для записи ресурсов для нейтральной культуры.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Если эта служба не доступна, ресурсы не будут записаны."
  syntax:
    content: protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "Не используется."
    - id: value
      type: System.Object
      description: "Объект, свойства которого будут сериализованы."
    - id: filter
      type: System.Attribute[]
      description: "<xref:System.Attribute>Массив, который фильтрует свойства, которые будут сериализованы.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  id: SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Сериализует свойства заданного объекта."
  remarks: "Метод SerializeProperty получает <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>для `propertyToSerialize` параметр и делегаты для него</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       Окружение SerializeProperty `statements` и `propertyToSerialize` параметры <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack>"
  syntax:
    content: protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "<xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> В который будет сериализовано свойство."
    - id: value
      type: System.Object
      description: "Объект, на котором будет сериализовано свойство."
    - id: propertyToSerialize
      type: System.ComponentModel.PropertyDescriptor
      description: "Свойство для сериализации."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>propertyToSerialize</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса."
  remarks: "Метод SerializeResource — это вспомогательный метод, который выполняет сериализацию значения для набора ресурсов под заданным именем. Язык и региональные параметры, который записывается ресурса определяется путем поиска диспетчера сериализации с помощью <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>Коллекция для свойства с именем `ResourceCulture`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> Если это свойство существует, ресурсы будут записаны для этого языка и региональных параметров. В противном случае ресурсы будут записаны инвариантный язык и региональные параметры. `value` Параметр должен быть сериализуемым.       Требуется SerializeResource <xref:System.ComponentModel.Design.IResourceService>для получения <xref:System.Resources.ResourceWriter>для записи ресурсов для правильного языка и региональных параметров.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Если эта служба не доступна, SerializeResource вместо построит двоичный объект в коде, представляющий ресурс."
  syntax:
    content: protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: resourceName
      type: System.String
      description: "Имя набора ресурсов, в который `value` будут сериализованы."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию заданного объекта в набор ресурсов, используя заданное имя ресурса."
  remarks: "Ресурс всегда записывается в инвариантного языка и региональных параметров. `value` Параметр должен быть сериализуемым.       Метод SerializeResourceInvariant требует <xref:System.ComponentModel.Design.IResourceService>для получения <xref:System.Resources.ResourceWriter>для записи ресурсов для правильного языка и региональных параметров.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Если эта служба недоступна, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>вместо построит двоичный объект в коде, представляющий ресурс.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>"
  syntax:
    content: protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: resourceName
      type: System.String
      description: "Имя набора ресурсов, в который `value` будут сериализованы."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию заданного объекта в выражение."
  remarks: "`value` Параметр может быть `null`, в этом случае возвращается элементарное выражение.       Метод SerializeToExpression использует следующие правила для сериализации типов: 1.  Сначала вызывает <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>метод для просмотра, если выражение уже создан для объекта.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> В этом случае он возвращает существующее выражение.      2.  Находит сериализатора объекта и запрашивает его сериализацию.      3.  Если возвращаемое значение сериализатора объекта является <xref:System.CodeDom.CodeExpression>, возвращается выражение.</xref:System.CodeDom.CodeExpression>      4.  Он выполняет один последний вызов <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>ли сериализатор добавлен выражения.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>      5.  Наконец, он возвращает `null`.       Если выражение не может быть создан и не найден подходящий сериализатор, диспетчер сериализации будет сообщение об ошибке. Ошибка не будет отмечено, если сериализатор найден, но ему не удалось создать выражение. В этом случае предполагается, что сериализатор либо уже вернул ошибку, или она не была предпринята попытка сериализовать объект.       Если сериализатор возвращает инструкцию или набор инструкций, эти инструкции не отменяются. Метод SerializeToExpression вначале будет искать <xref:System.ComponentModel.Design.Serialization.StatementContext>контекста стека и добавьте операторы объект контекста инструкции <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>свойство.</xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> </xref:System.ComponentModel.Design.Serialization.StatementContext> Если нет контекста инструкции, метод SerializeToExpression будет выглядеть в контексте для <xref:System.CodeDom.CodeStatementCollection>и добавьте операторы существует.</xref:System.CodeDom.CodeStatementCollection> Если нет удается найти место для добавления инструкций, возникнет ошибка.      Настроек [!NOTE] настроек не следует вызывать метод SerializeToExpression в <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>при сериализации объекта.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> Вместо этого следует вызвать метод <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> Если он возвращает `null`вызовите <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> , создать свое собственное выражение Затем продолжите выполнение сериализации."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Объект <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> объекта, если <code> value </code> можно сериализовать; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию заданного объекта в выражение."
  remarks: "<xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>— Вспомогательный метод, который выполняет сериализацию значения для выражения ресурса.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Это отличается от <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>метод, который записывает значение двоичного объекта ресурса.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>Идет один шаг дальше и возвращает выражение, которое может использоваться для восстановления ресурса.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Например возвращаемое значение может быть «надежного обмена сообщениями. GetValue(&quot;SomeBitmap&quot;);». Имя ресурса, вычисленный на основе <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, если таковое в стеке контекста.</xref:System.ComponentModel.Design.Serialization.ExpressionContext>       <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>Метода будет выглядеть на <xref:System.ComponentModel.Design.Serialization.ContextStack>для следующих объектов:- <xref:System.CodeDom.CodeStatementCollection>— это совокупность инструкции, чтобы добавить диспетчер ресурсов, если необходимо объявить один.</xref:System.CodeDom.CodeStatementCollection> </xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>      - <xref:System.ComponentModel.Design.Serialization.RootContext>— корневой выражения, который необходим для создания диспетчера ресурсов.</xref:System.ComponentModel.Design.Serialization.RootContext>      - <xref:System.ComponentModel.Design.Serialization.ExpressionContext>— используется для создания имени ресурса и решить, какой тип вызов диспетчера ресурсов для создания.</xref:System.ComponentModel.Design.Serialization.ExpressionContext>"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
    return:
      type: System.CodeDom.CodeExpression
      description: "Объект <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> содержащий <code> value </code> как сериализованный выражение."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Выполняет сериализацию заданного объекта в выражение, соответствующее для инвариантных региональных параметров."
  remarks: "Если `ensureInvariant` параметр `true`, метод SerializeToResourceExpression также написать значение ресурса в файл ресурсов инвариантного языка и региональных параметров, если текущий `ResourceCulture` не инвариантного языка и региональных параметров..."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
    - id: ensureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для сериализации в инвариантного языка и региональных параметров; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Объект <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> содержащий <code> value </code> как сериализованный выражение."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Связывает объект с выражением."
  remarks: "Метод SetExpression — это вспомогательный метод, который связывает <xref:System.CodeDom.CodeExpression>с объектом.</xref:System.CodeDom.CodeExpression> Объекты, которые были связаны с выражениями, таким образом, доступны через <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>метод.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> SetExpression хранит свою таблицу выражение как объект, добавленный в стек контекста, поэтому оно доступно для любого сериализатор <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>метод.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> С которым необходимо связать `value`."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>expression</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Связывает объект с выражением, при необходимости задавая заранее установленного выражения."
  remarks: "Метод SetExpression — это вспомогательный метод, который связывает <xref:System.CodeDom.CodeExpression>с объектом.</xref:System.CodeDom.CodeExpression> Объекты, которые были связаны с выражениями, таким образом, доступны через <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>метод.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> SetExpression хранит свою таблицу выражение как объект, добавленный в стек контекста, поэтому оно доступно для любого сериализатор <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>метод.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> Для использования при выполнении сериализации."
    - id: value
      type: System.Object
      description: "Объект для сериализации."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> С которым необходимо связать `value`."
    - id: isPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для указания заранее установленного выражения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerException
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializerException
  nameWithType: CodeDomSerializerException
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializer
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializer
  nameWithType: CodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression
  nameWithType: CodeDomSerializerBase.DeserializeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance
  nameWithType: CodeDomSerializerBase.DeserializeInstance
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement
  nameWithType: CodeDomSerializerBase.DeserializeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper
  nameWithType: CodeDomSerializerBase.GetAttributesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper
  nameWithType: CodeDomSerializerBase.GetEventsHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression
  nameWithType: CodeDomSerializerBase.GetExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer
  nameWithType: CodeDomSerializerBase.GetSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName
  nameWithType: CodeDomSerializerBase.GetUniqueName
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized
  nameWithType: CodeDomSerializerBase.IsSerialized
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent
  nameWithType: CodeDomSerializerBase.SerializeEvent
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents
  nameWithType: CodeDomSerializerBase.SerializeEvents
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties
  nameWithType: CodeDomSerializerBase.SerializeProperties
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty
  nameWithType: CodeDomSerializerBase.SerializeProperty
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource
  nameWithType: CodeDomSerializerBase.SerializeResource
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression
  nameWithType: CodeDomSerializerBase.SerializeToExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression
  nameWithType: CodeDomSerializerBase.SetExpression
