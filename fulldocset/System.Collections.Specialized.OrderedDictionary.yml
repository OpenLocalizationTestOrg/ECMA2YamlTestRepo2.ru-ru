### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.OrderedDictionary
  id: OrderedDictionary
  children:
  - System.Collections.Specialized.OrderedDictionary.#ctor
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.OrderedDictionary.AsReadOnly
  - System.Collections.Specialized.OrderedDictionary.Clear
  - System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
  - System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.OrderedDictionary.Count
  - System.Collections.Specialized.OrderedDictionary.GetEnumerator
  - System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  - System.Collections.Specialized.OrderedDictionary.IsReadOnly
  - System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.Item(System.Object)
  - System.Collections.Specialized.OrderedDictionary.Keys
  - System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)
  - System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
  - System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
  - System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Collections.Specialized.OrderedDictionary.Values
  langs:
  - csharp
  name: OrderedDictionary
  nameWithType: OrderedDictionary
  fullName: System.Collections.Specialized.OrderedDictionary
  type: Class
  summary: "Представляет коллекцию пар &quot;ключ значение&quot;, можно получить по ключу и индексу."
  remarks: "Каждый элемент является пара ключ значение, хранящиеся в <xref:System.Collections.DictionaryEntry>объекта.</xref:System.Collections.DictionaryEntry> Ключ не может быть `null`, но может быть значение.       Элементы OrderedDictionary не сортируются по ключу, в отличие от элементов <xref:System.Collections.Generic.SortedDictionary%602>класса.</xref:System.Collections.Generic.SortedDictionary%602> Можно обращаться к элементам, с помощью ключа или индекса.       `foreach` Инструкции языка C# (`For Each` в Visual Basic) возвращает объекты, имеющие тип каждого элемента в коллекции. Поскольку каждый элемент коллекции OrderedDictionary пару ключ значение, тип элемента не является типом ключа или тип значения. Вместо этого тип элемента — это <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Ниже приведен синтаксис C#, Visual Basic и C++.       [!code-cpp[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/cpp/t-system.collections.spe_5_1.cpp)][!code-cs[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/csharp/t-system.collections.spe_5_1.cs)][!code-vb[System.Collections.Specialized.OrderedDictionary1#06](~/add/codesnippet/visualbasic/t-system.collections.spe_5_1.vb) ] `foreach` инструкция является оболочкой перечислителя, допускающей только чтение из, но не запись в коллекции.    "
  example:
  - "The following code example demonstrates the creation, population and modification of an OrderedDictionary collection, as well as two techniques to display the contents of the OrderedDictionary: one using the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> and <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> properties and the other creating an enumerator through the <xref:System.Collections.Specialized.OrderedDictionary.GetEnumerator%2A> method.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/cpp/t-system.collections.spe_5_2.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/csharp/t-system.collections.spe_5_2.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#00](~/add/codesnippet/visualbasic/t-system.collections.spe_5_2.vb)]"
  syntax:
    content: 'public class OrderedDictionary : System.Collections.IDictionary, System.Collections.Specialized.IOrderedDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.Specialized.IOrderedDictionary
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OrderedDictionary()
  nameWithType: OrderedDictionary.OrderedDictionary()
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> класса."
  remarks: "Функция сравнения определяет, равны ли два ключа. Каждый ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции должны быть уникальными.</xref:System.Collections.Specialized.OrderedDictionary> Функция сравнения по умолчанию является реализацией <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/m-system.collections.spe_42_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/m-system.collections.spe_42_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/m-system.collections.spe_42_1.vb)]"
  syntax:
    content: public OrderedDictionary ();
    parameters: []
  overload: System.Collections.Specialized.OrderedDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OrderedDictionary(IEqualityComparer)
  nameWithType: OrderedDictionary.OrderedDictionary(IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> класса с помощью указанной функции сравнения."
  remarks: "Функция сравнения определяет, равны ли два ключа. Каждый ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции должны быть уникальными.</xref:System.Collections.Specialized.OrderedDictionary> Функция сравнения по умолчанию является реализацией <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Пользовательский модуль сравнения позволяет таких сценариев, например при поиске строк без учета регистра."
  syntax:
    content: public OrderedDictionary (System.Collections.IEqualityComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IComparer>Для определения равенства двух ключей.</xref:System.Collections.IComparer>       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> следует использовать функцию сравнения по умолчанию, который является реализацией каждого ключа &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Specialized.OrderedDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OrderedDictionary(Int32)
  nameWithType: OrderedDictionary.OrderedDictionary(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> класса с помощью указанной начальной емкостью."
  remarks: "Функция сравнения определяет, равны ли два ключа. Каждый ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции должны быть уникальными.</xref:System.Collections.Specialized.OrderedDictionary> Функция сравнения по умолчанию является реализацией <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public OrderedDictionary (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Начальное количество элементов, <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> может содержать коллекция."
  overload: System.Collections.Specialized.OrderedDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OrderedDictionary(Int32,IEqualityComparer)
  nameWithType: OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> класса с помощью указанной исходной емкостью и функцию сравнения."
  remarks: "Функция сравнения определяет, равны ли два ключа. Каждый ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции должны быть уникальными.</xref:System.Collections.Specialized.OrderedDictionary> Функция сравнения по умолчанию является реализацией <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Пользовательский модуль сравнения позволяет таких сценариев, например при поиске строк без учета регистра."
  syntax:
    content: public OrderedDictionary (int capacity, System.Collections.IEqualityComparer comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Начальное количество элементов, <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> может содержать коллекция."
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IComparer>Для определения равенства двух ключей.</xref:System.Collections.IComparer>       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> следует использовать функцию сравнения по умолчанию, который является реализацией каждого ключа &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Specialized.OrderedDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OrderedDictionary(SerializationInfo,StreamingContext)
  nameWithType: OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> класс, который может быть сериализован с помощью указанного <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> и <xref:System.Runtime.Serialization.StreamingContext>объекты.</xref:System.Runtime.Serialization.StreamingContext>"
  remarks: "Функция сравнения определяет, равны ли два ключа. Каждый ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции должны быть уникальными.</xref:System.Collections.Specialized.OrderedDictionary> Функция сравнения по умолчанию является реализацией <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>"
  syntax:
    content: protected OrderedDictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> объект, содержащий сведения, необходимые для сериализации <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Объект <xref:System.Runtime.Serialization.StreamingContext>объект, содержащий источник и назначение сериализованного потока, связанного с <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Specialized.OrderedDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: OrderedDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Добавляет запись с указанным ключом и значением в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> с наименьшим индексом в коллекции."
  remarks: "Ключ не может быть `null`, но может быть значение.       Можно также использовать <xref:System.Collections.Specialized.OrderedDictionary.Item%2A>свойство для добавления новых элементов, задав значение ключа, не существует в <xref:System.Collections.Specialized.OrderedDictionary>коллекцию; тем не менее, если указанный ключ уже существует в <xref:System.Collections.Specialized.OrderedDictionary>Настройка <xref:System.Collections.Specialized.OrderedDictionary.Item%2A>свойство перезаписывает прежнее значение.</xref:System.Collections.Specialized.OrderedDictionary.Item%2A> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary.Item%2A> Напротив метод Add не изменяет существующие элементы."
  example:
  - "The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/039b9599-9399-4061-ac28-_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/039b9599-9399-4061-ac28-_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/039b9599-9399-4061-ac28-_1.vb)]"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ записи, которую требуется добавить."
    - id: value
      type: System.Object
      description: "Значение записи, которую требуется добавить. Это значение может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> Коллекция доступна только для чтения."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly
  id: AsReadOnly
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: AsReadOnly()
  nameWithType: OrderedDictionary.AsReadOnly()
  fullName: System.Collections.Specialized.OrderedDictionary.AsReadOnly()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает доступную только для чтения копию текущего <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  remarks: "Метод AsReadOnly создает только для чтения оболочку вокруг текущего <xref:System.Collections.Specialized.OrderedDictionary>коллекции.</xref:System.Collections.Specialized.OrderedDictionary> Изменения, внесенные в <xref:System.Collections.Specialized.OrderedDictionary>коллекции отражаются в копии только для чтения.</xref:System.Collections.Specialized.OrderedDictionary>"
  syntax:
    content: public System.Collections.Specialized.OrderedDictionary AsReadOnly ();
    parameters: []
    return:
      type: System.Collections.Specialized.OrderedDictionary
      description: "Только для чтения копию текущего <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  overload: System.Collections.Specialized.OrderedDictionary.AsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: OrderedDictionary.Clear()
  fullName: System.Collections.Specialized.OrderedDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Удаляет все элементы из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  remarks: "После вызова метода Clear <xref:System.Collections.Specialized.OrderedDictionary.Count%2A>задано равным нулю, и ссылки на другие объекты из элементов коллекции также освобождаются.</xref:System.Collections.Specialized.OrderedDictionary.Count%2A> Емкость не изменяется в результате вызова этого метода."
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Clear method is used to empty the <xref:System.Collections.Specialized.OrderedDictionary>, and then the <xref:System.Collections.Specialized.OrderedDictionary> is repopulated. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/cpp/m-system.collections.spe_1_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/csharp/m-system.collections.spe_1_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/visualbasic/m-system.collections.spe_1_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.OrderedDictionary.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> Коллекция доступна только для чтения."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: OrderedDictionary.Contains(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Определяет, является ли <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция содержит указанный ключ."
  remarks: "С помощью <xref:System.Collections.Specialized.OrderedDictionary.Item%2A>свойство может вернуть значение null, если ключ не существует, или если ключ `null`.</xref:System.Collections.Specialized.OrderedDictionary.Item%2A> Метод Contains используется для определения, существует ли указанный ключ в <xref:System.Collections.Specialized.OrderedDictionary>коллекции.</xref:System.Collections.Specialized.OrderedDictionary>       Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A>и <xref:System.IComparable.CompareTo%2A>методов в `item` определить, является ли `item` существует.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A>и <xref:System.IComparable.CompareTo%2A>методы `item` параметр для объектов в коллекции.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Contains method is used to determine if an entry exists before attempting to remove it. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_29_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_29_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_29_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ для поиска в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция содержит элемент с указанным ключом; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: OrderedDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Копирует <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> элементы в одномерном массиве <xref:System.Array>объект по указанному индексу.</xref:System.Array>"
  remarks: "Метод CopyTo не обязательно сохранять порядок элементов в <xref:System.Collections.Specialized.OrderedDictionary>коллекции.</xref:System.Collections.Specialized.OrderedDictionary>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Одномерный массив <xref:System.Array>объект, являющийся назначением <xref:System.Collections.DictionaryEntry>объекты из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.DictionaryEntry> </xref:System.Array> <xref:System.Array>Должен начинаться с нуля.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в `array` с которого начинается копирование."
  overload: System.Collections.Specialized.OrderedDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Count
  id: Count
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Count
  nameWithType: OrderedDictionary.Count
  fullName: System.Collections.Specialized.OrderedDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает число или значения ключа пары, содержащихся в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  remarks: ''
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Count property is used to remove the last item in the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_10_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_10_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Число пар &quot;ключ значение&quot;, содержащихся в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  overload: System.Collections.Specialized.OrderedDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OrderedDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает <xref:System.Collections.IDictionaryEnumerator>объект, который осуществляет итерацию по <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "[Visual Basic, C#]       `foreach` Инструкции языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.  Таким образом, использование `foreach` рекомендуется вместо непосредственного использования перечислителя.       Перечислители могут использоваться для чтения данных в коллекции, но не может использоваться для изменения коллекции.       Изначально перечислитель располагается перед первым элементом в коллекции.       Перечислитель остается действительным, пока коллекция остается неизменной. Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и его поведение не определено.       Перечислитель не имеет монопольного доступа к коллекции. Таким образом, перечисление коллекции само по себе не является потокобезопасной процедурой.  Для обеспечения потокобезопасности при перечислении, можно заблокировать коллекцию на все время перечисления.  Чтобы разрешить доступ из нескольких потоков для чтения и записи к коллекции, необходимо реализовать собственную синхронизацию.       Этот метод является операцией o(1)."
  example:
  - "The following code example demonstrates the use of the GetEnumerator method to display the contents of the <xref:System.Collections.Specialized.OrderedDictionary> collection to the console. In this example, the GetEnumerator method is used to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/cpp/m-system.collections.spe_30_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/csharp/m-system.collections.spe_30_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#03](~/add/codesnippet/visualbasic/m-system.collections.spe_30_1.vb)]  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/cpp/m-system.collections.spe_30_2.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/csharp/m-system.collections.spe_30_2.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#05](~/add/codesnippet/visualbasic/m-system.collections.spe_30_2.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "<xref:System.Collections.IDictionaryEnumerator>Для объекта <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.OrderedDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Реализует <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> интерфейса и возвращает данные, необходимые для сериализации <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> объект, содержащий сведения, необходимые для сериализации <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Объект <xref:System.Runtime.Serialization.StreamingContext>объект, содержащий источник и назначение сериализованного потока, связанного с <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Collections.Specialized.OrderedDictionary.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  id: Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Insert(Int32,Object,Object)
  nameWithType: OrderedDictionary.Insert(Int32,Object,Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Insert(Int32,Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Вставляет новую запись в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции с указанным ключом и значением по указанному индексу."
  remarks: "Если `index` параметр равен числу записей в <xref:System.Collections.Specialized.OrderedDictionary>коллекции, `key` и `value` параметры добавляются в конец коллекции.</xref:System.Collections.Specialized.OrderedDictionary>       Следующие за точкой вставки элементы перемещаются вниз для учетом новой записи, индексы перемещенных элементов также обновляются."
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Insert method is used to add a new entry to the beginning of the <xref:System.Collections.Specialized.OrderedDictionary>, moving the rest of the entries down. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/56e5bd9c-eb97-4216-b76d-_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/56e5bd9c-eb97-4216-b76d-_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/56e5bd9c-eb97-4216-b76d-_1.vb)]"
  syntax:
    content: public void Insert (int index, object key, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому следует вставить элемент."
    - id: key
      type: System.Object
      description: "Ключ записи, которую требуется добавить."
    - id: value
      type: System.Object
      description: "Значение записи, которую требуется добавить. Значение может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>находится вне диапазона."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Эта коллекция доступна только для чтения."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: OrderedDictionary.IsReadOnly
  fullName: System.Collections.Specialized.OrderedDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция доступна только для чтения."
  remarks: "Коллекции, доступной только для чтения не разрешается добавление, изменение или удаление элементов после создания коллекции.       Коллекции, доступной только для чтения является просто коллекцией с оболочкой, запрещает любые изменения коллекции. Таким образом при внесении изменений в базовую коллекцию, доступную только для чтения коллекцию отражает эти изменения."
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the IsReadOnly property is used to determine whether the <xref:System.Collections.Specialized.OrderedDictionary> can be modified. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_7_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_7_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_7_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция доступна только для чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OrderedDictionary.Item(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает или задает значение по указанному индексу."
  remarks: "Это свойство позволяет получить доступ к указанному элементу коллекции с помощью следующего синтаксиса: `myCollection[index]`.       Ключевое слово языка C# используется для определения индексаторов вместо реализации свойства элемента. Visual Basic реализует <xref:System.Collections.Specialized.OrderedDictionary.Item%2A>как свойство по умолчанию, который предоставляет те же возможности индексирования.</xref:System.Collections.Specialized.OrderedDictionary.Item%2A>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс получаемого или задаваемого значения."
    return:
      type: System.Object
      description: "Значение элемента по указанному индексу."
  overload: System.Collections.Specialized.OrderedDictionary.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Свойство задано и <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция доступна только для чтения."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля.       - или - <code>index</code> больше или равно значению <xref:System.Collections.Specialized.OrderedDictionary.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: OrderedDictionary.Item(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает или задает значение с указанным ключом."
  remarks: "Это свойство позволяет получить доступ к указанному элементу коллекции с помощью следующего синтаксиса: `myCollection[key]`.       Можно также использовать свойство элемента для добавления новых элементов, задав значение ключа, который не существует в <xref:System.Collections.Specialized.OrderedDictionary>коллекции (например, `myCollection[&quot;myNonexistentKey&quot;] = myValue`).</xref:System.Collections.Specialized.OrderedDictionary> Тем не менее если указанный ключ уже существует в <xref:System.Collections.Specialized.OrderedDictionary>, задав свойство элемента перезаписывает прежнее значение.</xref:System.Collections.Specialized.OrderedDictionary> Напротив <xref:System.Collections.Specialized.OrderedDictionary.Add%2A>метод не изменяет существующие элементы.</xref:System.Collections.Specialized.OrderedDictionary.Add%2A>       Ключ не может быть `null`, но может быть значение. Чтобы различать `null` , возвращается, поскольку указанный ключ не найден и `null` , возвращается значение заданного ключа является `null`, используйте <xref:System.Collections.Hashtable.Contains%2A>метод, чтобы определить, если ключ присутствует в списке <xref:System.Collections.Specialized.OrderedDictionary>.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Hashtable.Contains%2A>"
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Item property is used to modify the dictionary entry with the key `\"testKey2\"`. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/p-system.collections.spe_24_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/p-system.collections.spe_24_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/p-system.collections.spe_24_1.vb)]"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Ключ, значение которого требуется получить или задать."
    return:
      type: System.Object
      description: "Значение, связанное с указанным ключом. Если указанный ключ не найден, при попытке его получения возвращается <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, и попытке задания создается новый элемент, используя указанный ключ."
  overload: System.Collections.Specialized.OrderedDictionary.Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Свойство задано и <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекция доступна только для чтения."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: OrderedDictionary.Keys
  fullName: System.Collections.Specialized.OrderedDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает <xref:System.Collections.ICollection>объект, содержащий ключи в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.ICollection>"
  remarks: "Возвращенный <xref:System.Collections.ICollection>объект не является статической копией; вместо этого <xref:System.Collections.ICollection>ссылается на ключи в исходной коллекции <xref:System.Collections.Specialized.OrderedDictionary>коллекции.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Таким образом изменения <xref:System.Collections.Specialized.OrderedDictionary>будут отражены в <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> по-прежнему</xref:System.Collections.Specialized.OrderedDictionary>"
  example:
  - "The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection, and then prints the contents to the console. In this example, the Keys and <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/p-system.collections.spe_19_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/p-system.collections.spe_19_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/p-system.collections.spe_19_1.vb)]  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/cpp/p-system.collections.spe_19_2.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/csharp/p-system.collections.spe_19_2.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/visualbasic/p-system.collections.spe_19_2.vb)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Объект, содержащий ключи в <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.OrderedDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: OrderedDictionary.OnDeserialization(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.OnDeserialization(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Реализует <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> интерфейса и вызывается событием десериализации после завершения десериализации."
  remarks: "Этот метод может быть переопределен."
  syntax:
    content: protected virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события десериализации."
  overload: System.Collections.Specialized.OrderedDictionary.OnDeserialization*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Объект, связанный с текущим <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции является недопустимым."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: OrderedDictionary.Remove(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Удаляет запись с указанным ключом из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  remarks: "Записи, следующие за удаленной записью до перемещения занимают освободившееся место и индексы записей, которые перемещают также обновляются.       Если <xref:System.Collections.Specialized.OrderedDictionary>Коллекция не содержит запись с указанным ключом, <xref:System.Collections.Specialized.OrderedDictionary>не изменяется и исключение не возникает.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.Specialized.OrderedDictionary>"
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the Remove method is used to remove the entry with the key `\"keyToDelete\"` from the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_36_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_36_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_36_1.vb)]"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Ключ записи, которую требуется удалить."
  overload: System.Collections.Specialized.OrderedDictionary.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> Коллекция доступна только для чтения."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: OrderedDictionary.RemoveAt(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Удаляет элемент по указанному индексу из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции."
  remarks: "Записи, следующие за удаленной записью до перемещения занимают освободившееся место и индексы записей, которые перемещают также обновляются."
  example:
  - "The following code example demonstrates the modification of an <xref:System.Collections.Specialized.OrderedDictionary> collection. In this example, the RemoveAt method is used with the <xref:System.Collections.Specialized.OrderedDictionary.Count%2A> property to remove the last entry from the <xref:System.Collections.Specialized.OrderedDictionary>. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/cpp/m-system.collections.spe_33_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/csharp/m-system.collections.spe_33_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#02](~/add/codesnippet/visualbasic/m-system.collections.spe_33_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс записи, которую требуется удалить."
  overload: System.Collections.Specialized.OrderedDictionary.RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> Коллекция доступна только для чтения."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Collections.Specialized.OrderedDictionary.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает значение, указывающее, является ли доступ к <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> объекта является синхронизированным (потокобезопасным)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Этот метод всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> объекта."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> объекта."
  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> имеет фиксированный размер."
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> имеет фиксированный размер; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает <xref:System.Collections.IDictionaryEnumerator>объект, который осуществляет итерацию по <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.IDictionaryEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IDictionaryEnumerator>Для объекта <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Реализует <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> интерфейса и вызывается событием десериализации после завершения десериализации."
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события десериализации."
  overload: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.OrderedDictionary.Values
  id: Values
  parent: System.Collections.Specialized.OrderedDictionary
  langs:
  - csharp
  name: Values
  nameWithType: OrderedDictionary.Values
  fullName: System.Collections.Specialized.OrderedDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Возвращает <xref:System.Collections.ICollection>объект, содержащий значения из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.ICollection>"
  remarks: "Возвращенный <xref:System.Collections.ICollection>объект не является статической копией; вместо этого <xref:System.Collections.ICollection>ссылается на значения в исходном <xref:System.Collections.Specialized.OrderedDictionary>коллекции.</xref:System.Collections.Specialized.OrderedDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Таким образом изменения <xref:System.Collections.Specialized.OrderedDictionary>будут отражены в <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> по-прежнему</xref:System.Collections.Specialized.OrderedDictionary>"
  example:
  - "The following code example demonstrates the creation and population of an <xref:System.Collections.Specialized.OrderedDictionary> collection, and then prints the contents to the console. In this example, the <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> and Values properties are passed to a method that displays the contents. This code is part of a larger code example that can be viewed at <xref:System.Collections.Specialized.OrderedDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/cpp/p-system.collections.spe_21_1.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/csharp/p-system.collections.spe_21_1.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#01](~/add/codesnippet/visualbasic/p-system.collections.spe_21_1.vb)]  \n  \n [!code-cpp[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/cpp/p-system.collections.spe_21_2.cpp)]\n [!code-cs[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/csharp/p-system.collections.spe_21_2.cs)]\n [!code-vb[System.Collections.Specialized.OrderedDictionary1#04](~/add/codesnippet/visualbasic/p-system.collections.spe_21_2.vb)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Объект, содержащий значения из <xref href=&quot;System.Collections.Specialized.OrderedDictionary&quot;> </xref> коллекции.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.OrderedDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Collections.Specialized.OrderedDictionary.#ctor
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary()
  nameWithType: OrderedDictionary.OrderedDictionary()
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary()
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary(IEqualityComparer)
  nameWithType: OrderedDictionary.OrderedDictionary(IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary(Int32)
  nameWithType: OrderedDictionary.OrderedDictionary(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary(Int32,IEqualityComparer)
  nameWithType: OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(Int32,IEqualityComparer)
- uid: System.Collections.Specialized.OrderedDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary(SerializationInfo,StreamingContext)
  nameWithType: OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.OrderedDictionary.OrderedDictionary(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: OrderedDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Add(Object,Object)
- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: AsReadOnly()
  nameWithType: OrderedDictionary.AsReadOnly()
  fullName: System.Collections.Specialized.OrderedDictionary.AsReadOnly()
- uid: System.Collections.Specialized.OrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: OrderedDictionary
  nameWithType: OrderedDictionary
  fullName: System.Collections.Specialized.OrderedDictionary
- uid: System.Collections.Specialized.OrderedDictionary.Clear
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Clear()
  nameWithType: OrderedDictionary.Clear()
  fullName: System.Collections.Specialized.OrderedDictionary.Clear()
- uid: System.Collections.Specialized.OrderedDictionary.Contains(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: OrderedDictionary.Contains(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: OrderedDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.OrderedDictionary.Count
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Count
  nameWithType: OrderedDictionary.Count
  fullName: System.Collections.Specialized.OrderedDictionary.Count
- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: OrderedDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Specialized.OrderedDictionary.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Insert(Int32,Object,Object)
  nameWithType: OrderedDictionary.Insert(Int32,Object,Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Insert(Int32,Object,Object)
- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: OrderedDictionary.IsReadOnly
  fullName: System.Collections.Specialized.OrderedDictionary.IsReadOnly
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Item(Int32)
  nameWithType: OrderedDictionary.Item(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.Item(Int32)
- uid: System.Collections.Specialized.OrderedDictionary.Item(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: OrderedDictionary.Item(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Item(Object)
- uid: System.Collections.Specialized.OrderedDictionary.Keys
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Keys
  nameWithType: OrderedDictionary.Keys
  fullName: System.Collections.Specialized.OrderedDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: OrderedDictionary.OnDeserialization(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.OnDeserialization(Object)
- uid: System.Collections.Specialized.OrderedDictionary.Remove(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: OrderedDictionary.Remove(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.Remove(Object)
- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: OrderedDictionary.RemoveAt(Int32)
  fullName: System.Collections.Specialized.OrderedDictionary.RemoveAt(Int32)
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Collections.Specialized.OrderedDictionary.Values
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Values
  nameWithType: OrderedDictionary.Values
  fullName: System.Collections.Specialized.OrderedDictionary.Values
- uid: System.Collections.Specialized.OrderedDictionary.#ctor*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OrderedDictionary
  nameWithType: OrderedDictionary.OrderedDictionary
- uid: System.Collections.Specialized.OrderedDictionary.Add*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Add
  nameWithType: OrderedDictionary.Add
- uid: System.Collections.Specialized.OrderedDictionary.AsReadOnly*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: AsReadOnly
  nameWithType: OrderedDictionary.AsReadOnly
- uid: System.Collections.Specialized.OrderedDictionary.Clear*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Clear
  nameWithType: OrderedDictionary.Clear
- uid: System.Collections.Specialized.OrderedDictionary.Contains*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Contains
  nameWithType: OrderedDictionary.Contains
- uid: System.Collections.Specialized.OrderedDictionary.CopyTo*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: CopyTo
  nameWithType: OrderedDictionary.CopyTo
- uid: System.Collections.Specialized.OrderedDictionary.Count*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Count
  nameWithType: OrderedDictionary.Count
- uid: System.Collections.Specialized.OrderedDictionary.GetEnumerator*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: OrderedDictionary.GetEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.GetObjectData*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: GetObjectData
  nameWithType: OrderedDictionary.GetObjectData
- uid: System.Collections.Specialized.OrderedDictionary.Insert*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Insert
  nameWithType: OrderedDictionary.Insert
- uid: System.Collections.Specialized.OrderedDictionary.IsReadOnly*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: OrderedDictionary.IsReadOnly
- uid: System.Collections.Specialized.OrderedDictionary.Item*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Item
  nameWithType: OrderedDictionary.Item
- uid: System.Collections.Specialized.OrderedDictionary.Keys*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Keys
  nameWithType: OrderedDictionary.Keys
- uid: System.Collections.Specialized.OrderedDictionary.OnDeserialization*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: OnDeserialization
  nameWithType: OrderedDictionary.OnDeserialization
- uid: System.Collections.Specialized.OrderedDictionary.Remove*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Remove
  nameWithType: OrderedDictionary.Remove
- uid: System.Collections.Specialized.OrderedDictionary.RemoveAt*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: RemoveAt
  nameWithType: OrderedDictionary.RemoveAt
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: OrderedDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: OrderedDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: OrderedDictionary.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: OrderedDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.OrderedDictionary.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.Collections.Specialized.OrderedDictionary.Values*
  parent: System.Collections.Specialized.OrderedDictionary
  isExternal: false
  name: Values
  nameWithType: OrderedDictionary.Values
