### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "Представляет элемент управления доступом и аудита безопасности для файла или каталога."
  remarks: "Класс FileSystemSecurity является базовым классом для <xref:System.Security.AccessControl.FileSecurity>и <xref:System.Security.AccessControl.DirectorySecurity>классы.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Эти классы представляют все права доступа для системного файла или каталога и определить, как попытки доступа подлежат аудиту.       Класс FileSystemSecurity представляет права доступа и аудита в виде набора правил. Каждое правило доступа представлена <xref:System.Security.AccessControl.FileSystemAccessRule>, пока объект представляется каждого правила аудита <xref:System.Security.AccessControl.FileSystemAuditRule>объекта.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Класс FileSystemSecurity является абстракцией базовой файловой системы безопасности Microsoft Windows. В этой системе каждый файл или каталог имеет список управления доступом (DACL), который контролирует доступ к файлу или каталогу, и системы управления доступом (SACL), в котором определяются попытки доступа элемента управления, подлежащие аудиту.  <xref:System.Security.AccessControl.FileSystemAccessRule>И <xref:System.Security.AccessControl.FileSystemAuditRule>классы, абстрактные классы элементов управления доступом (ACE), составляющих списки DACL и SACL.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Класс FileSystemSecurity скрывает многие детали списки DACL и SACL; не нужно беспокоиться об упорядочивании ACE или нулевой DACL.       Чтобы сохранить сведения о списка управления Доступом управления доступом новые или измененные в файл, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Возвращает перечисление, которое <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> класс использует для представления права доступа."
  remarks: "Классы, производные от <xref:System.Security.AccessControl.FileSystemSecurity>класса переопределите это свойство AccessRightType и возвращаемый тип, они используют для представления права доступа.</xref:System.Security.AccessControl.FileSystemSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объект, представляющий <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> перечисления.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> класс, представляющий новое правило управления доступом для указанного пользователя, с заданными правами доступа, управление доступом и флаги."
  remarks: "Для создания правила управления доступом рекомендуется использовать конструкторы <xref:System.Security.AccessControl.FileSystemAccessRule>класса.</xref:System.Security.AccessControl.FileSystemAccessRule>       Тип возвращаемого значения метода AccessRuleFactory является базовым классом, <xref:System.Security.AccessControl.AccessRule>, но возвращаемое значение может быть безопасно приведено к производного класса.</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Объект, который представляет учетную запись пользователя."
    - id: accessMask
      type: System.Int32
      description: "Целое число, задающее тип доступа."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если правило доступа наследуется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> значений, определяющих способ распространения маски доступа к дочерним объектам."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> значений, определяющих способ распространяемых элементов управления доступом (ACE) на дочерние объекты."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Один из <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> значений, определяющее, является ли доступ разрешен или запрещен."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Новый <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> объект, представляющий новое правило управления доступом для указанного пользователя, с заданными правами доступа, управление доступом и флаги."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code> accessMask </code> параметра равно нулю."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Параметр не является типом <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, ни тип, такой как <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> может привести к типу <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Возвращает перечисление, которое <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> класс использует для представления правила доступа."
  remarks: "Классы, производные от <xref:System.Security.AccessControl.FileSystemSecurity>класса переопределите это свойство AccessRuleType и возвращаемый тип, они используют для представления правила доступа.</xref:System.Security.AccessControl.FileSystemSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила доступа подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> класса</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Добавляет указанное разрешение списка управления Доступом к текущему файлу или каталогу."
  remarks: "Метод AddAccessRule добавляет новое правило в список правил, содержащихся в <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity>       Если список управления доступом (ACL) для указанное правило уже существует, метод AddAccessRule по-прежнему добавить правило, за одним исключением: <xref:System.Security.AccessControl.FileSystemAccessRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение перечисления имеет приоритет над объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение перечисления.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       Чтобы сохранить новые или измененные данные списка управления Доступом для файла, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       При добавлении правило доступа без параметра <xref:System.Security.AccessControl.FileSystemRights>флаг <xref:System.Security.AccessControl.FileSystemRights>флаг будет автоматически добавлен в правило.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если позднее удалить правило без указания <xref:System.Security.AccessControl.FileSystemRights>флаг флаг будут автоматически удалены.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> , представляющий список управления Доступом разрешение для добавления в файл или каталог."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Добавляет указанное правило аудита для текущего файла или каталога."
  remarks: "Метод AddAuditRule добавляет новое правило аудита в список правил, содержащихся в <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity>       Если правила аудита для указанного правила уже существует, метод AddAuditRule по-прежнему будет добавить правило."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> , представляющий правило аудита, чтобы добавить к файлу или каталогу."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> класс, представляющий указанное правило аудита для указанного пользователя."
  remarks: "Для создания правила аудита рекомендуется использовать конструкторы <xref:System.Security.AccessControl.FileSystemAuditRule>класса.</xref:System.Security.AccessControl.FileSystemAuditRule>       Тип возвращаемого значения метода AuditRuleFactory является базовым классом, <xref:System.Security.AccessControl.AuditRule>, но возвращаемое значение может быть безопасно приведено к производного класса.</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> Объект, который представляет учетную запись пользователя."
    - id: accessMask
      type: System.Int32
      description: "Целое число, задающее тип доступа."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если правило доступа наследуется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> значений, определяющих способ распространения маски доступа к дочерним объектам."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> значений, определяющих способ распространяемых элементов управления доступом (ACE) на дочерние объекты."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> значения, которое указывает тип аудита для выполнения."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Новый <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> объект, представляющий указанное правило аудита для указанного пользователя."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code> accessMask </code> свойство имеет значение&0;."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Свойство не является типом <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, ни тип, такой как <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> может привести к типу <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Получает тип, <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> класс использует для представления правила аудита."
  remarks: "Классы, производные от <xref:System.Security.AccessControl.FileSystemSecurity>класса переопределите это свойство AuditRuleType и возвращаемый тип, они используют для представления права аудита.</xref:System.Security.AccessControl.FileSystemSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения тип правила аудита подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> класса</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет все подходящие разрешить или запретить доступ списка управления Доступом из текущего файла или каталога."
  remarks: "Метод RemoveAccessRule удаляет все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа или все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа, из текущего <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, этот метод можно использовать для удаления всех <xref:System.Security.AccessControl.AccessControlType>правила доступа для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAccessRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение <xref:System.Security.AccessControl.FileSystemRights>значение и учетной записи пользователя.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAccessRule удаляет все правила deny, укажите <xref:System.Security.AccessControl.FileSystemRights>значение или <xref:System.Security.AccessControl.FileSystemRights>значение.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       Чтобы сохранить сведения о списка управления Доступом управления доступом новые или измененные в файл, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       При добавлении правило доступа без параметра <xref:System.Security.AccessControl.FileSystemRights>флаг <xref:System.Security.AccessControl.FileSystemRights>флаг будет автоматически добавлен в правило.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если позднее удалить правило без указания <xref:System.Security.AccessControl.FileSystemRights>флаг флаг будут автоматически удалены.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> , представляющий список управления Доступом разрешение для удаления из файла или каталога."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если правила доступа был удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет все разрешения списка управления Доступом управления доступа для указанного пользователя из текущего файла или каталога."
  remarks: "Метод RemoveAccessRuleAll удаляет все разрешения списка управления Доступом управления доступом для указанного пользователя.  Этот метод игнорирует все значения в <xref:System.Security.AccessControl.FileSystemAccessRule>объекта, за исключением учетной записи пользователя.</xref:System.Security.AccessControl.FileSystemAccessRule>       Чтобы сохранить новые или измененные данные списка управления Доступом для файла, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       При добавлении правило доступа без параметра <xref:System.Security.AccessControl.FileSystemRights>флаг <xref:System.Security.AccessControl.FileSystemRights>флаг будет автоматически добавлен в правило.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если позднее удалить правило без указания <xref:System.Security.AccessControl.FileSystemRights>флаг флаг будут автоматически удалены.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> , указывающий пользователя, список управления Доступом разрешения управления доступом на уровне которого следует удалить из файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет одно подходящее разрешение или запрет разрешение списка управления Доступом из текущего файла или каталога."
  remarks: "Удаляет указанный метод RemoveAccessRuleSpecific <xref:System.Security.AccessControl.AccessControlType>доступ к указанным соответствия или правило <xref:System.Security.AccessControl.AccessControlType>правило доступа из текущего <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, можно использовать этот метод для удаления указанного <xref:System.Security.AccessControl.AccessControlType>правила доступа для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAccessRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение, <xref:System.Security.AccessControl.FileSystemRights>значение и учетной записи пользователя.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAccessRuleSpecific удаляет только запрещающее правило, которое указывает, <xref:System.Security.AccessControl.FileSystemRights>значение.</xref:System.Security.AccessControl.FileSystemRights>  Не удаляет любые deny правила, определяющие, <xref:System.Security.AccessControl.FileSystemRights>значение.</xref:System.Security.AccessControl.FileSystemRights>       Чтобы сохранить сведения о списка управления Доступом управления доступом новые или измененные в файл, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       При добавлении правило доступа без параметра <xref:System.Security.AccessControl.FileSystemRights>флаг <xref:System.Security.AccessControl.FileSystemRights>флаг будет автоматически добавлен в правило.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если позднее удалить правило без указания <xref:System.Security.AccessControl.FileSystemRights>флаг флаг будут автоматически удалены.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> , указывающий пользователя, список управления Доступом разрешения управления доступом на уровне которого следует удалить из файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет все подходящие разрешение или запрет правила аудита из текущего файла или каталога."
  remarks: "Метод RemoveAuditRule удаляет все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила аудита или все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила аудита из текущего <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, этот метод можно использовать для удаления всех <xref:System.Security.AccessControl.AccessControlType>правил аудита для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAuditRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение, <xref:System.Security.AccessControl.AuditFlags>значение и учетной записи пользователя.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAuditRule удаляет все правила deny, укажите <xref:System.Security.AccessControl.AuditFlags>значение или <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> , представляющий правило аудита, чтобы удалить из файла или каталога."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если правила аудита был удален. в противном случае<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет все правила аудита для указанного пользователя из текущего файла или каталога."
  remarks: "Метод RemoveAuditRuleAll удаляет все правила аудита для указанного пользователя.  Игнорирует все значения в <xref:System.Security.AccessControl.FileSystemAuditRule>объекта, за исключением учетной записи пользователя.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> , указывающий пользователя, чьи правила аудита следует удалить из файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Удаляет одно подходящее разрешение или запрет правила аудита из текущего файла или каталога."
  remarks: "Метод RemoveAuditRuleSpecific Удаляет указанный сопоставления <xref:System.Security.AccessControl.AccessControlType>аудита указанного соответствия или правило <xref:System.Security.AccessControl.AccessControlType>правила аудита из текущего <xref:System.Security.AccessControl.FileSystemSecurity>объекта.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, можно использовать этот метод для удаления указанного <xref:System.Security.AccessControl.AccessControlType>правило аудита для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAuditRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение, <xref:System.Security.AccessControl.AuditFlags>значение и учетной записи пользователя.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAuditRuleSpecific удаляет только запрещающее правило, которое указывает <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags>  Не удаляет любые deny правила, определяющие <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> , представляющий правило аудита, чтобы удалить из файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Добавляет указанное разрешение списка управления Доступом к текущему файлу или каталогу и удаляет все сопоставления разрешения списка управления Доступом."
  remarks: "Метод ResetAccessRule добавляет правило списка управления Доступом управления указанным доступом или перезаписывает все одинаковые правила списка управления Доступом, соответствующие `rule` параметра.  Например если `rule` указывает <xref:System.Security.AccessControl.FileSystemRights>значение, а также метод ResetAccessRule находит идентичного правила списка управления Доступом, указывающее <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если метод ResetAccessRule находит идентичного правила списка управления Доступом, указывающий <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила также будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights>       Чтобы сохранить новые или измененные данные списка управления Доступом для файла, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> , представляющий список управления Доступом разрешение для добавления в файл или каталог."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Задает указанный доступ (ACL) разрешение списка для текущего файла или каталога."
  remarks: "Метод SetAccessRule добавляет правило списка управления Доступом управления указанным доступом или перезаписывает все одинаковые правила списка управления Доступом, соответствующие <xref:System.Security.AccessControl.FileSystemRights>значение `rule` параметр.</xref:System.Security.AccessControl.FileSystemRights>  Например если `rule` указывает <xref:System.Security.AccessControl.FileSystemRights>значение и метод SetAccessRule находит идентичного правила списка управления Доступом, указывающее <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если метод SetAccessRule находит идентичного правила списка управления Доступом, указывающий <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила не будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights>       Чтобы сохранить новые или измененные данные списка управления Доступом для файла, используйте <xref:System.IO.File.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте <xref:System.IO.Directory.SetAccessControl%2A>или <xref:System.IO.FileInfo.SetAccessControl%2A>метод.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Получить информацию ACL из файла с помощью <xref:System.IO.File.GetAccessControl%2A>или <xref:System.IO.FileInfo.GetAccessControl%2A>метод.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Чтобы получить информацию ACL из каталога, используйте <xref:System.IO.Directory.GetAccessControl%2A>или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>метод.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> объект, который представляет список управления Доступом разрешение должно быть задано для файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Задает указанное правило аудита для текущего файла или каталога."
  remarks: "Метод SetAuditRule добавляет указанное правило аудита или перезаписывает все правила аудита идентичными, соответствующих <xref:System.Security.AccessControl.FileSystemRights>значение `rule` параметр.</xref:System.Security.AccessControl.FileSystemRights>  Например если `rule` указывает <xref:System.Security.AccessControl.FileSystemRights>значение, а также метод SetAuditRule находит правило идентичные аудита, указывающее <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Если метод SetAuditRule находит правило аудита идентичными, указывающий <xref:System.Security.AccessControl.FileSystemRights>значения, идентичного правила не будут перезаписаны.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Объект <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> , представляющий правило аудита для файла или каталога."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
