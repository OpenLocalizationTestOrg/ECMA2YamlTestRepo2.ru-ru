### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Keyboard
  id: Keyboard
  children:
  - Microsoft.VisualBasic.Devices.Keyboard.#ctor
  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.NumLock
  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  langs:
  - csharp
  name: Keyboard
  nameWithType: Keyboard
  fullName: Microsoft.VisualBasic.Devices.Keyboard
  type: Class
  summary: "Предоставляет свойства для получения текущего состояния клавиатуры, что ключи в настоящее время нажаты и предоставляет метод для отправки нажатий клавиш активному окну."
  remarks: "`My.Computer.Keyboard` Объект предоставляет интерфейс для клавиатуры компьютера. Свойства `My.Computer.Keyboard` предоставляют сведения о состоянии нескольких специальных клавиш. `My.Computer.Keyboard.SendKeys` Позволяет Отправка сочетания клавиш в активное окно, как если бы они были вводятся с клавиатуры.      ## Задачи в следующей таблице перечислены задачи с использованием пример `My.Computer.Keyboard` объекта.      |||   |-|-|   | Чтобы | См. |   | Отправить нажатия клавиш приложению | [Как: запуск приложения и отправка ему нажатий клавиш (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \n  \n [!code-vb[VbVbalrMyComputer#36](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#36)]"
  syntax:
    content: public class Keyboard
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.Devices.Keyboard&quot;> </xref> класса."
  syntax:
    content: public Keyboard ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  id: AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, нажата ли клавиша ALT."
  remarks: "`My.Computer.Keyboard.AltKeyDown` Свойство предоставляет функциональность, аналогичную <xref:System.Windows.Forms.Control.ModifierKeys%2A>свойство.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \n  \n [!code-vb[VbVbalrMyComputer#23](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#23)]"
  syntax:
    content: public bool AltKeyDown { get; }
    return:
      type: System.Boolean
      description: 'Объект <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значение: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если клавиша ALT является вниз; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  id: CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, если режим CAPS LOCK включен."
  remarks: "Возвращается только состояние CAPS LOCK.      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \n  \n [!code-vb[VbVbalrMyComputer#50](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#50)]"
  syntax:
    content: public bool CapsLock { get; }
    return:
      type: System.Boolean
      description: 'Объект <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значение: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Если режим CAPS LOCK включен; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  id: CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, нажата ли клавиша CTRL."
  remarks: "`My.Computer.Keyboard.CtrlKeyDown` Свойство предоставляет функциональность, аналогичную <xref:System.Windows.Forms.Control.ModifierKeys%2A>свойство.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \n  \n [!code-vb[VbVbalrMyComputer#34](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#34)]"
  syntax:
    content: public bool CtrlKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если нажата клавиша CTRL; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  id: NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, включено ли клавиша NUM LOCK."
  remarks: "Возвращается только состояние клавиша NUM LOCK.      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#48](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#48)]"
  syntax:
    content: public bool NumLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если режим NUM LOCK включен; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  id: ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, включен ли клавиша SCROLL LOCK."
  remarks: "Возвращается только состояние клавиши SCROLL LOCK.      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#31](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#31)]"
  syntax:
    content: public bool ScrollLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если SCROLL LOCK включен; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  id: SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Отправляет один или несколько нажатий клавиш в активное окно, как при вводе с клавиатуры."
  remarks: "`My.Computer.Keyboard.SendKeys` Метод предоставляет функциональные возможности, аналогичные <xref:System.Windows.Forms.SendKeys.Send%2A>и <xref:System.Windows.Forms.SendKeys.SendWait%2A>методы.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       `wait` Аргумент является полезным, если другое приложение необходимо завершить перед продолжением приложения.      Настроек [!NOTE] настроек отсутствия управляемого метода активации другого приложения можно использовать этот класс в текущем приложении, вручную выберите окно для отправки с помощью клавиш или использование методов Windows API, таких как `FindWindow` и `SetForegroundWindow`, для принудительной установки фокуса на другие приложения. Дополнительные сведения см. в разделе [Пошаговое руководство: вызов API Windows](~/add/includes/ajax-current-ext-md.md).       `keys` Аргумента можно указать любую или ни с одним ключом в сочетании с ALT, CTRL или SHIFT (или любое сочетание этих ключей). Каждый ключ представлен один или несколько символов, таких как `a` для символа «», или `{ENTER}` для клавишу ВВОД.       Объединяемый клавиши SHIFT, перед названием клавиши с `+` (плюс). Для объединения ключ, нажмите сочетание клавиш CTRL, перед кодом клавиши `^` (курсора). Для объединения ключ с ALT, перед кодом клавиши `%` (знак процента). Для указания повторяющихся ключей, используйте форму `{` *ключа номер*`}`. Должен стоять пробел между *ключ* и *номер*. Например `{LEFT 42}` означает «нажмите клавишу со стрелкой влево 42 раза»; `{h 10}` означает «нажмите кнопку «h» 10 раз.»       В следующей таблице перечислены коды, которые можно использовать для указания знаков, которые не отображаются при нажатии клавиши соответствующий ключ (например, ввод или TAB).      |||   |-|-|   | Ключ | Код |   | СТИРАНИЕ НАЗАД | {BACKSPACE} или {BS} |   | ПРЕРВАТЬ | {ПРЕРВАТЬ} |   | РЕЖИМ CAPS LOCK | {CAPSLOCK} |   | ОЧИСТИТЬ | {ОЧИСТИТЬ} |   | УДАЛИТЬ | {Удаление} или {DEL} |   | СТРЕЛКА ВНИЗ | {ВНИЗ} |   | КОНЕЦ | {КОНЕЦ} |   | Ввод (цифровой клавишной панели) | {ВВЕДИТЕ} |   | ВВЕДИТЕ | ~ |   | ESC | {ESCAPE-} или {ESC} |   | СПРАВКА | {СПРАВКА} |   | ГЛАВНАЯ | {ГЛАВНАЯ} |   | МОДУЛИ | {ВСТАВИТЬ} |   | СТРЕЛКА ВЛЕВО | {LEFT} |   | NUM LOCK | {NUMLOCK} |   | PAGE DOWN | {PGDN} |   | СТРАНИЦУ ВВЕРХ | {PGUP} |   | ВОЗВРАЩАТЬ | {ВОЗВРАЩАЮТ} |   | СТРЕЛКА ВПРАВО | {СПРАВА} |   | SCROLL LOCK | {SCROLLLOCK} |   | ВКЛАДКА | {ВКЛАДКИ} |   | СТРЕЛКА ВВЕРХ | {ДО} |   | F1 до F15 | {F1} до {F15} |      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "Объект <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> , определяет ключи для отправки."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Существует ситуации частичного доверия, в которой у пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  id: SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Отправляет один или несколько нажатий клавиш в активное окно, как при вводе с клавиатуры."
  remarks: "`My.Computer.Keyboard.SendKeys` Метод предоставляет функциональные возможности, аналогичные <xref:System.Windows.Forms.SendKeys.Send%2A>и <xref:System.Windows.Forms.SendKeys.SendWait%2A>методы.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       `wait` Аргумент является полезным, если другое приложение необходимо завершить перед продолжением приложения.      Настроек [!NOTE] настроек отсутствия управляемого метода активации другого приложения можно использовать этот класс в текущем приложении, вручную выберите окно для отправки с помощью клавиш или использование методов Windows API, таких как `FindWindow` и `SetForegroundWindow`, для принудительной установки фокуса на другие приложения. Дополнительные сведения см. в разделе [Пошаговое руководство: вызов API Windows](~/add/includes/ajax-current-ext-md.md).       `keys` Аргумента можно указать любую или ни с одним ключом в сочетании с ALT, CTRL или SHIFT (или любое сочетание этих ключей). Каждый ключ представлен один или несколько символов, таких как `a` для символа «», или `{ENTER}` для клавишу ВВОД.       Объединяемый клавиши SHIFT, перед названием клавиши с `+` (плюс). Для объединения ключ, нажмите сочетание клавиш CTRL, перед кодом клавиши `^` (курсора). Для объединения ключ с ALT, перед кодом клавиши `%` (знак процента). Для указания повторяющихся ключей, используйте форму `{` *ключа номер*`}`. Должен стоять пробел между *ключ* и *номер*. Например `{LEFT 42}` означает «нажмите клавишу со стрелкой влево 42 раза»; `{h 10}` означает «нажмите кнопку «h» 10 раз.»       В следующей таблице перечислены коды, которые можно использовать для указания знаков, которые не отображаются при нажатии клавиши соответствующий ключ (например, ввод или TAB).      |||   |-|-|   | Ключ | Код |   | СТИРАНИЕ НАЗАД | {BACKSPACE} или {BS} |   | ПРЕРВАТЬ | {ПРЕРВАТЬ} |   | РЕЖИМ CAPS LOCK | {CAPSLOCK} |   | ОЧИСТИТЬ | {ОЧИСТИТЬ} |   | УДАЛИТЬ | {Удаление} или {DEL} |   | СТРЕЛКА ВНИЗ | {ВНИЗ} |   | КОНЕЦ | {КОНЕЦ} |   | Ввод (цифровой клавишной панели) | {ВВЕДИТЕ} |   | ВВЕДИТЕ | ~ |   | ESC | {ESCAPE-} или {ESC} |   | СПРАВКА | {СПРАВКА} |   | ГЛАВНАЯ | {ГЛАВНАЯ} |   | МОДУЛИ | {ВСТАВИТЬ} |   | СТРЕЛКА ВЛЕВО | {LEFT} |   | NUM LOCK | {NUMLOCK} |   | PAGE DOWN | {PGDN} |   | СТРАНИЦУ ВВЕРХ | {PGUP} |   | ВОЗВРАЩАТЬ | {ВОЗВРАЩАЮТ} |   | СТРЕЛКА ВПРАВО | {СПРАВА} |   | SCROLL LOCK | {SCROLLLOCK} |   | ВКЛАДКА | {ВКЛАДКИ} |   | СТРЕЛКА ВВЕРХ | {ДО} |   | F1 до F15 | {F1} до {F15} |      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys, bool wait);
    parameters:
    - id: keys
      type: System.String
      description: "Объект <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> , определяет ключи для отправки."
    - id: wait
      type: System.Boolean
      description: "Необязательный параметр. Объект <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывает, следует ли ожидать нажатия клавиш будут обработаны, прежде чем приложение продолжит работу. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>по умолчанию."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Существует ситуации частичного доверия, в которой у пользователя отсутствуют необходимые разрешения."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  id: ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Возвращает <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> , указывающее, нажата ли клавиша SHIFT."
  remarks: "`My.Computer.Keyboard.ShiftKeyDown` Свойство предоставляет функциональность, аналогичную <xref:System.Windows.Forms.Control.ModifierKeys%2A>свойство.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | Не |   | Служба Windows | **Yes**|   | Веб-сайта | Не |"
  example:
  - "This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \n  \n [!code-vb[VbVbalrMyComputer#47](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#47)]"
  syntax:
    content: public bool ShiftKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если нажата клавиша SHIFT; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard
  nameWithType: Keyboard.Keyboard
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys
  nameWithType: Keyboard.SendKeys
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
