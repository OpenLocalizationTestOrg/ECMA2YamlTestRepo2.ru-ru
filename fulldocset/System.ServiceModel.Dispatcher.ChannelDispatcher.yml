### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher
  id: ChannelDispatcher
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  langs:
  - csharp
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher
  type: Class
  summary: "Компонент, который принимает каналы и связывает их со службой."
  remarks: "Связывает объект ChannelDispatcher <xref:System.ServiceModel.Channels.IChannelListener>по определенному URI (называемые URI прослушивания) с экземпляром службы.</xref:System.ServiceModel.Channels.IChannelListener> Каждый <xref:System.ServiceModel.ServiceHost>объект может иметь множество объектов ChannelDispatcher, каждый связанный со своим прослушивателем и URI прослушивания для данной службы.</xref:System.ServiceModel.ServiceHost>       По прибытии сообщения ChannelDispatcher запрашивает все связанные <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>объекты, является ли конечная точка принять это сообщение и передает сообщение с тем, что can.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher> <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>Объект отвечает за обработку сообщений от ChannelDispatcher, если адрес назначения сообщения соответствует <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>свойство и действие сообщения соответствует <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>свойство.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher>       Все свойства, которые управляют временем существования и поведением сеанса канала доступны для проверки или изменения в объект ChannelDispatcher. В дополнение к <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, к ним относятся пользовательские <xref:System.ServiceModel.Dispatcher.IChannelInitializer>объектов, <xref:System.ServiceModel.Channels.IChannelListener>, <xref:System.ServiceModel.ServiceHost>, соответствующего и <xref:System.ServiceModel.InstanceContext>.</xref:System.ServiceModel.InstanceContext> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.IChannelInitializer> </xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#0](~/add/codesnippet/csharp/t-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_0_1.vb)]
  syntax:
    content: 'public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> класса."
  remarks: "Инициализирует новый экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>класса из предоставленного прослушивателя, со значениями времени ожидания по умолчанию, предоставляемых системой.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#1](~/add/codesnippet/csharp/c36e66cf-4fd5-4f92-a03a-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#1](~/add/codesnippet/visualbasic/c36e66cf-4fd5-4f92-a03a-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> Для диспетчера каналов."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> класса."
  remarks: "Инициализирует новый экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>класса из предоставленного прослушивателя и привязки со значениями времени ожидания по умолчанию, предоставляемых системой.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#2](~/add/codesnippet/csharp/a9625d03-f4da-4d72-ae2d-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#2](~/add/codesnippet/visualbasic/a9625d03-f4da-4d72-ae2d-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> Для диспетчера каналов."
    - id: bindingName
      type: System.String
      description: "Имя привязки, используемое для настройки службы."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcher&quot;> </xref> класса."
  remarks: "Инициализирует новый экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>от предоставленного прослушивателя и привязки с временем ожидания по умолчанию для указанного класса.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#3](~/add/codesnippet/csharp/cadf0641-a6e2-46bb-8257-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#3](~/add/codesnippet/visualbasic/cadf0641-a6e2-46bb-8257-_1.vb)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> Для службы."
    - id: bindingName
      type: System.String
      description: "Имя привязки, используемое для настройки службы."
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "<xref:System.ServiceModel.IDefaultCommunicationTimeouts>Для службы.</xref:System.ServiceModel.IDefaultCommunicationTimeouts>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  id: AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает значение, указывающее ли транзакций принимать вызовы метода на прослушиватель являются асинхронными."
  syntax:
    content: public bool AsynchronousTransactedAcceptEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если транзакции принимает вызовы метода прослушивателя — асинхронные. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Прикрепляет диспетчер каналов к узлу."
  remarks: "Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: protected override void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> Для службы."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  id: BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает имя привязки, используемое для настройки службы."
  remarks: "Используется для получения имени для привязки, с которой связан данный диспетчер каналов."
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#4](~/add/codesnippet/csharp/p-system.servicemodel.di_13_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#4](~/add/codesnippet/visualbasic/p-system.servicemodel.di_13_1.vb)]
  syntax:
    content: public string BindingName { get; }
    return:
      type: System.String
      description: "Имя привязки службы."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  id: ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает набор <xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;> </xref> объектов, которые можно использовать для проверки и добавления состояния к каналам при их создании."
  remarks: "Используйте это свойство для вставки пользовательского инициализатора канала в коллекцию инициализации для проверки или изменения состояния каналов при их создании. Это также полезно для выполнения аналогичных действий с исходящими каналами Если контракт, связанный с диспетчером является дуплексным контрактом."
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#5](~/add/codesnippet/csharp/p-system.servicemodel.di_14_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#5](~/add/codesnippet/visualbasic/p-system.servicemodel.di_14_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer> ChannelInitializers { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
      description: "Объект &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; типа <xref href=&quot;System.ServiceModel.Dispatcher.IChannelInitializer&quot;> </xref> объектов."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Заставляет прослушиватель прекратить прием новых каналов."
  remarks: "Вызов этого метода заставляет прослушиватель прекратить прослушивание."
  syntax:
    content: public override void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает интервал времени, выделенный для закрытия диспетчера каналов по умолчанию."
  remarks: "Это время ожидания закрытия по умолчанию можно задать с помощью <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> В противном случае используется значение по умолчанию для модели службы — 1 минута."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Задающий интервал времени, выделенный для закрытия диспетчера каналов по умолчанию.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает интервал времени, выделенный для открытия диспетчера каналов по умолчанию."
  remarks: "Это время ожидания открытия по умолчанию можно задать с помощью <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> В противном случае используется значение по умолчанию для модели службы — 1 минута."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Задающий интервал времени, выделенный для закрытия диспетчера каналов по умолчанию.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Открепляет узел службы от диспетчера каналов."
  remarks: "<xref:System.ServiceModel.ServiceHostBase>Может быть откреплен, только если экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHostBase>       Наборы <xref:System.ServiceModel.ServiceHostBase>связанный с диспетчером каналов для `null`.</xref:System.ServiceModel.ServiceHostBase>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#18](~/add/codesnippet/csharp/334cfaeb-0991-457b-b54b-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#18](~/add/codesnippet/visualbasic/334cfaeb-0991-457b-b54b-_1.vb)]
  syntax:
    content: protected override void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> Для службы."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  id: Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает диспетчеры конечных точек, которые пересылают сообщения конечным точкам канала."
  remarks: "<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>Имеет отдельный <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>для каждой конечной точки канала, поддерживающий.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       Используйте <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>для получения доступа к свойствам среды выполнения, которые позволяют настроить среду выполнения для конечной точки.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#6](~/add/codesnippet/csharp/p-system.servicemodel.di_17_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#6](~/add/codesnippet/visualbasic/p-system.servicemodel.di_17_1.vb)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher> Endpoints { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
      description: "Объект &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; из <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>которые пересылают сообщения конечным точкам канала.</xref:System.ServiceModel.Dispatcher.EndpointDispatcher>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  id: ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает набор <xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;> </xref> объектов, которые могут использоваться для вставки пользовательских функций обработки ошибок для конечной точки."
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#7](~/add/codesnippet/csharp/p-system.servicemodel.di_10_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#7](~/add/codesnippet/visualbasic/p-system.servicemodel.di_10_1.vb)]
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler> ErrorHandlers { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
      description: "Объект &lt;xref:System.Collections.Generic.SynchronizedCollection%601&gt; из <xref href=&quot;System.ServiceModel.Dispatcher.IErrorHandler&quot;> </xref> объектов."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает узел для службы, связанной с диспетчером."
  remarks: "Каждый <xref:System.ServiceModel.ServiceHost>объект может иметь множество <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>объектов, каждый из которых связан с другим <xref:System.ServiceModel.Channels.IChannelListener>для этой службы.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHost>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#8](~/add/codesnippet/csharp/p-system.servicemodel.di_8_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#8](~/add/codesnippet/visualbasic/p-system.servicemodel.di_8_1.vb)]
  syntax:
    content: public override System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> Для службы, связанной с диспетчером."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает значение, указывающее, следует ли включать сведения об исключении в сообщение об ошибке."
  remarks: "Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#19](~/add/codesnippet/csharp/01ac9eb7-71a0-4d33-b665-_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#19](~/add/codesnippet/visualbasic/01ac9eb7-71a0-4d33-b665-_1.vb)]
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сведения об исключении включаются в сообщения об ошибках; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  id: IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Получает значение, указывающее, выполняются ли вызовы метода приема на прослушивателе в рамках транзакции."
  remarks: ''
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#9](~/add/codesnippet/csharp/p-system.servicemodel.di_7_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#9](~/add/codesnippet/visualbasic/p-system.servicemodel.di_7_1.vb)]
  syntax:
    content: public bool IsTransactedAccept { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вызовы метода приема на прослушивателе выполняются в рамках транзакции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  id: IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Получает значение, указывающее, выполняются ли вызовы метода получения на прослушивателе в рамках транзакции."
  remarks: "Свойство IsTransactedReceive можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#10](~/add/codesnippet/csharp/p-system.servicemodel.di_11_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#10](~/add/codesnippet/visualbasic/p-system.servicemodel.di_11_1.vb)]
  syntax:
    content: public bool IsTransactedReceive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вызовы метода получения на прослушивателе выполняются в рамках транзакции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает прослушиватель, связанный с данным диспетчером каналов."
  remarks: "Объект <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>связывает <xref:System.ServiceModel.Channels.IChannelListener>по определенному URI с экземпляром службы.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#11](~/add/codesnippet/csharp/p-system.servicemodel.di_5_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#11](~/add/codesnippet/visualbasic/p-system.servicemodel.di_5_1.vb)]
  syntax:
    content: public override System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> Связанный с диспетчером каналов."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает значение, указывающее, добавляет ли диспетчер каналов заголовки адресации в сообщения типа запрос ответ."
  remarks: "Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       Задать <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>Свойства `true` для предотвращения добавления сообщение с Идентификатором клиента и ReplyTo адресации заголовки сообщения запросов и ответов, чтобы приложение могло управлять этими заголовками.</xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#12](~/add/codesnippet/csharp/p-system.servicemodel.di_6_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#12](~/add/codesnippet/visualbasic/p-system.servicemodel.di_6_1.vb)]
  syntax:
    content: public bool ManualAddressing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если прокси не добавляет заголовки адресации; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. См. заметки."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  id: MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает максимальное количество ожидающих сообщений на канал."
  syntax:
    content: public int MaxPendingReceives { get; set; }
    return:
      type: System.Int32
      description: "Целое число, представляющее максимальное количество сообщений."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  id: MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает максимальный размер транзакционного пакета."
  remarks: "Свойство MaxTransactedBatchSize можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#13](~/add/codesnippet/csharp/p-system.servicemodel.di_9_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#13](~/add/codesnippet/visualbasic/p-system.servicemodel.di_9_1.vb)]
  syntax:
    content: public int MaxTransactedBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Максимальный размер транзакционного пакета."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Заданное значение меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает сообщения SOAP и WS-Addressing используемые или ожидаемые версии."
  remarks: "Указывает версии SOAP и WS-Addressing, связанные с сообщением и его передачей.       Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#20](~/add/codesnippet/csharp/p-system.servicemodel.di_1_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#20](~/add/codesnippet/visualbasic/p-system.servicemodel.di_1_1.vb)]
  syntax:
    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "<xref:System.ServiceModel.Channels.MessageVersion>, Используемая или ожидаемая.</xref:System.ServiceModel.Channels.MessageVersion>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Прерывает работу прослушивателя, связанного с диспетчером."
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Начинает асинхронную операцию, чтобы закрыть прослушиватель канала для диспетчера, которая должна быть завершена в течение указанного интервала времени."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающий операцию закрытия, выделенное для завершения до истечения времени ожидания.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление об асинхронном завершении операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию, чтобы закрыть прослушиватель канала для диспетчера.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Начинает асинхронную операцию, чтобы открыть прослушиватель канала для диспетчера, которая должна быть завершена в течение указанного интервала времени."
  remarks: "Диспетчер каналов должен быть связан с не поддерживающими`null` узел службы при вызове этого метода."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Указывающее, как долго должно завершиться до истечения времени ожидания операции открытия.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление об асинхронном завершении операции открытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции открытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию, чтобы открыть прослушиватель канала для диспетчера.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Узел или версия сообщения имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Закрывает прослушиватель канала, связанного с диспетчером в течение указанного интервала времени."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Задающий интервал времени, выделенный для операции закрытия прослушивателя.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  id: OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Обеспечивает трассировку закрытия диспетчеров конечной точки, связанный с диспетчером каналов."
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Завершает асинхронную операцию, чтобы закрыть прослушиватель канала для диспетчера."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*>метод.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Завершает асинхронную операцию, чтобы открыть прослушиватель канала для диспетчера."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*>метод.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Открывает прослушиватель, связанный с данным диспетчером каналов."
  remarks: "Диспетчер каналов должен быть связан с не поддерживающими`null` узел службы при вызове этого метода и версию сообщения должно быть присвоено значение, отличное от`null` значение."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>, Задающий интервал времени, выделенный для операции открытия прослушивателя.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Узел или версия сообщения имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  id: OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Заполняет и проверяет таблицу фильтров, используемый для перенаправления к конечным точкам."
  remarks: "Диспетчер каналов должен быть связан с не поддерживающими`null` узел службы при вызове этого метода."
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Узел представляет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Проверяет, прикреплен ли диспетчер каналов к узлу."
  remarks: "Диспетчер каналов должен быть связан с не поддерживающими`null` узел службы при открытии."
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Узел представляет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает, включен ли ReceiveContext."
  remarks: "ReceiveContext управляет режимом обработки сообщений службой, например блокировки сообщения при условии, что требуется."
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включен параметр ReceiveContext. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает значение, указывающее, использует ли диспетчер синхронные вызовы для чтения сообщений из каналов."
  remarks: "Если привязка реализует <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] присваивает значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>это свойство.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences> Таким образом, если это значение равно `true`, `false` по умолчанию значение <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>переопределяется.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>       Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#14](~/add/codesnippet/csharp/p-system.servicemodel.di_3_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#14](~/add/codesnippet/visualbasic/p-system.servicemodel.di_3_1.vb)]
  syntax:
    content: public bool ReceiveSynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если диспетчер использует синхронные методы для чтения сообщений из каналов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  id: SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает сообщения отправляются в асинхронном режиме."
  syntax:
    content: public bool SendAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сообщения отправляются асинхронно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  id: ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает регулирование для службы, связанной с данным диспетчером каналов."
  remarks: "Это обеспечивает доступ к элементам управления, используемый для оптимизации доступности и производительности службы.       Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#15](~/add/codesnippet/csharp/p-system.servicemodel.di_16_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#15](~/add/codesnippet/visualbasic/p-system.servicemodel.di_16_1.vb)]
  syntax:
    content: public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ServiceThrottle
      description: "A <xref href=&quot;System.ServiceModel.Dispatcher.ServiceThrottle&quot;></xref> object."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает уровень изоляции по умолчанию для транзакций."
  remarks: "Используйте свойство TransactionIsolationLevel, чтобы получить или задать уровень изоляции по умолчанию для новых транзакций, созданных диспетчером для службы.       Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#16](~/add/codesnippet/csharp/p-system.servicemodel.di_2_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#16](~/add/codesnippet/visualbasic/p-system.servicemodel.di_2_1.vb)]
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "Один из <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Заданный уровень изоляции не определен."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Возвращает или задает значение, указывающее время ожидания по умолчанию для новых транзакций, созданных диспетчером от имени службы."
  remarks: "Это свойство можно задать только когда экземпляр <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>в <xref:System.ServiceModel.CommunicationState>состояния, как это единственное состояние, которое одновременно является изменяемым и не удаляется.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  example:
  - >-
    [!code-cs[S_UE_ChannelDispatcher#17](~/add/codesnippet/csharp/p-system.servicemodel.di_0_1.cs)]
     [!code-vb[S_UE_ChannelDispatcher#17](~/add/codesnippet/visualbasic/p-system.servicemodel.di_0_1.vb)]
  syntax:
    content: public TimeSpan TransactionTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>значение, представляющее время ожидания по умолчанию для транзакций.</xref:System.TimeSpan> Значение по умолчанию — <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Заданное значение меньше нуля или слишком велик."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>или <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "Объект связи находится в <xref:System.ServiceModel.CommunicationState>состояние.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: System.ServiceModel.Dispatcher.ChannelDispatcherBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener)
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelDispatcher(IChannelListener,String,IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<IChannelInitializer>
  nameWithType: SynchronizedCollection<IChannelInitializer>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IChannelInitializer
    name: IChannelInitializer
    nameWithType: IChannelInitializer
    fullName: IChannelInitializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<EndpointDispatcher>
  nameWithType: SynchronizedCollection<EndpointDispatcher>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.EndpointDispatcher
    name: EndpointDispatcher
    nameWithType: EndpointDispatcher
    fullName: EndpointDispatcher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<IErrorHandler>
  nameWithType: Collection<IErrorHandler>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IErrorHandler
    name: IErrorHandler
    nameWithType: IErrorHandler
    fullName: IErrorHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher.ChannelDispatcher
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcher.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcher.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcher.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort
  nameWithType: ChannelDispatcher.OnAbort
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose
  nameWithType: ChannelDispatcher.OnBeginClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen
  nameWithType: ChannelDispatcher.OnBeginOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose
  nameWithType: ChannelDispatcher.OnClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed
  nameWithType: ChannelDispatcher.OnClosed
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose
  nameWithType: ChannelDispatcher.OnEndClose
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen
  nameWithType: ChannelDispatcher.OnEndOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen
  nameWithType: ChannelDispatcher.OnOpen
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened
  nameWithType: ChannelDispatcher.OnOpened
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening
  nameWithType: ChannelDispatcher.OnOpening
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
