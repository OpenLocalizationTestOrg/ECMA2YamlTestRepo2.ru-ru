### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "Предоставляет запросы для определенного компонента операционной системы."
  remarks: "Используйте `static` экземпляр этого класса в <xref:System.Windows.Forms.OSFeature.Feature%2A>свойство для выполнения запросов для компонентов операционной системы.</xref:System.Windows.Forms.OSFeature.Feature%2A> Невозможно создать экземпляр этого класса.       Чтобы определить версию функции, вызовите <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>метод.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Чтобы определить, присутствует ли компонент или определенная версия, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>метод и указать функции следует искать функцию с идентификаторами, предоставленные в этом классе.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> класса."
  remarks: "Не удается создать экземпляр этого класса. Чтобы запросить для компонентов операционной системы, используйте `static` экземпляр <xref:System.Windows.Forms.OSFeature>в этот класс.</xref:System.Windows.Forms.OSFeature>"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> экземпляр <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> класс, используемый для запросов функций. Это свойство доступно только для чтения."
  remarks: "Этот метод следует использовать `static` свойства для выполнения запросов для компонентов операционной системы. Невозможно создать экземпляр этого класса.       Чтобы определить версию функции, вызовите <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>метод.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Чтобы определить, присутствует ли компонент или определенная версия, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>метод и указать функции следует искать функцию с идентификаторами, предоставленные в этом классе.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "Экземпляр <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> класса."
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает версию указанного компонента, в настоящее время доступна в операционной системе."
  remarks: "Используйте <xref:System.Windows.Forms.OSFeature.Feature%2A>свойство, `static` экземпляр <xref:System.Windows.Forms.OSFeature>этого класса, чтобы получить номер версии компонента.</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "Компонент, версия которого запрашивается, либо <xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;> </xref> или <xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>."
    return:
      type: System.Version
      description: "Объект <xref:System.Version>представляет версию функции указанной операционной системы, доступных в системе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если компонент не найден.</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Получает значение, показывающее, поддерживает ли операционная система заданную функцию или метрику."
  remarks: "Как правило, используется метод IsPresent чтобы определить, поддерживает ли операционная система конкретному компоненту или метрики, обозначенную `enumValue`. В зависимости от значения, возвращенные IsPresent будет выполнять условного действия в коде. Например, при вызове этого метода со значением параметра <xref:System.Windows.Forms.SystemParameter>возвращает `true`, можно создать определяемый владельцем меню в приложении в стиле плоской.</xref:System.Windows.Forms.SystemParameter>       Доступ к некоторых системных функций или метрики может вызывать исключения, если они не доступны в версии конкретной операционной системы. В этом случае сначала использовать соответствующий <xref:System.Windows.Forms.SystemParameter>значение перечисления, а также IsPresent, чтобы определить, поддерживается ли метрика.</xref:System.Windows.Forms.SystemParameter> Например, вызов IsPresent с <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>перед получением <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>значение свойства.</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "Объект <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref> представляет компонент для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если функция доступна в системе; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Представляет функцию многослойных окон верхнего уровня. Это поле доступно только для чтения."
  remarks: "Многослойного окна можно сделать прозрачным или полупрозрачным операционной системой. Поддержка многоуровневой windows, появившийся в Windows 2000. Дополнительные сведения см. в разделе «Многоуровневая: новый способ для использования прозрачность и прозрачности эффекты в Windows приложений Windows» в документации Platform SDK по http://msdn.microsoft.com.       Чтобы определить, установлена ли функция многослойных окон, используйте <xref:System.Windows.Forms.OSFeature.Feature%2A>свойство вызвать метод базового класса <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>с LayeredWindows как средство для поиска for.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       Кроме того, можно проверить, чтобы определить, установлен ли компонент путем вызова <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>метод с LayeredWindows как компонент для поиска.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Представляет функцию тем операционной системы. Это поле доступно только для чтения."
  remarks: "Темы — это совокупность параметров графического интерфейса, включающие фоновый рисунок, курсоров, шрифты, звуки и значки, которые впервые появились в нем! для Windows 95. Платформа .NET Framework не поддерживает напрямую управление темы, несмотря на то, что у нее расширенная поддержка визуальных стилей в <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>пространства имен.</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> Дополнительные сведения о темах Windows см. в разделах, темы и визуальные стили и справочник по Visual стили в Win32 SDK.       Чтобы определить, установлена ли функция темы, вызов метода базового класса <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>с тем, как средство для поиска for.</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       Кроме того, можно проверить, чтобы определить, установлен ли компонент путем вызова <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>метод с тем, как компонент для поиска.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
