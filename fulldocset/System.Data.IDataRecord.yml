### YamlMime:ManagedReference
items:
- uid: System.Data.IDataRecord
  id: IDataRecord
  children:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  langs:
  - csharp
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
  type: Interface
  summary: "Предоставляет доступ к значениям столбцов в каждой строке для <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>и реализуется с помощью поставщиков данных .NET Framework, которые обращаются к реляционным базам данных."
  remarks: "<xref:System.Data.IDataReader>И IDataRecord интерфейсы позволяют наследующему классу реализовать `DataReader` класса</xref:System.Data.IDataReader> Это предоставляет способ чтения одного или нескольких потоков результирующих наборов только вперед. Дополнительные сведения о `DataReader` классы, в разделе [получение данных с помощью объекта DataReader](~/add/includes/ajax-current-ext-md.md).       Приложение не создает экземпляр интерфейса IDataRecord напрямую, а также создает экземпляр класса, наследующего IDataRecord. Как правило, это делается путем получения `DataReader` через `ExecuteReader` метод `Command` объекта.       Классы, наследующие IDataRecord должны реализовывать все наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика.       Поставщики, реализующие `DataReader` , должны предоставлять данные в типами общеязыковой среды выполнения (CLR). Для некоторых типов, не включенных в CLR, определено приведение типов. Эти значения доступны как альтернативные типы, совместимые с типами среды CLR. Например в следующей таблице перечислены предлагаемые сопоставления типов данных OLE DB с типами CLR, с альтернативным типами в круглые скобки.      | Тип OLE DB | Тип CLR |   |-----------------|--------------|   | DBTYPE_BOOL | Int16 |   | DBTYPE_BSTR | строка |   | DBTYPE_BYTES | byte [] |   | DBTYPE_CY | Десятичное число |   | DBTYPE_DATE | DateTime |   | DBTYPE_DBDATE | DateTime |   | DBTYPE_DBTIME | DateTime |   | DBTYPE_DBTIMESTAMP | DateTime |   | DBTYPE_DECIMAL | Десятичное число |   | DBTYPE_EMPTY | null |   | DBTYPE_ERROR | ExternalException |   | DBTYPE_FILETIME | DateTime |   | DBTYPE_GUID | Идентификатор GUID |   | DBTYPE_HCHAPTER | не поддерживается |   | DBTYPE_I1 | SByte |   | DBTYPE_I2 | Int16 |   | DBTYPE_I4 | Int32 |   | DBTYPE_I8 | Int64 |   | DBTYPE_IDISPATCH | объекта |   | DBTYPE_IUNKNOWN | объекта |   | ТИПЫ DBTYPE_NULL | DBNull.Value|   | DBTYPE_NUMERIC | Десятичное число |   | DBTYPE_PROPVARIANT | объекта |   | DBTYPE_R4 | Один |   | DBTYPE_R8 | Двойные |   | DBTYPE_STR | строка |   | Тип DBTYPE_UDT | не поддерживается |   | DBTYPE_UI1 | байтов (Int16) |   | DBTYPE_UI2 | UInt16 (Int32) |   | DBTYPE_UI4 | UInt32 (Int64) |   | DBTYPE_UI8 | UInt64 (десятичный) |   | DBTYPE_VARIANT | объекта |   | DBTYPE_VARNUMERIC | не поддерживается |   | DBTYPE_WSTR | строка |"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatarecord_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatarecord_1.vb)]"
  syntax:
    content: public interface IDataRecord
  implements: []
  platform:
  - net462
- uid: System.Data.IDataRecord.FieldCount
  id: FieldCount
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает число столбцов в текущей строке."
  remarks: "После выполнения запроса, который не возвращает строки (например, с помощью <xref:System.Data.IDbCommand.ExecuteNonQuery%2A>метод), FieldCount возвращает -1.</xref:System.Data.IDbCommand.ExecuteNonQuery%2A>"
  syntax:
    content: public int FieldCount { get; }
    return:
      type: System.Int32
      description: "При размещении в недопустимом наборе записей — 0; в противном случае число столбцов в текущей записи. Значение по умолчанию — -1."
  overload: System.Data.IDataRecord.FieldCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение указанного столбца в виде логического значения."
  remarks: "Преобразование не выполняется. Таким образом извлеченные данные уже должны быть логическое значение; в противном случае создается исключение."
  syntax:
    content: public bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Boolean
      description: "Значение столбца."
  overload: System.Data.IDataRecord.GetBoolean*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение указанного столбца в 8-разрядное целое число без знака."
  syntax:
    content: public byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Byte
      description: "8-разрядное целое число без знака значение указанного столбца."
  overload: System.Data.IDataRecord.GetByte*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Считывает поток байтов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера."
  remarks: "Метод GetBytes возвращает число доступных байтов в поле. Часто это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если `GetBytes` уже используется для получения байтов из поля.       Если передается значение буфера `null`, GetBytes возвращает длину строки в байтах.       Преобразования не выполняются; поэтому извлеченные данные уже должен массив байтов."
  syntax:
    content: public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: fieldOffset
      type: System.Int64
      description: "Индекс внутри поля, с которого следует начать операцию чтения."
    - id: buffer
      type: System.Byte[]
      description: "Буфер, в который необходимо считать поток байтов."
    - id: bufferoffset
      type: System.Int32
      description: "Индекс для `buffer` для запуска операции чтения."
    - id: length
      type: System.Int32
      description: "Число байтов для чтения."
    return:
      type: System.Int64
      description: "Фактическое число считанных байтов."
  overload: System.Data.IDataRecord.GetBytes*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение символа для указанного столбца."
  syntax:
    content: public char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Char
      description: "Значение символа указанного столбца."
  overload: System.Data.IDataRecord.GetChar*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера."
  remarks: "GetChars возвращает количество доступных символов в поле. Часто это точная длина поля. Однако возвращенное число может быть меньше точная длина поля, если `GetChars` уже используется для получения символов из поля.       Если передается значение буфера `null`, `GetChars` возвращает длину поля в символах.       Преобразования не выполняются; поэтому извлеченные данные уже должен массив символов."
  syntax:
    content: public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: fieldoffset
      type: System.Int64
      description: "Индекс в строке, с которого следует начать операцию чтения."
    - id: buffer
      type: System.Char[]
      description: "Буфер, в который необходимо считать поток байтов."
    - id: bufferoffset
      type: System.Int32
      description: "Индекс для `buffer` для запуска операции чтения."
    - id: length
      type: System.Int32
      description: "Число байтов для чтения."
    return:
      type: System.Int64
      description: "Фактическое число считанных символов."
  overload: System.Data.IDataRecord.GetChars*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает <xref href=&quot;System.Data.IDataReader&quot;> </xref> для указанного порядкового номера столбца."
  syntax:
    content: public System.Data.IDataReader GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> Для указанного порядкового номера столбца."
  overload: System.Data.IDataRecord.GetData*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает сведения о типе данных для указанного поля."
  remarks: "Сведения о типе данных может отличаться от аналогичных сведений, возвращаемых `GetFieldType`, особенно когда базовые типы данных не соответствуют с типами среды выполнения, поддерживаемые языком. (например, `DataTypeName` может быть «целое число», а `Type.Name` может быть «Int32».)"
  syntax:
    content: public string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.String
      description: "Тип данных, сведения для указанного поля."
  overload: System.Data.IDataRecord.GetDataTypeName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение даты и времени для указанного поля."
  syntax:
    content: public DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.DateTime
      description: "Значение даты и времени данных для указанного поля."
  overload: System.Data.IDataRecord.GetDateTime*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает числовое значение указанного поля фиксированным расположением."
  syntax:
    content: public decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Decimal
      description: "Числовое значение фиксированным расположением для указанного поля."
  overload: System.Data.IDataRecord.GetDecimal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает число с плавающей запятой двойной точности для указанного поля."
  syntax:
    content: public double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Double
      description: "В число двойной точности с плавающей запятой для указанного поля."
  overload: System.Data.IDataRecord.GetDouble*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Получает <xref:System.Type>сведения, относящиеся к типу <xref:System.Object>, возвращаемого из <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  remarks: "Эти сведения можно использовать для повышения производительности путем указания строго типизированных методов доступа для вызова. (например, с помощью `GetInt32` — примерно&10; раз быстрее, чем использование `GetValue`.)"
  syntax:
    content: public Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Type
      description: "<xref:System.Type>Соответствующие сведения для типа <xref:System.Object>, возвращаемого из <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  overload: System.Data.IDataRecord.GetFieldType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает число с плавающей запятой одиночной точности для указанного поля."
  syntax:
    content: public float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Single
      description: "В число одинарной точности с плавающей запятой для указанного поля."
  overload: System.Data.IDataRecord.GetFloat*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение идентификатора GUID для указанного поля."
  syntax:
    content: public Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Guid
      description: "Значение GUID указанного поля."
  overload: System.Data.IDataRecord.GetGuid*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение 16-разрядное целое число со знаком для указанного поля."
  syntax:
    content: public short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Int16
      description: "Значение 16-разрядное целое число со знаком для указанного поля."
  overload: System.Data.IDataRecord.GetInt16*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает 32-разрядное целое число со знаком для указанного поля."
  syntax:
    content: public int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Int32
      description: "Значение 32-разрядное целое число со знаком для указанного поля."
  overload: System.Data.IDataRecord.GetInt32*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает 64-разрядное целое число со знаком для указанного поля."
  syntax:
    content: public long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Int64
      description: "Значение 64-разрядное целое число со знаком для указанного поля."
  overload: System.Data.IDataRecord.GetInt64*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает имя поля для поиска."
  syntax:
    content: public string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.String
      description: "Имя поля или пустая строка (&quot;»), если возвращаемое значение отсутствует."
  overload: System.Data.IDataRecord.GetName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает индекс именованного поля."
  remarks: "`GetOrdinal`сначала выполняет поиск с учетом регистра. В случае неудачи выполняется второй поиска без учета регистра. `GetOrdinal`не учитывает ширину японской азбуки. Если индекс именованного поля не найден, `IndexOutOfRangeException` возникает исключение.       Поскольку порядковым числительным более эффективны, чем поиск по имени, неэффективно вызывать `GetOrdinal` в цикле. Экономия времени при вызове `GetOrdinal` один раз и назначьте полученные результаты целочисленной переменной для использования в цикле."
  example:
  - "The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.idatarecor_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.idatarecor_1.cs)]"
  syntax:
    content: public int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя поля для поиска."
    return:
      type: System.Int32
      description: "Индекс именованного поля."
  overload: System.Data.IDataRecord.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает строковое значение указанного поля."
  syntax:
    content: public string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.String
      description: "Строковое значение указанного поля."
  overload: System.Data.IDataRecord.GetString*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение указанного поля."
  syntax:
    content: public object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Object
      description: "<xref:System.Object>Которого будет содержать возвращаемое значение поля.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Заполняет массив объектов значениями столбца текущей записи."
  remarks: "Для большинства приложений метод GetValues предоставляет эффективные средства для извлечения всех столбцов вместо извлечения каждого столбца отдельно.       Можно передать <xref:System.Object>массив, который содержит меньшее число столбцов, содержащихся в результирующей строке.</xref:System.Object> Объем данных <xref:System.Object>содержит массив копируется в массив.</xref:System.Object> Можно также передать <xref:System.Object>массив, длина которого превышает количество столбцов, содержащихся в результирующей строке.</xref:System.Object>"
  syntax:
    content: public int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив <xref:System.Object>для копирования в него полей атрибутов.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Число экземпляров <xref:System.Object>в массиве.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращать, задано ли указанное поле значение null."
  remarks: "Вызовите этот метод, чтобы выяснить наличие значений null столбцов перед вызовом методов типизированный get (например, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>и так далее) во избежание возникновения ошибки.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>"
  syntax:
    content: public bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Индекс поля для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное поле имеет значение NULL; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataRecord.IsDBNull*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает столбец, расположенный по указанному индексу."
  syntax:
    content: public object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля индекс получаемого столбца."
    return:
      type: System.Object
      description: "Столбец, расположенный по указанному индексу как <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает столбец с указанным именем."
  remarks: "Сначала выполняется поиск с учетом регистра. В случае неудачи выполняется второй поиска без учета регистра.       Этот метод не учитывает ширину японской азбуки."
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Имя столбца для поиска."
    return:
      type: System.Object
      description: "Столбец с указанным именем, как <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Столбец с указанным именем не найден."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
- uid: System.Data.IDataRecord.FieldCount*
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
- uid: System.Data.IDataRecord.GetBoolean*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean
  nameWithType: IDataRecord.GetBoolean
- uid: System.Data.IDataRecord.GetByte*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte
  nameWithType: IDataRecord.GetByte
- uid: System.Data.IDataRecord.GetBytes*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes
  nameWithType: IDataRecord.GetBytes
- uid: System.Data.IDataRecord.GetChar*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar
  nameWithType: IDataRecord.GetChar
- uid: System.Data.IDataRecord.GetChars*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars
  nameWithType: IDataRecord.GetChars
- uid: System.Data.IDataRecord.GetData*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData
  nameWithType: IDataRecord.GetData
- uid: System.Data.IDataRecord.GetDataTypeName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName
  nameWithType: IDataRecord.GetDataTypeName
- uid: System.Data.IDataRecord.GetDateTime*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime
  nameWithType: IDataRecord.GetDateTime
- uid: System.Data.IDataRecord.GetDecimal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal
  nameWithType: IDataRecord.GetDecimal
- uid: System.Data.IDataRecord.GetDouble*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble
  nameWithType: IDataRecord.GetDouble
- uid: System.Data.IDataRecord.GetFieldType*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType
  nameWithType: IDataRecord.GetFieldType
- uid: System.Data.IDataRecord.GetFloat*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat
  nameWithType: IDataRecord.GetFloat
- uid: System.Data.IDataRecord.GetGuid*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid
  nameWithType: IDataRecord.GetGuid
- uid: System.Data.IDataRecord.GetInt16*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16
  nameWithType: IDataRecord.GetInt16
- uid: System.Data.IDataRecord.GetInt32*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32
  nameWithType: IDataRecord.GetInt32
- uid: System.Data.IDataRecord.GetInt64*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64
  nameWithType: IDataRecord.GetInt64
- uid: System.Data.IDataRecord.GetName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName
  nameWithType: IDataRecord.GetName
- uid: System.Data.IDataRecord.GetOrdinal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal
  nameWithType: IDataRecord.GetOrdinal
- uid: System.Data.IDataRecord.GetString*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString
  nameWithType: IDataRecord.GetString
- uid: System.Data.IDataRecord.GetValue*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue
  nameWithType: IDataRecord.GetValue
- uid: System.Data.IDataRecord.GetValues*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues
  nameWithType: IDataRecord.GetValues
- uid: System.Data.IDataRecord.IsDBNull*
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull
  nameWithType: IDataRecord.IsDBNull
- uid: System.Data.IDataRecord.Item*
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item
  nameWithType: IDataRecord.Item
