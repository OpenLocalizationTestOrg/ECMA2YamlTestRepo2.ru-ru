### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "Определяет контракт, который должен быть реализован диспетчер с идентификатором пользовательского состояния сеанса."
  remarks: "Интерфейс ISessionIDManager определяет методы, которые необходимо реализовать для создания пользовательского диспетчера для значения идентификатора сеанса. Реализация интерфейса ISessionIDManager создает и проверяет значения идентификатора сеанса и управляет хранения идентификатора сеанса в HTTP-ответа, а также для извлечения значения идентификатора сеанса из HTTP-запроса. Включить диспетчер пользовательский идентификатор сеанса, с помощью `sessionIDManagerType` атрибут [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) элемента конфигурации.       При реализации интерфейса ISessionIDManager поддерживает идентификаторы сеансов без поддержки файлов cookie, необходимо реализовать решение для отправки и получения идентификаторов сеансов в URL-адрес, например фильтр ISAPI.       Если требуется указать значения пользовательский идентификатор сеанса для использования состояния сеанса ASP.NET, можно создать класс, наследующий <xref:System.Web.SessionState.SessionIDManager>класса и переопределить только <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>и <xref:System.Web.SessionState.SessionIDManager.Validate%2A>методов с собственную реализацию.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Это позволяет ввести собственные значения идентификатора сеанса, опираясь на базе <xref:System.Web.SessionState.SessionIDManager>класса для хранения значений в HTTP-ответ и извлечения значений из HTTP-запроса.</xref:System.Web.SessionState.SessionIDManager> Пример переопределения <xref:System.Web.SessionState.SessionIDManager>класса и реализации этих методов, см. пример для <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>метода <xref:System.Web.SessionState.SessionIDManager>класса.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Создает уникальный идентификатор сеанса."
  remarks: "Метод CreateSessionID позволяет создать уникальный идентификатор сеанса, <xref:System.Web.SessionState.SessionStateModule>объекта будет использовать для идентификации нового сеанса.</xref:System.Web.SessionState.SessionStateModule> Значение, возвращаемое CreateSessionID должно быть уникальным и должно содержать допустимые символы, которые могут храниться в HTTP-ответ и запрос. Если это возможно, что значение, возвращаемое реализацией CreateSessionID содержит символы, недопустимые в HTTP-ответ или запрос, следует использовать <xref:System.Web.HttpUtility.UrlEncode%2A>методом для кодировки значение идентификатора сеанса в вашей <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>реализации метода и <xref:System.Web.HttpUtility.UrlDecode%2A>метод декодировать значение идентификатора сеанса в вашей <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>реализации метода.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A>"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    return:
      type: System.String
      description: "Уникальный идентификатор сеанса."
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Получает идентификатор сеанса из контекста текущего HTTP-запроса."
  remarks: "Метод GetSessionID вызывается <xref:System.Web.SessionState.SessionStateModule>во время <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>и <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>события.</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> Если не удается получить допустимого идентификатора сеанса из HTTP-запроса, возвращают `null`. Если <xref:System.Web.SessionState.SessionStateModule>получает `null` из метода GetSessionID вызовет <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>метод, чтобы получить идентификатор нового сеанса для нового сеанса.</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Если это возможно, что значение, возвращаемое вашей <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>реализация содержит символы, недопустимые в HTTP-ответ или запрос, следует использовать <xref:System.Web.HttpUtility.UrlEncode%2A>методом для кодировки значение идентификатора сеанса в вашей <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>реализации метода и <xref:System.Web.HttpUtility.UrlDecode%2A>метод декодировать значение идентификатора сеанса в реализации метода GetSessionID.</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    return:
      type: System.String
      description: "Идентификатор текущего сеанса, отправленный с помощью запроса HTTP."
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Инициализирует <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объекта."
  remarks: "Использование метода инициализации для инициализации <xref:System.Web.SessionState.ISessionIDManager>объекта.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Выполняет инициализацию для каждого запроса из <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> объекта."
  remarks: "Метод InitializeRequest вызывается для всех запросов, обрабатываемых <xref:System.Web.SessionState.ISessionIDManager>объекта.</xref:System.Web.SessionState.ISessionIDManager> Метод InitializeRequest для инициализации данных для каждого запроса для <xref:System.Web.SessionState.SessionIDManager>объекта.</xref:System.Web.SessionState.SessionIDManager>       Когда `suppressAutoDetectRedirect` параметр `true`, <xref:System.Web.SessionState.ISessionIDManager>объекта не следует использовать перенаправления, чтобы определить, поддерживает ли браузер файлы cookie.</xref:System.Web.SessionState.ISessionIDManager>       `supportSessionIDReissue` Должны возвращаться `false` Если файлы cookie используются для идентификации сеанса; в противном случае возвращает `true` Если ваш <xref:System.Web.SessionState.ISessionIDManager>реализация поддерживает повторно выпуск ИД сеанса.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> , Содержащий сведения о текущем запросе."
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если диспетчер идентификатор сеанса должен выполнить перенаправление для определения поддержки файлов cookie; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Чтобы отключить автоматическое перенаправление для определения поддержки файлов cookie."
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "При возвращении этого метода содержит логическое значение, указывающее, является ли <xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;> </xref> объект поддерживает выпуск новых ИД сеанса при исходный идентификатор является устаревшим. Этот параметр передается неинициализированным.       Повторное использование ИД сеанса подходит в тех случаях, когда идентификатор состояние сеанса кодируется в URL-АДРЕСЕ и существует возможность для URL-адреса для общих или по электронной почте.       Если пользовательская реализация состояния сеанса разделяет файлы cookie по виртуальному пути, должно также поддерживаться состояние сеанса."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что при инициализации было выполнено перенаправление; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Удаляет идентификатор сеанса из файла cookie или URL-адрес."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Вызовы <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>метод во время <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>событий для удаления идентификатор сеанса из <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>коллекции, если новый сеанс был создан, но не использовался.</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> </xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Сохраняет идентификатор только что созданного сеанса HTTP-ответа."
  remarks: "Метод SaveSessionID вызывается <xref:System.Web.SessionState.SessionStateModule>объекта во время <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>событий.</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> Метод SaveSessionID хранится идентификатор сеанса в URL-адрес (при использовании состояния сеанса без файлов cookie) или без ограничения срока действия файла cookie сеанса.       Если это возможно, что значение, возвращаемое из вашего <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>реализация содержит символы, недопустимые в HTTP-ответ или запрос, следует использовать <xref:System.Web.HttpUtility.UrlEncode%2A>способ кодирования значения идентификатора сеанса в реализации метода SaveSessionID и <xref:System.Web.HttpUtility.UrlDecode%2A>метод декодировать значение идентификатора сеанса в вашей <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>реализации метода.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Текущий <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект, который ссылается на объекты сервера, используемые для обработки HTTP-запросов (например, <> </> *настроек и <> </> *настроек свойств)."
    - id: id
      type: System.String
      description: "Идентификатор сеанса."
    - id: redirected
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если отклик имеет перенаправляются на текущий URL-адрес с идентификатором сеанса, добавленным в; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cookieAdded
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если файл cookie был добавлен в HTTP-ответ, в противном случае, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Подтверждает допустимость предоставленного идентификатора сеанса."
  remarks: "Метод Validate проверяет, что предоставленный `id` имеет допустимого идентификатора сеанса.       Ваш <xref:System.Web.SessionState.ISessionIDManager>Реализация должна вызывать метод Validate из <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>метод при получении идентификатора сеанса из HTTP-запроса, чтобы убедиться, что предоставленного идентификатора сеанса имеет правильный формат.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.SessionState.ISessionIDManager>"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "Идентификатор сеанса для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если идентификатор сеанса является допустимым; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
