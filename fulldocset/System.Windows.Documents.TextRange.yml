### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextRange
  id: TextRange
  children:
  - System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Documents.TextRange.CanLoad(System.String)
  - System.Windows.Documents.TextRange.CanSave(System.String)
  - System.Windows.Documents.TextRange.Changed
  - System.Windows.Documents.TextRange.ClearAllProperties
  - System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.End
  - System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextRange.IsEmpty
  - System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  - System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.Start
  - System.Windows.Documents.TextRange.Text
  langs:
  - csharp
  name: TextRange
  nameWithType: TextRange
  fullName: System.Windows.Documents.TextRange
  type: Class
  summary: "Представляет выделение содержимого между двумя <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> позиций."
  remarks: "Класс TextRange представлены следующие термины.      - **Выбора** -TextRange представляет собой набор содержимого между двумя положениями обозначается **текстовые указатели**.  Одна из данных позиций представляет фиксированную привязку относительно выделения, а другая позиция может быть перемещена.  Это похоже на поведение выбор, сделанный пользователем с помощью мыши или клавиатуры.      - **Текущее выделение** — поскольку TextRange всегда указывает на выделение, в содержимом, смысл просто найти соответствующий TextRange как *текущее выделение*.      - **Контейнера текста** - *контейнера текста* элемент, который образует конечную границу для имеющегося содержимого потока; в соответствующий TextRange всегда находится в текстовом контейнере.  В настоящее время текстовый контейнер должен быть либо <xref:System.Windows.Documents.FlowDocument>или <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Documents.FlowDocument>      - **Документа** -содержимое коллективно содержится в текстовом контейнере, называется *документа*.       Дополнительные сведения о других связанных такие термины, как *позиции*, <xref:System.Windows.Documents.TextPointer>.</xref:System.Windows.Documents.TextPointer> см."
  example:
  - "The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a TextRange to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public class TextRange
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: '#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)'
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref> класс, принимающий два указанных <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> позиций как позиции начала и окончания для нового диапазона."
  remarks: "Объект <xref:System.Windows.Documents.TextRange>формируется на основе выбора между двумя положениями обозначается **текстовые указатели**.</xref:System.Windows.Documents.TextRange>  Одну из этих позиций (обозначается `position1`) является фиксированным по отношению к выбор, во время другой позиции (обозначается `position2`) может быть перемещена.  Это похоже на поведение выбор, сделанный пользователем с помощью мыши или клавиатуры.       Фактические края нового <xref:System.Windows.Documents.TextRange>могут быть изменены для соответствия любой эвристике выделения, применяются к документу, содержащий новый <xref:System.Windows.Documents.TextRange>.</xref:System.Windows.Documents.TextRange> </xref:System.Windows.Documents.TextRange>"
  example:
  - "The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "Фиксированная позиция привязки, помечающая один край выделенного текста, используемый для формирования нового <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>."
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "Перемещаемая позиция, помечающая другой край выделенного текста, используемый для формирования нового <xref href=&quot;System.Windows.Documents.TextRange&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит, когда <code> position1 </code> и <code> position2 </code> не находится в одном документе."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Применяет указанное свойство форматирования и значение к текущему выбранному элементу."
  remarks: "Этот метод применяется форматирование, вставляя необходимые <xref:System.Windows.Documents.Inline>элементы, такие как <xref:System.Windows.Documents.Bold>и <xref:System.Windows.Documents.Italic>, в выделение обозначается <xref:System.Windows.Documents.TextRange>.</xref:System.Windows.Documents.TextRange> </xref:System.Windows.Documents.Italic> </xref:System.Windows.Documents.Bold> </xref:System.Windows.Documents.Inline>"
  example:
  - "The following example demonstrates the use of the ApplyPropertyValue method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "Свойство форматирования для применения."
    - id: value
      type: System.Object
      description: "Значение для свойства форматирования."
  overload: System.Windows.Documents.TextRange.ApplyPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит при <code> formattingProperty </code> не указывает допустимое свойство форматирования или <code> value </code> указывает недопустимое значение для <code> formattingProperty </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  id: CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Проверяет, могут ли текущее выделение загружаться с содержимым в указанном формате."
  remarks: "Используйте соответствующий <xref:System.Windows.Documents.TextRange.Load%2A>метода требуется загрузить содержимое в текущее выделение в указанном формате.</xref:System.Windows.Documents.TextRange.Load%2A>"
  example:
  - "The following example demonstrates the use of the CanLoad method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanLoad (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "Формат данных для проверки возможности загрузки в текущее выделение.  В разделе <xref href=&quot;System.Windows.DataFormats&quot;> </xref> список предопределенных форматов данных."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее выделение может загружаться с содержимым в указанном формате; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.CanLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  id: CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Проверяет ли текущее выделение могут быть сохранены как формат указанных данных."
  remarks: "Используйте соответствующий <xref:System.Windows.Documents.TextRange.Save%2A>метод фактически Сохранение текущего выделения в указанном формате.</xref:System.Windows.Documents.TextRange.Save%2A>"
  example:
  - "The following example demonstrates the use of the CanSave method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanSave (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: "Формат данных для проверки возможности сохранения текущее выделение.  В разделе <xref href=&quot;System.Windows.DataFormats&quot;> </xref> список предопределенных форматов данных."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее выделение могут сохраняться как указанный формат данных; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.CanSave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Changed
  id: Changed
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Происходит при изменении положения диапазона для покрытия нового фрагмента содержимого."
  syntax:
    content: public event EventHandler Changed;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  id: ClearAllProperties
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Удаляет все свойства форматирования (представленного <xref href=&quot;System.Windows.Documents.Inline&quot;> </xref> элементы) из текущего выделенного фрагмента."
  remarks: "Этот метод влияет только на <xref:System.Windows.Documents.Inline>Форматирование элементов, например <xref:System.Windows.Documents.Bold>или <xref:System.Windows.Documents.Italic>.</xref:System.Windows.Documents.Italic> </xref:System.Windows.Documents.Bold> </xref:System.Windows.Documents.Inline> Свойства, заданные абзацев и другие заключив <xref:System.Windows.Documents.Block>элементов не изменяются.</xref:System.Windows.Documents.Block>"
  syntax:
    content: public void ClearAllProperties ();
    parameters: []
  overload: System.Windows.Documents.TextRange.ClearAllProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  id: Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Проверяет, является ли позиция (заданные <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref>) находится в выделенном фрагменте."
  remarks: "Позиций на любом конце текущее выделение (обозначается <xref:System.Windows.Documents.TextRange.Start%2A>и <xref:System.Windows.Documents.TextRange.End%2A>), считаются частью текущего выбора.</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A>"
  example:
  - "The following example demonstrates the use of the Contains method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public bool Contains (System.Windows.Documents.TextPointer textPointer);
    parameters:
    - id: textPointer
      type: System.Windows.Documents.TextPointer
      description: "Позиция для проверки включения в выделенном фрагменте."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заданная позиция находится в выделенном фрагменте; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.Contains*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит, когда *textPointer* не находится в том же документе текущее выделение."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.End
  id: End
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Получает позицию, отмечающий конец текущего выделенного фрагмента."
  remarks: ''
  example:
  - "The following example demonstrates the use of the End property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer End { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "Объект <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> , указывает на конец текущего выделения."
  overload: System.Windows.Documents.TextRange.End*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  id: GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Возвращает действительное значение указанного свойства форматирования для текущего выбора."
  remarks: "Для возврата значения свойства, вся <xref:System.Windows.Documents.TextRange>необходимо расширить на текст с только одним значением для `formattingProperty`.</xref:System.Windows.Documents.TextRange> Если <xref:System.Windows.Documents.TextRange>расширяет над текстом, с двумя или более различными значениями для `formattingProperty`, <xref:System.Windows.DependencyProperty.UnsetValue>возвращается.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.Documents.TextRange>"
  syntax:
    content: public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "Свойство форматирования для получения значения относительно текущего выделения."
    return:
      type: System.Object
      description: "Объект, указывающий значение указанного свойства форматирования."
  overload: System.Windows.Documents.TextRange.GetPropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит при <code> formattingProperty </code> не указывает допустимое свойство форматирования или <code> value </code> указывает недопустимое значение для <code> formattingProperty </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>formattingProperty</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.IsEmpty
  id: IsEmpty
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Возвращает значение, указывающее, является ли текущее выделение пусто."
  remarks: "A <xref:System.Windows.Documents.TextRange>считается пустым, если <xref:System.Windows.Documents.TextRange.Start%2A>и <xref:System.Windows.Documents.TextRange.End%2A>положения равны.</xref:System.Windows.Documents.TextRange.End%2A> </xref:System.Windows.Documents.TextRange.Start%2A> </xref:System.Windows.Documents.TextRange>"
  example:
  - "The following example demonstrates the use of the IsEmpty property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее выделение пусто; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  id: Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Загружает текущее выделение в указанном формате данных из указанного потока."
  remarks: "Если <xref:System.IO.Stream.CanSeek%2A>является `true` для `stream`, содержимое будет загружено с самого начала потока до конца потока.</xref:System.IO.Stream.CanSeek%2A>  В противном случае содержимое будет считываться из текущего <xref:System.IO.Stream.Position%2A>до конца потока.</xref:System.IO.Stream.Position%2A>  По возвращении из этого метода `stream` остается открытым и текущую позицию внутри `stream` не определено.       Операция загрузки заменяет текущее выделение новым загруженным содержимым."
  example:
  - "The following example demonstrates the use of the Load method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Load (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Для чтения поток, содержащий данные для загрузки в текущее выделение."
    - id: dataFormat
      type: System.String
      description: "Формат данных для загрузки данных в виде.  В настоящее время поддерживаются форматы данных <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, и <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит, когда указанный формат данных не поддерживается.  Также может возникнуть, если содержимое загружено из <code> stream </code> не соответствует указанному формату данных."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  id: Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Сохраняет текущее выделение в указанный поток в указанном формате."
  remarks: "По возвращении из этого метода `stream` остается открытым и текущую позицию внутри `stream` не определено.       В процессе сохранения содержимого в текущем выделенном фрагменте операции могут быть преобразованы в данные с форматом, заданным `dataFormat`."
  example:
  - "The following example demonstrates the use of the Save method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Пустой записываемый поток для сохранения текущего выделения."
    - id: dataFormat
      type: System.String
      description: "Формат данных для сохранения текущего выделения.  В настоящее время поддерживаются форматы данных <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, и <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Указанный формат данных не поддерживается.       - или загрузить содержимое из <code> stream </code> не соответствует указанному формату данных."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  id: Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Сохраняет текущее выделение в указанный поток в указанный формат данных, с сохранением пользовательских <xref href=&quot;System.Windows.Documents.TextElement&quot;> </xref> объектов."
  remarks: "При `preserveTextElements` — `false`пользовательские <xref:System.Windows.Documents.TextElement>сохраняются как известные объекты <xref:System.Windows.Documents.TextElement>типов.</xref:System.Windows.Documents.TextElement> </xref:System.Windows.Documents.TextElement>  Предположим, например, можно создать настраиваемый <xref:System.Windows.Documents.TextElement>вызывается `Heading1`, который наследует от <xref:System.Windows.Documents.Paragraph>.</xref:System.Windows.Documents.Paragraph> </xref:System.Windows.Documents.TextElement> При вызове этого метода с `preserveTextElements` значение `false`, `Heading1` преобразуется в <xref:System.Windows.Documents.Paragraph>при <xref:System.Windows.Documents.TextRange>сохраняется.</xref:System.Windows.Documents.TextRange> </xref:System.Windows.Documents.Paragraph>  При вызове этого метода с `preserveTextElements` значение `true`, `Heading1` сохраняется без преобразования. Чтобы сохранить настраиваемые текстовые элементы, `dataFormat` должно быть присвоено <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.</xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>       Сохранить впервые появился в платформе .NET Framework версии 3.5.  Дополнительные сведения см. в разделе [версии и зависимости](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Пустой записываемый поток для сохранения текущего выделения."
    - id: dataFormat
      type: System.String
      description: "Формат данных для сохранения текущего выделения.  В настоящее время поддерживаются форматы данных <xref href=&quot;System.Windows.DataFormats.Rtf&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Text&quot;> </xref>, <xref href=&quot;System.Windows.DataFormats.Xaml&quot;> </xref>, и <xref href=&quot;System.Windows.DataFormats.XamlPackage&quot;> </xref>."
    - id: preserveTextElements
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы сохранить пользовательские <xref href=&quot;System.Windows.Documents.TextElement&quot;> </xref> объектов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TextRange.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>stream</code> or <code>dataFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит, когда указанный формат данных не поддерживается.  Также может возникнуть, если содержимое загружено из <code> stream </code> не соответствует указанному формату данных."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Обновляет текущее выделение, принимая две <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> позиций для указания обновленного выделения."
  remarks: "Объект <xref:System.Windows.Documents.TextRange>формируется на основе выбора между двумя положениями обозначается **текстовые указатели**.</xref:System.Windows.Documents.TextRange>  Одну из этих позиций (обозначается `position1`) является фиксированным по отношению к выбор, во время другой позиции (обозначается `position2`) может быть перемещена.  Это похоже на поведение выбор, сделанный пользователем с помощью мыши или клавиатуры.       Фактические края нового выделения могут быть изменены для соответствия любой эвристике выделения, применимые к документу, который содержит новое текущее выделение."
  syntax:
    content: public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: "Фиксированная позиция привязки, помечающая один край обновленного выделения."
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: "Перемещаемая позиция, помечающая другой край обновленного выделения."
  overload: System.Windows.Documents.TextRange.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Происходит, когда <code> position1 </code> и <code> position2 </code> не находится в одном документе."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Occurs when <code>position1</code> or <code>position2</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Start
  id: Start
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Возвращает позицию, обозначающая начало текущего выделенного фрагмента."
  remarks: ''
  example:
  - "The following example demonstrates the use of the Start property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer Start { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: "Объект <xref href=&quot;System.Windows.Documents.TextPointer&quot;> </xref> , указывает на начало текущего выделенного фрагмента."
  overload: System.Windows.Documents.TextRange.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TextRange.Text
  id: Text
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Возвращает или задает текстовое содержимое текущего выделения."
  remarks: "Это свойство можно используйте для извлечения содержимого обычного текста в выделенном фрагменте, независимо от того, все форматирования, которые могут присутствовать.       Символы новой строки и разрывы абзацев обрабатываются как эквивалент по отношению к этому свойству.  Любые типы разрывов содержимого, присутствующие в текущем выделении преобразуются в новые строки, когда это свойство доступно для чтения."
  example:
  - "The following example demonstrates the use of the Text property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/csharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](~/add/codesnippet/visualbasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая текстовое содержимое текущего выделения."
  overload: System.Windows.Documents.TextRange.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Происходит, когда предпринята попытка задать это свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
- uid: System.Windows.Documents.TextRange.Changed
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
- uid: System.Windows.Documents.TextRange.End
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
- uid: System.Windows.Documents.TextRange.IsEmpty
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextRange.Start
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
- uid: System.Windows.Documents.TextRange.Text
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
- uid: System.Windows.Documents.TextRange.#ctor*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange
  nameWithType: TextRange.TextRange
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue
  nameWithType: TextRange.ApplyPropertyValue
- uid: System.Windows.Documents.TextRange.CanLoad*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad
  nameWithType: TextRange.CanLoad
- uid: System.Windows.Documents.TextRange.CanSave*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave
  nameWithType: TextRange.CanSave
- uid: System.Windows.Documents.TextRange.ClearAllProperties*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties
  nameWithType: TextRange.ClearAllProperties
- uid: System.Windows.Documents.TextRange.Contains*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains
  nameWithType: TextRange.Contains
- uid: System.Windows.Documents.TextRange.End*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
- uid: System.Windows.Documents.TextRange.GetPropertyValue*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue
  nameWithType: TextRange.GetPropertyValue
- uid: System.Windows.Documents.TextRange.IsEmpty*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
- uid: System.Windows.Documents.TextRange.Load*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load
  nameWithType: TextRange.Load
- uid: System.Windows.Documents.TextRange.Save*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save
  nameWithType: TextRange.Save
- uid: System.Windows.Documents.TextRange.Select*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select
  nameWithType: TextRange.Select
- uid: System.Windows.Documents.TextRange.Start*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
- uid: System.Windows.Documents.TextRange.Text*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
