### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ProfilePropertySettings
  id: ProfilePropertySettings
  children:
  - System.Web.Configuration.ProfilePropertySettings.#ctor(System.String)
  - System.Web.Configuration.ProfilePropertySettings.#ctor(System.String,System.Boolean,System.Web.Configuration.SerializationMode,System.String,System.String,System.String,System.Boolean,System.String)
  - System.Web.Configuration.ProfilePropertySettings.AllowAnonymous
  - System.Web.Configuration.ProfilePropertySettings.CustomProviderData
  - System.Web.Configuration.ProfilePropertySettings.DefaultValue
  - System.Web.Configuration.ProfilePropertySettings.Name
  - System.Web.Configuration.ProfilePropertySettings.Properties
  - System.Web.Configuration.ProfilePropertySettings.Provider
  - System.Web.Configuration.ProfilePropertySettings.ReadOnly
  - System.Web.Configuration.ProfilePropertySettings.SerializeAs
  - System.Web.Configuration.ProfilePropertySettings.Type
  langs:
  - csharp
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
  type: Class
  summary: "Класс ProfilePropertySettings предоставляет способ получить программный доступ и изменение <xref uid=&quot;langword_csharp_profiles&quot; name=&quot;profiles&quot; href=&quot;&quot;> </xref> раздел файла конфигурации. Этот класс не наследуется."
  remarks: "Класс ProfilePropertySettings предоставляет способ программного создания, доступ и изменить определение отдельные свойства, добавляемого `properties` подразделе `profile` раздел файла конфигурации.       `profile` Раздел файла конфигурации задает схему для профилей пользователей. Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел, чтобы создать класс с именем `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Экземпляр этого класса создается для каждого профиля пользователя и отдельные значения профиля можно использовать в коде через <xref:System.Web.HttpContext.Profile%2A?displayProperty=fullName>свойство.</xref:System.Web.HttpContext.Profile%2A?displayProperty=fullName> Дополнительные сведения о свойствах профиля см. в разделе [Общие сведения о свойствах профиля ASP.NET](~/add/includes/ajax-current-ext-md.md). Для Дополнительные сведения о функциях, добавленного к [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], в разделе [Общие сведения о свойствах профиля ASP.NET](../Topic/ASP.NET%20Profile%20Properties%20Overview.md)."
  example:
  - "The following code example shows how to access the <xref:System.Web.Configuration.ProfileSection.PropertySettings%2A> property value, which contains a collection of ProfilePropertySettings objects. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#10](~/add/codesnippet/csharp/t-system.web.configurati_33_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#10](~/add/codesnippet/visualbasic/t-system.web.configurati_33_1.vb)]"
  syntax:
    content: 'public sealed class ProfilePropertySettings : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: ProfilePropertySettings(String)
  nameWithType: ProfilePropertySettings.ProfilePropertySettings(String)
  fullName: System.Web.Configuration.ProfilePropertySettings.ProfilePropertySettings(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> класса с заданным именем."
  remarks: "Следующая таблица показывает значения по умолчанию, используемые для данного конструктора.      | Задание | Значение по умолчанию |   |-------------|-------------------|   | <xref:System.Web.Configuration.ProfilePropertySettings.AllowAnonymous%2A>| `false`.|   | <xref:System.Web.Configuration.ProfilePropertySettings.DefaultValue%2A>| Пустая строка (»»). | | <xref:System.Web.Configuration.ProfilePropertySettings.ReadOnly%2A>| `false`.|   | <xref:System.Web.Configuration.ProfilePropertySettings.SerializeAs%2A>| <xref:System.Web.Configuration.SerializationMode>.|   | <xref:System.Web.Configuration.ProfilePropertySettings.Type%2A>| Пустая строка (»»). |</xref:System.Web.Configuration.ProfilePropertySettings.Type%2A> </xref:System.Web.Configuration.SerializationMode> </xref:System.Web.Configuration.ProfilePropertySettings.SerializeAs%2A> </xref:System.Web.Configuration.ProfilePropertySettings.ReadOnly%2A> </xref:System.Web.Configuration.ProfilePropertySettings.DefaultValue%2A> </xref:System.Web.Configuration.ProfilePropertySettings.AllowAnonymous%2A>"
  syntax:
    content: public ProfilePropertySettings (string name);
    parameters:
    - id: name
      type: System.String
      description: "Уникальное имя для <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> объекта."
  overload: System.Web.Configuration.ProfilePropertySettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.#ctor(System.String,System.Boolean,System.Web.Configuration.SerializationMode,System.String,System.String,System.String,System.Boolean,System.String)
  id: '#ctor(System.String,System.Boolean,System.Web.Configuration.SerializationMode,System.String,System.String,System.String,System.Boolean,System.String)'
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
  nameWithType: ProfilePropertySettings.ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
  fullName: System.Web.Configuration.ProfilePropertySettings.ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> класса с заданным именем и параметрами."
  remarks: "Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел файла конфигурации для создания класса вызывается `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> Класс позволяет доступ и изменение значения для отдельные профили пользователей.       `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Значения параметров, указанных при создании экземпляра <xref:System.Web.Configuration.ProfilePropertySettings>класс будет использоваться для определения связанного свойства `ProfileCommon` класса</xref:System.Web.Configuration.ProfilePropertySettings>       Дополнительные сведения о свойствах профиля см. в разделе [Общие сведения о свойствах профиля ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public ProfilePropertySettings (string name, bool readOnly, System.Web.Configuration.SerializationMode serializeAs, string providerName, string defaultValue, string profileType, bool allowAnonymous, string customProviderData);
    parameters:
    - id: name
      type: System.String
      description: "Уникальное имя для <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> объекта."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что связанное свойство динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класс должен быть только для чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: serializeAs
      type: System.Web.Configuration.SerializationMode
      description: "Один из <xref href=&quot;System.Web.Configuration.SerializationMode&quot;> </xref> значения."
    - id: providerName
      type: System.String
      description: "Имя поставщика из <xref:System.Web.Configuration.ProfileSection.Providers*>Свойства, или пустая строка (»»).</xref:System.Web.Configuration.ProfileSection.Providers*>"
    - id: defaultValue
      type: System.String
      description: "Строка, содержащая значение по умолчанию, используемое для именованного свойства в созданном профиля классе страницы."
    - id: profileType
      type: System.String
      description: "Допустимая ссылка на тип или пустая строка."
    - id: allowAnonymous
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для указания связанного свойства динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса должно поддерживать анонимных пользователей; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, чтобы указать, что анонимные пользователи не могут изменять именованного свойства."
    - id: customProviderData
      type: System.String
      description: "Строка, содержащая сведения о поставщике, используемый поставщиком, связанное со свойством."
  overload: System.Web.Configuration.ProfilePropertySettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous
  id: AllowAnonymous
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: AllowAnonymous
  nameWithType: ProfilePropertySettings.AllowAnonymous
  fullName: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, является ли связанного свойства динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класс может задавать анонимными пользователями."
  remarks: "Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел файла конфигурации для создания класса вызывается `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> Класс позволяет доступ и изменение значения для отдельные профили пользователей.       `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Значения свойств, заданных для экземпляра <xref:System.Web.Configuration.ProfilePropertySettings>класс будет использоваться для определения связанного свойства `ProfileCommon` класса</xref:System.Web.Configuration.ProfilePropertySettings>       Если исключение свойства в `ProfileCommon` класса меняется анонимных пользователей, когда значение свойства AllowAnonymous `false`."
  example:
  - "The following code example shows how to use the AllowAnonymous property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#16](~/add/codesnippet/csharp/p-system.web.configurati_374_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_374_1.vb)]"
  syntax:
    content: public bool AllowAnonymous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанное свойство <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класс может задавать анонимными пользователями; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, указывающее, что анонимные пользователи не могут изменять значение свойства. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.CustomProviderData
  id: CustomProviderData
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: CustomProviderData
  nameWithType: ProfilePropertySettings.CustomProviderData
  fullName: System.Web.Configuration.ProfilePropertySettings.CustomProviderData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает строку пользовательских данных для поставщика свойств профиля."
  syntax:
    content: public string CustomProviderData { get; set; }
    return:
      type: System.String
      description: "Строка пользовательских данных для поставщика свойств профиля. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProfilePropertySettings.CustomProviderData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.DefaultValue
  id: DefaultValue
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ProfilePropertySettings.DefaultValue
  fullName: System.Web.Configuration.ProfilePropertySettings.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение по умолчанию, используемое для связанного свойства динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса."
  remarks: "Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел файла конфигурации для создания класса вызывается `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> Класс позволяет доступ и изменение значения для отдельные профили пользователей.       `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Значения свойств, заданных для экземпляра <xref:System.Web.Configuration.ProfilePropertySettings>класс будет использоваться для определения связанного свойства `ProfileCommon` класса</xref:System.Web.Configuration.ProfilePropertySettings>       Значение по умолчанию используется в качестве начального значения для связанного `ProfileCommon` свойству класса, если профиль пользователя, не содержит значение для свойства. Свойство DefaultValue может иметь строковое значение, значение XML-кодировке (режим сериализации для свойства — XML-сериализация) или в кодировке base-64 двоичную строку (если используется режим сериализации для свойства двоичной сериализации)."
  example:
  - "The following code example shows how to use the DefaultValue property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#19](~/add/codesnippet/csharp/p-system.web.configurati_212_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_212_1.vb)]"
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая значение по умолчанию, используемое для связанного свойства динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса. Значение по умолчанию — пустая строка (»»)."
  overload: System.Web.Configuration.ProfilePropertySettings.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.Name
  id: Name
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: Name
  nameWithType: ProfilePropertySettings.Name
  fullName: System.Web.Configuration.ProfilePropertySettings.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает имя <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> объект и связанное свойство динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса."
  remarks: "Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел файла конфигурации для создания класса вызывается `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> Класс позволяет доступ и изменение значения для отдельные профили пользователей.       `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Значения свойств, заданных для экземпляра <xref:System.Web.Configuration.ProfilePropertySettings>класс будет использоваться для определения связанного свойства `ProfileCommon` класса</xref:System.Web.Configuration.ProfilePropertySettings>"
  example:
  - "The following code example shows how to use the Name property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#21](~/add/codesnippet/csharp/p-system.web.configurati_118_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#21](~/add/codesnippet/visualbasic/p-system.web.configurati_118_1.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая имя <xref href=&quot;System.Web.Configuration.ProfilePropertySettings&quot;> </xref> объекта. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProfilePropertySettings.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.Properties
  id: Properties
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: Properties
  nameWithType: ProfilePropertySettings.Properties
  fullName: System.Web.Configuration.ProfilePropertySettings.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Для добавления."
  overload: System.Web.Configuration.ProfilePropertySettings.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.Provider
  id: Provider
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: Provider
  nameWithType: ProfilePropertySettings.Provider
  fullName: System.Web.Configuration.ProfilePropertySettings.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает имя поставщика, который используется при сериализации именованного свойства."
  remarks: "Поставщики профилей являются источниками данных, в которых хранятся значения профиля пользователя. Можно указать поставщиков профилей в `providers` подразделе `profile` раздел файла конфигурации.       Если значение этого свойства является пустая строка, поставщик по умолчанию, указанные в <xref:System.Web.Configuration.ProfileSection.DefaultProvider%2A?displayProperty=fullName>используется свойство.</xref:System.Web.Configuration.ProfileSection.DefaultProvider%2A?displayProperty=fullName>"
  example:
  - "The following code example shows how to use the Provider property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#20](~/add/codesnippet/csharp/p-system.web.configurati_152_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#20](~/add/codesnippet/visualbasic/p-system.web.configurati_152_1.vb)]"
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "Имя поставщика из &lt;xref:System.Web.Configuration.ProfileSection.Providers%2A?displayProperty=fullName&gt; свойства, или пустая строка (»»). Значение по умолчанию — пустая строка."
  overload: System.Web.Configuration.ProfilePropertySettings.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.ReadOnly
  id: ReadOnly
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: ReadOnly
  nameWithType: ProfilePropertySettings.ReadOnly
  fullName: System.Web.Configuration.ProfilePropertySettings.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, определяющее, является ли связанное свойство динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класс доступен только для чтения."
  remarks: "Во время выполнения, система компиляции ASP.NET использует сведения, указанные в `profile` раздел файла конфигурации для создания класса вызывается `ProfileCommon`, который является производным от <xref:System.Web.Profile.ProfileBase>.</xref:System.Web.Profile.ProfileBase> Класс позволяет доступ и изменение значения для отдельные профили пользователей.       `ProfileCommon` Определения класса зависит от свойства, определенные в `properties` подразделе `profile` раздел файла конфигурации. Значения свойств, заданных для экземпляра <xref:System.Web.Configuration.ProfilePropertySettings>класс будет использоваться для определения связанного свойства `ProfileCommon` класса</xref:System.Web.Configuration.ProfilePropertySettings>"
  example:
  - "The following code example shows how to use the ReadOnly property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#15](~/add/codesnippet/csharp/p-system.web.configurati_26_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_26_1.vb)]"
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанное свойство <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класс только для чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProfilePropertySettings.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.SerializeAs
  id: SerializeAs
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: SerializeAs
  nameWithType: ProfilePropertySettings.SerializeAs
  fullName: System.Web.Configuration.ProfilePropertySettings.SerializeAs
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает метод сериализации, используемый для связанного свойства динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса."
  remarks: "Дополнительные сведения о свойствах профиля см. в разделе [Общие сведения о свойствах профиля ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to use the SerializeAs property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#17](~/add/codesnippet/csharp/p-system.web.configurati_307_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_307_1.vb)]"
  syntax:
    content: public System.Web.Configuration.SerializationMode SerializeAs { get; set; }
    return:
      type: System.Web.Configuration.SerializationMode
      description: "Один из <xref href=&quot;System.Web.Configuration.SerializationMode&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Web.Configuration.SerializationMode&quot;> </xref>."
  overload: System.Web.Configuration.ProfilePropertySettings.SerializeAs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProfilePropertySettings.Type
  id: Type
  parent: System.Web.Configuration.ProfilePropertySettings
  langs:
  - csharp
  name: Type
  nameWithType: ProfilePropertySettings.Type
  fullName: System.Web.Configuration.ProfilePropertySettings.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает имя типа связанного свойства в динамически созданные <xref uid=&quot;langword_csharp_ProfileCommon&quot; name=&quot;ProfileCommon&quot; href=&quot;&quot;> </xref> класса."
  remarks: "Если задано значение допустимая ссылка на тип, этот тип используется для именованного свойства в созданном `ProfileCommon` класса.       Ссылка на тип формируется следующим образом (элементы в квадратных скобках необязательны): `Namespace.Typename, Assemblyname[,] [Version=x,] [Culture=y,] [PublicKeyToken=z]` например:`&quot;ExampleNameSpace.ExampleType, Example.Assembly, Version=%ASSEMBLY_VERSION%, Culture=neutral, PublicKeyToken=%MICROSOFT_PUBLICKEY%&quot;`"
  example:
  - "The following code example shows how to use the Type property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ProfileSection> class.  \n  \n [!code-cs[System.Web.Configuration.ProfileSection#18](~/add/codesnippet/csharp/p-system.web.configurati_385_1.cs)]\n [!code-vb[System.Web.Configuration.ProfileSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_385_1.vb)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "Допустимые полного имени типа ссылки или пустая строка (»»). Значение по умолчанию — пустая строка."
  overload: System.Web.Configuration.ProfilePropertySettings.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.ProfilePropertySettings.#ctor(System.String)
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: ProfilePropertySettings(String)
  nameWithType: ProfilePropertySettings.ProfilePropertySettings(String)
  fullName: System.Web.Configuration.ProfilePropertySettings.ProfilePropertySettings(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ProfilePropertySettings.#ctor(System.String,System.Boolean,System.Web.Configuration.SerializationMode,System.String,System.String,System.String,System.Boolean,System.String)
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
  nameWithType: ProfilePropertySettings.ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
  fullName: System.Web.Configuration.ProfilePropertySettings.ProfilePropertySettings(String,Boolean,SerializationMode,String,String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.SerializationMode
  parent: System.Web.Configuration
  isExternal: false
  name: SerializationMode
  nameWithType: SerializationMode
  fullName: System.Web.Configuration.SerializationMode
- uid: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: AllowAnonymous
  nameWithType: ProfilePropertySettings.AllowAnonymous
  fullName: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous
- uid: System.Web.Configuration.ProfilePropertySettings.CustomProviderData
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: CustomProviderData
  nameWithType: ProfilePropertySettings.CustomProviderData
  fullName: System.Web.Configuration.ProfilePropertySettings.CustomProviderData
- uid: System.Web.Configuration.ProfilePropertySettings.DefaultValue
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: DefaultValue
  nameWithType: ProfilePropertySettings.DefaultValue
  fullName: System.Web.Configuration.ProfilePropertySettings.DefaultValue
- uid: System.Web.Configuration.ProfilePropertySettings.Name
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Name
  nameWithType: ProfilePropertySettings.Name
  fullName: System.Web.Configuration.ProfilePropertySettings.Name
- uid: System.Web.Configuration.ProfilePropertySettings.Properties
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Properties
  nameWithType: ProfilePropertySettings.Properties
  fullName: System.Web.Configuration.ProfilePropertySettings.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ProfilePropertySettings.Provider
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Provider
  nameWithType: ProfilePropertySettings.Provider
  fullName: System.Web.Configuration.ProfilePropertySettings.Provider
- uid: System.Web.Configuration.ProfilePropertySettings.ReadOnly
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: ReadOnly
  nameWithType: ProfilePropertySettings.ReadOnly
  fullName: System.Web.Configuration.ProfilePropertySettings.ReadOnly
- uid: System.Web.Configuration.ProfilePropertySettings.SerializeAs
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: SerializeAs
  nameWithType: ProfilePropertySettings.SerializeAs
  fullName: System.Web.Configuration.ProfilePropertySettings.SerializeAs
- uid: System.Web.Configuration.ProfilePropertySettings.Type
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Type
  nameWithType: ProfilePropertySettings.Type
  fullName: System.Web.Configuration.ProfilePropertySettings.Type
- uid: System.Web.Configuration.ProfilePropertySettings.#ctor*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings.ProfilePropertySettings
- uid: System.Web.Configuration.ProfilePropertySettings.AllowAnonymous*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: AllowAnonymous
  nameWithType: ProfilePropertySettings.AllowAnonymous
- uid: System.Web.Configuration.ProfilePropertySettings.CustomProviderData*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: CustomProviderData
  nameWithType: ProfilePropertySettings.CustomProviderData
- uid: System.Web.Configuration.ProfilePropertySettings.DefaultValue*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: DefaultValue
  nameWithType: ProfilePropertySettings.DefaultValue
- uid: System.Web.Configuration.ProfilePropertySettings.Name*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Name
  nameWithType: ProfilePropertySettings.Name
- uid: System.Web.Configuration.ProfilePropertySettings.Properties*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Properties
  nameWithType: ProfilePropertySettings.Properties
- uid: System.Web.Configuration.ProfilePropertySettings.Provider*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Provider
  nameWithType: ProfilePropertySettings.Provider
- uid: System.Web.Configuration.ProfilePropertySettings.ReadOnly*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: ReadOnly
  nameWithType: ProfilePropertySettings.ReadOnly
- uid: System.Web.Configuration.ProfilePropertySettings.SerializeAs*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: SerializeAs
  nameWithType: ProfilePropertySettings.SerializeAs
- uid: System.Web.Configuration.ProfilePropertySettings.Type*
  parent: System.Web.Configuration.ProfilePropertySettings
  isExternal: false
  name: Type
  nameWithType: ProfilePropertySettings.Type
