### YamlMime:ManagedReference
items:
- uid: System.Xaml.IXamlNameResolver
  id: IXamlNameResolver
  children:
  - System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  - System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  - System.Xaml.IXamlNameResolver.Resolve(System.String)
  - System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  langs:
  - csharp
  name: IXamlNameResolver
  nameWithType: IXamlNameResolver
  fullName: System.Xaml.IXamlNameResolver
  type: Interface
  summary: "Описывает службу, которая может возвращать объекты, указанные по имени XAML, или в качестве альтернативы возвращает токен, который откладывает разрешение имен. Служба может также возвращать перечисляемый набор всех именованных объектов, которые находятся в области имен XAML."
  remarks: "Этот интерфейс не предназначен для внешней реализации типовых сценариев XAML, так как она является службой. Эта служба обеспечивает расширения разметки и преобразователи типов для разрешения имен XAML на другие объекты из одного источника XAML, пока они находятся в представление узлов XAML. Службы можно использовать для разрешения прямых ссылок на любой механизм, который зависит от имен XAML для нелинейного доступа к окружающей рабочей среды XAML. Дополнительные сведения см. в разделе [преобразователи типов или расширения разметки для XAML](~/add/includes/ajax-current-ext-md.md).       Преобразователи типов или расширения разметки может запросить IXamlNameResolver как служба в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения. Дополнительные сведения см. в разделе [преобразователи типов или расширения разметки для XAML](../Topic/Type%20Converters%20and%20Markup%20Extensions%20for%20XAML.md) и [служебные контексты, доступные для расширений разметки и преобразователей типов](~/add/includes/ajax-current-ext-md.md).       Эта служба предоставляет API, который можно отложить разрешения имен. Метафора, реализованная службой — что имена, которые не удается разрешить в первый проход в отношении частичного графа имя объект должен храниться и использоваться для создания токена адресной привязки. В поведении по умолчанию все такие имена отправляются для другой попытки разрешения при втором проходе. На втором проходе графика общее имя объекта, а все маркеры исправление может разрешить.      Настроек [!NOTE] настроек даже если они разрешены с конкретной реализации, прямые ссылки в XAML неизбежно имеет влияние на производительность. Рекомендуется для промышленного качества XAML Избегайте прямых ссылок, по возможности."
  syntax:
    content: public interface IXamlNameResolver
  implements: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  id: GetAllNamesAndValuesInScope
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: GetAllNamesAndValuesInScope()
  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope()
  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает перечислимый набор всех именованных объектов из области имен XAML."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> GetAllNamesAndValuesInScope ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Перечислимый набор &lt;xref:System.Collections.Generic.KeyValuePair%602&gt; объектов. Для каждого &lt;xref:System.Collections.Generic.KeyValuePair%602&gt;, &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; компонент представляет собой строку и &lt;xref:System.Collections.Generic.KeyValuePair%602.Value%2A&gt; компонент является объект, который использует &lt;xref:System.Collections.Generic.KeyValuePair%602.Key%2A&gt; имя области имен XAML."
  overload: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: GetFixupToken(IEnumerable<String>)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед."
  remarks: "Существующие службы внутренней службы, доступные в контекстах схемы для расширений разметки и преобразователи типов может реализовать эту службу; Тем не менее они возвращают внутренний тип, который может обрабатывать только существующие записи XAML, которые работают в контексте схемы XAML по умолчанию.       Когда все имена с прямыми ссылками разрешить, пользовательский код вызывается для повторной обработки каждое имя в списке."
  syntax:
    content: public object GetFixupToken (System.Collections.Generic.IEnumerable<string> names);
    parameters:
    - id: names
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Коллекция имен, которые могут являться ссылками вперед."
    return:
      type: System.Object
      description: "Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем."
  overload: System.Xaml.IXamlNameResolver.GetFixupToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: GetFixupToken(IEnumerable<String>,Boolean)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед."
  remarks: "Существующие службы внутренней службы, доступные в контекстах схемы для расширений разметки и преобразователи типов реализуют эту службу; Тем не менее они возвращают внутренний тип, может быть обработано только существующие модули записи XAML, работающие в контексте схемы XAML по умолчанию.       Если `canAssignDirectly` — `false`, когда все имена с прямыми ссылками являются разрешимыми, пользовательский код вызывается для повторной обработки каждое имя в списке."
  syntax:
    content: public object GetFixupToken (System.Collections.Generic.IEnumerable<string> names, bool canAssignDirectly);
    parameters:
    - id: names
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Коллекция имен, которые могут являться ссылками вперед."
    - id: canAssignDirectly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы немедленно назначьте ссылку разрешенное имя целевого свойства. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>для вызова пользовательского кода для повторного синтаксического анализа. По умолчанию <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем."
  overload: System.Xaml.IXamlNameResolver.GetFixupToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  id: IsFixupTokenAvailable
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: IsFixupTokenAvailable
  nameWithType: IXamlNameResolver.IsFixupTokenAvailable
  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает значение, определяющее, является ли вызов <xref:System.Xaml.IXamlNameResolver.GetFixupToken*>доступен для разрешения имени в маркер для прямого разрешения.</xref:System.Xaml.IXamlNameResolver.GetFixupToken*>"
  remarks: "Это свойство возвращает `false` при <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>не возвращает маркер, так как <xref:System.Xaml.Schema.XamlValueConverter%601>участвует в существующую строку лексемы на второй проход.</xref:System.Xaml.Schema.XamlValueConverter%601> </xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>"
  syntax:
    content: public bool IsFixupTokenAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Xaml.IXamlNameResolver.GetFixupToken*>доступен как реализация, которая возвращает маркер, полезные для прямого разрешения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.IXamlNameResolver.GetFixupToken*>"
  overload: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  id: OnNameScopeInitializationComplete
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: OnNameScopeInitializationComplete
  nameWithType: IXamlNameResolver.OnNameScopeInitializationComplete
  fullName: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  type: Event
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Происходит, когда обработчик XAML зарегистрировал все соответствующие имена резервной области имен XAML."
  syntax:
    content: public event EventHandler OnNameScopeInitializationComplete;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String)
  id: Resolve(System.String)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: Resolve(String)
  nameWithType: IXamlNameResolver.Resolve(String)
  fullName: System.Xaml.IXamlNameResolver.Resolve(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Разрешает объект из ссылки на имя."
  remarks: "Если возвращается значение `null`, возможно, существует прямая ссылка. Можно использовать в реализации, которые требуется поддерживать ссылки вперед `FixupToken` шаблона через <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>и <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A>API-интерфейсы.</xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> </xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>"
  syntax:
    content: public object Resolve (string name);
    parameters:
    - id: name
      type: System.String
      description: "Ссылка на имя для решения."
    return:
      type: System.Object
      description: "Разрешенный объект; или значение null."
  overload: System.Xaml.IXamlNameResolver.Resolve*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  id: Resolve(System.String,System.Boolean@)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  name: Resolve(String,Boolean)
  nameWithType: IXamlNameResolver.Resolve(String,Boolean)
  fullName: System.Xaml.IXamlNameResolver.Resolve(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Разрешает объект из ссылки на имя и предоставляет значение отслеживания, который сообщает, является ли объект полностью инициализирован для целей графа объекта."
  syntax:
    content: public object Resolve (string name, out bool isFullyInitialized);
    parameters:
    - id: name
      type: System.String
      description: "Ссылка на имя для решения."
    - id: isFullyInitialized
      type: System.Boolean
      description: "По возвращении из этого метода <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> если возвращенный объект не зависит от неразрешенными ссылками; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем."
  overload: System.Xaml.IXamlNameResolver.Resolve*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: GetAllNamesAndValuesInScope()
  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope()
  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Object>>
  nameWithType: IEnumerable<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: GetFixupToken(IEnumerable<String>)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: GetFixupToken(IEnumerable<String>,Boolean)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(IEnumerable<String>,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: IsFixupTokenAvailable
  nameWithType: IXamlNameResolver.IsFixupTokenAvailable
  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
- uid: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: OnNameScopeInitializationComplete
  nameWithType: IXamlNameResolver.OnNameScopeInitializationComplete
  fullName: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String)
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: Resolve(String)
  nameWithType: IXamlNameResolver.Resolve(String)
  fullName: System.Xaml.IXamlNameResolver.Resolve(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: Resolve(String,Boolean)
  nameWithType: IXamlNameResolver.Resolve(String,Boolean)
  fullName: System.Xaml.IXamlNameResolver.Resolve(String,Boolean)
- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: GetAllNamesAndValuesInScope
  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope
- uid: System.Xaml.IXamlNameResolver.GetFixupToken*
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: GetFixupToken
  nameWithType: IXamlNameResolver.GetFixupToken
- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: IsFixupTokenAvailable
  nameWithType: IXamlNameResolver.IsFixupTokenAvailable
- uid: System.Xaml.IXamlNameResolver.Resolve*
  parent: System.Xaml.IXamlNameResolver
  isExternal: false
  name: Resolve
  nameWithType: IXamlNameResolver.Resolve
