### YamlMime:ManagedReference
items:
- uid: System.Data.IDataParameter
  id: IDataParameter
  children:
  - System.Data.IDataParameter.DbType
  - System.Data.IDataParameter.Direction
  - System.Data.IDataParameter.IsNullable
  - System.Data.IDataParameter.ParameterName
  - System.Data.IDataParameter.SourceColumn
  - System.Data.IDataParameter.SourceVersion
  - System.Data.IDataParameter.Value
  langs:
  - csharp
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
  type: Interface
  summary: "Представляет параметр для объекта команды и при необходимости, его отображение в <xref href=&quot;System.Data.DataSet&quot;> </xref> столбцы и реализуется с помощью поставщиков данных .NET Framework, которые обращаются к источникам данных."
  remarks: "Интерфейс IDataParameter позволяет наследующему классу реализовать класс параметр, который представляет параметр для объекта команды. Дополнительные сведения о классах Parameter см. в разделе [Настройка параметров и типов данных параметров](~/add/includes/ajax-current-ext-md.md).       Приложение не создает экземпляр интерфейса IDataParameter напрямую, а также создает экземпляр класса, наследующего IDataParameter.       Классы, наследующие IDataParameter должны реализовывать наследуемые члены и обычно определяются дополнительные члены для добавления функций конкретного поставщика. Например, интерфейс IDataParameter определяет <xref:System.Data.IDataParameter.DbType%2A>свойство.</xref:System.Data.IDataParameter.DbType%2A> В свою очередь <xref:System.Data.OleDb.OleDbParameter>класс наследует это свойство, а также определяет <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>свойство.</xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> </xref:System.Data.OleDb.OleDbParameter>"
  example:
  - "The following example creates multiple instances of the derived class, <xref:System.Data.SqlClient.SqlParameter>, through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created with the appropriate schema, commands, and connection.  \n  \n [!code-cs[Classic WebData SqlParameter Example#1](~/add/codesnippet/csharp/t-system.data.idataparam_1.cs)]\n [!code-vb[Classic WebData SqlParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.idataparam_1.vb)]"
  syntax:
    content: public interface IDataParameter
  implements: []
  platform:
  - net462
- uid: System.Data.IDataParameter.DbType
  id: DbType
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: DbType
  nameWithType: IDataParameter.DbType
  fullName: System.Data.IDataParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает <xref href=&quot;System.Data.DbType&quot;> </xref> параметра."
  remarks: "PrvDbType, (где Prv представляет префикс конкретного поставщика) и <xref:System.Data.SqlClient.SqlParameter.DbType%2A>связаны.</xref:System.Data.SqlClient.SqlParameter.DbType%2A> Таким образом, задание <xref:System.Data.SqlClient.SqlParameter.DbType%2A>примет PrvDbType поддерживать это свойство.</xref:System.Data.SqlClient.SqlParameter.DbType%2A>       Список поддерживаемых типов данных см. в разделе соответствующий член PrvDbType поставщика данных .NET Framework. Дополнительные сведения см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "Один из <xref href=&quot;System.Data.DbType&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Data.DbType&quot;> </xref>."
  overload: System.Data.IDataParameter.DbType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Свойство не было задано допустимое <xref href=&quot;System.Data.DbType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.IDataParameter.Direction
  id: Direction
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: Direction
  nameWithType: IDataParameter.Direction
  fullName: System.Data.IDataParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает значение, указывающее ли параметр только входным, только выходным, двунаправленным или параметром возвращаемое значение хранимой процедурой."
  remarks: "Если <xref:System.Data.ParameterDirection>является выходным параметром, то при выполнении связанной <xref:System.Data.SqlClient.SqlCommand>не возвращает значение, <xref:System.Data.IDataParameter>содержит значение null.</xref:System.Data.IDataParameter> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.ParameterDirection>       После считывания последней строки из результатов `Output`, `InputOut`, и `ReturnValue` обновляются параметры."
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.Direction Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_1_1.cs)]\n [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_1_1.vb)]"
  syntax:
    content: public System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Свойство не было задано одно из допустимых <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Data.IDataParameter.IsNullable
  id: IsNullable
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
  fullName: System.Data.IDataParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает значение, указывающее, принимает ли этот параметр значения null."
  remarks: "Значения NULL обрабатываются с помощью <xref:System.DBNull>класса.</xref:System.DBNull>"
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_4_1.cs)]\n [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_4_1.vb)]"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значения null принимаются; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataParameter.ParameterName
  id: ParameterName
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
  fullName: System.Data.IDataParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает имя <xref href=&quot;System.Data.IDataParameter&quot;> </xref>."
  remarks: "Имя_параметра указывается в виде @paramname. Перед выполнением команды, которая зависит от параметров необходимо значение ParameterName."
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_5_1.vb)]\n [!code-cs[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_5_1.cs)]"
  syntax:
    content: public string ParameterName { get; set; }
    return:
      type: System.String
      description: "Имя <xref href=&quot;System.Data.IDataParameter&quot;> </xref>. Значение по умолчанию — пустая строка."
  overload: System.Data.IDataParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
  fullName: System.Data.IDataParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает имя исходного столбца, сопоставленного <xref href=&quot;System.Data.DataSet&quot;> </xref> и используется для загрузки или возвращения <xref:System.Data.IDataParameter.Value*>.</xref:System.Data.IDataParameter.Value*>"
  remarks: "Связь между значением <xref:System.Data.IDataParameter>и <xref:System.Data.DataTable>может быть двунаправленной в зависимости от значения <xref:System.Data.IDataParameter.Direction%2A>свойство.</xref:System.Data.IDataParameter.Direction%2A> </xref:System.Data.DataTable> </xref:System.Data.IDataParameter>"
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_0_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SourceColumn Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_0_1.cs)]"
  syntax:
    content: public string SourceColumn { get; set; }
    return:
      type: System.String
      description: "Имя исходного столбца, сопоставленного <xref href=&quot;System.Data.DataSet&quot;> </xref>. Значение по умолчанию — пустая строка."
  overload: System.Data.IDataParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
  fullName: System.Data.IDataParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> для использования при загрузке <xref:System.Data.IDataParameter.Value*>.</xref:System.Data.IDataParameter.Value*>"
  remarks: "Это свойство используется <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>во время <xref:System.Data.Common.DbDataAdapter.Update%2A>для определения того, используется ли значение исходного или текущего значения параметра.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.IDbDataAdapter.UpdateCommand%2A> Это позволяет обновить первичные ключи. Это свойство учитывается <xref:System.Data.IDbDataAdapter.InsertCommand%2A>и <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</xref:System.Data.IDbDataAdapter.DeleteCommand%2A> </xref:System.Data.IDbDataAdapter.InsertCommand%2A> Это свойство имеет значение версии <xref:System.Data.DataRow>используемые <xref:System.Data.DataRow.Item%2A>Свойства, или <xref:System.Data.DataRow.GetChildRows%2A>метод <xref:System.Data.DataRow>объекта.</xref:System.Data.DataRow> </xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow>"
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SourceVersion Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_3_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_3_1.vb)]"
  syntax:
    content: public System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataParameter.SourceVersion*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Свойство не было задано одно из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Data.IDataParameter.Value
  id: Value
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: Value
  nameWithType: IDataParameter.Value
  fullName: System.Data.IDataParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Возвращает или задает значение параметра."
  remarks: "Для входных параметров значение, привязанное к <xref:System.Data.IDbCommand>, отправляемое на сервер.</xref:System.Data.IDbCommand> Для вывода параметров и возвращаемых значений, имеет значение по завершении <xref:System.Data.IDbCommand>и после <xref:System.Data.IDataReader>закрыт.</xref:System.Data.IDataReader> </xref:System.Data.IDbCommand>       При отправке значения параметра null на сервере, пользователь должен указать `DBNull`, не допускающий значения null. Значение null в системе-это пустой объект, который не имеет значения. `DBNull`используется для представления значений null.       Если приложение указывает тип базы данных, связанное значение преобразуется к этому типу, когда поставщик данных отправляет данные на сервер. Поставщик пытается преобразовать любой тип значения, если он поддерживает <xref:System.IConvertible>интерфейса.</xref:System.IConvertible> Если указанный тип не совместим со значением, могут возникнуть ошибки преобразования.       <xref:System.Data.SqlClient.SqlParameter.Value%2A>Свойство перезаписывается <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.SqlClient.SqlParameter.Value%2A>"
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.Value Example#1](~/add/codesnippet/visualbasic/p-system.data.idataparam_2_1.vb)]\n [!code-cs[Classic WebData SqlParameter.Value Example#1](~/add/codesnippet/csharp/p-system.data.idataparam_2_1.cs)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>Который является значением параметра.</xref:System.Object> Значение по умолчанию имеет значение null."
  overload: System.Data.IDataParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.IDataParameter.DbType
  parent: System.Data.IDataParameter
  isExternal: false
  name: DbType
  nameWithType: IDataParameter.DbType
  fullName: System.Data.IDataParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.IDataParameter.Direction
  parent: System.Data.IDataParameter
  isExternal: false
  name: Direction
  nameWithType: IDataParameter.Direction
  fullName: System.Data.IDataParameter.Direction
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Data.IDataParameter.IsNullable
  parent: System.Data.IDataParameter
  isExternal: false
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
  fullName: System.Data.IDataParameter.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataParameter.ParameterName
  parent: System.Data.IDataParameter
  isExternal: false
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
  fullName: System.Data.IDataParameter.ParameterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataParameter.SourceColumn
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
  fullName: System.Data.IDataParameter.SourceColumn
- uid: System.Data.IDataParameter.SourceVersion
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
  fullName: System.Data.IDataParameter.SourceVersion
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.IDataParameter.Value
  parent: System.Data.IDataParameter
  isExternal: false
  name: Value
  nameWithType: IDataParameter.Value
  fullName: System.Data.IDataParameter.Value
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDataParameter.DbType*
  parent: System.Data.IDataParameter
  isExternal: false
  name: DbType
  nameWithType: IDataParameter.DbType
- uid: System.Data.IDataParameter.Direction*
  parent: System.Data.IDataParameter
  isExternal: false
  name: Direction
  nameWithType: IDataParameter.Direction
- uid: System.Data.IDataParameter.IsNullable*
  parent: System.Data.IDataParameter
  isExternal: false
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
- uid: System.Data.IDataParameter.ParameterName*
  parent: System.Data.IDataParameter
  isExternal: false
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
- uid: System.Data.IDataParameter.SourceColumn*
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
- uid: System.Data.IDataParameter.SourceVersion*
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
- uid: System.Data.IDataParameter.Value*
  parent: System.Data.IDataParameter
  isExternal: false
  name: Value
  nameWithType: IDataParameter.Value
