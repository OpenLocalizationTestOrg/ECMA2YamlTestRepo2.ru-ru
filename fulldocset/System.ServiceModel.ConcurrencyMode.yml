### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Указывает, поддерживает ли класс службы — однопотоковый или многопотоковый режима работы."
  remarks: "ConcurrencyMode используется в сочетании с <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>свойство, указывающее, поддерживает ли класс службы — однопотоковый или многопотоковый режимы работы.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> Однопотоковая операция может быть реентерабельным или допускает повторные входы.       В следующей таблице показано, когда [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] разрешает вызов во время выполнения в данный момент, в зависимости от ConcurrencyMode другой операции.      | Значение ConcurrencyMode | Может быть вызвана новая операция? |   |---------------------------|-------------------------------------|   | Один | Никогда не. |   | Повторные | Только при вызове другой службы или обратном вызове. |   | Несколько | Всегда. |"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Экземпляр службы является многопотоковым. Гарантии синхронизации не выполняются. Поскольку другие потоки могут изменить объект службы в любое время, необходимо всегда обеспечивать синхронизацию и согласованность состояний в любое время."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Экземпляр службы является однопотоковым и допускает повторные входящие вызовы. Повторные служба принимает вызовы при вызове другой службы; Вот почему необходимо оставить перед выноски согласованное состояние объекта и необходимо подтвердить допустимость данных локальной операции после вызовов. Обратите внимание, что экземпляр службы разблокируется только путем вызова другой службы по [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] канала. В этом случае вызванная служба может повторно войти в первую службу через обратный вызов. Если первая служба не является реентерабельным, последовательность вызовов приводит к взаимоблокировке. Дополнительные сведения см. в разделе <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>"
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Экземпляр службы является однопотоковым и не допускает повторные входящие вызовы. Если <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>свойство <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>и при вызове служб экземпляром поступают дополнительные сообщения, эти сообщения должны ждать, пока служба доступна или до времени ожидания.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>"
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
