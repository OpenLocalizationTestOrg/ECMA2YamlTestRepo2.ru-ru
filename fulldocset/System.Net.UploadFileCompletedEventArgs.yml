### YamlMime:ManagedReference
items:
- uid: System.Net.UploadFileCompletedEventArgs
  id: UploadFileCompletedEventArgs
  children:
  - System.Net.UploadFileCompletedEventArgs.Result
  langs:
  - csharp
  name: UploadFileCompletedEventArgs
  nameWithType: UploadFileCompletedEventArgs
  fullName: System.Net.UploadFileCompletedEventArgs
  type: Class
  summary: "Предоставляет данные для <xref:System.Net.WebClient.UploadFileCompleted>событий.</xref:System.Net.WebClient.UploadFileCompleted>"
  remarks: "Экземпляры этого класса передаются на <xref:System.Net.UploadFileCompletedEventHandler>.</xref:System.Net.UploadFileCompletedEventHandler>"
  example:
  - "The following code example demonstrates asynchronously uploading a file.  \n  \n [!code-cpp[NCLWebClientAsync#4](~/add/codesnippet/cpp/t-system.net.uploadfilec_1_1.cpp)]\n [!code-cs[NCLWebClientAsync#4](~/add/codesnippet/csharp/t-system.net.uploadfilec_1_1.cs)]\n [!code-vb[NCLWebClientAsync#4](~/add/codesnippet/visualbasic/t-system.net.uploadfilec_1_1.vb)]  \n  \n The following method is called when the upload completes.  \n  \n [!code-cpp[NCLWebClientAsync#5](~/add/codesnippet/cpp/t-system.net.uploadfilec_1_2.cpp)]\n [!code-cs[NCLWebClientAsync#5](~/add/codesnippet/csharp/t-system.net.uploadfilec_1_2.cs)]\n [!code-vb[NCLWebClientAsync#5](~/add/codesnippet/visualbasic/t-system.net.uploadfilec_1_2.vb)]"
  syntax:
    content: 'public class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'
  inheritance:
  - System.ComponentModel.AsyncCompletedEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.UploadFileCompletedEventArgs.Result
  id: Result
  parent: System.Net.UploadFileCompletedEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: UploadFileCompletedEventArgs.Result
  fullName: System.Net.UploadFileCompletedEventArgs.Result
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает ответ сервера для данных передачи операцию, запущенную вызовом <xref:System.Net.WebClient.UploadFileAsync*>метод.</xref:System.Net.WebClient.UploadFileAsync*>"
  remarks: "Вы должны проверить <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>и <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>Свойства, чтобы определить, завершена ли отправка.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Если <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>является значение свойства <xref:System.Exception>объекта или <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>свойству присвоено значение `true`, асинхронная операция не выполнена, и значение свойства результат не будет допустимым.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.Exception> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[NCLWebClientAsync#5](~/add/codesnippet/cpp/p-system.net.uploadfilec_1.cpp)]\n [!code-cs[NCLWebClientAsync#5](~/add/codesnippet/csharp/p-system.net.uploadfilec_1.cs)]\n [!code-vb[NCLWebClientAsync#5](~/add/codesnippet/visualbasic/p-system.net.uploadfilec_1.vb)]"
  syntax:
    content: public byte[] Result { get; }
    return:
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, содержащий ответ сервера.</xref:System.Byte>"
  overload: System.Net.UploadFileCompletedEventArgs.Result*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.UploadFileCompletedEventArgs.Result
  parent: System.Net.UploadFileCompletedEventArgs
  isExternal: false
  name: Result
  nameWithType: UploadFileCompletedEventArgs.Result
  fullName: System.Net.UploadFileCompletedEventArgs.Result
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.UploadFileCompletedEventArgs.Result*
  parent: System.Net.UploadFileCompletedEventArgs
  isExternal: false
  name: Result
  nameWithType: UploadFileCompletedEventArgs.Result
