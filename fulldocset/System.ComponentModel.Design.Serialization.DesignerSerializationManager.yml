### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  id: DesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  langs:
  - csharp
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  type: Class
  summary: "Предоставляет реализацию <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> интерфейса."
  remarks: "<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>Интерфейс должен быть интерфейсом независимо от формата для объекта, который управляет сериализацией.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> По существу предоставляет контекст и службы для сериализаторов, которые фактически выполнить десериализацию. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>помогает в процессе десериализации, отслеживая объектов.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Это аналогично способ <xref:System.ComponentModel.Design.IDesignerHost>интерфейса: конструкторы фактически предоставляют пользовательский интерфейс (UI), и <xref:System.ComponentModel.Design.IDesignerHost>, обеспечивает связь и позволяющая различных конструкторов могут работать вместе.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost>       Этот класс реализует DesignerSerializationManager <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Он предназначен для обеспечения стандартной формы десериализации, который аналогичен во время выполнения сериализаторов, таких как <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>       Класс DesignerSerializationManager достигает трех целей: — это простой, готовый к использованию объект, можно использовать для десериализации различных форматах.      -Это универсален и не привязан к определенному формату. Он может использоваться одинаково для десериализации CodeDOM при десериализации исправлений.      -Он является расширяемым и поддерживает сериализацию различные методы, используемые в копирования и вставки и отмены и повтора сценариев.       Сериализация времени разработки имеет следующие отличия от сериализации объектов во время выполнения:-объекта, выполняющего сериализацию обычно отделен от объекта во время выполнения, чтобы во время разработки логики можно удалить из компонента.      -Схема сериализации предполагает объект создается полностью инициализированным, а затем изменяется через свойство и вызовы методов во время десериализации.      -Свойства объекта, значения которых были заданы для объекта (свойства содержат значения по умолчанию), не сериализуются. И наоборот поток десериализации может содержать пустые элементы.      -Акцент делается на качестве содержимого в потоке сериализации, а не полный сериализации объекта. Это означает, что если нет определенного способа сериализации объекта, этот объект может пропустить вместо создания исключения. Модуль сериализации могут предоставить эвристику, чтобы определить, какие ошибки можно игнорировать, а какие — без возможности восстановления.      -В поток сериализации может иметь больше данных, чем необходимо для десериализации. Например, сериализация исходного кода имеет код пользователя, смешанный с кодом, необходимым для десериализации графа объектов. Этот пользовательский код должен быть пропущен при десериализации и сохранять в процессе сериализации.       Из-за этих различий применяется другая модель сериализации во время разработки. Эта модель использует отдельный объект сериализатора для каждого сериализуемого типа данных. Каждый сериализатор делает свой небольшой вклад проблему в целом. Все эти сериализаторы координируются через общий диспетчер сериализации. Диспетчер сериализации отвечает за сохранение состояния между разными сериализаторами. Например, рассмотрим следующий класс: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb) ] экземпляр этого класса использует три разных сериализатора: один для `SampleObject`, один для строк, а другой для целых чисел.   Сериализатор для `SampleObject` называется корневым сериализатором, поскольку `SampleObject` является корнем графа сериализации. Также можно создать более сложных графов объектов. Предположим, что может произойти, если `SampleObject` были изменены следующим образом: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb) ] благодаря `SampleObject` иметь дочерний элемент, который является другой экземпляр самого себя.   Следующий код заполняет графа объектов: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb) ] при `root` сериализуется, будет использоваться четыре сериализатора: один корневой сериализатор, один сериализатор для дочернего элемента `SampleObject`, один сериализатор для `int`и один сериализатор для `string`.   Сериализаторы кэшированы на основе типа, поэтому нет необходимости создавать сериализатор для каждого экземпляра `SampleObject`.       Класс DesignerSerializationManager основан на идее сеанс сериализации. Сеанс сохраняет состояние, доступное для многих сериализаторов. При удалении сеанса состояние удаляется. Это помогает обеспечить сериализаторов остаются без состояния, что помогает очистить сериализаторов, которые были повреждены. В следующих таблицах описаны управление состоянием во время и между сеансами.      ## Состояние Global это состояние принадлежит объект диспетчера сериализации, но не зависит от текущего сеанса сериализации.      | Объект | Использование |   |------------|-----------|   | Поставщики сериализации | Объекты можно добавить себя как поставщики пользовательской сериализации. Так как эти поставщики используются сериализаторами, время их жизни превышает сеанс сериализации. |      ## Состояние, принадлежащее сеансу это состояние владеет сеанс и удаляется при удалении сеанса. Следовательно попытке свойств или методов манипулировать это состояние возникает исключение, если диспетчер сериализации не находится в активном сеансе.      | Объект | Использование |   |------------|-----------|   | событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>| <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>Связано событие сериализатором, чтобы предоставить дополнительные разрешения имен.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Все обработчики отсоединяются от этого события при завершении сеанса. |   | событие <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>| <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>Событие возникает непосредственно перед завершении сеанса.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Затем все обработчики отсоединяются от этого события. |   | Имя таблицы | Диспетчер сериализации сохраняет таблицу, сопоставляющую объекты и их имена. Сериализаторы могут давать имена объектов для упрощения идентификации. Таблица имен очищается при прекращении сеанса. |   | Кэш сериализатора | Диспетчер сериализации поддерживает кэш попросила предоставить сериализаторов. Этот кэш очищается при прекращении сеанса. Открытый метод <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>можно безопасно вызывать в любое время, но его значение кэшируется только в том случае, если она вызывается из сеанса. |   | Стек контекстов | Диспетчер сериализации сохраняет объект с именем стек контекста, к которому можно получить с помощью <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>свойство.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Сериализаторы используют этот стек для хранения дополнительной информации, которая доступна для других сериализаторов. Например сериализатор, который сериализации значения свойства можно передать имя свойства в стек сериализации перед запросом значение для сериализации. Стек удаляется при завершении сеанса. |   | Список ошибок | Диспетчер сериализации сохраняет список ошибок, возникших во время сериализации. Этот список, доступный через <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>свойство очищается при завершении сеанса.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Доступ к <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>свойство между сеансами приведет к возникновению исключения. |</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>"
  syntax:
    content: 'public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> класса."
  remarks: "Этот конструктор задает <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>Свойства `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> класса с помощью данного поставщика услуг."
  remarks: "Если сериализатор вызывает службы, которые не могут быть удовлетворены диспетчер сериализации, реализация по умолчанию будет пересылать их `provider` параметра.       Этот конструктор задает <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>Свойства `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  id: Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает или задает контейнер для этого диспетчера сериализации."
  remarks: "Если контейнер существует, все компоненты, которые создаются диспетчером сериализации добавляется в контейнер. Реализация по умолчанию этого свойства будет выполнять поиск поставщика услуг для <xref:System.ComponentModel.Design.IDesignerHost>и использовать контейнер, указанный узлом конструктора, он существует.</xref:System.ComponentModel.Design.IDesignerHost> В противном случае это свойство будет возвращать `null` и компоненты не будут добавлены в контейнер."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; set; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> К которому диспетчер сериализации будет добавлять компоненты."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "У диспетчера сериализации есть активный сеанс сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Создает экземпляр типа."
  remarks: "Этот метод вызывается сериализаторами при попытке создать экземпляр типа. Реализация по умолчанию создает новый экземпляр типа, а также может возвращать экземпляр в зависимости от значения <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>и <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>Свойства.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>Метод использует отражение для создания экземпляров и выполнит некоторые универсальные <xref:System.IConvertible>преобразования параметров с целью найти соответствующий конструктор.</xref:System.IConvertible> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Тип создаваемого экземпляра."
    - id: arguments
      type: System.Collections.ICollection
      description: "Параметры конструктора типа. Это может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая коллекция для вызова конструктора по умолчанию."
    - id: name
      type: System.String
      description: "Имя объекта. Если <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, объект не будет иметь имя, если объект добавляется в контейнер, и ему имя."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы добавить объект в контейнер, если объект реализует <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Новый экземпляр типа, заданного параметром <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code>type</code>не имеет конструктор, который принимает параметры, содержащиеся в <code>arguments</code>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  id: CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Создает новый сеанс сериализации."
  remarks: "Большинство данных в диспетчер сериализации является временным и существует только в течение сеанса сериализации. При завершении сеанса, будет считаться завершенной сериализации, и это переходное состояние очищается. Это позволяет использовать экземпляр диспетчера сериализации для сериализации нескольких деревьев объектов. Некоторые состояния, включая поставщика служб и любых поставщиков пользовательской сериализации, которые были добавлены в диспетчер сериализации, заполняют сеансы."
  syntax:
    content: public IDisposable CreateSession ();
    parameters: []
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий новый сеанс сериализации.</xref:System.IDisposable>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Диспетчер сериализации уже находится в сеансе. Эта версия <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> не поддерживает одновременные сеансы."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  id: Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Получает список ошибок, возникших во время сериализации или десериализации."
  remarks: "Доступен только для чтения список ошибок во время активного сеанса сериализации."
  syntax:
    content: public System.Collections.IList Errors { get; }
    return:
      type: System.Collections.IList
      description: "Список ошибок, возникших во время сериализации или десериализации."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  id: GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает тип, соответствующий имени указанного типа."
  syntax:
    content: public Type GetRuntimeType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя извлекаемого типа."
    return:
      type: System.Type
      description: "Указанный тип."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает сериализатор для данного типа объекта."
  remarks: "Можно запросить тип сериализатора, которой вы хотите создать. Этот метод возвращает `null` Если сериализатор запрошенного типа для указанного типа объекта."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Тип объекта, для которого необходимо получить сериализатор."
    - id: serializerType
      type: System.Type
      description: "Тип получаемого сериализатора."
    return:
      type: System.Object
      description: "Сериализатор для <code> objectType </code>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если не найден."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>or <code>serializerType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает запрашиваемую службу."
  remarks: "Метод GetService предоставляет доступ к базового контейнера или поставщика услуг, который был задан в конструкторе."
  syntax:
    content: protected virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип возвращаемой службы."
    return:
      type: System.Object
      description: "Запрошенную службу, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если службу не удается разрешить."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает запрошенный тип."
  remarks: "<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>Метод выполняет поиск поставщика услуг для <xref:System.ComponentModel.Design.ITypeResolutionService>и, при его наличии она будет Делегировать эту службу для разрешения типа.</xref:System.ComponentModel.Design.ITypeResolutionService> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Если <xref:System.ComponentModel.Design.ITypeResolutionService>недоступно, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>вызовет <xref:System.Object.GetType%2A?displayProperty=fullName>метод.</xref:System.Object.GetType%2A?displayProperty=fullName> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> </xref:System.ComponentModel.Design.ITypeResolutionService>"
  syntax:
    content: protected virtual Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя извлекаемого типа."
    return:
      type: System.Type
      description: "Запрошенный тип или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип не может быть разрешена."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  id: OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Вызывает <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnResolveName также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
      description: "Объект <xref href=&quot;System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  id: OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Вызывает <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSessionCreated также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSessionCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  id: OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Вызывает <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSessionDisposed также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSessionDisposed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  id: PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает или задает значение, указывающее, является ли <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>метод должен проверить наличие с заданным именем в контейнере.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Свойство PreserveNames определяет поведение <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>метод.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>передает имя данного компонента.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>будет проверять наличие с заданным именем в контейнере.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если имя не существует в контейнере, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>будет использовать заданное имя.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если имя существует в контейнере, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>при его добавлении к контейнеру, тем самым предоставляя ему новое имя будет передавать значение null как имя компонента.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Второй вариант полезен для реализации сериализатора, который всегда копирует объекты, а не при условии, что эти объекты не существуют. Этот тип сериализатора часто используется командами вставки.       Это свойство можно изменять только в том случае, когда вы находитесь не в сеанс сериализации."
  syntax:
    content: public bool PreserveNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <> </> *настроек передает имя данного компонента; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <> </> *настроек проверит наличие с заданным именем в контейнере. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Это свойство было изменено вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает объект, который должен использоваться для предоставления свойств диспетчера сериализации с помощью <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>свойство.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  remarks: "Свойство PropertyProvider предоставляет способ для предоставления набор свойств сериализации, используемые сериализаторы вспомогательными их поведение диспетчера сериализации.       Открытые свойства этого объекта будет проверен и помещаются в новые дескрипторы свойств, имеющих целевой объект диспетчера сериализации."
  syntax:
    content: public object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "Объект, который должен использоваться для предоставления свойств диспетчера сериализации с помощью <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>свойство.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  id: RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает или задает флаг, указывающий, является ли <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>создаст новый экземпляр типа.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Если свойство RecycleInstances `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>метод всегда создает новый экземпляр типа.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если RecycleInstances `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>сначала выполняет поиск таблицы имен и контейнер для объекта с таким же именем.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Если такой объект существует и имеет тот же тип, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>возвращает существующий экземпляр.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Второй вариант полезен для реализации сериализатора, который применяет состояние сериализации к существующему набору объектов, а не всегда создавая новое дерево. **Отменить** команда часто использует этот тип сериализатора.       В случае, когда свойство RecycleInstances является `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>свойство будет изменять поведение <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>в зависимости от типов двух объектов.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>"
  syntax:
    content: public bool RecycleInstances { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <> </> *настроек вернет существующего экземпляра; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <> </> *настроек создаст новый экземпляр типа. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "У диспетчера сериализации есть активный сеанс сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  id: SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Происходит при создании сеанса."
  syntax:
    content: public event EventHandler SessionCreated;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  id: SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Происходит при завершении сеанса."
  syntax:
    content: public event EventHandler SessionDisposed;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Добавляет диспетчеру сериализации пользовательский поставщик сериализации."
  remarks: "Когда <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>метод используется для запроса поставщик сериализации, диспетчер сериализации вывод списка поставщиков пользовательской сериализации, сначала перед поиск в метаданных типа соответствующий сериализатор.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>"
  syntax:
    content: void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "Чтобы добавить поставщик сериализации."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает стек контекста для этого сеанса сериализации."
  remarks: "Стек контекстов предоставляет область памяти, определяемые пользователем, реализованную в виде стека. Эта область памяти является удобным способом для обеспечения связи между сериализаторами является иерархическим процесса сериализации."
  syntax:
    content: System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "Объект <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> , сохраняет данные."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Реализует <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>метод.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>"
  syntax:
    content: object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "Чтобы создать тип данных."
    - id: arguments
      type: System.Collections.ICollection
      description: "Аргументы для передачи в конструктор для этого типа."
    - id: name
      type: System.String
      description: "Имя объекта. Это имя может использоваться для доступа к объекту позже через <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> Если <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> будет передан, объект по-прежнему создается, но не может быть доступен по имени."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для добавления этого объекта в контейнер конструктора. Объект должен реализовать <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> для этого в действие."
    return:
      type: System.Object
      description: "Вновь созданный экземпляр объекта."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Извлекает экземпляр созданного объекта с указанным именем."
  syntax:
    content: object IDesignerSerializationManager.GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого объекта."
    return:
      type: System.Object
      description: "Экземпляр объекта с заданным именем или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если ни один объект с таким именем не найден."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает имя указанного объекта."
  remarks: "Если метод IDesignerSerializationManager.GetName не удается найти соответствующее имя для `value` параметр, он выдает <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>событий, прежде чем вернуть `null`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>"
  syntax:
    content: string IDesignerSerializationManager.GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект, для которого требуется получить имя."
    return:
      type: System.String
      description: "Имя объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если у объекта нет имени."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает сериализатор запрошенного типа для указанного типа объекта."
  syntax:
    content: object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Тип объекта для получения сериализатора."
    - id: serializerType
      type: System.Type
      description: "Тип получаемого сериализатора."
    return:
      type: System.Object
      description: "Экземпляр запрошенного типа или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если соответствующий сериализатор не может размещаться на компьютере."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает тип с указанным именем."
  syntax:
    content: Type IDesignerSerializationManager.GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Полное имя типа для загрузки."
    return:
      type: System.Type
      description: "Экземпляр типа, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если невозможно загрузить тип."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Реализует <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>свойство.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> содержащий свойства для сериализации."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Удаляет ранее добавленный сериализации поставщика."
  remarks: "Метод IDesignerSerializationManager.RemoveSerializationProvider удаляет пользовательский поставщик сериализации, добавленной ранее с помощью вызова <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>метод.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>"
  syntax:
    content: void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "<xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot;> </xref> Для удаления."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Используемый для передачи устранимая ошибка в сериализации."
  remarks: "Сериализаторы могут быть написаны правильно обработать устранимой ошибки путем вызова метода IDesignerSerializationManager.ReportError сведениями об ошибках. Диспетчер сериализации поддерживает отчетов список ошибок, после ее завершения, или он может вызывать исключение из этого метода и прерывает процесс сериализации. Сериализатор возобновляет работу после вызова этой функции.       Добавляет IDesignerSerializationManager.ReportError `errorInformation` параметр <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>коллекции.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Если `errorInformation` — `null`, никакие действия не выполняются."
  syntax:
    content: void IDesignerSerializationManager.ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "Объект, содержащий сведения об ошибке, обычно из типа <xref:System.String>или <xref:System.Exception>.</xref:System.Exception> </xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Задает имя для указанного объекта."
  remarks: "Метод IDesignerSerializationManager.SetName предоставляет способ задания имени существующего объекта. Это позволяет создать экземпляр объекта путем вызова <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>метод, что позволяет избежать <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>метод.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>"
  syntax:
    content: void IDesignerSerializationManager.SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "Объект, чтобы задать имя."
    - id: name
      type: System.String
      description: "Объект <xref:System.String>используется в качестве имени объекта.</xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Объект, указанный экземпляр уже имеет имя, или <code> name </code> уже используется другим именованным объектом."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Доступ к этому свойству был вне сеанса сериализации."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Описание этого члена см. в разделе <xref:System.IServiceProvider.GetService*>метод.</xref:System.IServiceProvider.GetService*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>экземпляр приводится к <xref:System.IServiceProvider>интерфейс.</xref:System.IServiceProvider> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>"
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Объект, указывающий тип получаемого объекта службы."
    return:
      type: System.Object
      description: "Объект службы типа <code> serviceType </code>.       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если отсутствует объект службы типа <code> serviceType </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  id: ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает или задает флаг, указывающий, является ли <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>метод убедитесь, что соответствующие имена ссылаются на тот же тип.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Свойство ValidateRecycledTypes изменяет поведение <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>метод при <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>свойство `true`, как описано в следующей таблице.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>      | `RecycleInstances`|`ValidateRecycledTypes`| Поведение `CreateInstance`|   |------------------------|-----------------------------|----------------------------------|   | `false`|`true` or `false`| Всегда создавать новый экземпляр заданного типа |   | `true`|`false`| Если найден подходящий экземпляр возвращается, независимо от его типа. |   | `true`|`true`| Если найден соответствующий экземпляр, он возвращается только в том случае, если его тип является таким же, как указано в вызове метода. |       ValidateRecycledTypes полезен для трансформация одного типа к другому, если они имеют похожие свойства, но совместно использовать интерфейс ни одного родительского элемента."
  syntax:
    content: public bool ValidateRecycledTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>проверяет типы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если это не так.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*> Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "У диспетчера сериализации есть активный сеанс сериализации."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventArgs
  nameWithType: ResolveNameEventArgs
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager.DesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: DesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession
  nameWithType: DesignerSerializationManager.CreateSession
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType
  nameWithType: DesignerSerializationManager.GetRuntimeType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: DesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService
  nameWithType: DesignerSerializationManager.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: DesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName
  nameWithType: DesignerSerializationManager.OnResolveName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated
  nameWithType: DesignerSerializationManager.OnSessionCreated
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed
  nameWithType: DesignerSerializationManager.OnSessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
