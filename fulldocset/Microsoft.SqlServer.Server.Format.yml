### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.Format
  id: Format
  children:
  - Microsoft.SqlServer.Server.Format.Native
  - Microsoft.SqlServer.Server.Format.Unknown
  - Microsoft.SqlServer.Server.Format.UserDefined
  langs:
  - csharp
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
  type: Enum
  summary: "Используемые <xref href=&quot;Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&quot;> </xref> и <xref href=&quot;Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute&quot;> </xref> для указания формата сериализации определяемого пользователем типа (UDT) или статистической функции."
  remarks: "Используемые <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>и <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute>для указания формата сериализации определяемого пользователем типа (UDT) или статистической функции.</xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> </xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>"
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_6_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_6_1.vb)]"
  syntax:
    content: public enum Format
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.Native
  id: Native
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: Native
  nameWithType: Format.Native
  fullName: Microsoft.SqlServer.Server.Format.Native
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "<xref uid=&quot;langword_csharp_Native&quot; name=&quot;Native&quot; href=&quot;&quot;> </xref> Формат сериализации использует очень простой алгоритм, позволяющий SQL Server для хранения на диске эффективное представление определяемого пользователем типа. Типы, отмеченные для <xref uid=&quot;langword_csharp_Native&quot; name=&quot;Native&quot; href=&quot;&quot;> </xref> сериализации может иметь только значение типы (структуры в Microsoft Visual C#) и структуры в Microsoft Visual Basic .NET в качестве элементов. Члены ссылки на типы (такие как классы в Visual C# и Visual Basic), определенных пользователем или существующих в структуре (например, <xref:System.String>), не поддерживаются.</xref:System.String>"
  remarks: "Требования для этого формата: - `StructLayout.LayoutKindSequential` атрибут должен быть применен для статистических выражений или определяемого пользователем ТИПА, если он определен в классе, а не структуры. Управляет физической компоновкой полей данных и используется для того, чтобы члены размещались последовательно в порядке их следования. SQL Server использует этот атрибут для задания порядка полей для определяемых пользователем типов с несколькими полями.      — Тип должен содержать по крайней мере один член (сериализованные значения не может быть нулевой размер в байтах).      -Все поля агрегатной функции должны быть *преобразуемые*, то есть они должны иметь общее представление в управляемой и неуправляемой памяти и не требуют специальной обработки упаковщиком взаимодействия.      -Все поля определяемого пользователем типа должны быть одного из следующих типов, которые могут быть сериализованы: `bool`, `byte`,`sbyte`,`short`,`ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, и других типов значений определяется пользователем, содержащие поля одного из этих типов.</xref:System.Data.SqlTypes.SqlMoney> </xref:System.Data.SqlTypes.SqlDouble> </xref:System.Data.SqlTypes.SqlSingle> </xref:System.Data.SqlTypes.SqlDateTime> </xref:System.Data.SqlTypes.SqlInt64> </xref:System.Data.SqlTypes.SqlInt32> </xref:System.Data.SqlTypes.SqlInt16> </xref:System.Data.SqlTypes.SqlByte>      -Статистического выражения не должны указывать значение для `MaxByteSize`.      -Статистическое выражение не должен содержать все поля [NonSerialized].      -Поля не должен быть помечен как явный макет (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</xref:System.Runtime.InteropServices.StructLayoutAttribute>"
  syntax:
    content: Native
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.Unknown
  id: Unknown
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: Unknown
  nameWithType: Format.Unknown
  fullName: Microsoft.SqlServer.Server.Format.Unknown
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Формат сериализации неизвестен."
  syntax:
    content: Unknown
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.Format.UserDefined
  id: UserDefined
  parent: Microsoft.SqlServer.Server.Format
  langs:
  - csharp
  name: UserDefined
  nameWithType: Format.UserDefined
  fullName: Microsoft.SqlServer.Server.Format.UserDefined
  type: Field
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "<xref uid=&quot;langword_csharp_UserDefined&quot; name=&quot;UserDefined&quot; href=&quot;&quot;> </xref> Сериализации формат дает разработчику полный контроль над двоичным форматом через <xref href=&quot;Microsoft.SqlServer.Server.IBinarySerialize&quot;> </xref> <xref uid=&quot;langword_csharp_.Write&quot; name=&quot;.Write&quot; href=&quot;&quot;> </xref> и <xref href=&quot;Microsoft.SqlServer.Server.IBinarySerialize&quot;> </xref> <xref uid=&quot;langword_csharp_.Read&quot; name=&quot;.Read&quot; href=&quot;&quot;> </xref> методы."
  remarks: "Статистическая функция должна определять значение для `MaxByteSize`.       Укажите <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>свойству атрибута.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> Значение по умолчанию — &quot;ложь&quot;.       Если опустить любое поле в <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>или <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>методов, состояние этого поля не сериализуется.</xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> </xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>"
  syntax:
    content: UserDefined
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: Microsoft.SqlServer.Server.Format.Native
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: Native
  nameWithType: Format.Native
  fullName: Microsoft.SqlServer.Server.Format.Native
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.Format.Unknown
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: Unknown
  nameWithType: Format.Unknown
  fullName: Microsoft.SqlServer.Server.Format.Unknown
- uid: Microsoft.SqlServer.Server.Format.UserDefined
  parent: Microsoft.SqlServer.Server.Format
  isExternal: false
  name: UserDefined
  nameWithType: Format.UserDefined
  fullName: Microsoft.SqlServer.Server.Format.UserDefined
