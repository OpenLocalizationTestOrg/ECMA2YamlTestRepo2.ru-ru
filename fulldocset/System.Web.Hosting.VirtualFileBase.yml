### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualFileBase
  id: VirtualFileBase
  children:
  - System.Web.Hosting.VirtualFileBase.#ctor
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.IsDirectory
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  langs:
  - csharp
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
  type: Class
  summary: "Предоставляет базовую реализацию для <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> и <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> объектов. Абстрактный класс, не может быть создан."
  remarks: "Абстрактный класс VirtualFileBase предоставляет общие методы и свойства совместно <xref:System.Web.Hosting.VirtualFile>и <xref:System.Web.Hosting.VirtualDirectory>объекты.</xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile> Реализации этих классов предоставляют среды выполнения ASP.NET с доступом к файлам и пути, используемые для компиляции. Дополнительные сведения об использовании виртуальных файлов и путей в разделе <xref:System.Web.Hosting.VirtualPathProvider>класса.</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: 'public abstract class VirtualFileBase : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Инициализирует класс для использования экземпляром унаследованного класса. Этот конструктор может вызываться только унаследованным классом."
  remarks: "Хотя нельзя непосредственно создать экземпляр <xref:System.Web.Hosting.VirtualFileBase>класса, можно вызвать этот конструктор из конструктора наследуемого класса.</xref:System.Web.Hosting.VirtualFileBase>"
  syntax:
    content: protected VirtualFileBase ();
    parameters: []
  overload: System.Web.Hosting.VirtualFileBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Предоставляет <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> экземпляра бесконечное время существования, предотвращая создание аренды."
  remarks: "Этот метод переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>метод для его базового класса.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Всегда возвращает `null` , предотвращая создание аренды, ограничивающей время жизни виртуального файла или каталога."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "При переопределении в производном классе получает значение, указывающее, является ли <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> экземпляр представляет виртуальный файл или виртуальный каталог."
  syntax:
    content: public abstract bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> экземпляр находится виртуальный каталог, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> экземпляр является виртуальный файл."
  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.Name
  id: Name
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает отображаемое имя виртуального ресурса."
  remarks: "Свойство Name обычно является имя файла и расширение, связанное с ресурсом, несмотря на то, что виртуальные ресурсы могут использовать произвольные имена."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Отображаемое имя виртуального файла."
  overload: System.Web.Hosting.VirtualFileBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  id: VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Получает виртуальный путь файла."
  remarks: "Свойство VirtualPath возвращает путь к файлу или каталогу, представленный этим объектом."
  syntax:
    content: public string VirtualPath { get; }
    return:
      type: System.String
      description: "Путь виртуального файла."
  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
- uid: System.Web.Hosting.VirtualFileBase.#ctor*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase.VirtualFileBase
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualFileBase.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
- uid: System.Web.Hosting.VirtualFileBase.Name*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
