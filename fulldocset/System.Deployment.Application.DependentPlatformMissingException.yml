### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.DependentPlatformMissingException
  id: DependentPlatformMissingException
  children:
  - System.Deployment.Application.DependentPlatformMissingException.#ctor
  - System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String)
  - System.Deployment.Application.DependentPlatformMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Exception)
  - System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Uri)
  - System.Deployment.Application.DependentPlatformMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Deployment.Application.DependentPlatformMissingException.SupportUrl
  langs:
  - csharp
  name: DependentPlatformMissingException
  nameWithType: DependentPlatformMissingException
  fullName: System.Deployment.Application.DependentPlatformMissingException
  type: Class
  summary: "Исключение, которое возникает, когда зависимости платформы не найден во время активации развертывания ClickOnce и развертывания не будет выполняться."
  remarks: "Это исключение вызывается при несоответствии платформы, запрошенной в манифесте развертывания, ClickOnce при попытке запустить приложение на платформы. В этом контексте «платформы» может ссылаться на операционной системе, установленных версий общеязыковая среда выполнения или ранее установленной сборки. Например если приложение ClickOnce предназначено для Windows XP, и пользователь пытается запустить приложение в Windows 2000, будет вызвано это исключение."
  syntax:
    content: 'public class DependentPlatformMissingException : System.Deployment.Application.DeploymentException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Deployment.Application.DeploymentException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor
  id: '#ctor'
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: DependentPlatformMissingException()
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException()
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException()
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Deployment.Application.DependentPlatformMissingException&quot;> </xref> класса."
  remarks: "Этот конструктор инициализирует <xref:System.Exception.Message%2A>свойств нового экземпляра системным сообщением, содержащим описание ошибки, например «DefaultMessageDisplayedByParameterlessCtorWriterMustSupply».</xref:System.Exception.Message%2A> Это сообщение учитывает текущую культуру системы.       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.InsufficientMemoryException>.</xref:System.InsufficientMemoryException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Строка локализованного сообщения об. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public DependentPlatformMissingException ();
    parameters: []
  overload: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: DependentPlatformMissingException(String)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Deployment.Application.DependentPlatformMissingException&quot;> </xref> класса с указанным сообщением, содержащим описание ошибки."
  remarks: "В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.Deployment.Application.DependentPlatformMissingException>.</xref:System.Deployment.Application.DependentPlatformMissingException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Строка сообщения об ошибке, указываемой `message`. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public DependentPlatformMissingException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение, описывающее исключение. Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы."
  overload: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: DependentPlatformMissingException(SerializationInfo,StreamingContext)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(SerializationInfo,StreamingContext)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Deployment.Application.DependentPlatformMissingException&quot;> </xref> класса."
  remarks: "Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке."
  syntax:
    content: protected DependentPlatformMissingException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект, содержащий сериализованные данные объекта."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекстные сведения об источнике или назначении."
  overload: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: DependentPlatformMissingException(String,Exception)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String,Exception)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String,Exception)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Deployment.Application.DependentPlatformMissingException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException%2A>свойство.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>Свойство возвращает то же значение, которое передается конструктору, или `null` Если <xref:System.Exception.InnerException%2A>свойства не предоставляет конструктору значение внутреннего исключения.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.Deployment.Application.DependentPlatformMissingException>.</xref:System.Deployment.Application.DependentPlatformMissingException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Строка сообщения об ошибке, указываемой `message`. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public DependentPlatformMissingException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение, описывающее исключение. Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы."
    - id: innerException
      type: System.Exception
      description: "Исключение, которое стало причиной текущего исключения. Если `innerException` не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Uri)
  id: '#ctor(System.String,System.Uri)'
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: DependentPlatformMissingException(String,Uri)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String,Uri)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String,Uri)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Deployment.Application.DependentPlatformMissingException&quot;> </xref> класса."
  syntax:
    content: public DependentPlatformMissingException (string message, Uri supportUrl);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об исключении."
    - id: supportUrl
      type: System.Uri
      description: "URL-адрес с сведения о поддержке продукта."
  overload: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DependentPlatformMissingException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Deployment.Application.DependentPlatformMissingException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Получает объект данных."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект, содержащий сериализованные данные объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекстные сведения об источнике или назначении."
  overload: System.Deployment.Application.DependentPlatformMissingException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.DependentPlatformMissingException.SupportUrl
  id: SupportUrl
  parent: System.Deployment.Application.DependentPlatformMissingException
  langs:
  - csharp
  name: SupportUrl
  nameWithType: DependentPlatformMissingException.SupportUrl
  fullName: System.Deployment.Application.DependentPlatformMissingException.SupportUrl
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает URI, который указывает, где можно получить поддержку для обнаруженной ошибки."
  syntax:
    content: public Uri SupportUrl { get; }
    return:
      type: System.Uri
      description: "URI, который указывает, где можно получить поддержку для обнаруженной ошибки."
  overload: System.Deployment.Application.DependentPlatformMissingException.SupportUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Deployment.Application.DeploymentException
  isExternal: false
  name: System.Deployment.Application.DeploymentException
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException()
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException()
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException()
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String)
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException(String)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException(SerializationInfo,StreamingContext)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(SerializationInfo,StreamingContext)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Exception)
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException(String,Exception)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String,Exception)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Uri)
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException(String,Uri)
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException(String,Uri)
  fullName: System.Deployment.Application.DependentPlatformMissingException.DependentPlatformMissingException(String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.DependentPlatformMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DependentPlatformMissingException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Deployment.Application.DependentPlatformMissingException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Deployment.Application.DependentPlatformMissingException.SupportUrl
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: SupportUrl
  nameWithType: DependentPlatformMissingException.SupportUrl
  fullName: System.Deployment.Application.DependentPlatformMissingException.SupportUrl
- uid: System.Deployment.Application.DependentPlatformMissingException.#ctor*
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: DependentPlatformMissingException
  nameWithType: DependentPlatformMissingException.DependentPlatformMissingException
- uid: System.Deployment.Application.DependentPlatformMissingException.GetObjectData*
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: GetObjectData
  nameWithType: DependentPlatformMissingException.GetObjectData
- uid: System.Deployment.Application.DependentPlatformMissingException.SupportUrl*
  parent: System.Deployment.Application.DependentPlatformMissingException
  isExternal: false
  name: SupportUrl
  nameWithType: DependentPlatformMissingException.SupportUrl
