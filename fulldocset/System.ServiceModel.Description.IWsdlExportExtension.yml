### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IWsdlExportExtension
  id: IWsdlExportExtension
  children:
  - System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  - System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  langs:
  - csharp
  name: IWsdlExportExtension
  nameWithType: IWsdlExportExtension
  fullName: System.ServiceModel.Description.IWsdlExportExtension
  type: Interface
  summary: "Определяет поведение конечной точки или контракта, которые можно экспортировать пользовательские метаданные."
  remarks: "Чтобы изменить и расширить языка описания служб (WSDL) Web, экспортированного с <xref:System.ServiceModel.Description.WsdlExporter>объектов, реализуйте интерфейс IWsdlExportExtension для поведения конечной точки, контракта или операции (объект, реализующий интерфейс, либо <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>, или <xref:System.ServiceModel.Description.IOperationBehavior>) и добавить поведение в <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, или <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>свойство.</xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> </xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> </xref:System.ServiceModel.Description.IOperationBehavior> </xref:System.ServiceModel.Description.IEndpointBehavior> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.Description.WsdlExporter> Кроме того вы также можете реализовать IWsdlExportExtension <xref:System.ServiceModel.Channels.BindingElement>.</xref:System.ServiceModel.Channels.BindingElement>      Настроек [!NOTE] настроек реализации IWsdlExportExtension никогда не вызываются, если они реализованы в виде <xref:System.ServiceModel.Description.IServiceBehavior>.</xref:System.ServiceModel.Description.IServiceBehavior>       IWsdlExportExtension не экспортирует утверждения пользовательской политики, даже если [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] экспортирует утверждения настраиваемой политики в соответствующий элемент в языке WSDL. Экспортирует утверждения настраиваемой политики реализуйте <xref:System.ServiceModel.Description.IPolicyExportExtension>интерфейса.</xref:System.ServiceModel.Description.IPolicyExportExtension>       Процесс публикации метаданных начинается путем вызова метода <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>в свою очередь вызывает <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName>для каждой конечной точки.</xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=fullName>       Конечная точка экспортируется путем первоначального экспорта ее контракта. При экспорте контракта <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName>вызовы <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName>метод во всех реализациях IWsdlExportExtension на контракт и поведения операции для данного контракта.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlExporter?displayProperty=fullName> Операции, использующие подстановочные действия, не экспортируются в метаданных, поэтому реализации IWsdlExportExtension в поведении операции для этих операций не экспортируются.       После экспорта контракта, порт и привязка будут экспортированы и экспортированные вложенные выражения политики.       Как <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>и <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>обеспечивают доступ к <xref:System.ServiceModel.Description.WsdlExporter>, чтобы сообщить об устранимых ошибках и предупреждениях посредством реализации IWsdlExportExtension <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>свойство.</xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> </xref:System.ServiceModel.Description.WsdlExporter> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> Объекты контекста, переданные в оба метода, предоставляют удобные сопоставления из экспортированных элементов WSDL для свойств <xref:System.ServiceModel.Description.ContractDescription>и <xref:System.ServiceModel.Description.ServiceEndpoint>объекты.</xref:System.ServiceModel.Description.ServiceEndpoint> </xref:System.ServiceModel.Description.ContractDescription>       Если реализация IWsdlExportExtension вызывает исключение во время экспорта, созданные метаданные находятся в несогласованном состоянии и <xref:System.ServiceModel.Description.WsdlExporter>должен быть удален.</xref:System.ServiceModel.Description.WsdlExporter>      Настроек [!NOTE] настроек настраиваемое расширение экспорта должен запускаться после того как встроенный сериализатор заполнит описание службы."
  example:
  - "The following code example shows an IWsdlExportExtension that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public interface IWsdlExportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  id: ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Записывает пользовательские элементы языка описания веб-служб (WSDL) в созданный WSDL для контракта."
  remarks: "Метод ExportContract вызывается при экспорте контракта системой экспорта метаданных. Только поведение контракта и операции, реализующее <xref:System.ServiceModel.Description.IWsdlExportExtension>получить вызов ExportContract.</xref:System.ServiceModel.Description.IWsdlExportExtension> Все поведение, реализующее <xref:System.ServiceModel.Description.IWsdlExportExtension>получить <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>вызовите.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> </xref:System.ServiceModel.Description.IWsdlExportExtension>       Используйте `context` параметр, чтобы изменить язык WSDL для экспорта. Например см. в разделе."
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref> , Экспортирующий сведения о контракте."
    - id: context
      type: System.ServiceModel.Description.WsdlContractConversionContext
      description: "Предоставляет сопоставления экспортированных элементов WSDL описанию контракта."
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  id: ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  langs:
  - csharp
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Записывает пользовательские элементы языка описания веб-служб (WSDL) в созданный WSDL для конечной точки."
  remarks: "Реализуйте метод ExportEndpoint, чтобы изменить язык WSDL, экспортированный для конечной точки. Этот метод вызывается после экспорта контракта <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.</xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>"
  example:
  - "The following code example shows an <xref:System.ServiceModel.Description.IWsdlExportExtension> that adds custom documentation attributes to the WSDL file as WSDL annotations.  \n  \n [!code-cs[C_CustomWSDLExtensions#6](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#6)]  \n[!code-cs[C_CustomWSDLExtensions#7](~/add/codesnippet/csharp/c_customwsdlextensions.client/wsdldocumentationattribute.cs#7)]"
  syntax:
    content: public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.WsdlExporter
      description: "<xref href=&quot;System.ServiceModel.Description.WsdlExporter&quot;> </xref> , Экспортирующий сведения о конечной точке."
    - id: context
      type: System.ServiceModel.Description.WsdlEndpointConversionContext
      description: "Предоставляет сопоставления экспортированных элементов WSDL описанию конечной точки."
  overload: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract(WsdlExporter,WsdlContractConversionContext)
  nameWithType: IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportContract(WsdlExporter,WsdlContractConversionContext)
- uid: System.ServiceModel.Description.WsdlExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlExporter
  nameWithType: WsdlExporter
  fullName: System.ServiceModel.Description.WsdlExporter
- uid: System.ServiceModel.Description.WsdlContractConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlContractConversionContext
  nameWithType: WsdlContractConversionContext
  fullName: System.ServiceModel.Description.WsdlContractConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  nameWithType: IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
  fullName: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(WsdlExporter,WsdlEndpointConversionContext)
- uid: System.ServiceModel.Description.WsdlEndpointConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: WsdlEndpointConversionContext
  nameWithType: WsdlEndpointConversionContext
  fullName: System.ServiceModel.Description.WsdlEndpointConversionContext
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportContract*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportContract
  nameWithType: IWsdlExportExtension.ExportContract
- uid: System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint*
  parent: System.ServiceModel.Description.IWsdlExportExtension
  isExternal: false
  name: ExportEndpoint
  nameWithType: IWsdlExportExtension.ExportEndpoint
