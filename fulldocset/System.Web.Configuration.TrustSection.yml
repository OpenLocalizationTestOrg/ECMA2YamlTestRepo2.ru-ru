### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.TrustSection
  id: TrustSection
  children:
  - System.Web.Configuration.TrustSection.#ctor
  - System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  - System.Web.Configuration.TrustSection.LegacyCasModel
  - System.Web.Configuration.TrustSection.Level
  - System.Web.Configuration.TrustSection.OriginUrl
  - System.Web.Configuration.TrustSection.PermissionSetName
  - System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  - System.Web.Configuration.TrustSection.Properties
  langs:
  - csharp
  name: TrustSection
  nameWithType: TrustSection
  fullName: System.Web.Configuration.TrustSection
  type: Class
  summary: "Настраивает уровень безопасности доступа кода, который применяется к приложению. Этот класс не наследуется."
  remarks: "Класс TrustSection позволяет программный доступ и изменить файл конфигурации `<trust>` раздела. `<trust>` Раздел настраивает набор разрешений безопасности доступа к коду, используемый для выполнения конкретного приложения. Этот раздел может быть объявлен на машине, сайта или приложения."
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the TrustSection class. The second demonstrates how to use the TrustSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the TrustSection class.  \n  \n```  \n<system.web>  \n  <trust level=\"Full\" originUrl=\"\"/>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the TrustSection type.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#1](~/add/codesnippet/csharp/t-system.web.configurati_21_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_21_1.vb)]"
  syntax:
    content: 'public sealed class TrustSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Configuration.TrustSection&quot;> </xref> класса с использованием параметров по умолчанию."
  remarks: "Конструктор TrustSection не предназначен для использования непосредственно из программного кода. Он вызывается системой конфигурации ASP.NET. Получение экземпляра <xref:System.Web.Configuration.TrustSection>, используя <xref:System.Configuration.Configuration.GetSection%2A>метод.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.TrustSection>       Следующая таблица показывает значения по умолчанию, которые используются для конструктора TrustSection.      | Задание | Значение по умолчанию |   |-------------|-------------------|   | <xref:System.Web.Configuration.TrustSection.Level%2A>| `Full`|   | <xref:System.Web.Configuration.TrustSection.OriginUrl%2A>| `&quot;&quot;`|</xref:System.Web.Configuration.TrustSection.OriginUrl%2A></xref:System.Web.Configuration.TrustSection.Level%2A>"
  syntax:
    content: public TrustSection ();
    parameters: []
  overload: System.Web.Configuration.TrustSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  id: HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает тип разрешения пользовательские политики безопасности."
  remarks: "Если HostSecurityPolicyResolverType является пустая строка, приложение использует политику по умолчанию ASP.NET для определения разрешений сборки. Политика по умолчанию для оценки разрешений предоставляет полное доверие для сборок в глобальный кэш сборок (GAC) и частичное доверие для других сборок.       Этот атрибут не может быть присвоено `null` значение."
  syntax:
    content: public string HostSecurityPolicyResolverType { get; set; }
    return:
      type: System.String
      description: "Тип разрешения пользовательские политики безопасности."
  overload: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  id: LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Получает или задает значение, указывающее, включена ли безопасность доступа кода прежних версий."
  remarks: "При включении безопасности доступа кода прежних версий, применяются следующие правила безопасности:-политики разграничения доступа кода устанавливается из комбинации политики компьютера и указанного файла политики частичного доверия ASP.NET.      -Домены приложений частичного доверия вернуться приобретают полное доверие на уровне домена приложения.      -Устаревший частичного доверия файлы, расположенные в каталоге CONFIG в [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] каталог установки используются вместо новые файлы конфигурации частичного доверия, расположенных в том же каталоге. Устаревшие файлы включают условия членства, которые были найдены в [!INCLUDE[net_v11_long](~/add/includes/net-v11-long-md.md)] или [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] версии [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].      -Дополнительного членства для оценки разрешений применяются условия, как определено в файлах ASP.NET частичного доверия. Каталог CONFIG, который поставляется вместе с [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] выпуск содержит файлы устаревшей политики частичного доверия. Имена файлов, включает строку «традиционные» и содержать [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)] разделы. Эти разделы содержат условия членства не пустой, необходимые для оценки политики разграничения доступа кода для сборки.      — Если приложение ASP.NET выполняется в режиме частичного доверия и файл политики безопасности для уровня доверия сопоставляется одному из файлов конфигурации частичного доверия по умолчанию, ASP.NET автоматически выбирает соответствующий файл конфигурации прежних версий. Например если политика безопасности обычно загружается из Web_mediumtrust.config, в стандартном режиме ASP.NET будет вместо этого загрузите политику безопасности из Legacy.web_mediumtrust.config."
  syntax:
    content: public bool LegacyCasModel { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включена безопасность доступа кода прежних версий. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.TrustSection.LegacyCasModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Level
  id: Level
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает имя уровня безопасности, с которой будет выполняться приложение."
  remarks: "Свойство уровня задает уровень безопасности, под которой будет выполняться приложение. Значение по умолчанию — `&quot;Full&quot;`.       Существует пять уровней доверия: - полный - высокой - средний - Low - минимальные именованные уровни соответствуют уровням безопасности, которые определены в `<trustLevel>` элемент для `<securityPolicy>`."
  example:
  - "The following code example demonstrates how to use the Level property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#2](~/add/codesnippet/csharp/p-system.web.configurati_147_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_147_1.vb)]"
  syntax:
    content: public string Level { get; set; }
    return:
      type: System.String
      description: "Имя уровня доверия. Значение по умолчанию — <xref uid=&quot;langword_csharp_&quot;Full&quot;&quot; name=&quot;&quot;Full&quot;&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.TrustSection.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.OriginUrl
  id: OriginUrl
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Указывает URL-адрес источника для приложения."
  remarks: "Свойство OriginUrl указывает URL-адрес источника для приложения. Если он присутствует, это может использоваться для некоторых разрешений, например, связанных с <xref:System.Net.WebRequest>классом.</xref:System.Net.WebRequest> Это позволяет указать один URL-адрес, используемый для создания разрешения посредством <xref:System.Net.WebPermission>экземпляра.</xref:System.Net.WebPermission> Затем это разрешение предоставляет коду ASP.NET с частичным доверием право выполнять вызовы HTTP (например, вызов веб-службы), URL-адрес. Значение должно быть правильно сформированный URL HTTP."
  example:
  - "The following code example demonstrates how to use the OriginUrl property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.TrustSection> class.  \n  \n [!code-cs[System.Web.Configuration.TrustSection#3](~/add/codesnippet/csharp/p-system.web.configurati_332_1.cs)]\n [!code-vb[System.Web.Configuration.TrustSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_332_1.vb)]"
  syntax:
    content: public string OriginUrl { get; set; }
    return:
      type: System.String
      description: "Правильно сформированный URL HTTP или пустая строка (»»). Значение по умолчанию — пустая строка."
  overload: System.Web.Configuration.TrustSection.OriginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  id: PermissionSetName
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает имя набора разрешений."
  remarks: "Свойство PermissionSetName позволяет определить именованный набор разрешений, используемый во время инициализации домена приложения, в файле конфигурации частичного доверия.       По умолчанию свойство PermissionSetName — «ASP.Net» это имя набора разрешений, используемый для инициализации домена приложения.       Этот атрибут не может быть присвоено пустая строка или `null` значение."
  syntax:
    content: public string PermissionSetName { get; set; }
    return:
      type: System.String
      description: "Имя набора разрешений."
  overload: System.Web.Configuration.TrustSection.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  id: ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, требует ли страница ограничено автоматического разрешения, которые настраиваются в файле политики доверия, который применяется к приложению ASP.NET."
  syntax:
    content: public bool ProcessRequestInApplicationTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запросы автоматически ограничиваются разрешения, которые настраиваются в файле политики доверия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.TrustSection.Properties
  id: Properties
  parent: System.Web.Configuration.TrustSection
  langs:
  - csharp
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Для добавления."
  overload: System.Web.Configuration.TrustSection.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.TrustSection.#ctor
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection()
  nameWithType: TrustSection.TrustSection()
  fullName: System.Web.Configuration.TrustSection.TrustSection()
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
  fullName: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.TrustSection.LegacyCasModel
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
  fullName: System.Web.Configuration.TrustSection.LegacyCasModel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.TrustSection.Level
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
  fullName: System.Web.Configuration.TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
  fullName: System.Web.Configuration.TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
  fullName: System.Web.Configuration.TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
  fullName: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
  fullName: System.Web.Configuration.TrustSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.TrustSection.#ctor*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: TrustSection
  nameWithType: TrustSection.TrustSection
- uid: System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: HostSecurityPolicyResolverType
  nameWithType: TrustSection.HostSecurityPolicyResolverType
- uid: System.Web.Configuration.TrustSection.LegacyCasModel*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: LegacyCasModel
  nameWithType: TrustSection.LegacyCasModel
- uid: System.Web.Configuration.TrustSection.Level*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Level
  nameWithType: TrustSection.Level
- uid: System.Web.Configuration.TrustSection.OriginUrl*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: OriginUrl
  nameWithType: TrustSection.OriginUrl
- uid: System.Web.Configuration.TrustSection.PermissionSetName*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: PermissionSetName
  nameWithType: TrustSection.PermissionSetName
- uid: System.Web.Configuration.TrustSection.ProcessRequestInApplicationTrust*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: ProcessRequestInApplicationTrust
  nameWithType: TrustSection.ProcessRequestInApplicationTrust
- uid: System.Web.Configuration.TrustSection.Properties*
  parent: System.Web.Configuration.TrustSection
  isExternal: false
  name: Properties
  nameWithType: TrustSection.Properties
