### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueueStream
  id: PrintQueueStream
  children:
  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)
  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)
  - System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)
  - System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Printing.PrintQueueStream.CanRead
  - System.Printing.PrintQueueStream.CanSeek
  - System.Printing.PrintQueueStream.CanWrite
  - System.Printing.PrintQueueStream.Close
  - System.Printing.PrintQueueStream.Dispose(System.Boolean)
  - System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)
  - System.Printing.PrintQueueStream.Finalize
  - System.Printing.PrintQueueStream.Flush
  - System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)
  - System.Printing.PrintQueueStream.JobIdentifier
  - System.Printing.PrintQueueStream.Length
  - System.Printing.PrintQueueStream.Position
  - System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Printing.PrintQueueStream.SetLength(System.Int64)
  - System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: PrintQueueStream
  nameWithType: PrintQueueStream
  fullName: System.Printing.PrintQueueStream
  type: Class
  summary: "Поток, представляющий буферизованное задание печати в очереди печати."
  remarks: "Этот класс используется для записи сведений об устройстве в файл очереди, не включается автоматически по [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] диспетчера очереди печати. Конечно, вам необходимо знать, является ли файл очереди [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] или [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. Если вы предпочитаете работа с <xref:System.Byte>массива, можно также использовать две перегруженные версии <xref:System.Printing.PrintQueue.AddJob%2A>метод и <xref:System.Printing.PrintSystemJobInfo.JobStream%2A>свойство для записи в файл очереди.</xref:System.Printing.PrintSystemJobInfo.JobStream%2A> </xref:System.Printing.PrintQueue.AddJob%2A> </xref:System.Byte>      Настроек [!CAUTION] настроек классы в <xref:System.Printing>пространства имен не поддерживаются для использования в пределах службы Windows или приложения ASP.NET или службы.</xref:System.Printing> Попытка использования этих классов из одного из этих типов приложений может привести к неожиданным проблемам, например сужен службы исключения производительности и во время выполнения.       Если вы хотите напечатать из приложения Windows Forms, см. раздел <xref:System.Drawing.Printing>пространства имен.</xref:System.Drawing.Printing>"
  syntax:
    content: 'public class PrintQueueStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)
  id: '#ctor(System.Printing.PrintQueue,System.String)'
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: PrintQueueStream(PrintQueue,String)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> класса для указанного перед печатью, размещенного в указанном <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>."
  syntax:
    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "<xref href=&quot;System.Printing.PrintQueue&quot;> </xref> , На котором размещается задание печати, который предоставляет содержимое потока."
    - id: printJobName
      type: System.String
      description: "Имя задания печати, который предоставляет содержимое потока."
  overload: System.Printing.PrintQueueStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)
  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean)'
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: PrintQueueStream(PrintQueue,String,Boolean)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> класса для указанного перед печатью, размещенного в указанном <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>, с указанием ли данные в <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> должна быть зафиксирована, если поток закрыт."
  syntax:
    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "<xref href=&quot;System.Printing.PrintQueue&quot;> </xref> , На котором размещается задание печати, который предоставляет содержимое потока."
    - id: printJobName
      type: System.String
      description: "Имя задания печати, который предоставляет содержимое потока."
    - id: commitDataOnClose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы зафиксировать данные в <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> при <xref:System.Printing.PrintQueueStream.Close*>метод вызван; в противном случае —<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>.</xref:System.Printing.PrintQueueStream.Close*>"
  overload: System.Printing.PrintQueueStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)
  id: '#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)'
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> класса для указанного перед печатью, размещенного в указанном <xref href=&quot;System.Printing.PrintQueue&quot;> </xref>с заданными параметрами и указание, следует ли данные в <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> должна быть зафиксирована, если поток закрыт."
  syntax:
    content: public PrintQueueStream (System.Printing.PrintQueue printQueue, string printJobName, bool commitDataOnClose, System.Printing.PrintTicket printTicket);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "<xref href=&quot;System.Printing.PrintQueue&quot;> </xref> , На котором размещается задание печати, который предоставляет содержимое потока."
    - id: printJobName
      type: System.String
      description: "Имя задания печати, который предоставляет содержимое потока."
    - id: commitDataOnClose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы зафиксировать данные в <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> при <xref:System.Printing.PrintQueueStream.Close*>метод вызван; в противном случае —<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>.</xref:System.Printing.PrintQueueStream.Close*>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "Параметры задания печати."
  overload: System.Printing.PrintQueueStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Printing.PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Начинает операцию асинхронной записи."
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Буфер для записи данных."
    - id: offset
      type: System.Int32
      description: "Смещение байтов в буфере, с которого начинается запись."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов для записи."
    - id: callback
      type: System.AsyncCallback
      description: "Асинхронный обратный вызов, вызываемый после завершения операции записи."
    - id: state
      type: System.Object
      description: "Предоставляемый пользователем объект, являющийся отличительным признаком данного асинхронного запроса записи от других запросов."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Представляющий асинхронную запись, которая может все еще быть отложена.</xref:System.IAsyncResult>"
  overload: System.Printing.PrintQueueStream.BeginWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.CanRead
  id: CanRead
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PrintQueueStream.CanRead
  fullName: System.Printing.PrintQueueStream.CanRead
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает значение, указывающее, поддерживает ли поток операции чтения."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если чтение поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueueStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.CanSeek
  id: CanSeek
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PrintQueueStream.CanSeek
  fullName: System.Printing.PrintQueueStream.CanSeek
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает значение, указывающее, поддерживает ли поток поиск, который перемещает позицию чтения и записи в новое положение в потоке."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поиск поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueueStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.CanWrite
  id: CanWrite
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PrintQueueStream.CanWrite
  fullName: System.Printing.PrintQueueStream.CanWrite
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает значение, указывающее, поддерживает ли поток операции записи."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запись поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.PrintQueueStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Close
  id: Close
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Close()
  nameWithType: PrintQueueStream.Close()
  fullName: System.Printing.PrintQueueStream.Close()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Закрывает поток и освобождает все ресурсы, такие как сокеты и дескрипторы файлов, связанные с ним."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Printing.PrintQueueStream.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PrintQueueStream.Dispose(Boolean)
  fullName: System.Printing.PrintQueueStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с параметром неименованные логическое значение `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с параметром неименованные логическое значение `false`.</xref:System.Object.Finalize%2A>       При логический параметр без имени `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Printing.PrintQueueStream>ссылки.</xref:System.Printing.PrintQueueStream> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "Для добавления."
  overload: System.Printing.PrintQueueStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)
  fullName: System.Printing.PrintQueueStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Заканчивает операцию асинхронной записи."
  remarks: "Метод EndWrite может быть вызвана только один раз на каждый <xref:System.IAsyncResult>возвращенный вызов <xref:System.Printing.PrintQueueStream.BeginWrite%2A>.</xref:System.Printing.PrintQueueStream.BeginWrite%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Ссылка на отложенный асинхронный запрос ввода-вывода."
  overload: System.Printing.PrintQueueStream.EndWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Finalize
  id: Finalize
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: PrintQueueStream.Finalize()
  fullName: System.Printing.PrintQueueStream.Finalize()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Включает <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> сборщиком мусора."
  remarks: "Этот метод переопределяет <xref:System.Object.Finalize%2A?displayProperty=fullName>.</xref:System.Object.Finalize%2A?displayProperty=fullName> Код приложения не должен вызывать этот метод; Объект `Finalize` метод автоматически вызывается во время сборки мусора, если завершение работы сборщика мусора была отключена с помощью вызова <xref:System.GC.SuppressFinalize%2A>метод.</xref:System.GC.SuppressFinalize%2A>       Дополнительные сведения см. в разделе [методы Finalize и деструкторы](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md), и [переопределение метода Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~PrintQueueStream ();
    parameters: []
  overload: System.Printing.PrintQueueStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Flush
  id: Flush
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PrintQueueStream.Flush()
  fullName: System.Printing.PrintQueueStream.Flush()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Очищает все буферы для этого потока и записывает запись всех буферизованных данных в базовое устройство."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Printing.PrintQueueStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)
  id: HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
  fullName: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Включает <xref href=&quot;System.Printing.PrintQueueStream&quot;> </xref> реагировать на ход выполнения упаковки, обрабатывая <xref href=&quot;System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent&quot;> </xref>."
  syntax:
    content: public void HandlePackagingProgressEvent (object sender, System.Windows.Xps.Packaging.PackagingProgressEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события."
    - id: e
      type: System.Windows.Xps.Packaging.PackagingProgressEventArgs
      description: "Данные события."
  overload: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.JobIdentifier
  id: JobIdentifier
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: JobIdentifier
  nameWithType: PrintQueueStream.JobIdentifier
  fullName: System.Printing.PrintQueueStream.JobIdentifier
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает Идентификационный номер задания печати."
  syntax:
    content: public int JobIdentifier { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>, Представляющее идентификатор.</xref:System.Int32>"
  overload: System.Printing.PrintQueueStream.JobIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Length
  id: Length
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Length
  nameWithType: PrintQueueStream.Length
  fullName: System.Printing.PrintQueueStream.Length
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает длину потока в байтах."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>, Представляющее длину потока в байтах.</xref:System.Int64>"
  overload: System.Printing.PrintQueueStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Position
  id: Position
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Position
  nameWithType: PrintQueueStream.Position
  fullName: System.Printing.PrintQueueStream.Position
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Возвращает или задает текущую позицию чтения и записи в потоке."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>, Представляющий текущую позицию в потоке.</xref:System.Int64>"
  overload: System.Printing.PrintQueueStream.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PrintQueueStream.Read(Byte[],Int32,Int32)
  fullName: System.Printing.PrintQueueStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Считывает последовательность байтов из потока и перемещает позицию чтения и записи в потоке на число считанных байтов."
  remarks: "Возвращаемое значение может быть меньше количества запрошенных байтов, если многие байты недоступны в данный момент; или это число может быть ноль (0), если позиция чтения и записи находится в конце потока.       По возвращении из этого метода `buffer` содержит указанный массив байтов и значения в интервале между `offset` и (смещение + счетчик – 1) заменены байтами, считанными из источника."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Массив байтов."
    - id: offset
      type: System.Int32
      description: "Отсчитываемое от нуля смещение в буфере, с которой вы хотите начать сохранение данных, считанных из потока."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов, считанных из потока."
    return:
      type: System.Int32
      description: "<xref:System.Int32>, Содержащий общее число байтов, считанных в буфер.</xref:System.Int32>"
  overload: System.Printing.PrintQueueStream.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PrintQueueStream.Seek(Int64,SeekOrigin)
  fullName: System.Printing.PrintQueueStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Задает положение чтения или записи в потоке."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Смещение в байтах относительно параметра начала."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Значение типа <xref:System.IO.SeekOrigin>, указывающее опорную точку, которая используется для получения новой позиции.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "<xref:System.Int64>, Представляющий новое положение чтения или записи.</xref:System.Int64>"
  overload: System.Printing.PrintQueueStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PrintQueueStream.SetLength(Int64)
  fullName: System.Printing.PrintQueueStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Задает длину потока."
  remarks: "Поток должен поддерживать запись и поиск для SetLength для работы.       Используйте <xref:System.Printing.PrintQueueStream.CanWrite%2A>свойство, чтобы определить, поддерживает ли текущий экземпляр записи и использовать <xref:System.Printing.PrintQueueStream.CanSeek%2A>Свойства, чтобы определить, поддерживается ли поиск.</xref:System.Printing.PrintQueueStream.CanSeek%2A> </xref:System.Printing.PrintQueueStream.CanWrite%2A>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Требуется длина в байтах текущего потока."
  overload: System.Printing.PrintQueueStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Printing.PrintQueueStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PrintQueueStream.Write(Byte[],Int32,Int32)
  fullName: System.Printing.PrintQueueStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Записывает последовательность байтов в поток и перемещает позицию чтения и записи в потоке на число записанных байтов."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Массив байтов, из которого копируется в поток."
    - id: offset
      type: System.Int32
      description: "Отсчитываемое от нуля смещение в `buffer` которой вы хотите начать копирование байтов в поток."
    - id: count
      type: System.Int32
      description: "Число байтов для записи в поток."
  overload: System.Printing.PrintQueueStream.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: PrintQueueStream(PrintQueue,String)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: PrintQueueStream(PrintQueue,String,Boolean)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueueStream.#ctor(System.Printing.PrintQueue,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
  nameWithType: PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueueStream.PrintQueueStream(PrintQueue,String,Boolean,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintQueueStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Printing.PrintQueueStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Printing.PrintQueueStream.CanRead
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanRead
  nameWithType: PrintQueueStream.CanRead
  fullName: System.Printing.PrintQueueStream.CanRead
- uid: System.Printing.PrintQueueStream.CanSeek
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanSeek
  nameWithType: PrintQueueStream.CanSeek
  fullName: System.Printing.PrintQueueStream.CanSeek
- uid: System.Printing.PrintQueueStream.CanWrite
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanWrite
  nameWithType: PrintQueueStream.CanWrite
  fullName: System.Printing.PrintQueueStream.CanWrite
- uid: System.Printing.PrintQueueStream.Close
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Close()
  nameWithType: PrintQueueStream.Close()
  fullName: System.Printing.PrintQueueStream.Close()
- uid: System.Printing.PrintQueueStream.Dispose(System.Boolean)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PrintQueueStream.Dispose(Boolean)
  fullName: System.Printing.PrintQueueStream.Dispose(Boolean)
- uid: System.Printing.PrintQueueStream.EndWrite(System.IAsyncResult)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PrintQueueStream.EndWrite(IAsyncResult)
  fullName: System.Printing.PrintQueueStream.EndWrite(IAsyncResult)
- uid: System.Printing.PrintQueueStream.Finalize
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Finalize()
  nameWithType: PrintQueueStream.Finalize()
  fullName: System.Printing.PrintQueueStream.Finalize()
- uid: System.Printing.PrintQueueStream.Flush
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Flush()
  nameWithType: PrintQueueStream.Flush()
  fullName: System.Printing.PrintQueueStream.Flush()
- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(System.Object,System.Windows.Xps.Packaging.PackagingProgressEventArgs)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
  nameWithType: PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
  fullName: System.Printing.PrintQueueStream.HandlePackagingProgressEvent(Object,PackagingProgressEventArgs)
- uid: System.Windows.Xps.Packaging.PackagingProgressEventArgs
  parent: System.Windows.Xps.Packaging
  isExternal: false
  name: PackagingProgressEventArgs
  nameWithType: PackagingProgressEventArgs
  fullName: System.Windows.Xps.Packaging.PackagingProgressEventArgs
- uid: System.Printing.PrintQueueStream.JobIdentifier
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: JobIdentifier
  nameWithType: PrintQueueStream.JobIdentifier
  fullName: System.Printing.PrintQueueStream.JobIdentifier
- uid: System.Printing.PrintQueueStream.Length
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Length
  nameWithType: PrintQueueStream.Length
  fullName: System.Printing.PrintQueueStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Printing.PrintQueueStream.Position
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Position
  nameWithType: PrintQueueStream.Position
  fullName: System.Printing.PrintQueueStream.Position
- uid: System.Printing.PrintQueueStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PrintQueueStream.Read(Byte[],Int32,Int32)
  fullName: System.Printing.PrintQueueStream.Read(Byte[],Int32,Int32)
- uid: System.Printing.PrintQueueStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PrintQueueStream.Seek(Int64,SeekOrigin)
  fullName: System.Printing.PrintQueueStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Printing.PrintQueueStream.SetLength(System.Int64)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PrintQueueStream.SetLength(Int64)
  fullName: System.Printing.PrintQueueStream.SetLength(Int64)
- uid: System.Printing.PrintQueueStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PrintQueueStream.Write(Byte[],Int32,Int32)
  fullName: System.Printing.PrintQueueStream.Write(Byte[],Int32,Int32)
- uid: System.Printing.PrintQueueStream.#ctor*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: PrintQueueStream
  nameWithType: PrintQueueStream.PrintQueueStream
- uid: System.Printing.PrintQueueStream.BeginWrite*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: BeginWrite
  nameWithType: PrintQueueStream.BeginWrite
- uid: System.Printing.PrintQueueStream.CanRead*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanRead
  nameWithType: PrintQueueStream.CanRead
- uid: System.Printing.PrintQueueStream.CanSeek*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanSeek
  nameWithType: PrintQueueStream.CanSeek
- uid: System.Printing.PrintQueueStream.CanWrite*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: CanWrite
  nameWithType: PrintQueueStream.CanWrite
- uid: System.Printing.PrintQueueStream.Close*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Close
  nameWithType: PrintQueueStream.Close
- uid: System.Printing.PrintQueueStream.Dispose*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Dispose
  nameWithType: PrintQueueStream.Dispose
- uid: System.Printing.PrintQueueStream.EndWrite*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: EndWrite
  nameWithType: PrintQueueStream.EndWrite
- uid: System.Printing.PrintQueueStream.Finalize*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Finalize
  nameWithType: PrintQueueStream.Finalize
- uid: System.Printing.PrintQueueStream.Flush*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Flush
  nameWithType: PrintQueueStream.Flush
- uid: System.Printing.PrintQueueStream.HandlePackagingProgressEvent*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: HandlePackagingProgressEvent
  nameWithType: PrintQueueStream.HandlePackagingProgressEvent
- uid: System.Printing.PrintQueueStream.JobIdentifier*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: JobIdentifier
  nameWithType: PrintQueueStream.JobIdentifier
- uid: System.Printing.PrintQueueStream.Length*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Length
  nameWithType: PrintQueueStream.Length
- uid: System.Printing.PrintQueueStream.Position*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Position
  nameWithType: PrintQueueStream.Position
- uid: System.Printing.PrintQueueStream.Read*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Read
  nameWithType: PrintQueueStream.Read
- uid: System.Printing.PrintQueueStream.Seek*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Seek
  nameWithType: PrintQueueStream.Seek
- uid: System.Printing.PrintQueueStream.SetLength*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: SetLength
  nameWithType: PrintQueueStream.SetLength
- uid: System.Printing.PrintQueueStream.Write*
  parent: System.Printing.PrintQueueStream
  isExternal: false
  name: Write
  nameWithType: PrintQueueStream.Write
