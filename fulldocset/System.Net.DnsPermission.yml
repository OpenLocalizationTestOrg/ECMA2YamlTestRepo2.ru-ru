### YamlMime:ManagedReference
items:
- uid: System.Net.DnsPermission
  id: DnsPermission
  children:
  - System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.DnsPermission.Copy
  - System.Net.DnsPermission.FromXml(System.Security.SecurityElement)
  - System.Net.DnsPermission.Intersect(System.Security.IPermission)
  - System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.DnsPermission.IsUnrestricted
  - System.Net.DnsPermission.ToXml
  - System.Net.DnsPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: DnsPermission
  nameWithType: DnsPermission
  fullName: System.Net.DnsPermission
  type: Class
  summary: "Управляет правами доступа к серверам системы доменных имен (DNS) в сети."
  remarks: "Разрешения по умолчанию позволяют всем локальным приложениям и приложениям зоны интрасети для доступа к службам DNS и отсутствует разрешение DNS для зоны веб-приложений."
  syntax:
    content: 'public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: DnsPermission(PermissionState)
  nameWithType: DnsPermission.DnsPermission(PermissionState)
  fullName: System.Net.DnsPermission.DnsPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.DnsPermission&quot;> </xref> класс, который разрешает неограниченный доступ к DNS или запрещает доступ к DNS."
  remarks: "Если `state` — <xref:System.Security.Permissions.PermissionState>, <xref:System.Net.DnsPermission>экземпляр передает все запросы.</xref:System.Net.DnsPermission> </xref:System.Security.Permissions.PermissionState> Если `state` имеет любое другое значение <xref:System.Net.DnsPermission>экземпляр отклоняет все запросы.</xref:System.Net.DnsPermission>"
  example:
  - "The following example creates an instance of the <xref:System.Net.DnsPermission> class.  \n  \n [!code-cpp[DnsPermission_Constructor#1](~/add/codesnippet/cpp/3a7d5b50-fdd8-4887-a768-_1.cpp)]\n [!code-cs[DnsPermission_Constructor#1](~/add/codesnippet/csharp/3a7d5b50-fdd8-4887-a768-_1.cs)]\n [!code-vb[DnsPermission_Constructor#1](~/add/codesnippet/visualbasic/3a7d5b50-fdd8-4887-a768-_1.vb)]"
  syntax:
    content: public DnsPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Net.DnsPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>не является допустимым <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значение."
  platform:
  - net462
- uid: System.Net.DnsPermission.Copy
  id: Copy
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: DnsPermission.Copy()
  fullName: System.Net.DnsPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает точную копию текущего экземпляра разрешения."
  remarks: "Копия <xref:System.Net.DnsPermission>экземпляр предоставляет такой же доступ к DNS-серверы, как исходный экземпляр разрешения.</xref:System.Net.DnsPermission>"
  example:
  - "The following example creates an identical copy of an existing <xref:System.Net.DnsPermission> instance.  \n  \n [!code-cs[DnsPermission_Copy#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_3_1.cs)]\n [!code-vb[DnsPermission_Copy#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_3_1.vb)]\n [!code-cpp[DnsPermission_Copy#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_3_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Новый экземпляр <xref href=&quot;System.Net.DnsPermission&quot;> </xref> класс, являющийся идентичную копию текущего экземпляра."
  overload: System.Net.DnsPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.DnsPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: DnsPermission.FromXml(SecurityElement)
  fullName: System.Net.DnsPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Восстанавливает <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр из кодировки XML."
  remarks: "Метод FromXml восстанавливает <xref:System.Net.DnsPermission>экземпляр из кодировки XML определяются <xref:System.Security.SecurityElement>классом.</xref:System.Security.SecurityElement> </xref:System.Net.DnsPermission>       Используйте <xref:System.Net.DnsPermission.ToXml%2A>метод для XML-кодирования <xref:System.Net.DnsPermission>экземпляра, включая сведения о состоянии.</xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission.ToXml%2A>"
  example:
  - "The following example reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding.  \n  \n [!code-cs[DnsPermission_FromXml#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_0_1.cs)]\n [!code-cpp[DnsPermission_FromXml#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_0_1.cpp)]\n [!code-vb[DnsPermission_FromXml#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_0_1.vb)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Кодировка, используемая для восстановления XML <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляра."
  overload: System.Net.DnsPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>не является <xref href=&quot;System.Net.DnsPermission&quot;> </xref> элемента."
  platform:
  - net462
- uid: System.Net.DnsPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: DnsPermission.Intersect(IPermission)
  fullName: System.Net.DnsPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает экземпляр разрешения, представляющий собой пересечение текущего и указанного разрешения экземпляра."
  remarks: "Метод Intersect возвращает <xref:System.Net.DnsPermission>экземпляр, который разрешает доступ, определяемый как текущим <xref:System.Net.DnsPermission>экземпляр и указанный <xref:System.Net.DnsPermission>экземпляра.</xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> Любой запрос должен передавать оба разрешения, чтобы передать их пересечения."
  example:
  - "The following example creates a permission instance that is the intersection of the current permission instance and the specified permission instance.  \n  \n [!code-cs[dnspermission_union_intersect#2](~/add/codesnippet/csharp/m-system.net.dnspermissi_2_1.cs)]\n [!code-vb[dnspermission_union_intersect#2](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_2_1.vb)]\n [!code-cpp[dnspermission_union_intersect#2](~/add/codesnippet/cpp/m-system.net.dnspermissi_2_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.DnsPermission&quot;> </xref> Экземпляра, пересекающееся с текущим экземпляром."
    return:
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Net.DnsPermission&quot;> </xref> , представляющее собой пересечение текущего экземпляра <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр с заданным <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляра, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пересечение является пустым. Если текущий экземпляр и <code> target </code> являются неограниченными, этот метод возвращает новый <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр, ограничены; в противном случае он возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.DnsPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>is neither a <xref href=&quot;System.Net.DnsPermission&quot;></xref> nor <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: DnsPermission.IsSubsetOf(IPermission)
  fullName: System.Net.DnsPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Определяет, является ли текущий экземпляр разрешения подмножеством заданного экземпляра разрешения."
  remarks: "Текущий <xref:System.Net.DnsPermission>экземпляра является подмножеством указанного <xref:System.Net.DnsPermission>экземпляра, если текущий <xref:System.Net.DnsPermission>экземпляр задает набор операций, полностью содержащихся на заданный <xref:System.Net.DnsPermission>экземпляра.</xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission>       Если метод IsSubsetOf возвращает `true`, текущий <xref:System.Net.DnsPermission>экземпляр разрешает указанный уровень доступа к DNS-серверов, чем <xref:System.Net.DnsPermission>экземпляра.</xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission>"
  example:
  - "The following example uses the IsSubsetOf method to determine whether the current permission instance is a subset of the specified permission instance.  \n  \n [!code-cs[DnsPermission_IsSubsetOf#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_6_1.cs)]\n [!code-cpp[DnsPermission_IsSubsetOf#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_6_1.cpp)]\n [!code-vb[DnsPermission_IsSubsetOf#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_6_1.vb)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Второй <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляра, которое необходимо проверить отношение подмножества."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если текущий экземпляр является неограниченным и <code> target </code> либо <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или ограничены; в противном случае — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.DnsPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>is neither a <xref href=&quot;System.Net.DnsPermission&quot;></xref> nor <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.DnsPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: DnsPermission.IsUnrestricted()
  fullName: System.Net.DnsPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Проверяет полное состояние разрешения для объекта."
  remarks: ''
  example:
  - "The following example uses the IsUnrestricted method to check the overall permission state of the object.  \n  \n [!code-cpp[DnsPermission_IsUnrestricted#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_4_1.cpp)]\n [!code-vb[DnsPermission_IsUnrestricted#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_4_1.vb)]\n [!code-cs[DnsPermission_IsUnrestricted#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_4_1.cs)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Net.DnsPermission&quot;> </xref> создавался экземпляр <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.DnsPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.DnsPermission.ToXml
  id: ToXml
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: DnsPermission.ToXml()
  fullName: System.Net.DnsPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает кодировку XML для <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр и его текущего состояния."
  remarks: "Создает метод ToXml <xref:System.Security.SecurityElement>экземпляра для XML-кодирования представление <xref:System.Net.DnsPermission>экземпляра, включая сведения о состоянии.</xref:System.Net.DnsPermission> </xref:System.Security.SecurityElement>       Используйте <xref:System.Net.DnsPermission.FromXml%2A>метод восстановления сведений о состоянии из <xref:System.Security.SecurityElement>экземпляра.</xref:System.Security.SecurityElement> </xref:System.Net.DnsPermission.FromXml%2A>"
  example:
  - "The following example creates an XML encoding of a <xref:System.Net.DnsPermission> instance.  \n  \n [!code-cpp[DnsPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_1_1.cpp)]\n [!code-cs[DnsPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_1_1.cs)]\n [!code-vb[DnsPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_1_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Объект <xref href=&quot;System.Security.SecurityElement&quot;> </xref> экземпляр, содержащий XML-кодированное представление для объекта безопасности, включая сведения о состоянии."
  overload: System.Net.DnsPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.DnsPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.DnsPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: DnsPermission.Union(IPermission)
  fullName: System.Net.DnsPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает экземпляр разрешения, представляющее собой объединение текущего и указанного разрешения экземпляра."
  remarks: "Возвращает метод Union <xref:System.Net.DnsPermission>экземпляр, который разрешает доступ, определяемый или текущим <xref:System.Net.DnsPermission>экземпляра или только указанные <xref:System.Net.DnsPermission>экземпляра.</xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> </xref:System.Net.DnsPermission> Любой запрос, передающий любое разрешение, передает их объединение."
  example:
  - "The following example creates a permission instance that is the union of the current permission instance and the specified permission instance.  \n  \n [!code-cs[dnspermission_union_intersect#1](~/add/codesnippet/csharp/m-system.net.dnspermissi_5_1.cs)]\n [!code-vb[dnspermission_union_intersect#1](~/add/codesnippet/visualbasic/m-system.net.dnspermissi_5_1.vb)]\n [!code-cpp[dnspermission_union_intersect#1](~/add/codesnippet/cpp/m-system.net.dnspermissi_5_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.DnsPermission&quot;> </xref> Экземпляра для объединения с текущим экземпляром."
    return:
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Net.DnsPermission&quot;> </xref> , представляющее собой объединение текущего экземпляра <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр с заданным <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляра. Если <code> target </code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, этот метод возвращает копию текущего экземпляра. Если текущий экземпляр или <code> target </code> не ограничено, этот метод возвращает <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляра, ограничены; в противном случае он возвращает <xref href=&quot;System.Net.DnsPermission&quot;> </xref> экземпляр, который ограничен."
  overload: System.Net.DnsPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>is neither a <xref href=&quot;System.Net.DnsPermission&quot;></xref> nor <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.DnsPermission
  isExternal: false
  name: DnsPermission(PermissionState)
  nameWithType: DnsPermission.DnsPermission(PermissionState)
  fullName: System.Net.DnsPermission.DnsPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.DnsPermission.Copy
  parent: System.Net.DnsPermission
  isExternal: false
  name: Copy()
  nameWithType: DnsPermission.Copy()
  fullName: System.Net.DnsPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.DnsPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.DnsPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: DnsPermission.FromXml(SecurityElement)
  fullName: System.Net.DnsPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.DnsPermission.Intersect(System.Security.IPermission)
  parent: System.Net.DnsPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: DnsPermission.Intersect(IPermission)
  fullName: System.Net.DnsPermission.Intersect(IPermission)
- uid: System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.DnsPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: DnsPermission.IsSubsetOf(IPermission)
  fullName: System.Net.DnsPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.DnsPermission.IsUnrestricted
  parent: System.Net.DnsPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: DnsPermission.IsUnrestricted()
  fullName: System.Net.DnsPermission.IsUnrestricted()
- uid: System.Net.DnsPermission.ToXml
  parent: System.Net.DnsPermission
  isExternal: false
  name: ToXml()
  nameWithType: DnsPermission.ToXml()
  fullName: System.Net.DnsPermission.ToXml()
- uid: System.Net.DnsPermission.Union(System.Security.IPermission)
  parent: System.Net.DnsPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: DnsPermission.Union(IPermission)
  fullName: System.Net.DnsPermission.Union(IPermission)
- uid: System.Net.DnsPermission.#ctor*
  parent: System.Net.DnsPermission
  isExternal: false
  name: DnsPermission
  nameWithType: DnsPermission.DnsPermission
- uid: System.Net.DnsPermission.Copy*
  parent: System.Net.DnsPermission
  isExternal: false
  name: Copy
  nameWithType: DnsPermission.Copy
- uid: System.Net.DnsPermission.FromXml*
  parent: System.Net.DnsPermission
  isExternal: false
  name: FromXml
  nameWithType: DnsPermission.FromXml
- uid: System.Net.DnsPermission.Intersect*
  parent: System.Net.DnsPermission
  isExternal: false
  name: Intersect
  nameWithType: DnsPermission.Intersect
- uid: System.Net.DnsPermission.IsSubsetOf*
  parent: System.Net.DnsPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: DnsPermission.IsSubsetOf
- uid: System.Net.DnsPermission.IsUnrestricted*
  parent: System.Net.DnsPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: DnsPermission.IsUnrestricted
- uid: System.Net.DnsPermission.ToXml*
  parent: System.Net.DnsPermission
  isExternal: false
  name: ToXml
  nameWithType: DnsPermission.ToXml
- uid: System.Net.DnsPermission.Union*
  parent: System.Net.DnsPermission
  isExternal: false
  name: Union
  nameWithType: DnsPermission.Union
