### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.FilterFactory
  id: FilterFactory
  children:
  - System.Web.DynamicData.FilterFactory.#ctor
  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  langs:
  - csharp
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
  type: Class
  summary: "Создает шаблон фильтра."
  remarks: "Класс FilterFactory используется во время выполнения динамических данных для получения экземпляра шаблона фильтра для определенного типа столбца.       Можно переопределить методы, определенные в этом классе для настройки порядка загрузки шаблонов фильтра. Например пользовательская реализация удалось загрузить шаблоны фильтров из расположения, отличного от папки ~/DynamicData/Filters по умолчанию.       Платформа динамических данных предоставляет шаблоны фильтров для столбца внешнего ключа, логические и перечисление типов, которые отображаются с помощью <xref:System.Web.UI.WebControls.DropDownList>управления.</xref:System.Web.UI.WebControls.DropDownList> Можно также создавать пользовательские шаблоны фильтров."
  example:
  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.
  syntax:
    content: public class FilterFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> класса."
  syntax:
    content: public FilterFactory ();
    parameters: []
  overload: System.Web.DynamicData.FilterFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Создает экземпляр шаблона фильтра."
  remarks: "Этот метод вызывается платформой динамических данных для получения экземпляра шаблона фильтра. Производные классы могут переопределять этот метод для настройки способа создания экземпляров шаблонов фильтра. Например пользовательская реализация может загрузить шаблоны из скомпилированной сборки, а не из папки ~/DynamicData/Filters по умолчанию."
  syntax:
    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Столбец данных, к которому применяется шаблон фильтра."
    - id: filterUIHint
      type: System.String
      description: "Имя шаблона фильтра для использования."
    return:
      type: System.Web.DynamicData.QueryableFilterUserControl
      description: "Экземпляр <xref href=&quot;System.Web.DynamicData.QueryableFilterUserControl&quot;> </xref> класса."
  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  langs:
  - csharp
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Получает виртуальный путь к шаблону фильтра."
  remarks: "По умолчанию фильтр шаблоны расположены в папке ~/DynamicData/Filers.       Этот метод определяет виртуальный путь к папке, содержащей шаблон поля. Производные классы могут переопределять этот метод для предоставления шаблонов фильтра из другого виртуального пути."
  syntax:
    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Столбец данных, к которому применяется шаблон фильтра."
    - id: filterUIHint
      type: System.String
      description: "Шаблон фильтра для использования."
    return:
      type: System.String
      description: "Виртуальный путь шаблон фильтра."
  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>column</code>is **null**."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.DynamicData.FilterFactory.#ctor
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory()
  nameWithType: FilterFactory.FilterFactory()
  fullName: System.Web.DynamicData.FilterFactory.FilterFactory()
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl(MetaColumn,String)
  nameWithType: FilterFactory.CreateFilterControl(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.CreateFilterControl(MetaColumn,String)
- uid: System.Web.DynamicData.QueryableFilterUserControl
  parent: System.Web.DynamicData
  isExternal: false
  name: QueryableFilterUserControl
  nameWithType: QueryableFilterUserControl
  fullName: System.Web.DynamicData.QueryableFilterUserControl
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath(MetaColumn,String)
  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn,String)
  fullName: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(MetaColumn,String)
- uid: System.Web.DynamicData.FilterFactory.#ctor*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory.FilterFactory
- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: CreateFilterControl
  nameWithType: FilterFactory.CreateFilterControl
- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*
  parent: System.Web.DynamicData.FilterFactory
  isExternal: false
  name: GetFilterVirtualPath
  nameWithType: FilterFactory.GetFilterVirtualPath
