### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  id: SqlPersistenceProviderFactory
  children:
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  langs:
  - csharp
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  type: Class
  summary: "Системные <xref href=&quot;System.ServiceModel.Persistence.PersistenceProviderFactory&quot;> </xref> реализацию, используемую для создания <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> экземпляр, который использует базу данных SQL для хранения данные о состоянии службы."
  remarks: "Класс SqlPersistenceProviderFactory представляет класс фабрики поставщика сохраняемости полнофункциональную сохраняемых служб. Можно использовать этот поставщик, предоставляемый системой для сохранения и получения сведений о надежное [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] службы.       Помимо сохраняемости, поставщик, созданный класс SqlPersistenceProviderFactory реализует блокировку записей данных о состоянии службы путем наследования от абстрактного <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>класса.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider>  Методы, взаимодействующие с хранимыми данными (такие как <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>или <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) иметь необязательный параметр (`lockInstance`), определяющее, является ли сняты или сохранены блокировки соответствующих данных.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A> </xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>      настроек [!NOTE] настроек <xref:System.ServiceModel.Persistence.PersistenceException>исключения, вызванные SqlPersistenceProviderFactory имеют свои сведения об исключении, по умолчанию скрыт.</xref:System.ServiceModel.Persistence.PersistenceException> Чтобы обеспечить защиту от уязвимостей системы безопасности, эти сведения могут быть скрыты, задав <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>для `false`.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>      Настроек [!NOTE] настроек поставщик сохраняемости SQL сохраняет и извлекает данные из базы данных SQL Server. Узел необходимо создать безопасную среду SQL Server для защиты от злоумышленников, получающих доступ на чтение и запись к состоянию экземпляра в базе данных или на линии связи между приложением и базой данных."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProviderFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> класс, настроенный с указанной коллекцией параметров."
  remarks: "Этот конструктор можно использовать для произвольного задания `lockTimeout`, `connectionString`, и `serializeAsText` без задания остальных параметров, необходимых для других конструкторов (например, чтобы указать `connectionString` и `lockTimeout` параметров без указания `serializeAsText` параметров.)"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \n  \n [!code-cs[SqlPersistenceProviderFactory#3](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#3)]"
  syntax:
    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "Коллекция параметров, используемых новой фабрикой поставщика сохраняемости. Допустимыми параметрами являются <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> класс, настроенный с указанной строкой подключения."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \n  \n [!code-cs[SqlPersistenceProviderFactory#2](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#2)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Параметры соединения для нового экземпляра поставщика сохраняемости."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> класс, настроенный с указанной строкой подключения и <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref> параметров."
  remarks: "Значение по умолчанию для `serializeAsText` — `false`, который указывает, сохраняемости информацию сериализуется как двоичные данные."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#1](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#1)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);
    parameters:
    - id: connectionString
      type: System.String
      description: "Параметры соединения для нового экземпляра поставщика сохраняемости."
    - id: serializeAsText
      type: System.Boolean
      description: "Указывает, является ли данные сериализованы как текст или как двоичные."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;> </xref> класс, настроенный с указанной строкой подключения, <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;> </xref> параметров."
  remarks: "Значение по умолчанию для `serializeAsText` — `false`, который указывает, сохраняемости информацию сериализуется как двоичные данные.       Значение по умолчанию для `lockTimeout` — `TimeSpan.Zero`, указывающая, что блокировка не используется. Если `TimeSpan.MaxValue` используется, то блокировки сохраняются в течение неограниченного времени."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#0](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#0)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);
    parameters:
    - id: connectionString
      type: System.String
      description: "Параметры соединения для нового экземпляра фабрики поставщика сохраняемости."
    - id: serializeAsText
      type: System.Boolean
      description: "Указывает, является ли данные сериализованы как текст или как двоичные."
    - id: lockTimeout
      type: System.TimeSpan
      description: "Время ожидания для блокировки владения. Заблокированные экземпляры автоматически разблокируются по прошествии этого времени. Время ожидания <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> блокировки не используется."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  id: ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Возвращает параметры соединения для экземпляров поставщика сохраняемости, создаваемых данной фабрикой."
  remarks: ''
  example:
  - "The following code example shows how to set and access the `ConnectionString` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#4](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#4)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Параметры соединения для экземпляров поставщика сохраняемости, создаваемых данной фабрикой."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  id: CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Инициализирует новый <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> экземпляр, который использует базу данных SQL в качестве хранилища сохраняемости."
  remarks: "Инициализированный поставщик сохраняемости использует текущие параметры создающей фабрики (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, и <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), даже если параметры фабрики изменяются после создания поставщика сохраняемости.</xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> </xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>"
  example:
  - "The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \n  \n [!code-cs[SqlPersistenceProviderFactory#7](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#7)]"
  syntax:
    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Уникальный идентификатор создаваемого поставщика сохраняемости."
    return:
      type: System.ServiceModel.Persistence.PersistenceProvider
      description: "Только что созданный <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Возвращает значение времени ожидания по умолчанию, используемое при закрытии поставщиков сохраняемости, созданных с помощью этой фабрики."
  remarks: "Значение по умолчанию для времени ожидания закрытия составляет 15 секунд."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение времени ожидания по умолчанию."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Возвращает значение времени ожидания по умолчанию, используемое при открытии поставщика сохраняемости."
  remarks: "Значение по умолчанию для времени ожидания открытия составляет 15 секунд."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Значение времени ожидания по умолчанию."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  id: LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Время ожидания для блокировки владения, используемое экземплярами поставщика сохраняемости, созданных с помощью этого экземпляра. Заблокированные экземпляры автоматически разблокируются по прошествии этого времени."
  remarks: "Время ожидания `TimeSpan.Zero` блокировки не используется."
  example:
  - "The following code example shows how to access the `LockTimeout` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#5](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#5)]"
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Значение времени ожидания для блокировки владения."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет этап прерывания."
  remarks: '`OnAbort`активируется, когда узел службы неожиданно завершает работу и активных команд, которые в данный момент обработка закрываются.'
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет начало этапа Close."
  remarks: "Этап Close наступает при закрытии службы."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого поставщик сохраняемости прерывает эту попытку."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый после завершения операции."
    - id: state
      type: System.Object
      description: "Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций."
    return:
      type: System.IAsyncResult
      description: "Состояние вызова асинхронного метода OnBeginClose."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет начало этапа Open."
  remarks: "Этап Open наступает при открытии службы."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого поставщик сохраняемости прерывает эту попытку."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый после завершения операции."
    - id: state
      type: System.Object
      description: "Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций."
    return:
      type: System.IAsyncResult
      description: "Состояние вызова асинхронного метода OnBeginOpen."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет этап Close."
  remarks: "Этап Close наступает при закрытии службы."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого поставщик сохраняемости прерывает эту попытку."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет конец этапа Close."
  remarks: "Этап Close наступает при закрытии службы."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ссылка на результат операции."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет конец этапа Open."
  remarks: "Этап Open наступает при открытии службы."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Ссылка на результат операции."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Представляет этап Open."
  remarks: "Этап Open наступает при открытии службы."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Период времени, после которого поставщик сохраняемости прерывает эту попытку."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  id: SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Указывает, является ли данные сериализованы как текст или как двоичные в поставщиках сохраняемости, создаваемых этой фабрикой."
  remarks: "Значение по умолчанию для `serializeAsText` — `false`, который указывает, сохраняемости информацию сериализуется как двоичные данные."
  example:
  - "The following code example shows how to access the `SerializeAsText` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#6](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#6)]"
  syntax:
    content: public bool SerializeAsText { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сведения о службе сериализуется как текст; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProviderFactory
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider
  nameWithType: SqlPersistenceProviderFactory.CreateProvider
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort
  nameWithType: SqlPersistenceProviderFactory.OnAbort
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose
  nameWithType: SqlPersistenceProviderFactory.OnClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose
  nameWithType: SqlPersistenceProviderFactory.OnEndClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen
  nameWithType: SqlPersistenceProviderFactory.OnOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
