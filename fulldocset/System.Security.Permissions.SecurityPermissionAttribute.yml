### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityPermissionAttribute
  id: SecurityPermissionAttribute
  children:
  - System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.SecurityPermissionAttribute.Assertion
  - System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  - System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  - System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  - System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  - System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  - System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  - System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  - System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  - System.Security.Permissions.SecurityPermissionAttribute.Execution
  - System.Security.Permissions.SecurityPermissionAttribute.Flags
  - System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  - System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  - System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  - System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  - System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  langs:
  - csharp
  name: SecurityPermissionAttribute
  nameWithType: SecurityPermissionAttribute
  fullName: System.Security.Permissions.SecurityPermissionAttribute
  type: Class
  summary: "Разрешает выполнять действия по безопасности для <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref> для применения в коде с помощью декларативной безопасности. Этот класс не наследуется."
  remarks: "Зависит от области объявление, которое может быть <xref:System.Security.Permissions.SecurityAction>используемая.</xref:System.Security.Permissions.SecurityAction>       Сведения безопасности, объявляемые атрибутом безопасности хранится в метаданных конечного объекта атрибута и доступен в системе во время выполнения. Атрибуты безопасности используются только для декларативной безопасности. Для принудительной безопасности используйте соответствующий класс разрешений.       При использовании класса SecurityPermissionAttribute, выполните действие по обеспечению безопасности с помощью разрешений, которые запрашиваются. Каждое разрешение безопасности, можно запросить, как определено в <xref:System.Security.Permissions.SecurityPermissionFlag>перечислении имеет соответствующее свойство SecurityPermissionAttribute класса.</xref:System.Security.Permissions.SecurityPermissionFlag> Например, требование возможность доступа к неуправляемому коду, выполните инструкцию запросу с параметрами свойства, запрашиваемых, следующим образом: `SecurityPermissionAttribute(SecurityAction.Demand, UnmanagedCode=true)`.      Настроек [!NOTE] настроек исключение эквивалентность между <xref:System.Security.Permissions.SecurityPermissionFlag>перечисления и свойства SecurityPermissionAttribute является то, что <xref:System.Security.Permissions.SecurityPermissionFlag>значение перечисления, представленного <xref:System.Security.Permissions.SecurityAttribute.Unrestricted%2A>свойство (наследуется от <xref:System.Security.Permissions.SecurityAttribute>класса).</xref:System.Security.Permissions.SecurityAttribute> </xref:System.Security.Permissions.SecurityAttribute.Unrestricted%2A> </xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.Permissions.SecurityPermissionFlag> Потребовать все разрешения безопасности, чтобы указать `Unrestricted=true`."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SecurityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SecurityPermissionAttribute(SecurityAction)
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.SecurityPermissionAttribute&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  syntax:
    content: public SecurityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Один из <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> значения."
  overload: System.Security.Permissions.SecurityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion
  id: Assertion
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Assertion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на утверждение, что все вызывающие этого кода имеют необходимое разрешение для операции."
  syntax:
    content: public bool Assertion { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на подтверждение объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.Assertion*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  id: BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
  fullName: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, имеет ли код разрешение на выполнение переадресации привязки в файле конфигурации приложения."
  remarks: "Разрешение перенаправления сборок платформы .NET Framework, которые были объединены, а также другие сборки, находящиеся вне .NET Framework."
  syntax:
    content: public bool BindingRedirects { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если код может выполнять переадресации привязки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  id: ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, является ли разрешение на управление <xref href=&quot;System.AppDomain&quot;> </xref> объявлен."
  syntax:
    content: public bool ControlAppDomain { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на управление <xref href=&quot;System.AppDomain&quot;> </xref> объявлено; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  id: ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на изменение или Управление политикой безопасности домена."
  syntax:
    content: public bool ControlDomainPolicy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на изменение или Управление политикой безопасности в домене приложения объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  id: ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на изменение или управление свидетельством."
  syntax:
    content: public bool ControlEvidence { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если возможность изменения или управления свидетельством объявлена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  id: ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на просмотр и управление политикой безопасности."
  syntax:
    content: public bool ControlPolicy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на управление политикой безопасности объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  id: ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на управление текущим участником."
  syntax:
    content: public bool ControlPrincipal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на управление текущим участником объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  id: ControlThread
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на управление потоками."
  remarks: "Дополнительные сведения см. в разделе <xref:System.Threading.Thread>.</xref:System.Threading.Thread>"
  syntax:
    content: public bool ControlThread { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на управление потоками объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.ControlThread*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SecurityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает новый <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref>."
  remarks: "Этот метод должен вызываться только системой безопасности, вызывать в коде приложения.       Во время компиляции атрибуты преобразуют объявления безопасности в сериализованную форму в метаданных. Данные декларативной безопасности в метаданных создаются из разрешения, которое возвращает этот метод, соответствующий этому атрибуту."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref> , соответствующий этому атрибуту."
  overload: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution
  id: Execution
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Execution
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на выполнение кода."
  remarks: "Требование <xref:System.Security.Permissions.SecurityPermissionFlag>разрешение на уровне сборки учитывается.</xref:System.Security.Permissions.SecurityPermissionFlag> Если сборка имеет права на выполнение, <xref:System.Security.Permissions.SecurityPermissionFlag>разрешение предоставляется автоматически и задание свойства выполнения либо `true` или `false` не делает ничего.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool Execution { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на выполнение кода объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.Execution*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает все флаги разрешения, составляющие <xref href=&quot;System.Security.Permissions.SecurityPermission&quot;> </xref> разрешения."
  syntax:
    content: public System.Security.Permissions.SecurityPermissionFlag Flags { get; set; }
    return:
      type: System.Security.Permissions.SecurityPermissionFlag
      description: "Один или несколько <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> значения, объединенные с помощью побитового логического Сложения."
  overload: System.Security.Permissions.SecurityPermissionAttribute.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Попытка задать это свойство имеет недопустимое значение. В разделе <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> допустимые значения."
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  id: Infrastructure
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, может ли код подключаться к инфраструктуре среды CLR, например, добавление Remoting Context Sinks, Envoy Sinks и Dynamic Sinks."
  syntax:
    content: public bool Infrastructure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если код может подключаться к инфраструктуре среды выполнения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  id: RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
  fullName: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, может ли код настраивать каналы и типы удаленного взаимодействия."
  syntax:
    content: public bool RemotingConfiguration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если код может настраивать каналы и типы удаленного взаимодействия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  id: SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, может ли код использовать модуль форматирования сериализации для сериализации или десериализации объекта."
  syntax:
    content: public bool SerializationFormatter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если код может использовать модуль форматирования сериализации для сериализации или десериализации объекта. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  id: SkipVerification
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на обход проверки кода."
  remarks: >-
    > [!CAUTION]

    >  This is a powerful permission that should be granted only to highly trusted code.
  syntax:
    content: public bool SkipVerification { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на обход проверки кода объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  id: UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionAttribute
  langs:
  - csharp
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
  fullName: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает значение, указывающее, объявлено ли разрешение на вызов неуправляемого кода."
  syntax:
    content: public bool UnmanagedCode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешение на вызов неуправляемого кода объявлено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SecurityPermissionAttribute(SecurityAction)
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SecurityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Assertion
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
  fullName: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
  fullName: System.Security.Permissions.SecurityPermissionAttribute.ControlThread
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SecurityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Execution
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Flags
- uid: System.Security.Permissions.SecurityPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityPermissionFlag
  nameWithType: SecurityPermissionFlag
  fullName: System.Security.Permissions.SecurityPermissionFlag
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
  fullName: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
  fullName: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
  fullName: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
  fullName: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode
- uid: System.Security.Permissions.SecurityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SecurityPermissionAttribute
  nameWithType: SecurityPermissionAttribute.SecurityPermissionAttribute
- uid: System.Security.Permissions.SecurityPermissionAttribute.Assertion*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Assertion
  nameWithType: SecurityPermissionAttribute.Assertion
- uid: System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: BindingRedirects
  nameWithType: SecurityPermissionAttribute.BindingRedirects
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlAppDomain
  nameWithType: SecurityPermissionAttribute.ControlAppDomain
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlDomainPolicy
  nameWithType: SecurityPermissionAttribute.ControlDomainPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlEvidence
  nameWithType: SecurityPermissionAttribute.ControlEvidence
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPolicy
  nameWithType: SecurityPermissionAttribute.ControlPolicy
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlPrincipal
  nameWithType: SecurityPermissionAttribute.ControlPrincipal
- uid: System.Security.Permissions.SecurityPermissionAttribute.ControlThread*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: ControlThread
  nameWithType: SecurityPermissionAttribute.ControlThread
- uid: System.Security.Permissions.SecurityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SecurityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.SecurityPermissionAttribute.Execution*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Execution
  nameWithType: SecurityPermissionAttribute.Execution
- uid: System.Security.Permissions.SecurityPermissionAttribute.Flags*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: SecurityPermissionAttribute.Flags
- uid: System.Security.Permissions.SecurityPermissionAttribute.Infrastructure*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: Infrastructure
  nameWithType: SecurityPermissionAttribute.Infrastructure
- uid: System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: RemotingConfiguration
  nameWithType: SecurityPermissionAttribute.RemotingConfiguration
- uid: System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SerializationFormatter
  nameWithType: SecurityPermissionAttribute.SerializationFormatter
- uid: System.Security.Permissions.SecurityPermissionAttribute.SkipVerification*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: SkipVerification
  nameWithType: SecurityPermissionAttribute.SkipVerification
- uid: System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode*
  parent: System.Security.Permissions.SecurityPermissionAttribute
  isExternal: false
  name: UnmanagedCode
  nameWithType: SecurityPermissionAttribute.UnmanagedCode
