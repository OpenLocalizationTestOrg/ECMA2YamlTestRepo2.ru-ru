### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.HttpRequestCacheLevel
  id: HttpRequestCacheLevel
  children:
  - System.Net.Cache.HttpRequestCacheLevel.BypassCache
  - System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.Default
  - System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.HttpRequestCacheLevel.Refresh
  - System.Net.Cache.HttpRequestCacheLevel.Reload
  - System.Net.Cache.HttpRequestCacheLevel.Revalidate
  langs:
  - csharp
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
  type: Enum
  summary: "Указывает поведение кэширования ресурсов, полученных с помощью протокола передачи гипертекста (HTTP)."
  remarks: "Это перечисление используется для задания уровня кэша, указанного в <xref:System.Net.Cache.HttpRequestCachePolicy>объектов.</xref:System.Net.Cache.HttpRequestCachePolicy>       Это значение BypassCache является поведение кэша по умолчанию, указанные в файле конфигурации компьютера, который поставляется с платформой .NET Framework. Записи не берутся из кэшей, добавляются в кэши или удаляются из кэшей между клиентом и сервером.       <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>Свойство позволяет получить или задать политику кэширования для <xref:System.Net.HttpWebRequest>экземпляров.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>Свойство позволяет получить или задать политику кэширования для <xref:System.Net.WebRequest>экземпляров.</xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>Свойство используется для получения или задания политики кэша для конкретного запроса.</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>       Копии ресурса добавляется в кэш, только если получен и чтения в конец потока в поток ответа для ресурса. Поэтому другой запрос для того же ресурса может использовать кэшированную копию, в зависимости от уровня политики кэша по умолчанию для данного запроса."
  example:
  - "The following code example sets the application domain's caching policy to Default.  \n  \n [!code-cpp[NCLSimpleCache#2](~/add/codesnippet/cpp/t-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NCLSimpleCache#2](~/add/codesnippet/csharp/t-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public enum HttpRequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос с помощью сервера. Записи не берутся из кэшей, добавляются в кэши или удаляются из кэшей между клиентом и сервером. Записи не берутся из кэшей, добавляются в кэши или удаляются из кэшей между клиентом и сервером. Это поведение кэша по умолчанию, указанные в файле конфигурации компьютера, который поставляется с платформой .NET Framework."
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос ресурса из кэша, если ресурс недоступен; в противном случае отправляет запрос ресурса на сервер. Если запрошенный элемент доступен в любой кэш между клиентом и сервером, запрос может быть выполнен промежуточный кэш."
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос, используя локально кэшированные ресурс; не отправляет запрос элемента, который не находится в кэше. Если указан этот уровень политики кэша, <xref:System.Net.WebException>исключение вызывается, если элемент не находится в кэше клиента.</xref:System.Net.WebException>"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  id: CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос ресурса из кэша локального компьютера или удаленного кэша в локальной сети. Если запрос не может быть удовлетворено, <xref:System.Net.WebException>исключения.</xref:System.Net.WebException> В протоколе кэширования HTTP, это достигается с помощью <xref uid=&quot;langword_csharp_only-if-cached&quot; name=&quot;only-if-cached&quot; href=&quot;&quot;> </xref> директиву управления кэшем."
  syntax:
    content: CacheOrNextCacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос для ресурса с помощью кэшированной копии ресурса или путем отправки запроса к ресурсу на сервере. Действие, выполняемое определяется текущей политикой кэша и временем существования содержимого в кэше. Это уровень кэша, который должен использоваться большинством приложений."
  syntax:
    content: Default
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Никогда не выполняет запрос, используя ресурсы из кэша и не кэширует ресурсы. Если ресурс существует в локальном кэше, он удаляется. Этот уровень политики промежуточных кэшей указывает, что ресурс должен быть удален. В протоколе кэширования HTTP это достигается с помощью директивы управления кэшем no-cache."
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  id: Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос, используя сервер или кэш, отличный от локального кэша. Прежде чем запрос будет выполнен промежуточным кэшем, этот кэш должен сверить свою кэшированную запись с сервером. В протоколе кэширования HTTP, это достигается с помощью max-age = директиву управления кэшем 0 и кэше нет <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> заголовок."
  syntax:
    content: Refresh
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Выполняет запрос с помощью сервера. Ответ может быть сохранен в кэше. В протоколе кэширования HTTP, это достигается с помощью директивы управления кэшем no-cache и кэше нет <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> заголовок."
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Сравнивает копию ресурса в кэше с копией на сервере. Если более новая копия на сервере, он используется для выполнения запроса и заменит копию в кэше. Если копия в кэше, то же, что копия на сервере используется кэшированную копию. В протоколе кэширования HTTP это достигается с помощью условного запроса."
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
- uid: System.Net.Cache.HttpRequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
