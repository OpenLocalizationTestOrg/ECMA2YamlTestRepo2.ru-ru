### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingContext
  id: BindingContext
  children:
  - System.Windows.Forms.BindingContext.#ctor
  - System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  - System.Windows.Forms.BindingContext.Clear
  - System.Windows.Forms.BindingContext.ClearCore
  - System.Windows.Forms.BindingContext.CollectionChanged
  - System.Windows.Forms.BindingContext.Contains(System.Object)
  - System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  - System.Windows.Forms.BindingContext.IsReadOnly
  - System.Windows.Forms.BindingContext.Item(System.Object)
  - System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  - System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Windows.Forms.BindingContext.Remove(System.Object)
  - System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  langs:
  - csharp
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
  type: Class
  summary: "Управляет коллекцией <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> объектов для любого объекта, который наследует от <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> класса."
  remarks: "Каждую форму Windows Forms имеет по крайней мере один объект BindingContext, который управляет <xref:System.Windows.Forms.BindingManagerBase>объектов для формы.</xref:System.Windows.Forms.BindingManagerBase> Поскольку <xref:System.Windows.Forms.BindingManagerBase>класс является абстрактным, тип возвращаемого значения <xref:System.Windows.Forms.BindingContext.Item%2A>свойства является либо <xref:System.Windows.Forms.CurrencyManager>или <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingContext.Item%2A> </xref:System.Windows.Forms.BindingManagerBase> Если источник данных является объект, который может возвращать только одно свойство (вместо списка объектов), <xref:System.Type>является <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Type> Например, при указании <xref:System.Windows.Forms.TextBox>как источник данных <xref:System.Windows.Forms.PropertyManager>возвращается.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.TextBox> С другой стороны, если источником данных является объект, реализующий интерфейс <xref:System.Collections.IList>или <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.CurrencyManager>возвращается.</xref:System.Windows.Forms.CurrencyManager> </xref:System.ComponentModel.IBindingList> </xref:System.Collections.IList>       Для каждого источника данных в Windows Forms имеется один <xref:System.Windows.Forms.CurrencyManager>или <xref:System.Windows.Forms.PropertyManager>.</xref:System.Windows.Forms.PropertyManager> </xref:System.Windows.Forms.CurrencyManager> Так как может существовать несколько источников данных, связанных с формой Windows Form, BindingContext позволяет извлекать какого-либо конкретного <xref:System.Windows.Forms.CurrencyManager>связанные с источником данных.</xref:System.Windows.Forms.CurrencyManager>      Настроек [!NOTE] настроек при использовании <xref:System.Windows.Forms.BindingContext.Item%2A>свойство, создает новый объект BindingContext <xref:System.Windows.Forms.BindingManagerBase>Если еще не существует.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A> Это может привести к путанице, возвращенный объект не может управлять в список (или все), который планируется. Чтобы предотвратить возвращение недопустимого <xref:System.Windows.Forms.BindingManagerBase>, используйте <xref:System.Windows.Forms.BindingContext.Contains%2A>метод для определения предполагаемого <xref:System.Windows.Forms.BindingManagerBase>уже существует.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A> </xref:System.Windows.Forms.BindingManagerBase>       При использовании контейнерного элемента управления, такие как <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, или <xref:System.Windows.Forms.TabControl>, содержащей элементы управления с привязкой к данным, можно создать объект BindingContext для только что контейнерный элемент управления и его элементов.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.GroupBox> Затем можно управлять каждой частью формы по собственному <xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> В разделе <xref:System.Windows.Forms.BindingContext.%23ctor%2A>Конструктор Дополнительные сведения о создании нескольких <xref:System.Windows.Forms.BindingManagerBase>объектов для одного источника данных.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.%23ctor%2A>       При добавлении <xref:System.Windows.Forms.TextBox>управления в форму и привяжите его к столбцу таблицы в наборе данных, элемент управления взаимодействует с BindingContext форме.</xref:System.Windows.Forms.TextBox> BindingContext, в свою очередь, обращается к конкретной <xref:System.Windows.Forms.CurrencyManager>для связывания данных.</xref:System.Windows.Forms.CurrencyManager> Если вы запрашиваться `Position` свойство <xref:System.Windows.Forms.CurrencyManager>, он будет сообщать о текущей записи для привязки, <xref:System.Windows.Forms.TextBox>управления.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.CurrencyManager> В следующем примере кода <xref:System.Windows.Forms.TextBox>привязан элемент управления `FirstName` столбец `Customers` таблицы на `dataSet1` набора данных через BindingContext формы, оно включено.</xref:System.Windows.Forms.TextBox>      ```vb#   TextBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;)      ```      ```c#   textBox1.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);      ```      ```cpp   textBox1->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.FirstName&quot;);   ```Можно добавить второй <xref:System.Windows.Forms.TextBox>управления (`TextBox2`) на форму и привяжите его к `LastName` столбец `Customers` таблицы в одном наборе данных.</xref:System.Windows.Forms.TextBox> Объект BindingContext учитывает первой привязки (`TextBox1` для `Customers.FirstName`), поэтому он будет использовать тот же <xref:System.Windows.Forms.CurrencyManager>, как оба поля связаны с одним набором данных (`DataSet1`).</xref:System.Windows.Forms.CurrencyManager>      ```vb#   TextBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;)      ```      ```c#   textBox2.DataBindings.Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);      ```      ```cpp   textBox2->DataBindings->Add(&quot;Text&quot;, dataSet1, &quot;Customers.LastName&quot;);   ```Если выполняется привязка `TextBox2` на другой набор данных контекста BindingContext создает и управляет <xref:System.Windows.Forms.CurrencyManager>.</xref:System.Windows.Forms.CurrencyManager> секунды       Важно иметь согласованные значения <xref:System.Windows.Forms.ListControl.DataSource%2A>и <xref:System.Windows.Forms.ListControl.DisplayMember%2A>Свойства; в противном случае BindingContext создает несколько валют диспетчеры для одного набора данных, что приводит к ошибкам.</xref:System.Windows.Forms.ListControl.DisplayMember%2A> </xref:System.Windows.Forms.ListControl.DataSource%2A> В следующем примере кода показано несколько способов задания свойств и связанных с ними объектов BindingContext. При условии, что вы согласованы во всем коде, можно задать свойства, используя любой из следующих методов.      ```vb#   ComboBox1.DataSource = DataSet1   ComboBox1.DisplayMember = &quot;Customers.FirstName&quot;   Me.BindingContext(dataSet1, &quot;Customers&quot;).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1;   comboBox1.DisplayMember = &quot;Customers.FirstName&quot;;   this.BindingContext[dataSet1, &quot;Customers&quot;].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1;   comboBox1->DisplayMember = &quot;Customers.FirstName&quot;;   this->BindingContext->get_Item(dataSet1, &quot;Customers&quot;)->Position = 1;      ```      ```vb#   ComboBox1.DataSource = DataSet1.Customers   ComboBox1.DisplayMember = &quot;FirstName&quot;   Me.BindingContext(dataSet1.Customers).Position = 1      ```      ```c#   comboBox1.DataSource = DataSet1.Customers;   comboBox1.DisplayMember = &quot;FirstName&quot;;   this.BindingContext[dataSet1.Customers].Position = 1;      ```      ```cpp   comboBox1->DataSource = dataSet1->Customers;   comboBox1->DisplayMember = &quot;FirstName&quot;;   this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;      ```      > [!NOTE]Настроек привязать большинство приложений Windows Forms через <xref:System.Windows.Forms.BindingSource>.</xref:System.Windows.Forms.BindingSource> <xref:System.Windows.Forms.BindingSource>Компонент инкапсулирует <xref:System.Windows.Forms.CurrencyManager>и предоставляет <xref:System.Windows.Forms.CurrencyManager>интерфейс программирования.</xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.CurrencyManager> </xref:System.Windows.Forms.BindingSource> При использовании <xref:System.Windows.Forms.BindingSource>для привязки, следует использовать члены, предоставляемые <xref:System.Windows.Forms.BindingSource>для работы с «currency» (то есть, `Position`), а не проходят через контекста BindingContext.</xref:System.Windows.Forms.BindingSource> </xref:System.Windows.Forms.BindingSource>"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls—a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls—to several data sources. The BindingContext is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/t-system.windows.forms.b_7_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/t-system.windows.forms.b_7_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.b_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      public class BindingContext : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> класса."
  remarks: "Если вы хотите иметь несколько <xref:System.Windows.Forms.BindingManagerBase>экземпляров одного источника данных, создайте новый <xref:System.Windows.Forms.BindingContext>и задайте его <xref:System.Windows.Forms.Control.BindingContext%2A>свойство объекта, который наследует от <xref:System.Windows.Forms.Control>класса.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.BindingContext%2A> </xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.BindingManagerBase> Например, при наличии двух <xref:System.Windows.Forms.BindingManagerBase>объектов (из двух различных <xref:System.Windows.Forms.BindingContext>объекты), можно задать <xref:System.Windows.Forms.BindingManagerBase.Position%2A>свойства каждого <xref:System.Windows.Forms.BindingManagerBase>в разные значения.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingManagerBase.Position%2A> </xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.BindingManagerBase> В этом случае каждый набор элементов управления с привязкой к данным для отображения различных значений из одного источника данных."
  example:
  - "The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control. `GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class). The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member. The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.  \n  \n [!code-cs[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_17_1.cs)]\n [!code-cpp[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_17_1.cpp)]\n [!code-vb[Classic BindingContext.BindingContext Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_17_1.vb)]"
  syntax:
    content: public BindingContext ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  id: Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанные с определенным источникам данных в коллекцию."
  syntax:
    content: protected void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>Связанных с <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>.</xref:System.Object>"
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  id: AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанные с определенным источникам данных в коллекцию."
  syntax:
    content: protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);
    parameters:
    - id: dataSource
      type: System.Object
      description: "Объект, связанный с <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>."
    - id: listManager
      type: System.Windows.Forms.BindingManagerBase
      description: "The <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;></xref> to add."
  overload: System.Windows.Forms.BindingContext.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataSource</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>listManager</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Clear
  id: Clear
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Очищает коллекцию от <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> объектов."
  syntax:
    content: protected void Clear ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.ClearCore
  id: ClearCore
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Очищает коллекцию."
  syntax:
    content: protected virtual void ClearCore ();
    parameters: []
  overload: System.Windows.Forms.BindingContext.ClearCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  id: CollectionChanged
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Всегда вызывает <xref:System.NotImplementedException>при обработке.</xref:System.NotImplementedException>"
  remarks: "Событие CollectionChanged является устаревшим и всегда вызывает <xref:System.NotImplementedException>при обработке.</xref:System.NotImplementedException> Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Для добавления."
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Происходит во всех случаях."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> содержит <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанный с указанным источником данных."
  remarks: "В разделе <xref:System.Windows.Forms.Binding>класс список возможных источников данных и сведения о создании привязки элементов управления и источников данных.</xref:System.Windows.Forms.Binding>       В разделе <xref:System.Windows.Forms.BindingContext.Item%2A>свойство сведения о возврате <xref:System.Windows.Forms.BindingManagerBase>Использование источника данных.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the Contains method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form. The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.  \n  \n [!code-vb[Classic BindingContext.Contains Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_9_1.vb)]\n [!code-cs[Classic BindingContext.Contains Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_9_1.cs)]\n [!code-cpp[Classic BindingContext.Contains Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_9_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>, Представляющий источник данных.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> содержит указанный <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  id: Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> содержит <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанный с указанным источником данных и элемент данных."
  remarks: "В разделе <xref:System.Windows.Forms.Binding>класс список возможных источников данных и сведения о создании привязки элементов управления и источников данных.</xref:System.Windows.Forms.Binding>       В разделе <xref:System.Windows.Forms.BindingContext.Item%2A>свойство сведения о возврате <xref:System.Windows.Forms.BindingManagerBase>с помощью источника данных и элемент данных.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Item%2A>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.  \n  \n [!code-cs[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.b_18_1.cs)]\n [!code-vb[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_18_1.vb)]\n [!code-cpp[Classic BindingContext.Contains1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.b_18_1.cpp)]"
  syntax:
    content: public bool Contains (object dataSource, string dataMember);
    parameters:
    - id: dataSource
      type: System.Object
      description: "<xref:System.Object>, Представляющий источник данных.</xref:System.Object>"
    - id: dataMember
      type: System.String
      description: "Сведения, необходимые для разрешения конкретной <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> содержит указанный <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли коллекция только для чтения."
  remarks: "Это свойство является производным от <xref:System.Collections.ICollection>и переопределяется, чтобы всегда возвращать `false`.</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если коллекция доступна только для чтения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанное с указанным источником данных."
  remarks: "Используйте этот перегруженный метод, если <xref:System.Windows.Forms.BindingManagerBase>требуется, не требуется путь навигации.</xref:System.Windows.Forms.BindingManagerBase> Например если <xref:System.Windows.Forms.BindingManagerBase>управляет набором <xref:System.Windows.Forms.Binding>объектов, использующих <xref:System.Collections.ArrayList>или <xref:System.Data.DataTable>как <xref:System.Windows.Forms.Binding.DataSource%2A>, путь перехода не требуется.</xref:System.Windows.Forms.Binding.DataSource%2A> </xref:System.Data.DataTable> </xref:System.Collections.ArrayList> </xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase>      Настроек [!NOTE] настроек всегда будет возвращать свойства элемента <xref:System.Windows.Forms.BindingManagerBase>и никогда не возвращает `null`.</xref:System.Windows.Forms.BindingManagerBase>       В разделе <xref:System.Windows.Forms.Binding>класс список возможных источников данных и сведения о создании привязки элементов управления и источников данных.</xref:System.Windows.Forms.Binding>"
  example:
  - "The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic BindingContext.this Example#1](~/add/codesnippet/csharp/p-system.windows.forms.b_30_1.cs)]\n [!code-cpp[Classic BindingContext.this Example#1](~/add/codesnippet/cpp/p-system.windows.forms.b_30_1.cpp)]\n [!code-vb[Classic BindingContext.this Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_30_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "Источник данных, связанных с конкретным <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>."
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "Объект <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> для указанного источника данных."
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  id: Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанное с указанным источником данных и элемент данных."
  remarks: "Данная перегрузка, когда используется <xref:System.Windows.Forms.BindingManagerBase>управляет набором <xref:System.Windows.Forms.Binding>объекты, для которых источник данных содержит несколько объектов.</xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase> Например <xref:System.Data.DataSet>может содержать несколько <xref:System.Data.DataTable>объекты, связанные с <xref:System.Data.DataRelation>объектов.</xref:System.Data.DataRelation> </xref:System.Data.DataTable> </xref:System.Data.DataSet> В этом случае необходимо включить <xref:System.Windows.Forms.BindingContext>для возвращения правильно <xref:System.Windows.Forms.BindingManagerBase>.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext> пути навигации      Настроек [!NOTE] настроек всегда будет возвращать свойства элемента <xref:System.Windows.Forms.BindingManagerBase>, когда `dataMember` параметр является допустимым.</xref:System.Windows.Forms.BindingManagerBase> Никогда не будут возвращать `null`.       В разделе <xref:System.Windows.Forms.Binding>класс список возможных источников данных и сведения о создании привязки элементов управления и источников данных.</xref:System.Windows.Forms.Binding>       Если нужный <xref:System.Windows.Forms.BindingManagerBase>управляет списком, путь перехода должен также заканчиваться список.</xref:System.Windows.Forms.BindingManagerBase> Например, следующий код C# привязывает <xref:System.Windows.Forms.TextBox>управления к дате заказа в таблице orders.</xref:System.Windows.Forms.TextBox> Включает в себя путь навигации <xref:System.Data.DataTable.TableName%2A>, <xref:System.Data.DataRelation.RelationName%2A>и <xref:System.Data.DataColumn.ColumnName%2A>.</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> Однако <xref:System.Windows.Forms.BindingManagerBase>должны извлекаться только с помощью <xref:System.Data.DataTable.TableName%2A>и <xref:System.Data.DataRelation.RelationName%2A>(который разрешается в список).</xref:System.Data.DataRelation.RelationName%2A> </xref:System.Data.DataTable.TableName%2A> </xref:System.Windows.Forms.BindingManagerBase>      ```   // The navigation path for a Binding ends with a property.   textBox1.DataBindings.Add   (&quot;Text&quot;, dataSet1, &quot;Customers.custToOrders.OrderDate&quot;);   // The navigation path for the BindingManagerBase ends with a list.   BindingManagerBase bmOrders = this.BindingContext   [dataSet1, &quot;Customers.custToOrders&quot;];   ```При возврате <xref:System.Windows.Forms.BindingManagerBase>следует использовать один и тот же источник данных, как <xref:System.Windows.Forms.Binding>и изменять только по пути навигации.</xref:System.Windows.Forms.Binding> </xref:System.Windows.Forms.BindingManagerBase>       Используйте <xref:System.Windows.Forms.BindingContext.Contains%2A>метод для определения нужной <xref:System.Windows.Forms.BindingManagerBase>уже существует.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingContext.Contains%2A>"
  example:
  - "The following code example demonstrates how to use the Item to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding. It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed. To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/visualbasic/p-system.windows.forms.b_17_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMultipleControls#11](~/add/codesnippet/csharp/p-system.windows.forms.b_17_1.cs)]"
  syntax:
    content: public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }
    parameters:
    - id: dataSource
      type: System.Object
      description: "Источник данных, связанных с конкретным <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>."
    - id: dataMember
      type: System.String
      description: "Путь перехода, содержащий данные, разрешенные для конкретного <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref>."
    return:
      type: System.Windows.Forms.BindingManagerBase
      description: "<xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> Для указанного источника данных и элемент данных."
  overload: System.Windows.Forms.BindingContext.Item*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Указанный <code> dataMember </code> не существует в источнике данных."
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.BindingContext.CollectionChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md).       Метод OnCollectionChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "Объект <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Windows.Forms.BindingContext.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанный с указанным источником данных."
  syntax:
    content: protected void Remove (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "Источник данных, связанный с <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> для удаления."
  overload: System.Windows.Forms.BindingContext.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  id: RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> связанный с указанным источником данных."
  syntax:
    content: protected virtual void RemoveCore (object dataSource);
    parameters:
    - id: dataSource
      type: System.Object
      description: "Источник данных, связанный с <xref href=&quot;System.Windows.Forms.BindingManagerBase&quot;> </xref> для удаления."
  overload: System.Windows.Forms.BindingContext.RemoveCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Копирует элементы коллекции в указанный массив, начиная с индекса коллекции."
  remarks: ''
  example:
  - >-
    [!code-cs[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/csharp/030fb284-4e33-401e-88b7-_1.cs)]
     [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/cpp/030fb284-4e33-401e-88b7-_1.cpp)]
     [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/add/codesnippet/visualbasic/030fb284-4e33-401e-88b7-_1.vb)]
  syntax:
    content: void ICollection.CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "<xref:System.Array>Для копирования в.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Индекс коллекции, следует начать копирование из."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает общее число <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;> </xref> объектов, управляемых <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/visualbasic/24e4ccaa-040d-4b41-b443-_1.vb)]\n [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/cpp/24e4ccaa-040d-4b41-b443-_1.cpp)]\n [!code-cs[Classic BindingContext.ICollection.Count Example#1](~/add/codesnippet/csharp/24e4ccaa-040d-4b41-b443-_1.cs)]"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Количество источников данных, которые управляются <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли коллекция синхронизированной."
  remarks: "Это свойство является производным от <xref:System.Collections.ICollection>и переопределяется, чтобы всегда возвращать `false`.</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если коллекция является потокобезопасной; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает объект, используемый для синхронизации (потокобезопасности)."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Это свойство является производным от <xref:System.Collections.ICollection>и переопределяется, чтобы всегда возвращать <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает перечислитель для коллекции."
  remarks: "<xref:System.Collections.IEnumerator>Возвращенный перечислителя IEnumerable.GetEnumerator, метод позволяет перебора коллекции управляемых <xref:System.Windows.Forms.BindingContext>.</xref:System.Windows.Forms.BindingContext> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example uses the IEnumerable.GetEnumerator method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.  \n  \n [!code-cs[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/csharp/dec1c1ce-5dab-481d-86dd-_1.cs)]\n [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/cpp/dec1c1ce-5dab-481d-86dd-_1.cpp)]\n [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/add/codesnippet/visualbasic/dec1c1ce-5dab-481d-86dd-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Для коллекции.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  id: UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  langs:
  - csharp
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Связывает <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> с новым <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>."
  remarks: "Этот метод предназначен обновить привязки компоненты, реализующие <xref:System.Windows.Forms.IBindableComponent>, когда их <xref:System.Windows.Forms.BindingContext>изменения.</xref:System.Windows.Forms.BindingContext> </xref:System.Windows.Forms.IBindableComponent>"
  syntax:
    content: public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);
    parameters:
    - id: newBindingContext
      type: System.Windows.Forms.BindingContext
      description: "Новый <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> для связи с <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref>."
    - id: binding
      type: System.Windows.Forms.Binding
      description: "<xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> Связываемый с новым <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref>."
  overload: System.Windows.Forms.BindingContext.UpdateBinding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.BindingContext.#ctor
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext()
  nameWithType: BindingContext.BindingContext()
  fullName: System.Windows.Forms.BindingContext.BindingContext()
- uid: System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add(Object,BindingManagerBase)
  nameWithType: BindingContext.Add(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.Add(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingManagerBase
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerBase
  nameWithType: BindingManagerBase
  fullName: System.Windows.Forms.BindingManagerBase
- uid: System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore(Object,BindingManagerBase)
  nameWithType: BindingContext.AddCore(Object,BindingManagerBase)
  fullName: System.Windows.Forms.BindingContext.AddCore(Object,BindingManagerBase)
- uid: System.Windows.Forms.BindingContext.Clear
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear()
  nameWithType: BindingContext.Clear()
  fullName: System.Windows.Forms.BindingContext.Clear()
- uid: System.Windows.Forms.BindingContext.ClearCore
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore()
  nameWithType: BindingContext.ClearCore()
  fullName: System.Windows.Forms.BindingContext.ClearCore()
- uid: System.Windows.Forms.BindingContext.CollectionChanged
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: CollectionChanged
  nameWithType: BindingContext.CollectionChanged
  fullName: System.Windows.Forms.BindingContext.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Windows.Forms.BindingContext.Contains(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object)
  nameWithType: BindingContext.Contains(Object)
  fullName: System.Windows.Forms.BindingContext.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingContext.Contains(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains(Object,String)
  nameWithType: BindingContext.Contains(Object,String)
  fullName: System.Windows.Forms.BindingContext.Contains(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingContext.IsReadOnly
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
  fullName: System.Windows.Forms.BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object)
  nameWithType: BindingContext.Item(Object)
  fullName: System.Windows.Forms.BindingContext.Item(Object)
- uid: System.Windows.Forms.BindingContext.Item(System.Object,System.String)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item(Object,String)
  nameWithType: BindingContext.Item(Object,String)
  fullName: System.Windows.Forms.BindingContext.Item(Object,String)
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Windows.Forms.BindingContext.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Windows.Forms.BindingContext.Remove(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove(Object)
  nameWithType: BindingContext.Remove(Object)
  fullName: System.Windows.Forms.BindingContext.Remove(Object)
- uid: System.Windows.Forms.BindingContext.RemoveCore(System.Object)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore(Object)
  nameWithType: BindingContext.RemoveCore(Object)
  fullName: System.Windows.Forms.BindingContext.RemoveCore(Object)
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Forms.BindingContext.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding(BindingContext,Binding)
  nameWithType: BindingContext.UpdateBinding(BindingContext,Binding)
  fullName: System.Windows.Forms.BindingContext.UpdateBinding(BindingContext,Binding)
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Binding
  parent: System.Windows.Forms
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Forms.Binding
- uid: System.Windows.Forms.BindingContext.#ctor*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext.BindingContext
- uid: System.Windows.Forms.BindingContext.Add*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Add
  nameWithType: BindingContext.Add
- uid: System.Windows.Forms.BindingContext.AddCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: AddCore
  nameWithType: BindingContext.AddCore
- uid: System.Windows.Forms.BindingContext.Clear*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Clear
  nameWithType: BindingContext.Clear
- uid: System.Windows.Forms.BindingContext.ClearCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: ClearCore
  nameWithType: BindingContext.ClearCore
- uid: System.Windows.Forms.BindingContext.Contains*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Contains
  nameWithType: BindingContext.Contains
- uid: System.Windows.Forms.BindingContext.IsReadOnly*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingContext.IsReadOnly
- uid: System.Windows.Forms.BindingContext.Item*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Item
  nameWithType: BindingContext.Item
- uid: System.Windows.Forms.BindingContext.OnCollectionChanged*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: OnCollectionChanged
  nameWithType: BindingContext.OnCollectionChanged
- uid: System.Windows.Forms.BindingContext.Remove*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: Remove
  nameWithType: BindingContext.Remove
- uid: System.Windows.Forms.BindingContext.RemoveCore*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: RemoveCore
  nameWithType: BindingContext.RemoveCore
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: BindingContext.System.Collections.ICollection.CopyTo
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#Count*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: BindingContext.System.Collections.ICollection.Count
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: BindingContext.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: BindingContext.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: BindingContext.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Forms.BindingContext.UpdateBinding*
  parent: System.Windows.Forms.BindingContext
  isExternal: false
  name: UpdateBinding
  nameWithType: BindingContext.UpdateBinding
