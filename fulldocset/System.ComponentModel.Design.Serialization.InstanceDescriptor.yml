### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor
  id: InstanceDescriptor
  children:
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  langs:
  - csharp
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor
  type: Class
  summary: "Содержит сведения, необходимые для создания экземпляра объекта. Этот класс не наследуется."
  remarks: "InstanceDescriptor может хранить информацию, описывающую экземпляр объекта. Эти сведения можно использовать для создания экземпляра объекта.       Некоторые пользовательские сериализаторы InstanceDescriptor используются для представления сериализуемых объектов. Несколько методов <xref:System.ComponentModel.TypeDescriptor>использовать для представления и создания объектов InstanceDescriptor.</xref:System.ComponentModel.TypeDescriptor>       InstanceDescriptor предоставляет следующие элементы: - <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>свойство, которое описывает данный объект.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>      - <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>Свойство, которое состоит из аргументов конструктора, которые можно использовать для создания экземпляра этого объекта.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>      -Логическое <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>свойство, которое показывает, является ли объект полностью представленного текущие сведения о.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>      - <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>Метод, который может использоваться для создания экземпляра объекта, представленного.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>"
  example:
  - "The following code example illustrates how to use a type converter that participates in code generation through the use of instance descriptors.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._121_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._121_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._121_1.cs)]"
  syntax:
    content: public sealed class InstanceDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> класса, используя заданный элемент сведения и аргументы."
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "Сведения о членстве для дескриптора. This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> Если это <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, или <xref:System.Reflection.PropertyInfo>, он должен представлять <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "Коллекция аргументов, передаваемых в член. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая коллекция, если не указаны аргументы. Коллекция может также содержать других экземпляров <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>относится к типу <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, или <xref:System.Reflection.PropertyInfo>, и он не представляет <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член.       <code>member</code>относится к типу <xref:System.Reflection.PropertyInfo> и недоступен для чтения.       <code>member</code>относится к типу <xref:System.Reflection.MethodInfo> или <xref:System.Reflection.ConstructorInfo>и число аргументов в <code>arguments</code> не соответствует сигнатуре <code>member.</code> <code>member</code> относится к типу <xref:System.Reflection.ConstructorInfo> и представляет <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член.       <code>member</code>относится к типу <xref:System.Reflection.FieldInfo>и число аргументов в <code>arguments</code> не равно нулю."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> класса, используя сведения для указанного элемента, аргументы и значение, указывающее, было ли указанные сведения об полностью описывают экземпляр."
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments, bool isComplete);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "Сведения о членстве для дескриптора. This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> Если это <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, или <xref:System.Reflection.PropertyInfo>, он должен представлять <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "Коллекция аргументов, передаваемых в член. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая коллекция, если не указаны аргументы. Коллекция может также содержать других экземпляров <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>."
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанные сведения полностью описывают экземпляр; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>относится к типу <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, или <xref:System.Reflection.PropertyInfo>, и он не представляет <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член <code>member</code> типа <xref:System.Reflection.PropertyInfo> и недоступен для чтения.       <code>member</code>относится к типу <xref:System.Reflection.MethodInfo> или <xref:System.Reflection.ConstructorInfo> и числа аргументов в <code>arguments</code> не соответствует сигнатуре <code>member</code>.       <code>member</code>относится к типу <xref:System.Reflection.ConstructorInfo> и представляет <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> член <code>member</code> относится к типу <xref:System.Reflection.FieldInfo>и число аргументов в <code>arguments</code> не равно нулю."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  id: Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает коллекцию аргументов, которые могут использоваться для восстановления экземпляра объекта, который представляет дескриптор экземпляра."
  syntax:
    content: public System.Collections.ICollection Arguments { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Аргументов, которые могут использоваться для создания объекта.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Вызывает дескриптор экземпляра и возвращает объект, который описывает."
  remarks: "Этот метод создает новый экземпляр объекта, определяемого <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>свойство, используя указанные аргументы для создания подобного типа экземпляра.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>"
  syntax:
    content: public object Invoke ();
    parameters: []
    return:
      type: System.Object
      description: "Объект, который описывается данным дескриптором экземпляра."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  id: IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает значение, указывающее, является ли содержимое этого <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> полностью идентифицировать экземпляр."
  remarks: "Как правило <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>полностью описывает определенный экземпляр.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> Тем не менее некоторые объекты слишком сложны для один метод или конструктор для представления. Указывает IsComplete ли <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>не была завершена, поэтому пользователь может определить эти объекты и дополнительной обработки, при необходимости для последующего описания состояния.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public bool IsComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если описание экземпляра полное; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  id: MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает сведения о членстве, описывающие экземпляр, которое связано с этим дескриптором."
  remarks: "Значение этого свойства может быть <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, или <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodInfo>"
  syntax:
    content: public System.Reflection.MemberInfo MemberInfo { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Объект <xref:System.Reflection.MemberInfo>, описывающий экземпляр, с которой связан объект.</xref:System.Reflection.MemberInfo>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor.InstanceDescriptor
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke
  nameWithType: InstanceDescriptor.Invoke
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
