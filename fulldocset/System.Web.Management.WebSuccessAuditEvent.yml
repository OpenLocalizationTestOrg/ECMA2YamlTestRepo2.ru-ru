### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebSuccessAuditEvent
  id: WebSuccessAuditEvent
  children:
  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebSuccessAuditEvent
  nameWithType: WebSuccessAuditEvent
  fullName: System.Web.Management.WebSuccessAuditEvent
  type: Class
  summary: "Сведения о успешные события системы безопасности."
  remarks: "Мониторинг состояния ASP.NET позволяет производства и операции персоналу управлять развернутыми веб-приложениями. <xref:System.Web.Management>Пространство имен содержит типы событий, отвечающие за упаковку данных о состоянии работоспособности приложений и типы поставщика, ответственные за обработку этих данных.</xref:System.Web.Management> Он также содержит вспомогательные типы, которые помогут при управлении событиями состояния.       Класс WebSuccessAuditEvent используется в случае успешного завершения операции, связанные с безопасностью. Примером этого является успешной авторизации URL-адрес для веб-запроса.       В следующем списке описываются возможности, какие события типа WebSuccessAuditEvent вызываются ASP.NET:-авторизация файла. Аудит успешных условий выполнен. Авторизация файла является только ASP.NET предпринимается попытка при связывании с запросом с удостоверением Windows. Код аудита связанные события — <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>      -Авторизация URL-адреса. Подписывает доступ URL-адрес ресурса, для которого предоставляется авторизации. Аудит успешных условий выполнен. Код аудита связанные события — <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>      -Другие условия безопасности. Ниже приведен список связанных кодов событий:- <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>- <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>вызывается, когда WebSuccessAuditEvent, наблюдение за работоспособностью ASP.NET увеличивает связанных событий аудита успехов счетчик производительности, а затем проверяет `healthMonitoring` конфигурации для определения ли все поставщики подписаться на событие.</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess> </xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess> Если поставщики подписаться на событие, ASP.NET отправляет событие им для обработки.      Настроек [!NOTE] настроек для просмотра событий аудита успехов счетчика производительности в системном мониторе (PerfMon) в **добавить счетчики** выберите **ASP.NET** из **объект производительности** раскрывающемся списке выберите **событий аудита успехов** счетчик производительности и нажмите кнопку **добавить** кнопки. Дополнительные сведения см. в разделе [наблюдения за производительностью приложений ASP.NET](~/add/includes/ajax-current-ext-md.md).       Аудит успехов представляют ожидаемые условия, не требуется подписаться на них. Подписаться на них можно для предоставления аудита доступа к сайта.      Настроек [!NOTE] настроек в большинстве случаев можно будет использовать типы мониторинга состояния ASP.NET как реализованные и управлять системой мониторинга состояния, указав значения в `healthMonitoring` раздел конфигурации. Также можно наследовать от типов наблюдение за работоспособностью, чтобы создавать собственные пользовательские события и поставщиков. Пример создания класса, производного от класса WebSuccessAuditEvent см. пример, приведенный в этом разделе."
  example:
  - "The following code example shows how to derive from the WebSuccessAuditEvent class to create a custom audit event.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._9_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._9_1.cs)]  \n  \n The following example is an excerpt of the configuration file that enables ASP.NET health monitoring to use the event.  \n  \n```  \n<healthMonitoring   \n..enabled=\"true\"  \n..heartBeatInterval=\"0\">   \n  <providers>  \n    <add name=\"EventLogProvider\"   \n    type=\"System.Web.Management.EventLogWebEventProvider,  \n    System.Web,Version=2.0.3600.0,Culture=neutral,  \n    PublicKeyToken=b03f5f7f11d50a3a\"/>  \n  </providers>  \n  <eventMappings>  \n    <add  name=\"SampleWebSuccessAuditEvent\"   \n      type=\"SamplesAspNet.SampleWebSuccessAuditEvent,  \n      websuccessauditevent,Version=1.0.1663.31140,   \n      Culture=neutral,   \n      PublicKeyToken=0d1fa0f69d94de96,   \n      processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  <rules>  \n    <add name=\"Custom Failure Audit Default\"  \n      eventName=\" SampleWebFailureAuditEvent \"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"/>    \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: WebSuccessAuditEvent(String,Object,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> класса с помощью предоставленных параметров."
  remarks: "Этот конструктор используется внутренне системой мониторинга состояния ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebSuccessAuditEvent>объекта, но можно вызвать этот конструктор при реализации собственного типа события, который наследует от этого класса.</xref:System.Web.Management.WebSuccessAuditEvent>      Настроек [!NOTE] настроек WebSuccessAuditEvent конструктор не предназначен для использования непосредственно из программного кода. Вызывается ASP.NET. Конструктор WebSuccessAuditEvent можно вызывать при наследовании от <xref:System.Web.Management.WebSuccessAuditEvent>класса.</xref:System.Web.Management.WebSuccessAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/visualbasic/5c3da28f-d581-4e89-9969-_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/csharp/5c3da28f-d581-4e89-9969-_1.cs)]"
  syntax:
    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Описание события."
    - id: eventSource
      type: System.Object
      description: "Объект, который является источником события."
    - id: eventCode
      type: System.Int32
      description: "Код, связанный с событием. При реализации пользовательского события код события должно быть больше <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: WebSuccessAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> класса с помощью предоставленных параметров."
  remarks: "Этот конструктор используется внутренне системой мониторинга состояния ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebSuccessAuditEvent>объекта, но можно вызвать этот конструктор при реализации собственного типа события, который наследует от этого класса.</xref:System.Web.Management.WebSuccessAuditEvent>      Настроек [!NOTE] настроек WebSuccessAuditEvent конструктор не предназначен для использования непосредственно из программного кода. Вызывается ASP.NET. Конструктор WebSuccessAuditEvent можно вызывать при наследовании от <xref:System.Web.Management.WebSuccessAuditEvent>класса.</xref:System.Web.Management.WebSuccessAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/visualbasic/eb3e15a7-d3d9-41f8-b6c1-_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/csharp/eb3e15a7-d3d9-41f8-b6c1-_1.cs)]"
  syntax:
    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "Описание события."
    - id: eventSource
      type: System.Object
      description: "Объект, который является источником события."
    - id: eventCode
      type: System.Int32
      description: "Код, связанный с событием. При реализации пользовательского события код события должно быть больше <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> Значение, указывающее подробный идентификатор для события."
  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Увеличивает значение счетчика событий аудита успехов."
  remarks: "Счетчик производительности событий аудита успехов отслеживает количество успешных событий аудита с момента запуска приложения. Этот метод также вызывает родительский <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>метод, который увеличивает значение счетчика событий.</xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> Этот счетчик отслеживает общее количество событий, вызванных.       Чтобы просмотреть эти счетчики производительности в системном мониторе (PerfMon), в **добавить счетчики** выберите **ASP.NET** из **объект производительности** раскрывающегося списка выберите счетчик производительности, который вы хотите просмотреть и нажмите кнопку **добавить** кнопки. Дополнительные сведения см. в разделе [наблюдения за производительностью приложений ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebAuditEvent
  isExternal: false
  name: System.Web.Management.WebAuditEvent
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent(String,Object,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters
