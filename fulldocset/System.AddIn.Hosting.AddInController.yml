### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInController
  id: AddInController
  children:
  - System.AddIn.Hosting.AddInController.AddInEnvironment
  - System.AddIn.Hosting.AddInController.AppDomain
  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  - System.AddIn.Hosting.AddInController.Shutdown
  - System.AddIn.Hosting.AddInController.Token
  langs:
  - csharp
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
  type: Class
  summary: "Предоставляет доступ к надстройке для различных задач."
  remarks: "Этот класс используется для выполнения следующих задач:- <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>свойство для получения <xref:System.AddIn.Hosting.AddInEnvironment>объекта надстройки.</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> Затем воспользуйтесь этим объектом для активации других надстроек в том же домене приложения и процессе, что и исходный надстройки.      — Следует используйте <xref:System.AddIn.Hosting.AddInController.AppDomain%2A>, чтобы получить <xref:System.AppDomain>объект для надстройки.</xref:System.AppDomain> </xref:System.AddIn.Hosting.AddInController.AppDomain%2A> Затем воспользуйтесь этим объектом для активации других надстроек в том же домене приложения, что исходный надстройка. Обратите внимание, что из-за ограничений в удаленном взаимодействии между процессами этот сценарий не будет работать с надстройками, которые активированы в отдельном процессе.      — Следует используйте <xref:System.AddIn.Hosting.AddInController.Token%2A>, чтобы получить <xref:System.AddIn.Hosting.AddInToken>объект, представляющий надстройку.</xref:System.AddIn.Hosting.AddInToken> </xref:System.AddIn.Hosting.AddInController.Token%2A>      — Завершение работы надстройки с <xref:System.AddIn.Hosting.AddInController.Shutdown%2A>метод.</xref:System.AddIn.Hosting.AddInController.Shutdown%2A>       Чтобы получить контроллер для надстройки, вызовите <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>метод и передайте экземпляр надстройки в качестве параметра.</xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>"
  example:
  - "The following example activates an add-in within the same environment as a previously activated add-in by using an AddInController object.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public sealed class AddInController
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  id: AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Возвращает <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> объекта."
  remarks: "Это свойство используется для получения <xref:System.AddIn.Hosting.AddInEnvironment>объекта надстройки.</xref:System.AddIn.Hosting.AddInEnvironment> Затем воспользуйтесь этим объектом для активации других надстроек в том же домене приложения и процессе, что и исходный надстройки."
  example:
  - "The following example activates a second add-in within the same environment as the first add-in.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }
    return:
      type: System.AddIn.Hosting.AddInEnvironment
      description: "Объект, который может использоваться для активации других надстроек в той же среде, что исходный надстройка."
  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AppDomain
  id: AppDomain
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Возвращает домен приложения, содержащий надстройку."
  remarks: "Это свойство используется для получения надстройки <xref:System.AppDomain>объекта и для активации других надстроек в том же домене приложений.</xref:System.AppDomain>"
  example:
  - "The following example activates a second add-in in the same application domain as the first add-in.  \n  \n [!code-vb[AddInP3Host#9](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#9)]\n [!code-cs[AddInP3Host#9](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#9)]"
  syntax:
    content: public AppDomain AppDomain { get; }
    return:
      type: System.AppDomain
      description: "Домен приложения надстройки."
  overload: System.AddIn.Hosting.AddInController.AppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  id: GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Получает контроллер для надстройки."
  remarks: "<xref:System.AddIn.Hosting.AddInToken.Activate%2A>Методы возвращают объект, представляющий представление ведущего приложения надстройки.</xref:System.AddIn.Hosting.AddInToken.Activate%2A>"
  syntax:
    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);
    parameters:
    - id: addIn
      type: System.Object
      description: "Серверное представление надстройки."
    return:
      type: System.AddIn.Hosting.AddInController
      description: "Контроллер для надстройки."
  overload: System.AddIn.Hosting.AddInController.GetAddInController*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Отключает надстройку."
  remarks: "Этот метод разрушит конвейера обмена данными между надстройкой и ведущим. Если надстройка была активирована в автоматически созданном домене приложения с помощью <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>или <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29>метода: метод завершения работы также выгрузка домена приложения.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> </xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>       Если надстройка была загружена в домен приложения, метод Shutdown также выгрузка домена приложения.       Если надстройка была загружена в существующий домен приложения, у сегментов узла и конвейера больше не будет все ссылки на эту надстройку. В этом случае надстройка будет соответствовать условиям удалять его сборщику мусора.       Этот класс также можно использовать для завершения работы надстройки, активированной во внешнем процессе."
  example:
  - "The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \n  \n [!code-vb[AddInCollectionPipelineHost#6](~/add/codesnippet/visualbasic/ListAdaptersHost/Program.vb#6)]\n [!code-cs[AddInCollectionPipelineHost#6](~/add/codesnippet/csharp/ListAdaptersHost/Program.cs#6)]"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.AddIn.Hosting.AddInController.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Token
  id: Token
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Возвращает токен, представляющий надстройку."
  remarks: "Обычно это свойство используется для получения маркера, чтобы активировать надстройку позже."
  syntax:
    content: public System.AddIn.Hosting.AddInToken Token { get; }
    return:
      type: System.AddIn.Hosting.AddInToken
      description: "Объект, представляющий надстройку."
  overload: System.AddIn.Hosting.AddInController.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
- uid: System.AddIn.Hosting.AddInController
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
- uid: System.AddIn.Hosting.AddInController.Token
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
- uid: System.AddIn.Hosting.AddInToken
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController
  nameWithType: AddInController.GetAddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown
  nameWithType: AddInController.Shutdown
- uid: System.AddIn.Hosting.AddInController.Token*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
