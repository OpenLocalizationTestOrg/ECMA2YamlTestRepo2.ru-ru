### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.BuildSubmission
  id: BuildSubmission
  children:
  - Microsoft.Build.Execution.BuildSubmission.AsyncContext
  - Microsoft.Build.Execution.BuildSubmission.BuildManager
  - Microsoft.Build.Execution.BuildSubmission.BuildResult
  - Microsoft.Build.Execution.BuildSubmission.Execute
  - Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  - Microsoft.Build.Execution.BuildSubmission.IsCompleted
  - Microsoft.Build.Execution.BuildSubmission.SubmissionId
  - Microsoft.Build.Execution.BuildSubmission.WaitHandle
  langs:
  - csharp
  name: BuildSubmission
  nameWithType: BuildSubmission
  fullName: Microsoft.Build.Execution.BuildSubmission
  type: Class
  summary: "Представляет диспетчера построения для обработки запроса на сборку, которая была отправлена. Методы этого класса может использоваться для выполнения запросов на построение синхронный или асинхронный, так и для предоставления доступа к результатам по завершении."
  remarks: "Этот класс является потокобезопасным."
  syntax:
    content: public class BuildSubmission
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  id: AsyncContext
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
  fullName: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает или задает асинхронной контекст, предоставляемый для <xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>, если оно есть.</xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>"
  syntax:
    content: public object AsyncContext { get; }
    return:
      type: System.Object
      description: "Возвращает контекст асинхронной передаваемых <xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>.</xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*> Возвращает значение null, если контекст отсутствует."
  overload: Microsoft.Build.Execution.BuildSubmission.AsyncContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager
  id: BuildManager
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildManager
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает или задает Отправка сборки, связанной с менеджером построений."
  syntax:
    content: public Microsoft.Build.Execution.BuildManager BuildManager { get; }
    return:
      type: Microsoft.Build.Execution.BuildManager
      description: "Возвращает передача данного построения, которое связано с менеджером построений."
  overload: Microsoft.Build.Execution.BuildSubmission.BuildManager*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult
  id: BuildResult
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildResult
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает или задает результат построения."
  remarks: "Результат не является допустимым до <xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A>сигнал.</xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A>"
  syntax:
    content: public Microsoft.Build.Execution.BuildResult BuildResult { get; set; }
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: "Возвращает результат построения."
  overload: Microsoft.Build.Execution.BuildSubmission.BuildResult*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.Execute
  id: Execute
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: Execute()
  nameWithType: BuildSubmission.Execute()
  fullName: Microsoft.Build.Execution.BuildSubmission.Execute()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Синхронно запускает запрос на построение и ожидает, пока не станут доступными результаты."
  syntax:
    content: public Microsoft.Build.Execution.BuildResult Execute ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: "Возвращает запрос сборки."
  overload: Microsoft.Build.Execution.BuildSubmission.Execute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Запрос уже запущен или уже завершена."
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  id: ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  nameWithType: BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  fullName: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Запускает запрос на построение асинхронно и в данном контексте. Немедленно возвращает управление вызывающему объекту."
  syntax:
    content: public void ExecuteAsync (Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context);
    parameters:
    - id: callback
      type: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
      description: "Метод обратного вызова вызывается при отправке сборки."
    - id: context
      type: System.Object
      description: "Контекст, в котором происходит передача построения."
  overload: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Запрос уже запущен или уже завершена."
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  id: IsCompleted
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
  fullName: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Определяет, завершена ли передача данного построения."
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "Возвращает значение true, если передача данного построения завершена; значение false в противном случае."
  overload: Microsoft.Build.Execution.BuildSubmission.IsCompleted*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  id: SubmissionId
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
  fullName: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает или задает идентификатор, который однозначно идентифицирует передачу данного построения."
  remarks: "Этот идентификатор используется для различения отправку этого построения от других отправок построения в пределах той же сборки."
  syntax:
    content: public int SubmissionId { get; }
    return:
      type: System.Int32
      description: "Возвращает идентификатор, уникальным образом идентифицирует передачу данного построения."
  overload: Microsoft.Build.Execution.BuildSubmission.SubmissionId*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  id: WaitHandle
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
  fullName: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Возвращает <xref:System.Threading.WaitHandle>объект, который будет срабатывать после завершения построения.</xref:System.Threading.WaitHandle>"
  syntax:
    content: public System.Threading.WaitHandle WaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: "Возвращает значение null, пока <> </> *настроек или <> </> *настроек возвращает, а затем возвращает объект WaitHandle."
  overload: Microsoft.Build.Execution.BuildSubmission.WaitHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
  fullName: Microsoft.Build.Execution.BuildSubmission.AsyncContext
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildManager
- uid: Microsoft.Build.Execution.BuildManager
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildManager
  nameWithType: BuildManager
  fullName: Microsoft.Build.Execution.BuildManager
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildResult
- uid: Microsoft.Build.Execution.BuildResult
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildResult
  nameWithType: BuildResult
  fullName: Microsoft.Build.Execution.BuildResult
- uid: Microsoft.Build.Execution.BuildSubmission.Execute
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: Execute()
  nameWithType: BuildSubmission.Execute()
  fullName: Microsoft.Build.Execution.BuildSubmission.Execute()
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  nameWithType: BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  fullName: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
- uid: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildSubmissionCompleteCallback
  nameWithType: BuildSubmissionCompleteCallback
  fullName: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
  fullName: Microsoft.Build.Execution.BuildSubmission.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
  fullName: Microsoft.Build.Execution.BuildSubmission.SubmissionId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
  fullName: Microsoft.Build.Execution.BuildSubmission.WaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
- uid: Microsoft.Build.Execution.BuildSubmission.Execute*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: Execute
  nameWithType: BuildSubmission.Execute
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: ExecuteAsync
  nameWithType: BuildSubmission.ExecuteAsync
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
