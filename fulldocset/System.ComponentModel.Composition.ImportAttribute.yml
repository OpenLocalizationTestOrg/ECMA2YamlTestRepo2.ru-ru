### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportAttribute
  id: ImportAttribute
  children:
  - System.ComponentModel.Composition.ImportAttribute.#ctor
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportAttribute.AllowDefault
  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportAttribute.ContractName
  - System.ComponentModel.Composition.ImportAttribute.ContractType
  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportAttribute.Source
  langs:
  - csharp
  name: ImportAttribute
  nameWithType: ImportAttribute
  fullName: System.ComponentModel.Composition.ImportAttribute
  type: Class
  summary: "Указывает, что значение свойства, поля или параметра должно предоставляться <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>объект"
  remarks: "В модели атрибутивного программирования ImportAttribute используется для объявления импорта или зависимости, в данной части. Он может декорировать свойство, поле или метод. Во время компоновки импортов части будут заполнены <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>объекта, к которому принадлежит эта часть, с помощью экспорты, предоставленный <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>объекта.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Соответствует ли импортируемый данного экспорта определяется в первую очередь сравнение имя контракта и тип контракта. Как правило необходимо указать одно из этих при использовании атрибута импорта в коде, и они будут автоматически выведены из типа декорированного члена. Если импорт должен соответствовать экспорту другого типа (например, подкласс типа декорированного члена или интерфейс, реализованный в этом элементе), затем тип контракта необходимо явно указать. Имя контракта можно также явно указать, например для различения нескольких контрактов с тем же типом, но обычно лучше делать это через метаданные. Дополнительные сведения о метаданных см. в разделе <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</xref:System.ComponentModel.Composition.PartMetadataAttribute>"
  example:
  - "The following example shows three classes with members decorated with the ImportAttribute, and three exports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> класса, импорт, экспорт с именем контракта по умолчанию."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод свойства, поля или параметра типа, что это помечен с помощью этого атрибута.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> класса, импорт, экспорт с указанным именем контракта."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метода, свойства, поля или параметра типа, помеченной этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта для импорта, экспорта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> класс, импорт, экспорт с именем контракта, производным от указанного типа."
  remarks: "Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метода, свойства, поля или параметра типа, помеченной этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Тип для экспорта, имя контракта является производным или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> класса, импорт, экспорт с заданным именем контракта и тип."
  syntax:
    content: public ImportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта для импорта, экспорта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
    - id: contractType
      type: System.Type
      description: "Тип экспорта для импорта."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  id: AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, указывающее, является ли свойство, поле или параметр будет присвоено значение по умолчанию для его типа если экспорт с именем контракта не присутствует в контейнере."
  remarks: "Значение по умолчанию типа свойства, поля или параметра `null` для ссылочных типов и ноль для числовых типов значений. Для других типов значений, значение по умолчанию будет каждое поле типа значения, инициализированной нулевым значением, если поле является типом значения или `null` Если поле является ссылочным типом."
  syntax:
    content: public bool AllowDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство, поле или параметр будет присвоено значение по умолчанию для его типа при наличии не Экспорт данных с помощью <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>в <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, указывающее, будет ли повторно свойства или поля при изменении экспорты с помощью контракта сопоставления в контейнере."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство или поле позволяет рекомпозиции при экспортирует с соответствующим <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>добавляются или удаляются из <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает имя контракта для экспорта для импорта."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "Имя контракта импортируемого экспорта. Значение по умолчанию — пустая строка (»»)."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Получает тип импортируемого экспорта."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Тип экспорта для импорта."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, которое указывает, что средство импорта требуется определенный <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> для экспортов, используемые для удовлетворения этого импорта."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Одно из следующих значений: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, если средство импорта не требует определенного <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Это значение по умолчанию.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>Требовать, чтобы все используемые экспорты была предоставлена по всем частям в контейнере.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>Чтобы все используемые экспорты являлся без общего доступа в контейнере. В этом случае каждая часть получает свой собственный экземпляр."
  overload: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, указывающее областей, из которых эта операция импорта может быть удовлетворено."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Значение, указывающее областей, из которых эта операция импорта может быть удовлетворено."
  overload: System.ComponentModel.Composition.ImportAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute
  nameWithType: ImportAttribute.ImportAttribute
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
