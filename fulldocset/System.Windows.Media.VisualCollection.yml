### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "Представляет упорядоченную коллекцию <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> объектов."
  remarks: "VisualCollection неявное сопоставление контекста. Если процедура пытается обратиться к семейства VisualCollection в контексте, отличном от контекста владельца <xref:System.Windows.Media.ContainerVisual>, создается исключение.</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> класса."
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "Родительского визуального объекта которого <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> возвращается."
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Добавляет <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> в конец <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Добавление <xref:System.Windows.Media.Visual>, значение которого является `null` может и не вызывает исключение.</xref:System.Windows.Media.Visual>       Метод также задает отношение родители потомки между родительским визуальный элемент, который является владельцем объекта <xref:System.Windows.Media.VisualCollection>и дочерний `visual`.</xref:System.Windows.Media.VisualCollection>       Если требуется более низкого уровня управления базовой реализацией хранилища визуальных дочерних объектов пользовательского класса, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A>и <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>методы.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> При использовании этих методов необходимо определить собственную реализацию хранилища и не используйте <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Для добавления <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "Индекс в коллекции, по которому <code> visual </code> был добавлен."
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.ArgumentException>Создается, если <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> является корневым элементом.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает или задает число элементов, которые <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> может содержать."
  remarks: "Значение емкости — количество элементов, <xref:System.Windows.Media.VisualCollection>хранить.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>Количество визуальных элементов, которые действительно находятся в списке <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Count%2A> Емкость всегда больше или равно <xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> Если <xref:System.Windows.Media.VisualCollection.Count%2A>превышает емкость при добавлении элементов, емкость <xref:System.Windows.Media.VisualCollection>увеличивается.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Емкость по умолчанию используется значение ноль."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "Число элементов, <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> может содержать."
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Емкость присвоено значение, которое меньше, чем <xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Удаляет все элементы из <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "<xref:System.Windows.Media.VisualCollection.Count%2A>Будет сброшено в ноль.</xref:System.Windows.Media.VisualCollection.Count%2A> Значение <xref:System.Windows.Media.VisualCollection.Capacity%2A>остается неизменным.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Чтобы сбросить емкость <xref:System.Windows.Media.VisualCollection>, задайте <xref:System.Windows.Media.VisualCollection.Capacity%2A>свойство до нужного размера.</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли указанный <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> содержащихся в коллекции.</xref:System.Boolean>"
  remarks: "Сценарий худшего случая выполнения этой функции — `O(n)`, где `n` число элементов в <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Для поиска в коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> visual </code> содержится в коллекции; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Копирует элементы коллекции в массив, начиная с заданного индекса в массиве."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Одномерный массив <xref:System.Array>, назначения для элементов, которые скопированы из <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в `array` с которого начинается копирование."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Копирует текущую коллекцию в передаваемый <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> массива."
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "Массив <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> объектов (который должен иметь индексацию с нуля)."
    - id: index
      type: System.Int32
      description: "Индекс начала копирования изнутри `array`."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает количество элементов в коллекции."
  remarks: "Число — количество элементов, фактически <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Capacity%2A>число элементов, <xref:System.Windows.Media.VisualCollection>хранить.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       Число, всегда меньше или равно <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Если число превышает <xref:System.Windows.Media.VisualCollection.Capacity%2A>при добавлении элементов, емкость списка удваивается посредством автоматического перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Число элементов, <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> содержит."
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает перечислитель, выполняющий итерацию <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "Перечислитель, который может использоваться для итерации по коллекции."
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает отсчитываемый от нуля индекс <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  remarks: "Если <xref:System.Windows.Media.Visual>не находится в <xref:System.Windows.Media.VisualCollection>, возвращается значение -1.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> Если `null` передается методу, индекс первой записи с `null` возвращается. Если запись не null, возвращается значение -1."
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Для поиска в <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Вставляет элемент в <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> по указанному индексу."
  remarks: "Если <xref:System.Windows.Media.VisualCollection.Count%2A>уже равно <xref:System.Windows.Media.VisualCollection.Capacity%2A>, емкости из <xref:System.Windows.Media.VisualCollection>увеличивается до нового <xref:System.Windows.Media.Visual>вставляется.</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> Если `index` равен <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` добавляется в конец <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Любые существующие визуальные объекты, которые больше или равно `index` сдвигаются в соответствии с новым <xref:System.Windows.Media.Visual>, и их индексы обновляются.</xref:System.Windows.Media.Visual>       Метод вставки также устанавливает родители потомки связь между родительским визуальный элемент, который является владельцем объекта <xref:System.Windows.Media.VisualCollection>и дочерний `visual`.</xref:System.Windows.Media.VisualCollection>       Если требуется более низкого уровня управления базовой реализацией хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A>и <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>методы.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> При использовании этих методов, вы задаете свою собственную реализацию хранилища, а не использовать <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому следует вставить значение."
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Для вставки в <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля или больше, чем <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> доступно только для чтения."
  remarks: "Данное свойство всегда имеет `false` для всех <xref:System.Windows.Media.VisualCollection>объектов.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Значение, указывающее, является ли <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> доступно только для чтения."
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает значение, указывающее, является ли доступ к <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> является синхронизированным (потокобезопасным)."
  remarks: "Данное свойство всегда имеет `false` для всех <xref:System.Windows.Media.VisualCollection>объектов.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Значение, указывающее, является ли <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> является синхронизированным (потокобезопасным)."
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает или задает <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> , хранящееся в индекс с отсчетом от <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Это свойство предоставляет возможность доступа к конкретной <xref:System.Windows.Media.Visual>в <xref:System.Windows.Media.VisualCollection>с помощью индекса.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> из которого требуется получить или задать <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля, или <code>index</code> больше или равно значению <xref:System.Windows.Media.VisualCollection.Count*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Новый дочерний элемент уже имеет родителя, или значение по указанному индексу не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Удаляет указанный <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> объекта из <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Визуальные объекты, следующие за удаляемым объектом, сдвигаются, занимая освободившуюся позицию, и их индексы обновляются. Если `visual` — `null`, первый `null` запись удаляется. Обратите внимание, что удаление `null` входа линейно размер коллекции.       Метод Remove также удаляет родители потомки связь между родительским визуальный элемент, который является владельцем объекта <xref:System.Windows.Media.VisualCollection>и дочерний `visual`.</xref:System.Windows.Media.VisualCollection>       Если требуется более низкого уровня управления базовой реализацией хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A>и <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>методы.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> При использовании этих методов, вы задаете свою собственную реализацию хранилища, а не использовать <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref> Для удаления из <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Удаляет визуального объекта по указанному индексу в <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Визуальные объекты, следующие за удаляемым объектом, сдвигаются, занимая освободившуюся позицию, и их индексы обновляются.       Метод RemoveAt также удаляет родители потомки связь между родительским визуальный элемент, который является владельцем объекта <xref:System.Windows.Media.VisualCollection>и дочерний `visual`.</xref:System.Windows.Media.VisualCollection>       Если требуется более низкого уровня управления базовой реализацией хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A>и <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>методы.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> При использовании этих методов, вы задаете свою собственную реализацию хранилища, а не использовать <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс удаляемого визуального элемента."
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля, или <code>index</code> больше или равно значению <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Удаляет диапазон визуальных объектов из <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Визуальные объекты, следующие за удаленными объектами, сдвигаются освобождаемые и их индексы обновляются.       Метод RemoveRange также удаляет родительско дочерних отношений между родительским визуальный элемент, который является владельцем объекта <xref:System.Windows.Media.VisualCollection>и диапазон визуальных дочерних элементов.</xref:System.Windows.Media.VisualCollection>       Если требуется более низкого уровня управления базовой реализацией хранилища визуальных дочерних объектов, рассмотрите возможность использования <xref:System.Windows.Media.Visual.AddVisualChild%2A>и <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>методы.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> При использовании этих методов, вы задаете свою собственную реализацию хранилища, а не использовать <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс диапазона элементов для удаления."
    - id: count
      type: System.Int32
      description: "Число удаляемых элементов."
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля или <code>count</code> меньше нуля."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>и <code>count</code> не ссылаются на допустимый диапазон элементов в <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Значение типа <xref:System.Object>.</xref:System.Object>"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Этот член поддерживает [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] инфраструктуру и не предназначен для использования непосредственно из программного кода. Описание этого члена см. в разделе <xref:System.Collections.IEnumerable.GetEnumerator*>.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Объект, который может использоваться для итерации по коллекции."
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
