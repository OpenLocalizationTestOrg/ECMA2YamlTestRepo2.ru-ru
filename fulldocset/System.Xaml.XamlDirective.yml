### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlDirective
  id: XamlDirective
  children:
  - System.Xaml.XamlDirective.#ctor(System.String,System.String)
  - System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  - System.Xaml.XamlDirective.AllowedLocation
  - System.Xaml.XamlDirective.GetHashCode
  - System.Xaml.XamlDirective.GetXamlNamespaces
  - System.Xaml.XamlDirective.LookupCustomAttributeProvider
  - System.Xaml.XamlDirective.LookupDeferringLoader
  - System.Xaml.XamlDirective.LookupDependsOn
  - System.Xaml.XamlDirective.LookupInvoker
  - System.Xaml.XamlDirective.LookupIsAmbient
  - System.Xaml.XamlDirective.LookupIsEvent
  - System.Xaml.XamlDirective.LookupIsReadOnly
  - System.Xaml.XamlDirective.LookupIsReadPublic
  - System.Xaml.XamlDirective.LookupIsUnknown
  - System.Xaml.XamlDirective.LookupIsWriteOnly
  - System.Xaml.XamlDirective.LookupIsWritePublic
  - System.Xaml.XamlDirective.LookupTargetType
  - System.Xaml.XamlDirective.LookupType
  - System.Xaml.XamlDirective.LookupTypeConverter
  - System.Xaml.XamlDirective.LookupUnderlyingGetter
  - System.Xaml.XamlDirective.LookupUnderlyingMember
  - System.Xaml.XamlDirective.LookupUnderlyingSetter
  - System.Xaml.XamlDirective.ToString
  langs:
  - csharp
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
  type: Class
  summary: "Предоставляет системный идентификатор типа XAML для члена, если член также представляет собой директиву XAML. Средства чтения и записи XAML используйте идентификатор XamlDirective во время обработки узлов элемента. Идентификатор используется в том случае, если средство чтения XAML находится на <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> и <xref:System.Xaml.XamlMember.IsDirective*>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlMember.IsDirective*>"
  remarks: "XamlDirective предоставляет ожидаемые значения для системы типов XAML, когда член класса представляет собой директиву XAML. По определению собой директиву XAML имеет характеристики, которые всегда возвращают одинаковые результаты для подмножества <xref:System.Xaml.XamlMember>Свойства и того же информации о системе типов XAML регистрируется для всех возможных директив XAML.</xref:System.Xaml.XamlMember> Reporting характеристик системы типов XAML, характерные для директивы достигается с внутреннее поведение или с помощью переопределений <xref:System.Xaml.XamlMember> `Lookup*` виртуальных членов класса XamlDirective</xref:System.Xaml.XamlMember>       В следующем списке приведены возвращаемых результатов директивы XAML для <xref:System.Xaml.XamlMember>при член является фактически XamlDirective:- <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A>всегда `null`.</xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> </xref:System.Xaml.XamlMember>      - <xref:System.Xaml.XamlMember.DeferringLoader%2A>всегда `null`.</xref:System.Xaml.XamlMember.DeferringLoader%2A>      - <xref:System.Xaml.XamlMember.DependsOn%2A>всегда `null`.</xref:System.Xaml.XamlMember.DependsOn%2A>      - <xref:System.Xaml.XamlMember.IsAmbient%2A>всегда `false`.</xref:System.Xaml.XamlMember.IsAmbient%2A>      - <xref:System.Xaml.XamlMember.IsAttachable%2A>всегда `false`.</xref:System.Xaml.XamlMember.IsAttachable%2A>      - <xref:System.Xaml.XamlMember.IsDirective%2A>всегда `true`.</xref:System.Xaml.XamlMember.IsDirective%2A>      - <xref:System.Xaml.XamlMember.IsEvent%2A>всегда `false`.</xref:System.Xaml.XamlMember.IsEvent%2A>      - <xref:System.Xaml.XamlMember.IsReadOnly%2A>всегда `false`.</xref:System.Xaml.XamlMember.IsReadOnly%2A>      - <xref:System.Xaml.XamlMember.IsReadPublic%2A>всегда `true`.</xref:System.Xaml.XamlMember.IsReadPublic%2A>      - <xref:System.Xaml.XamlMember.IsWritePublic%2A>всегда `true`.</xref:System.Xaml.XamlMember.IsWritePublic%2A>       Кроме того, внутренняя резервное копирование для <xref:System.Xaml.XamlMember.DeclaringType%2A>остается не задано и возвращает `null`.</xref:System.Xaml.XamlMember.DeclaringType%2A>      Настроек [!IMPORTANT] настроек — XamlDirective <xref:System.Xaml.XamlMember>подкласс.</xref:System.Xaml.XamlMember> Как и в <xref:System.Xaml.XamlMember>, XamlDirective имеет вопросы безопасности, касающиеся как в системе типов XAML отчетов access.</xref:System.Xaml.XamlMember> См. примечания в <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember>"
  syntax:
    content: 'public class XamlDirective : System.Xaml.XamlMember'
  inheritance:
  - System.Object
  - System.Xaml.XamlMember
  implements: []
  inheritedMembers:
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> класса, задание значения имени и одно пространство имен XAML. Использовать следующую сигнатуру только в том случае, если вы хотите или не ожидаете <xref:System.Xaml.XamlMember.IsUnknown*>отчет <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для директивы.</xref:System.Xaml.XamlMember.IsUnknown*>"
  remarks: "> [!IMPORTANT]Настроек следующую сигнатуру конструктора всегда создает идентификатор для директивы где <xref:System.Xaml.XamlMember.IsUnknown%2A>отчеты `true` система типов XAML.</xref:System.Xaml.XamlMember.IsUnknown%2A> Если необходимые сведения недоступны (базовый тип и информационной единицы синтаксиса текст для преобразования) и требуется идентификатор, который можно применить директиву, используйте <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>сигнатуры конструктора вместо.</xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName>       При использовании этой подписи <xref:System.Xaml.XamlDirective.AllowedLocation%2A>для экземпляра равно <xref:System.Xaml.Schema.AllowedMemberLocations>; и <xref:System.Xaml.XamlMember.Type%2A>значение и <xref:System.Xaml.XamlMember.TypeConverter%2A>значение присутствуют `null`.</xref:System.Xaml.XamlMember.TypeConverter%2A> </xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.AllowedLocation%2A>"
  syntax:
    content: public XamlDirective (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "Основное пространство имен XAML где это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> может существовать."
    - id: name
      type: System.String
      description: "Имя, идентифицирующее <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)'
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> класса, задание значений для каждого значения в случае <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Необходимо использовать этот конструктор для создания <xref:System.Xaml.XamlDirective>, которые не сообщают об <xref:System.Xaml.XamlMember.IsUnknown%2A>как `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlDirective>"
  syntax:
    content: public XamlDirective (System.Collections.Generic.IEnumerable<string> xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);
    parameters:
    - id: xamlNamespaces
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Набор пространств имен XAML где это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> могут существовать, переданные в виде перечисляемого набора строк идентификатор."
    - id: name
      type: System.String
      description: "Имя, идентифицирующее <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Тип XAML, который резервирует <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
    - id: typeConverter
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Преобразователь типов, <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> используется для преобразования текстового синтаксиса."
    - id: allowedLocation
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "Значение <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref> перечисления."
  overload: System.Xaml.XamlDirective.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xamlType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlDirective.AllowedLocation
  id: AllowedLocation
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает значение, указывающее типы узлов XAML, где можно указать директиву."
  remarks: "Это значение можно задать в <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29>сигнатуры конструктора.</xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> При построении с помощью <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29>сигнатуры конструктора, значение AllowedLocation для экземпляра — <xref:System.Xaml.Schema.AllowedMemberLocations>.</xref:System.Xaml.Schema.AllowedMemberLocations> </xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> Однако экземпляр всегда сообщает <xref:System.Xaml.XamlMember.IsUnknown%2A>как `true`.</xref:System.Xaml.XamlMember.IsUnknown%2A> Такое поведение обычно влияет на попытки записи графов объектов и также влияет на другие практический опыт использования <xref:System.Xaml.XamlMember>значение.</xref:System.Xaml.XamlMember>       Вы обычно не построить вариант директивы XAML, где <xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName>.</xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName> AllowedLocation"
  syntax:
    content: public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }
    return:
      type: System.Xaml.Schema.AllowedMemberLocations
      description: "Значение перечисления. Значение по умолчанию — по умолчанию перечисления, который является <xref href=&quot;System.Xaml.Schema.AllowedMemberLocations&quot;> </xref>."
  overload: System.Xaml.XamlDirective.AllowedLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает хэш-код для этого объекта."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Целочисленный хэш-код."
  overload: System.Xaml.XamlDirective.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает список пространств имен XAML, где могут существовать этот член XAML."
  remarks: "Идентификаторы пространства имен XAML — это строки, которые обычно отображаются в виде строки универсальный код ресурса (URI) в соответствии с обычными соглашениями для пространства имен XAML и XML. Если список содержит более одного элемента, первый элемент в наборе обычно соответствующие основного пространства имен XAML для целей обработки, и другие элементы представляют собой альтернативы. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>использует этот порядок.</xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Список идентификаторов пространства имен XAML, как строки."
  overload: System.Xaml.XamlDirective.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> реализации. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Поскольку директива XAML не может иметь настраиваемые атрибуты, данная реализация всегда возвращает `null`. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; объект, который используется в процессе отложенной загрузки объектов, объявленных в XAML. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Так как директива не отложенную загрузку, данная реализация всегда возвращает `null`. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает список <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> объектов. Список содержит элементы, для которых существуют отношения зависимости для порядка инициализации относительно это <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Поскольку директива XAML не может иметь порядок инициализации, данная реализация всегда возвращает `null`. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> , связанный с <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Этот метод может вызываться вызовы <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A>       Эта реализация возвращает внутренний статический <xref:System.Xaml.Schema.XamlMemberInvoker>значение, характерное для директивы в системе типов XAML.</xref:System.Xaml.Schema.XamlMemberInvoker> <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> Сведения для этого <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> передается в качестве внешнего свойства."
  remarks: "Поскольку директива XAML не может быть внешним типом, данная реализация всегда возвращает `false`. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет событие."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет предназначен только для чтения свойство."
  remarks: "По определению директивы являются настраиваемыми. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет свойство, которое имеет открытый <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> метода доступа."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет элемент, который не удается разрешить резервной системы, используемый для разрешения типов и членов."
  remarks: '<xref:System.Xaml.XamlDirective>Реализация вызывает базовый и ничего более.</xref:System.Xaml.XamlDirective> Базовая реализация возвращает результаты в следующем порядке: результаты зависят от внутреннего отражения; или результаты основаны на проверке значение null <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> <xref:System.Xaml.XamlDirective>Реализации запечатывает это виртуальный член; таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective> </xref:System.Xaml.XamlDirective>'
  syntax:
    content: protected override sealed bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет собой элемент, не удается разрешить; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет свойство предназначен только для записи."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает ли это <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref> представляет свойство, которое имеет открытый <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> метода доступа."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref href=&quot;System.Xaml.XamlType&quot;> </xref> типа, где <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> может существовать. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Типы целевых объектов не применимо к директивы; Таким образом, данная реализация всегда возвращает `null`. <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupType
  id: LookupType
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref href=&quot;System.Xaml.XamlType&quot;> </xref> типа, который используется элементом."
  remarks: "<xref:System.Xaml.XamlDirective>Реализация вызывает базовый и ничего более.</xref:System.Xaml.XamlDirective> Базовая реализация возвращает результаты на основе внутреннего отражения, либо значение null для проверки <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, обработку в указанном порядке.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>       Можно найти в заметках <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>Дополнительные сведения о сведениях <xref:System.Xaml.XamlMember.Type%2A>несет.</xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName>"
  syntax:
    content: protected override sealed System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref> Типа, который используется элементом."
  overload: System.Xaml.XamlDirective.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает реализация преобразователя типов, связанный с этим <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>Реализация вызывает базовый и ничего более.</xref:System.Xaml.XamlDirective> В разделе <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName>.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName> <xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Объект &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; экземпляра, содержащего <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> ограничения; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> доступа, который связан с этим <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает отражение CLR <xref:System.Reflection.MemberInfo>, связанного с данным <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>.</xref:System.Reflection.MemberInfo> Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> доступа, который связан с этим <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>. Данная реализация всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlDirective>запечатывает данного виртуального члена; Таким образом, все <xref:System.Xaml.XamlDirective>типы и все стандартные директивы XAML необходимо использовать это поведение.</xref:System.Xaml.XamlDirective></xref:System.Xaml.XamlDirective>"
  syntax:
    content: protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlDirective.ToString
  id: ToString
  parent: System.Xaml.XamlDirective
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Возвращает строковое представление данного объекта <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  remarks: "Если сведения о пространстве имен XAML, эта реализация возвращает строку сочетание <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A>и <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A> </xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Если сведения о пространстве имен XAML недоступен, эта реализация возвращает <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строковое представление данного объекта <xref href=&quot;System.Xaml.XamlDirective&quot;> </xref>."
  overload: System.Xaml.XamlDirective.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xaml.XamlMember
  isExternal: false
  name: System.Xaml.XamlMember
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlDirective.#ctor(System.String,System.String)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(String,String)
  nameWithType: XamlDirective.XamlDirective(String,String)
  fullName: System.Xaml.XamlDirective.XamlDirective(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  nameWithType: XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
  fullName: System.Xaml.XamlDirective.XamlDirective(IEnumerable<String>,String,XamlType,XamlValueConverter<TypeConverter>,AllowedMemberLocations)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.AllowedMemberLocations
  parent: System.Xaml.Schema
  isExternal: false
  name: AllowedMemberLocations
  nameWithType: AllowedMemberLocations
  fullName: System.Xaml.Schema.AllowedMemberLocations
- uid: System.Xaml.XamlDirective.AllowedLocation
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
  fullName: System.Xaml.XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlDirective.GetHashCode()
  fullName: System.Xaml.XamlDirective.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlDirective.GetXamlNamespaces
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlDirective.GetXamlNamespaces()
  fullName: System.Xaml.XamlDirective.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlDirective.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlDirective.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlDirective.LookupDeferringLoader()
  fullName: System.Xaml.XamlDirective.LookupDeferringLoader()
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupDependsOn
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlDirective.LookupDependsOn()
  fullName: System.Xaml.XamlDirective.LookupDependsOn()
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlDirective.LookupInvoker
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlDirective.LookupInvoker()
  fullName: System.Xaml.XamlDirective.LookupInvoker()
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlDirective.LookupIsAmbient()
  fullName: System.Xaml.XamlDirective.LookupIsAmbient()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlDirective.LookupIsEvent
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlDirective.LookupIsEvent()
  fullName: System.Xaml.XamlDirective.LookupIsEvent()
- uid: System.Xaml.XamlDirective.LookupIsReadOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlDirective.LookupIsReadOnly()
  fullName: System.Xaml.XamlDirective.LookupIsReadOnly()
- uid: System.Xaml.XamlDirective.LookupIsReadPublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlDirective.LookupIsReadPublic()
  fullName: System.Xaml.XamlDirective.LookupIsReadPublic()
- uid: System.Xaml.XamlDirective.LookupIsUnknown
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlDirective.LookupIsUnknown()
  fullName: System.Xaml.XamlDirective.LookupIsUnknown()
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlDirective.LookupIsWriteOnly()
  fullName: System.Xaml.XamlDirective.LookupIsWriteOnly()
- uid: System.Xaml.XamlDirective.LookupIsWritePublic
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlDirective.LookupIsWritePublic()
  fullName: System.Xaml.XamlDirective.LookupIsWritePublic()
- uid: System.Xaml.XamlDirective.LookupTargetType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlDirective.LookupTargetType()
  fullName: System.Xaml.XamlDirective.LookupTargetType()
- uid: System.Xaml.XamlDirective.LookupType
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType()
  nameWithType: XamlDirective.LookupType()
  fullName: System.Xaml.XamlDirective.LookupType()
- uid: System.Xaml.XamlDirective.LookupTypeConverter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlDirective.LookupTypeConverter()
  fullName: System.Xaml.XamlDirective.LookupTypeConverter()
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlDirective.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingGetter()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlDirective.LookupUnderlyingMember()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlDirective.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlDirective.LookupUnderlyingSetter()
- uid: System.Xaml.XamlDirective.ToString
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString()
  nameWithType: XamlDirective.ToString()
  fullName: System.Xaml.XamlDirective.ToString()
- uid: System.Xaml.XamlDirective.#ctor*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective.XamlDirective
- uid: System.Xaml.XamlDirective.AllowedLocation*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: AllowedLocation
  nameWithType: XamlDirective.AllowedLocation
- uid: System.Xaml.XamlDirective.GetHashCode*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetHashCode
  nameWithType: XamlDirective.GetHashCode
- uid: System.Xaml.XamlDirective.GetXamlNamespaces*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlDirective.GetXamlNamespaces
- uid: System.Xaml.XamlDirective.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlDirective.LookupCustomAttributeProvider
- uid: System.Xaml.XamlDirective.LookupDeferringLoader*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlDirective.LookupDeferringLoader
- uid: System.Xaml.XamlDirective.LookupDependsOn*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlDirective.LookupDependsOn
- uid: System.Xaml.XamlDirective.LookupInvoker*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlDirective.LookupInvoker
- uid: System.Xaml.XamlDirective.LookupIsAmbient*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlDirective.LookupIsAmbient
- uid: System.Xaml.XamlDirective.LookupIsEvent*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlDirective.LookupIsEvent
- uid: System.Xaml.XamlDirective.LookupIsReadOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlDirective.LookupIsReadOnly
- uid: System.Xaml.XamlDirective.LookupIsReadPublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlDirective.LookupIsReadPublic
- uid: System.Xaml.XamlDirective.LookupIsUnknown*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlDirective.LookupIsUnknown
- uid: System.Xaml.XamlDirective.LookupIsWriteOnly*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlDirective.LookupIsWriteOnly
- uid: System.Xaml.XamlDirective.LookupIsWritePublic*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlDirective.LookupIsWritePublic
- uid: System.Xaml.XamlDirective.LookupTargetType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlDirective.LookupTargetType
- uid: System.Xaml.XamlDirective.LookupType*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupType
  nameWithType: XamlDirective.LookupType
- uid: System.Xaml.XamlDirective.LookupTypeConverter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlDirective.LookupTypeConverter
- uid: System.Xaml.XamlDirective.LookupUnderlyingGetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlDirective.LookupUnderlyingGetter
- uid: System.Xaml.XamlDirective.LookupUnderlyingMember*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlDirective.LookupUnderlyingMember
- uid: System.Xaml.XamlDirective.LookupUnderlyingSetter*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlDirective.LookupUnderlyingSetter
- uid: System.Xaml.XamlDirective.ToString*
  parent: System.Xaml.XamlDirective
  isExternal: false
  name: ToString
  nameWithType: XamlDirective.ToString
