### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationReader
  id: XmlSerializationReader
  children:
  - System.Xml.Serialization.XmlSerializationReader.#ctor
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  - System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  - System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  - System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  - System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  - System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  - System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.DecodeName
  - System.Xml.Serialization.XmlSerializationReader.Document
  - System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  - System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  - System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  - System.Xml.Serialization.XmlSerializationReader.GetXsiType
  - System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  - System.Xml.Serialization.XmlSerializationReader.InitIDs
  - System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  - System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  - System.Xml.Serialization.XmlSerializationReader.Reader
  - System.Xml.Serialization.XmlSerializationReader.ReaderCount
  - System.Xml.Serialization.XmlSerializationReader.ReadNull
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  - System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  - System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  - System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  - System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  - System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  - System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  - System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  langs:
  - csharp
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader
  fullName: System.Xml.Serialization.XmlSerializationReader
  type: Class
  summary: "Элементы управления десериализации <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс для десериализации, который является производным от абстрактного класса XmlSerializationReader. XmlSerializationReader также реализован в среде .NET Framework для десериализации из XML-документов в <xref:System.Web.Services.Discovery.DiscoveryDocument>и <xref:System.Web.Services.Description.ServiceDescription>объекты.</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       Не следует создавать производные классы от XmlSerializationReader. Вместо этого вызовите один из <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>методы.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationReader : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref> класса."
  syntax:
    content: protected XmlSerializationReader ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.CollectionFixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
      description: "Для добавления."
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  id: AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  syntax:
    content: protected void AddFixup (System.Xml.Serialization.XmlSerializationReader.Fixup fixup);
    parameters:
    - id: fixup
      type: System.Xml.Serialization.XmlSerializationReader.Fixup
      description: "Для добавления."
  overload: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  id: AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Сохраняет реализация <xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref> делегат и ее входными данными для последующего вызова."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс для десериализации, который является производным от <xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader> Во время этого процесса .NET Framework приводит к возникновению ошибки чтения методы, которые реализуют <xref:System.Xml.Serialization.XmlSerializationReadCallback>делегировать.</xref:System.Xml.Serialization.XmlSerializationReadCallback> Данная операция выполняется для определенных сопоставлений между типами .NET Framework и типами данных XML, сериализованы посредством XML с кодировкой SOAP и не являются корневыми элементами. Далее при необходимости во время десериализации вызывается метод чтения.       Вам не следует создавать непосредственно экземпляра <xref:System.Xml.Serialization.XmlSerializationReadCallback>класса.</xref:System.Xml.Serialization.XmlSerializationReadCallback>"
  syntax:
    content: protected void AddReadCallback (string name, string ns, Type type, System.Xml.Serialization.XmlSerializationReadCallback read);
    parameters:
    - id: name
      type: System.String
      description: "Имя типа .NET Framework, который десериализуется."
    - id: ns
      type: System.String
      description: "Пространство имен типа .NET Framework, который десериализуется."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Должны быть десериализованы.</xref:System.Type>"
    - id: read
      type: System.Xml.Serialization.XmlSerializationReadCallback
      description: "<xref href=&quot;System.Xml.Serialization.XmlSerializationReadCallback&quot;> </xref> Делегата."
  overload: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  id: AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Сохраняет объект, который десериализуется с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент для дальнейшего доступа через <xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>метод.</xref:System.Xml.Serialization.XmlSerializationReader.GetTarget*>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может ссылаться несколько раз `ref` атрибутов (или `href` атрибуты в SOAP 1.1) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void AddTarget (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "Значение <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;> </xref> атрибут <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, который определяет элемент."
    - id: o
      type: System.Object
      description: "Объект, который десериализуется из XML-элемента."
  overload: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  id: CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Проверяет, является ли десериализатор."
  remarks: "The method is used by generated classes and should not be directly invoked.  \n  \n The CheckReaderCount method is used when the `checkDeserializerAdvances` attribute of the `<xmlSerializer>` configuration element is set to `true`. For more information, see [\\&lt;xmlSerializer\\&gt; Element](../Topic/%3CxmlSerializer%3E%20Element.md)."
  syntax:
    content: protected void CheckReaderCount (ref int whileIterations, ref int readerCount);
    parameters:
    - id: whileIterations
      type: System.Int32
      description: "Текущий <xref uid=&quot;langword_csharp_count&quot; name=&quot;count&quot; href=&quot;&quot;> </xref> время от времени цикла."
    - id: readerCount
      type: System.Int32
      description: "Текущий <xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  overload: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>Не вышел.</xref:System.Xml.Serialization.XmlSerializationReader.ReaderCount*>"
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  id: CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Удаляет все вхождения пробелов в начале и конце указанную строку."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string CollapseWhitespace (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка, которая будет его пробелы усекаются."
    return:
      type: System.String
      description: "Обрезанная строка."
  overload: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  id: CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что десериализуемый объект должен быть абстрактным.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами, которые используются внутренним образом в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateAbstractTypeException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Имя абстрактного типа."
    - id: ns
      type: System.String
      description: "Пространство имен .NET Framework абстрактного типа."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  id: CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Заполняет объект из его представления XML в текущем положении <xref:System.Xml.XmlReader>, с возможностью чтения внутреннего элемента.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateBadDerivationException (string xsdDerived, string nsDerived, string xsdBase, string nsBase, string clrDerived, string clrBase);
    parameters:
    - id: xsdDerived
      type: System.String
      description: "Локальное имя производного типа данных схемы XML."
    - id: nsDerived
      type: System.String
      description: "Пространство имен производного типа данных схемы XML."
    - id: xsdBase
      type: System.String
      description: "Локальное имя базового типа данных схемы XML."
    - id: nsBase
      type: System.String
      description: "Пространство имен базового типа данных схемы XML."
    - id: clrDerived
      type: System.String
      description: "Пространство имен производного типа .NET Framework."
    - id: clrBase
      type: System.String
      description: "Имя базового типа .NET Framework."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  id: CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что десериализуемый объект не создаются, так как конструктор вызывает исключение безопасности.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateCtorHasSecurityException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  id: CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, так как отсутствует конструктор не может создаваться Десериализуемый объект.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInaccessibleConstructorException (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  id: CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidCastException>, указывает на сбой преобразования явной ссылки.</xref:System.InvalidCastException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>, Объект не может быть приведен к.</xref:System.Type> Этот тип будет включено в сообщение об исключении."
    - id: value
      type: System.Object
      description: "Объект, который не может быть приведен. Этот объект будет включено в сообщение об исключении."
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>Исключение.</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  id: CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidCastException>, указывает на сбой преобразования явной ссылки.</xref:System.InvalidCastException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateInvalidCastException (Type type, object value, string id);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>, Объект не может быть приведен к.</xref:System.Type> Этот тип будет включено в сообщение об исключении."
    - id: value
      type: System.Object
      description: "Объект, который не может быть приведен. Этот объект будет включено в сообщение об исключении."
    - id: id
      type: System.String
      description: "Идентификатор строки."
    return:
      type: System.Exception
      description: "<xref:System.InvalidCastException>Исключение.</xref:System.InvalidCastException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  id: CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что производный тип, который сопоставляется тип данных схемы XML не удается найти.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateMissingIXmlSerializableType (string name, string ns, string clrType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя типа данных XML-схемы, которой сопоставлен недоступен производного типа."
    - id: ns
      type: System.String
      description: "Пространство имен типа данных XML-схемы, которой сопоставлен недоступен производного типа."
    - id: clrType
      type: System.String
      description: "Полное имя базового типа .NET Framework, для которого не удается найти производного типа."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  id: CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, закодированными как SOAP тип коллекции не может изменяться, и его значения не может быть заполнено</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateReadOnlyCollectionException (string name);
    parameters:
    - id: name
      type: System.String
      description: "Полное имя типа .NET Framework, для которого имеется сопоставление."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  id: CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что значение перечисления не является допустимым.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownConstantException (string value, Type enumType);
    parameters:
    - id: value
      type: System.String
      description: "Значение перечисления, которое является недопустимым."
    - id: enumType
      type: System.Type
      description: "Тип перечисления."
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  id: CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывает на то, что в текущей позиции <xref:System.Xml.XmlReader>представляет неизвестный узел XML.</xref:System.Xml.XmlReader> </xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownNodeException ();
    parameters: []
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  id: CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что тип неизвестен.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Exception CreateUnknownTypeException (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющее имя неизвестного типа.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Exception
      description: "<xref:System.InvalidOperationException>Исключение.</xref:System.InvalidOperationException>"
  overload: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  id: DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение, определяющее транслируются ли строки XML в допустимые имена типов .NET Framework."
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>Метод записывает допустимый XML-код из источников недопустимый.</xref:System.Xml.XmlConvert.EncodeName%2A> Например <xref:System.Data.DataColumn.ColumnName%2A>свойство <xref:System.Data.DataColumn>класс может содержать пробелы, которые недопустимы в XML-ФАЙЛЕ.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>Считывает закодированный XML и его восстановления в исходное значение.</xref:System.Xml.XmlConvert.DecodeName%2A> Тем не менее <xref:System.Xml.Schema.XmlSchema.Read%2A>метод <xref:System.Xml.Schema.XmlSchema>класса не может прочитать, например кодировке XML.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> В этом случае задайте <xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>Свойства `false` отключение кодировки XML.</xref:System.Xml.Serialization.XmlSerializationWriter.EscapeName%2A>"
  syntax:
    content: protected bool DecodeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если строки XML — это декодированную в допустимые имена типов .NET Framework; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  id: Document
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает объект XML-документа, в который десериализуется XML-документа."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument Document { get; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> , Представляющий десериализованного <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> данных."
  overload: System.Xml.Serialization.XmlSerializationReader.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  id: EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Обеспечивает достаточно велик, чтобы вместить указанного индекса заданного массива или копии."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array EnsureArrayIndex (Array a, int index, Type elementType);
    parameters:
    - id: a
      type: System.Array
      description: "<xref:System.Array>, Который проверяется.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Требуется индекс."
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>Элементов массива.</xref:System.Type>"
    return:
      type: System.Array
      description: "Существующий <xref:System.Array>, если он уже достаточно большой, в противном случае — новый, больший массив, который содержит элементы исходного массива.</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  id: FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Заполняет значения SOAP-кодирования массива, тип данных которого сопоставлен ссылочного типа .NET Framework."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Реализует метод FixupArrayRefs <xref:System.Xml.Serialization.XmlSerializationFixupCallback>делегат для десериализации данных XML с кодировкой SOAP.</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       Во время десериализации документов XML в объекты .NET Framework, инфраструктура сериализации .NET Framework XML динамически создает экземпляр метода FixupArrayRefs для массивов с кодировкой SOAP, типы данных которых сопоставляются с ссылочными типами .NET Framework. Метод затем вызывается <xref:System.Xml.Serialization.XmlSerializationFixupCallback>для заполнения объектов в массиве.</xref:System.Xml.Serialization.XmlSerializationFixupCallback>       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void FixupArrayRefs (object fixup);
    parameters:
    - id: fixup
      type: System.Object
      description: "Объект, содержащий массив, значения которого заполняются."
  overload: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  id: GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает длину массива с кодировкой SOAP где <xref:System.Xml.XmlReader>расположено.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод GetArrayLength применим к `arrayType` атрибут, который используется с кодировкой SOAP и указан с пространством имен «http://schemas.xmlsoap.org/soap/encoding/»."
  syntax:
    content: protected int GetArrayLength (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя, которое должен иметь массив."
    - id: ns
      type: System.String
      description: "Пространство имен, должен иметь массив."
    return:
      type: System.Int32
      description: "Длина массива SOAP."
  overload: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  id: GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Определяет ли XML-элемента где <xref:System.Xml.XmlReader>расположено атрибут null присвоено значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool GetNullAttr ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Xml.XmlReader>расположено в настоящее время атрибут со значением null <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  id: GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает объект, который был десериализован с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, который был сохранен ранее, <xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>.</xref:System.Xml.Serialization.XmlSerializationReader.AddTarget*>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы. Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object GetTarget (string id);
    parameters:
    - id: id
      type: System.String
      description: "Значение <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;> </xref> атрибут <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, который определяет элемент."
    return:
      type: System.Object
      description: "Объект можно десериализовать с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  id: GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает значение <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибут для элемента XML в текущем положении <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       `type` Атрибута из экземпляра пространства имен схемы XML явно указывает тип данных элемента XML."
  syntax:
    content: protected System.Xml.XmlQualifiedName GetXsiType ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "Полное имя XML, указывающее тип данных элемента XML."
  overload: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует методы обратного вызова, которые заполняют объекты, сопоставленные с данными XML с кодировкой SOAP."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс для десериализации, который является производным от <xref:System.Xml.Serialization.XmlSerializationReader>.</xref:System.Xml.Serialization.XmlSerializationReader> Во время этого процесса .NET Framework приводит к возникновению ошибки чтения методы, которые реализуют <xref:System.Xml.Serialization.XmlSerializationReadCallback>делегировать.</xref:System.Xml.Serialization.XmlSerializationReadCallback> Данная операция выполняется для определенных сопоставлений между типами .NET Framework и типами данных XML, сериализованы посредством XML с кодировкой SOAP и не являются корневыми элементами. Далее при необходимости во время десериализации вызывается метод чтения.       Абстрактный метод InitCallbacks где временный производный класс создает экземпляр и инициализирует считывается методы обратного вызова.       Вам не следует создавать непосредственно экземпляр <xref:System.Xml.Serialization.XmlSerializationReadCallback>.</xref:System.Xml.Serialization.XmlSerializationReadCallback>       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  id: InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Хранит имена элементов и атрибутов в <xref:System.Xml.NameTable>объекта.</xref:System.Xml.NameTable>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод InitIDs является абстрактным."
  syntax:
    content: protected abstract void InitIDs ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  id: IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение, которое должно быть <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для SOAP 1.1 возвращаемое значение."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool IsReturnValue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если значение является возвращаемым значением."
  overload: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  id: IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Определяет, является ли имя атрибута XML указывает пространство имен XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Имя атрибута указывает пространство имен XML, если он принимает форму `xmlns:``key`, где «ключ» — имя пространства имен."
  syntax:
    content: protected bool IsXmlnsAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя атрибута XML."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Если имя атрибута XML указывает пространство имен XML; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  id: ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Устанавливает значение атрибута XML, если он имеет тип <xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;> </xref> из пространства имен языка описания веб-служб (WSDL)."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       WSDL использует пространство имен «http://schemas.xmlsoap.org/wsdl/»."
  syntax:
    content: protected void ParseWsdlArrayType (System.Xml.XmlAttribute attr);
    parameters:
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> , Может иметь тип <xref uid=&quot;langword_csharp_wsdl:array&quot; name=&quot;wsdl:array&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  id: ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Делает <xref:System.Xml.XmlReader>чтения полное имя элемента, в которой он расположен.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadElementQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "Полное имя текущего элемента XML."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Делает <xref:System.Xml.XmlReader>чтения закрывающий тег XML.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected void ReadEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  id: Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает <xref:System.Xml.XmlReader>объект, который используется <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlReader Reader { get; }
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>, Который используется с <xref href=&quot;System.Xml.Serialization.XmlSerializationReader&quot;> </xref>.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.Reader*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  id: ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Получает текущее число используемых <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Метод используется сгенерированными классами и не должны вызываться напрямую.       <xref:System.Xml.Serialization.XmlSerializationReader>Используется экземпляр <xref:System.Xml.XmlReader>для подсчета, когда возникает, операции чтения.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializationReader> Этот счетчик увеличивается каждый раз, средство чтения вызывает соответствующий метод, например <xref:System.Xml.XmlReader.Read%2A>метода или <xref:System.Xml.XmlReader.ReadElementString%2A>метод.</xref:System.Xml.XmlReader.ReadElementString%2A> </xref:System.Xml.XmlReader.Read%2A>"
  syntax:
    content: protected int ReaderCount { get; }
    return:
      type: System.Int32
      description: "Текущее число используемых <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  id: ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения текущего элемента XML, если элемент имеет атрибут null имеет значение true.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected bool ReadNull ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент имеет **null = «true»** значения атрибута и чтения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  id: ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения полное имя элемента, в которой он расположен.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ReadNullableQualifiedName ();
    parameters: []
    return:
      type: System.Xml.XmlQualifiedName
      description: "Объект <xref:System.Xml.XmlQualifiedName>, представляющий полное имя элемента XML, в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если **null = «true»** присутствует значение атрибута.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  id: ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>чтения простой, доступного только для текста элемента XML, может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadNullableString ();
    parameters: []
    return:
      type: System.String
      description: "Строковое значение; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  id: ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Считывает значение <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> атрибут (<xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> атрибут для SOAP 1.2), используемый для ссылки на элемент XML в SOAP-кодировании."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Открытие `#` символ исключается из `href` значение атрибута.       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected bool ReadReference (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "Выходная строка, в которую <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> считывается значение атрибута."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение было прочитано; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  id: ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объект с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML-элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ReadReferencedElement Получает тип данных схемы XML, считывая `xsi:type` атрибут `multiRef` элемента. Префикс `xsi` ссылается на экземпляр пространства имен схемы XML.       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object ReadReferencedElement ();
    parameters: []
    return:
      type: System.Object
      description: "Значение элемента, на которую указывает ссылка в документе."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  id: ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объект с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML-элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Эта подпись из <xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A>метод получает тип данных схемы XML `multiRef` элемент из параметров метода, а не путем чтения `xsi:type` атрибут.</xref:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement%2A> Префикс `xsi` ссылается на экземпляр пространства имен схемы XML.       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object ReadReferencedElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя типа данных схемы XML элемента."
    - id: ns
      type: System.String
      description: "Пространство имен типа данных схемы XML элемента."
    return:
      type: System.Object
      description: "Значение элемента, на которую указывает ссылка в документе."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  id: ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объекты с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элементов в сообщении SOAP."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void ReadReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  id: ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object ReadReferencingElement (out string fixupReference);
    parameters:
    - id: fixupReference
      type: System.String
      description: "Выходная строка, в которую <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> считывается значение атрибута."
    return:
      type: System.Object
      description: "Десериализованный объект."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя типа данных схемы XML элемента."
    - id: ns
      type: System.String
      description: "Пространство имен типа данных схемы XML элемента."
    - id: fixupReference
      type: System.String
      description: "Выходная строка, в которую <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> считывается значение атрибута."
    return:
      type: System.Object
      description: "Десериализованный объект."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  id: ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Десериализует объект из элемента XML в сообщении SOAP, которое содержит ссылку на <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected object ReadReferencingElement (string name, string ns, bool elementCanBeType, out string fixupReference);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя типа данных схемы XML элемента."
    - id: ns
      type: System.String
      description: "Пространство имен типа данных схемы XML элемента."
    - id: elementCanBeType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имя элемента также является именем типа данных XML-схемы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: fixupReference
      type: System.String
      description: "Выходная строка, в которой значение <xref uid=&quot;langword_csharp_href&quot; name=&quot;href&quot; href=&quot;&quot;> </xref> чтения атрибута."
    return:
      type: System.Object
      description: "Десериализованный объект."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Заполняет объект из его представления XML в текущем положении <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "<xref:System.Xml.Serialization.IXmlSerializable>, Соответствующий текущей позиции <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.IXmlSerializable>"
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "Объект, реализующий <xref:System.Xml.Serialization.IXmlSerializable>интерфейс с его члены заполняется из расположения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.IXmlSerializable>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  id: ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Этот метод поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: protected System.Xml.Serialization.IXmlSerializable ReadSerializable (System.Xml.Serialization.IXmlSerializable serializable, bool wrappedAny);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "Объект, который IXmlSerializable, соответствующий текущей позиции XMLReader."
    - id: wrappedAny
      type: System.Boolean
      description: "Указывает, переносится ли сериализуемый объект."
    return:
      type: System.Xml.Serialization.IXmlSerializable
      description: "Объект, реализующий интерфейс IXmlSerializable с его члены заполняется из расположения XmlReader."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  id: ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Результат вызова <xref:System.Xml.XmlReader.ReadString*>метод, добавляемый в конец входного значения.</xref:System.Xml.XmlReader.ReadString*>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected string ReadString (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка в качестве префикса к результату вызова <xref:System.Xml.XmlReader.ReadString*>метод.</xref:System.Xml.XmlReader.ReadString*>"
    return:
      type: System.String
      description: "Результат вызова <xref:System.Xml.XmlReader.ReadString*>метод, добавляемый в конец входного значения.</xref:System.Xml.XmlReader.ReadString*>"
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  id: ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает результат вызова <xref:System.Xml.XmlReader.ReadString*>метод <xref:System.Xml.XmlReader>класса, усекаются пустого пространства, если потребуется и добавляется к входному значению.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.ReadString*>"
  syntax:
    content: protected string ReadString (string value, bool trim);
    parameters:
    - id: value
      type: System.String
      description: "Строка, которая будет добавляться."
    - id: trim
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если результат операции считывания должны быть сокращены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Результат операции считывания, добавленный к входному значению."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  id: ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Считывает XML-элемент, который допускает значения null (<xref uid=&quot;langword_csharp_xsi:nil = &quot;true&quot;&quot; name=&quot;xsi:nil = &quot;true&quot;&quot; href=&quot;&quot;></xref>) и возвращает универсальный &lt;xref:System.Nullable%601&gt; значение."
  syntax:
    content: protected object ReadTypedNull (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющий тип данных для текущего расположения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "Универсальный &lt;xref:System.Nullable%601&gt; , представляющий значение null XML."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  id: ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает значение узла XML, по которому <xref:System.Xml.XmlReader>расположено.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected object ReadTypedPrimitive (System.Xml.XmlQualifiedName type);
    parameters:
    - id: type
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющий тип данных для текущего расположения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Object
      description: "Значение узла в виде значения типа .NET Framework, если значение — простой тип данных схемы XML."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  id: ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения корневым элементом документа XML в его текущем положении.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlDocument ReadXmlDocument (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если метод должен считать контент только после считывания стартового элемента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref> , Содержащий корневой элемент, которая была прочитана."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  id: ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения XML-узел в его текущем положении.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected System.Xml.XmlNode ReadXmlNode (bool wrapped);
    parameters:
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для считывания содержимого только после считывания стартового элемента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xml.XmlNode
      description: "<xref href=&quot;System.Xml.XmlNode&quot;> </xref> , Представляющий узел XML, которая была прочитана."
  overload: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  id: Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Сохраняет объект можно десериализовать с кодировкой SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void Referenced (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Десериализуемый объект."
  overload: System.Xml.Serialization.XmlSerializationReader.Referenced*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Получает динамически созданную сборку по имени."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ResolveDynamicAssembly является статическим."
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "Полное имя сборки."
    return:
      type: System.Reflection.Assembly
      description: "Динамически созданные <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly>"
  overload: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  id: ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Гарантирует, что заданного массива или копии, не больше указанной длины."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected Array ShrinkArray (Array a, int length, Type elementType, bool isNullable);
    parameters:
    - id: a
      type: System.Array
      description: "Массив, который проверяется."
    - id: length
      type: System.Int32
      description: "Максимальная длина массива."
    - id: elementType
      type: System.Type
      description: "<xref:System.Type>Элементов массива.</xref:System.Type>"
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для массива, если он имеется, для входного массива, может быть возвращен; в противном случае — новый массив меньшего размера."
    return:
      type: System.Array
      description: "Существующий <xref:System.Array>, если уже достаточно небольшой; в противном случае новый меньший массив, содержащий элементы исходного массива до размера<code> length</code>.</xref:System.Array>"
  overload: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  id: ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения строковое значение в его текущем положении и вернуть его в виде массива байтов в base-64.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayBase64 (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы вернуть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для возвращения массива байтов в base-64."
    return:
      type: System.Byte[]
      description: "Массив байтов base-64; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если значение <code> isNull </code> параметр <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  id: ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает массив байтов base-64 из входной строки."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToByteArrayBase64 является статическим."
  syntax:
    content: protected static byte[] ToByteArrayBase64 (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для преобразования в массив байтов в base-64."
    return:
      type: System.Byte[]
      description: "Массив байтов в base-64."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  id: ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlReader>для чтения значения строки в текущей позиции и возвращения в качестве шестнадцатеричного байтового массива.</xref:System.Xml.XmlReader>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>"
  syntax:
    content: protected byte[] ToByteArrayHex (bool isNull);
    parameters:
    - id: isNull
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы вернуть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для возврата шестнадцатеричного байтового массива."
    return:
      type: System.Byte[]
      description: "Массив шестнадцатеричных байтов; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если значение <code> isNull </code> параметр **true**."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  id: ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Производит шестнадцатеричный байтовый массив из входной строки."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToByteArrayHex является статическим."
  syntax:
    content: protected static byte[] ToByteArrayHex (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для преобразования в шестнадцатеричный байтовый массив."
    return:
      type: System.Byte[]
      description: "Шестнадцатеричный байтовый массив."
  overload: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.Char>объекта из входной строки.</xref:System.Char>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       ToChar метод является статическим."
  syntax:
    content: protected static char ToChar (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для трансляции в <xref:System.Char>объекта.</xref:System.Char>"
    return:
      type: System.Char
      description: "Объект <xref:System.Char>объекта.</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  id: ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.DateTime>объекта из входной строки.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToDate является статическим."
  syntax:
    content: protected static DateTime ToDate (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для трансляции в <xref:System.DateTime>объекта класса.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>объекта.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.DateTime>объекта из входной строки.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToDateTime является статическим."
  syntax:
    content: protected static DateTime ToDateTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для трансляции в <xref:System.DateTime>объекта.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>объекта.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  id: ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает числовое значение перечисления из строки, которая состоит из идентификаторов с разделителями, которые представляют константы из списка перечислителя."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToEnum является статическим."
  syntax:
    content: protected static long ToEnum (string value, System.Collections.Hashtable h, string typeName);
    parameters:
    - id: value
      type: System.String
      description: "Строка, состоящая из идентификаторов, где каждый представляет константу из установленного списка перечислителя-разделителей."
    - id: h
      type: System.Collections.Hashtable
      description: "Объект <xref href=&quot;System.Collections.Hashtable&quot;> </xref> , состоящее из идентификаторов, если ключи и константы как целых чисел."
    - id: typeName
      type: System.String
      description: "Имя типа перечисления."
    return:
      type: System.Int64
      description: "Значение типа long, состоит из значения перечисления как ряд побитовое <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> операций."
  overload: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  id: ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.DateTime>из строка, представляющая время.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToTime является статическим."
  syntax:
    content: protected static DateTime ToTime (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка для трансляции в <xref:System.DateTime>объекта.</xref:System.DateTime>"
    return:
      type: System.DateTime
      description: "Объект <xref:System.DateTime>объекта.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  id: ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Декодирует имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToXmlName является статическим.       ToXmlName преобразует шестнадцатеричных кодов UCS-2 из 4 цифр в кодировке Юникод."
  syntax:
    content: protected static string ToXmlName (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя XML для декодирования."
    return:
      type: System.String
      description: "Декодированная строка."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  id: ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Декодирует имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToXmlNCName является статическим.       ToXmlNCName преобразует шестнадцатеричных кодов UCS-2 из 4 цифр в кодировке Юникод."
  syntax:
    content: protected static string ToXmlNCName (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя XML для декодирования."
    return:
      type: System.String
      description: "Декодированная строка."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  id: ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Декодирует имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены только для использования производными классами, которые используются внутренним образом в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToXmlNmToken является статическим.       ToXmlNmToken преобразует шестнадцатеричных кодов UCS-2 из 4 цифр в кодировке Юникод."
  syntax:
    content: protected static string ToXmlNmToken (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя XML для декодирования."
    return:
      type: System.String
      description: "Декодированная строка."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  id: ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Декодирует имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования производными классами, которые используются внутренним образом в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Метод ToXmlNmTokens является статическим.       ToXmlNmTokens преобразует шестнадцатеричных кодов UCS-2 из 4 цифр в кодировке Юникод."
  syntax:
    content: protected static string ToXmlNmTokens (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя XML для декодирования."
    return:
      type: System.String
      description: "Декодированная строка."
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  id: ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Получает <xref:System.Xml.XmlQualifiedName>из имени, которое может содержать префикс.</xref:System.Xml.XmlQualifiedName>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Если префикс отсутствует, метод ToXmlQualifiedName ищет связанное пространство имен для текущего документа XML и помещает его в <xref:System.Xml.XmlQualifiedName>объекта.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: protected System.Xml.XmlQualifiedName ToXmlQualifiedName (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя, которое может содержать префикс."
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющий имя пространства имен XML.</xref:System.Xml.XmlQualifiedName>"
  overload: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Добавьте метод обработчика метод UnknownAttribute, чтобы обработать неизвестные атрибуты при <xref:System.Xml.Serialization.XmlSerializer>выполняется его <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>метод.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, <xref:System.Xml.Serialization.XmlSerializer>попыткой выполнить десериализацию, впоследствии доступны через <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>свойство.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> , Представляющий рассматриваемого атрибута."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  id: UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>"
  syntax:
    content: protected void UnknownAttribute (object o, System.Xml.XmlAttribute attr, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, <xref:System.Xml.Serialization.XmlSerializer>попыткой выполнить десериализацию, впоследствии доступны через <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>свойство.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: attr
      type: System.Xml.XmlAttribute
      description: "Объект <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> , представляющий рассматриваемого атрибута."
    - id: qnames
      type: System.String
      description: "Список с разделителями запятыми XML полных имен."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  id: UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownElement>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem);
    parameters:
    - id: o
      type: System.Object
      description: "<xref:System.Object>, Который десериализуется.</xref:System.Object>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Для которого будет сформировано событие."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  id: UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownElement>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownElement>"
  syntax:
    content: protected void UnknownElement (object o, System.Xml.XmlElement elem, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, <xref:System.Xml.Serialization.XmlSerializer>попыткой выполнить десериализацию, впоследствии доступны через <xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*>свойство.</xref:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized*> </xref:System.Xml.Serialization.XmlSerializer>"
    - id: elem
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Для которого будет сформировано событие."
    - id: qnames
      type: System.String
      description: "Список с разделителями запятыми XML полных имен."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  id: UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownNode>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, который был десериализован."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  id: UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnknownNode>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnknownNode>"
  syntax:
    content: protected void UnknownNode (object o, string qnames);
    parameters:
    - id: o
      type: System.Object
      description: "Десериализуемый объект."
    - id: qnames
      type: System.String
      description: "Список с разделителями запятыми XML полных имен."
  overload: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  id: UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  langs:
  - csharp
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Вызывает <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>событие для текущего положения <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationReader>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationReader>       Кодирование SOAP, как указано в разделе 5 спецификации SOAP 1.1, позволяет элементам многократно ссылаться в сообщении SOAP (или, при необходимости, только один раз) ссылаться по `href` атрибута в основном сообщении. <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>Событие происходит, когда такой элемент появится, однако не `href` ссылку на него.</xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>       Добавьте метод обработчика <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>для предоставления пользовательской обработки для неиспользуемых объектов при <xref:System.Xml.Serialization.XmlSerializer>выполняет его <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>метод.</xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>"
  syntax:
    content: protected void UnreferencedObject (string id, object o);
    parameters:
    - id: id
      type: System.String
      description: "Уникальную строку, которая используется для идентификации неиспользуемого объекта впоследствии доступны через <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>свойство.</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId*>"
    - id: o
      type: System.Object
      description: "Объект, <xref:System.Xml.Serialization.XmlSerializer>попыткой выполнить десериализацию, впоследствии доступны через <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*>свойство.</xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject*> </xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader()
  nameWithType: XmlSerializationReader.XmlSerializationReader()
  fullName: System.Xml.Serialization.XmlSerializationReader.XmlSerializationReader()
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+CollectionFixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+CollectionFixup)
- uid: System.Xml.Serialization.XmlSerializationReader.CollectionFixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+CollectionFixup
  nameWithType: XmlSerializationReader+CollectionFixup
  fullName: System.Xml.Serialization.XmlSerializationReader+CollectionFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup(XmlSerializationReader+Fixup)
  nameWithType: XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddFixup(XmlSerializationReader+Fixup)
- uid: System.Xml.Serialization.XmlSerializationReader.Fixup
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReader+Fixup
  nameWithType: XmlSerializationReader+Fixup
  fullName: System.Xml.Serialization.XmlSerializationReader+Fixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  nameWithType: XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddReadCallback(String,String,Type,XmlSerializationReadCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializationReadCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationReadCallback
  nameWithType: XmlSerializationReadCallback
  fullName: System.Xml.Serialization.XmlSerializationReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget(String,Object)
  nameWithType: XmlSerializationReader.AddTarget(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.AddTarget(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount(Int32,Int32)
  nameWithType: XmlSerializationReader.CheckReaderCount(Int32,Int32)
  fullName: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace(String)
  nameWithType: XmlSerializationReader.CollapseWhitespace(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException(String,String)
  nameWithType: XmlSerializationReader.CreateAbstractTypeException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException(String,String,String,String,String,String)
  nameWithType: XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(String,String,String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException(String)
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException(String)
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException(Type,Object,String)
  nameWithType: XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(Type,Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType(String,String,String)
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException(String)
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(String)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException(String,Type)
  nameWithType: XmlSerializationReader.CreateUnknownConstantException(String,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(String,Type)
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException()
  nameWithType: XmlSerializationReader.CreateUnknownNodeException()
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException()
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException(XmlQualifiedName)
  nameWithType: XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
  fullName: System.Xml.Serialization.XmlSerializationReader.DecodeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationReader.Document
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
  fullName: System.Xml.Serialization.XmlSerializationReader.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex(Array,Int32,Type)
  nameWithType: XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
  fullName: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(Array,Int32,Type)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs(Object)
  nameWithType: XmlSerializationReader.FixupArrayRefs(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength(String,String)
  nameWithType: XmlSerializationReader.GetArrayLength(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetArrayLength(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr()
  nameWithType: XmlSerializationReader.GetNullAttr()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetNullAttr()
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget(String)
  nameWithType: XmlSerializationReader.GetTarget(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.GetTarget(String)
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType()
  nameWithType: XmlSerializationReader.GetXsiType()
  fullName: System.Xml.Serialization.XmlSerializationReader.GetXsiType()
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationReader.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs()
  nameWithType: XmlSerializationReader.InitIDs()
  fullName: System.Xml.Serialization.XmlSerializationReader.InitIDs()
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
  fullName: System.Xml.Serialization.XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute(String)
  nameWithType: XmlSerializationReader.IsXmlnsAttribute(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType(XmlAttribute)
  nameWithType: XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName()
  nameWithType: XmlSerializationReader.ReadElementQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlSerializationReader.ReadEndElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadEndElement()
- uid: System.Xml.Serialization.XmlSerializationReader.Reader
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
  fullName: System.Xml.Serialization.XmlSerializationReader.Reader
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
  fullName: System.Xml.Serialization.XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull()
  nameWithType: XmlSerializationReader.ReadNull()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNull()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName()
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString()
  nameWithType: XmlSerializationReader.ReadNullableString()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadNullableString()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference(String)
  nameWithType: XmlSerializationReader.ReadReference(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReference(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement()
  nameWithType: XmlSerializationReader.ReadReferencedElement()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement(String,String)
  nameWithType: XmlSerializationReader.ReadReferencedElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements()
  nameWithType: XmlSerializationReader.ReadReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement(String,String,Boolean,String)
  nameWithType: XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(String,String,Boolean,String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable(IXmlSerializable,Boolean)
  nameWithType: XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadSerializable(IXmlSerializable,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String)
  nameWithType: XmlSerializationReader.ReadString(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString(String,Boolean)
  nameWithType: XmlSerializationReader.ReadString(String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadString(String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive(XmlQualifiedName)
  nameWithType: XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlDocument(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode(Boolean)
  nameWithType: XmlSerializationReader.ReadXmlNode(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced(Object)
  nameWithType: XmlSerializationReader.Referenced(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.Referenced(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray(Array,Int32,Type,Boolean)
  nameWithType: XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ShrinkArray(Array,Int32,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64(String)
  nameWithType: XmlSerializationReader.ToByteArrayBase64(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(Boolean)
  nameWithType: XmlSerializationReader.ToByteArrayHex(Boolean)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(Boolean)
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex(String)
  nameWithType: XmlSerializationReader.ToByteArrayHex(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar(String)
  nameWithType: XmlSerializationReader.ToChar(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToChar(String)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate(String)
  nameWithType: XmlSerializationReader.ToDate(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDate(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime(String)
  nameWithType: XmlSerializationReader.ToDateTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToDateTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum(String,Hashtable,String)
  nameWithType: XmlSerializationReader.ToEnum(String,Hashtable,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToEnum(String,Hashtable,String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime(String)
  nameWithType: XmlSerializationReader.ToTime(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToTime(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName(String)
  nameWithType: XmlSerializationReader.ToXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName(String)
  nameWithType: XmlSerializationReader.ToXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken(String)
  nameWithType: XmlSerializationReader.ToXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens(String)
  nameWithType: XmlSerializationReader.ToXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName(String)
  nameWithType: XmlSerializationReader.ToXmlQualifiedName(String)
  fullName: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute(Object,XmlAttribute,String)
  nameWithType: XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(Object,XmlAttribute,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement(Object,XmlElement,String)
  nameWithType: XmlSerializationReader.UnknownElement(Object,XmlElement,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownElement(Object,XmlElement,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object)
  nameWithType: XmlSerializationReader.UnknownNode(Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object)
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode(Object,String)
  nameWithType: XmlSerializationReader.UnknownNode(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnknownNode(Object,String)
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject(String,Object)
  nameWithType: XmlSerializationReader.UnreferencedObject(String,Object)
  fullName: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(String,Object)
- uid: System.Xml.Serialization.XmlSerializationReader.#ctor*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: XmlSerializationReader
  nameWithType: XmlSerializationReader.XmlSerializationReader
- uid: System.Xml.Serialization.XmlSerializationReader.AddFixup*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddFixup
  nameWithType: XmlSerializationReader.AddFixup
- uid: System.Xml.Serialization.XmlSerializationReader.AddReadCallback*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddReadCallback
  nameWithType: XmlSerializationReader.AddReadCallback
- uid: System.Xml.Serialization.XmlSerializationReader.AddTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: AddTarget
  nameWithType: XmlSerializationReader.AddTarget
- uid: System.Xml.Serialization.XmlSerializationReader.CheckReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CheckReaderCount
  nameWithType: XmlSerializationReader.CheckReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CollapseWhitespace
  nameWithType: XmlSerializationReader.CollapseWhitespace
- uid: System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateAbstractTypeException
  nameWithType: XmlSerializationReader.CreateAbstractTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateBadDerivationException
  nameWithType: XmlSerializationReader.CreateBadDerivationException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateCtorHasSecurityException
  nameWithType: XmlSerializationReader.CreateCtorHasSecurityException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInaccessibleConstructorException
  nameWithType: XmlSerializationReader.CreateInaccessibleConstructorException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateInvalidCastException
  nameWithType: XmlSerializationReader.CreateInvalidCastException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateMissingIXmlSerializableType
  nameWithType: XmlSerializationReader.CreateMissingIXmlSerializableType
- uid: System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateReadOnlyCollectionException
  nameWithType: XmlSerializationReader.CreateReadOnlyCollectionException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownConstantException
  nameWithType: XmlSerializationReader.CreateUnknownConstantException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownNodeException
  nameWithType: XmlSerializationReader.CreateUnknownNodeException
- uid: System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationReader.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationReader.DecodeName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: DecodeName
  nameWithType: XmlSerializationReader.DecodeName
- uid: System.Xml.Serialization.XmlSerializationReader.Document*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Document
  nameWithType: XmlSerializationReader.Document
- uid: System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: EnsureArrayIndex
  nameWithType: XmlSerializationReader.EnsureArrayIndex
- uid: System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: FixupArrayRefs
  nameWithType: XmlSerializationReader.FixupArrayRefs
- uid: System.Xml.Serialization.XmlSerializationReader.GetArrayLength*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetArrayLength
  nameWithType: XmlSerializationReader.GetArrayLength
- uid: System.Xml.Serialization.XmlSerializationReader.GetNullAttr*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetNullAttr
  nameWithType: XmlSerializationReader.GetNullAttr
- uid: System.Xml.Serialization.XmlSerializationReader.GetTarget*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetTarget
  nameWithType: XmlSerializationReader.GetTarget
- uid: System.Xml.Serialization.XmlSerializationReader.GetXsiType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: GetXsiType
  nameWithType: XmlSerializationReader.GetXsiType
- uid: System.Xml.Serialization.XmlSerializationReader.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationReader.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationReader.InitIDs*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: InitIDs
  nameWithType: XmlSerializationReader.InitIDs
- uid: System.Xml.Serialization.XmlSerializationReader.IsReturnValue*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsReturnValue
  nameWithType: XmlSerializationReader.IsReturnValue
- uid: System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: IsXmlnsAttribute
  nameWithType: XmlSerializationReader.IsXmlnsAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ParseWsdlArrayType
  nameWithType: XmlSerializationReader.ParseWsdlArrayType
- uid: System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadElementQualifiedName
  nameWithType: XmlSerializationReader.ReadElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadEndElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlSerializationReader.ReadEndElement
- uid: System.Xml.Serialization.XmlSerializationReader.Reader*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Reader
  nameWithType: XmlSerializationReader.Reader
- uid: System.Xml.Serialization.XmlSerializationReader.ReaderCount*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReaderCount
  nameWithType: XmlSerializationReader.ReaderCount
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNull
  nameWithType: XmlSerializationReader.ReadNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableQualifiedName
  nameWithType: XmlSerializationReader.ReadNullableQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.ReadNullableString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadNullableString
  nameWithType: XmlSerializationReader.ReadNullableString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReference*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReference
  nameWithType: XmlSerializationReader.ReadReference
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElement
  nameWithType: XmlSerializationReader.ReadReferencedElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencedElements
  nameWithType: XmlSerializationReader.ReadReferencedElements
- uid: System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadReferencingElement
  nameWithType: XmlSerializationReader.ReadReferencingElement
- uid: System.Xml.Serialization.XmlSerializationReader.ReadSerializable*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadSerializable
  nameWithType: XmlSerializationReader.ReadSerializable
- uid: System.Xml.Serialization.XmlSerializationReader.ReadString*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadString
  nameWithType: XmlSerializationReader.ReadString
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedNull*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedNull
  nameWithType: XmlSerializationReader.ReadTypedNull
- uid: System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadTypedPrimitive
  nameWithType: XmlSerializationReader.ReadTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlDocument
  nameWithType: XmlSerializationReader.ReadXmlDocument
- uid: System.Xml.Serialization.XmlSerializationReader.ReadXmlNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ReadXmlNode
  nameWithType: XmlSerializationReader.ReadXmlNode
- uid: System.Xml.Serialization.XmlSerializationReader.Referenced*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: Referenced
  nameWithType: XmlSerializationReader.Referenced
- uid: System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationReader.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationReader.ShrinkArray*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ShrinkArray
  nameWithType: XmlSerializationReader.ShrinkArray
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayBase64
  nameWithType: XmlSerializationReader.ToByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToByteArrayHex
  nameWithType: XmlSerializationReader.ToByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationReader.ToChar*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToChar
  nameWithType: XmlSerializationReader.ToChar
- uid: System.Xml.Serialization.XmlSerializationReader.ToDate*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDate
  nameWithType: XmlSerializationReader.ToDate
- uid: System.Xml.Serialization.XmlSerializationReader.ToDateTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToDateTime
  nameWithType: XmlSerializationReader.ToDateTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToEnum*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToEnum
  nameWithType: XmlSerializationReader.ToEnum
- uid: System.Xml.Serialization.XmlSerializationReader.ToTime*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToTime
  nameWithType: XmlSerializationReader.ToTime
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlName
  nameWithType: XmlSerializationReader.ToXmlName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNCName
  nameWithType: XmlSerializationReader.ToXmlNCName
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmToken
  nameWithType: XmlSerializationReader.ToXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlNmTokens
  nameWithType: XmlSerializationReader.ToXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: ToXmlQualifiedName
  nameWithType: XmlSerializationReader.ToXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownAttribute*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownAttribute
  nameWithType: XmlSerializationReader.UnknownAttribute
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownElement*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownElement
  nameWithType: XmlSerializationReader.UnknownElement
- uid: System.Xml.Serialization.XmlSerializationReader.UnknownNode*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnknownNode
  nameWithType: XmlSerializationReader.UnknownNode
- uid: System.Xml.Serialization.XmlSerializationReader.UnreferencedObject*
  parent: System.Xml.Serialization.XmlSerializationReader
  isExternal: false
  name: UnreferencedObject
  nameWithType: XmlSerializationReader.UnreferencedObject
