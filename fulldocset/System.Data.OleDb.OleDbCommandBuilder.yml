### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommandBuilder
  id: OleDbCommandBuilder
  children:
  - System.Data.OleDb.OleDbCommandBuilder.#ctor
  - System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  - System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  langs:
  - csharp
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder
  fullName: System.Data.OleDb.OleDbCommandBuilder
  type: Class
  summary: "Автоматически создает однотабличные команды, используемые для согласования изменений, внесенных <xref href=&quot;System.Data.DataSet&quot;> </xref> со связанной базой данных. Этот класс не наследуется."
  remarks: "<xref:System.Data.OleDb.OleDbDataAdapter>Не создает автоматически инструкции SQL, необходимые для согласования изменений, внесенных в <xref:System.Data.DataSet>с связанного источника данных.</xref:System.Data.DataSet> </xref:System.Data.OleDb.OleDbDataAdapter> Тем не менее могут создать объект OleDbCommandBuilder для автоматического создания инструкций SQL для отдельных обновлений, если установить <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>свойство <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> Затем OleDbCommandBuilder создаются все дополнительные инструкции SQL, которые не заданы.       OleDbCommandBuilder регистрирует себя в качестве прослушивателя <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>события всякий раз при установке <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A>свойство.</xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> Можно связать только одну <xref:System.Data.OleDb.OleDbDataAdapter>или объект OleDbCommandBuilder друг с другом за один раз.</xref:System.Data.OleDb.OleDbDataAdapter>       Для создания инструкций INSERT, UPDATE или DELETE, использует OleDbCommandBuilder <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>свойство для получения требуемого набора метаданных автоматически.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> При изменении <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>после получить метаданные, такие как после первого обновления, необходимо вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>метод для обновления метаданных.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>       Также использует OleDbCommandBuilder <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>и <xref:System.Data.OleDb.OleDbCommand.Transaction%2A>Свойства ссылается <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.OleDb.OleDbCommand.Transaction%2A> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommand.Connection%2A> Пользователь должен вызвать метод <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если одна или несколько из этих свойств будут изменены или <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>выполнена замена.</xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, и <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>Свойства сохраняют свои предыдущие значения.</xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>       При вызове метода <xref:System.ComponentModel.Component.Dispose%2A>, OleDbCommandBuilder отсоединяется от <xref:System.Data.OleDb.OleDbDataAdapter>, и созданные команды больше не используются.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OleDbCommandBuilder.  \n  \n [!code-cs[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: 'public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;> </xref> класса."
  syntax:
    content: public OleDbCommandBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  id: '#ctor(System.Data.OleDb.OleDbDataAdapter)'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;> </xref> класса со связанным <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> объекта."
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>Регистрирует себя в качестве прослушивателя <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>событий, создаваемых <xref:System.Data.OleDb.OleDbDataAdapter>указанный в этом свойстве.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.OleDb.OleDbCommandBuilder>       При создании нового экземпляра <xref:System.Data.OleDb.OleDbCommandBuilder>, все существующие <xref:System.Data.OleDb.OleDbCommandBuilder>связанный с этим <xref:System.Data.OleDb.OleDbDataAdapter>освобождается.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbCommandBuilder>"
  syntax:
    content: public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.OleDb.OleDbDataAdapter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "Для добавления."
    - id: datarow
      type: System.Data.DataRow
      description: "Для добавления."
    - id: statementType
      type: System.Data.StatementType
      description: "Для добавления."
    - id: whereClause
      type: System.Boolean
      description: "Для добавления."
  overload: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает или задает <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> объекта, для которого SQL инструкции создаются автоматически."
  remarks: "<xref:System.Data.OleDb.OleDbCommandBuilder>Регистрирует себя в качестве прослушивателя <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>событий, создаваемых <xref:System.Data.OleDb.OleDbDataAdapter>указанный в этом свойстве.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.OleDb.OleDbCommandBuilder>       При создании нового экземпляра <xref:System.Data.OleDb.OleDbCommandBuilder>, все существующие <xref:System.Data.OleDb.OleDbCommandBuilder>связанный с этим <xref:System.Data.OleDb.OleDbDataAdapter>освобождается.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.OleDb.OleDbCommandBuilder>"
  syntax:
    content: public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.OleDb.OleDbDataAdapter
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;> </xref> Объекта."
  overload: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  id: DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Получает сведения о параметрах из хранимой процедуры, указанной в <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> и заполняет <xref:System.Data.OleDb.OleDbCommand.Parameters*>коллекции указанного <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объекта.</xref:System.Data.OleDb.OleDbCommand.Parameters*>"
  remarks: "DeriveParameters перезаписывает любые существующие данные параметров для <xref:System.Data.OleDb.OleDbCommand>.</xref:System.Data.OleDb.OleDbCommand>       DeriveParameters требуется дополнительное обращение к источнику данных для получения сведений. Если сведения о параметрах известна заранее, более эффективно будет заполнить коллекцию параметров путем задания сведений явным образом.       DeriveParameters можно использовать только с хранимыми процедурами. DeriveParameters нельзя использовать для заполнения <xref:System.Data.OleDb.OleDbParameterCollection>произвольными инструкциями Transact-SQL, таких как инструкции SELECT с параметрами.</xref:System.Data.OleDb.OleDbParameterCollection>       Дополнительные сведения см. в разделе [Настройка параметров и типов данных параметров](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);
    parameters:
    - id: command
      type: System.Data.OleDb.OleDbCommand
      description: "<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> Ссылается хранимую процедуру, из которой извлекаются сведения о параметрах. Производные параметры добавляются <xref:System.Data.OleDb.OleDbCommand.Parameters*>коллекцию <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>.</xref:System.Data.OleDb.OleDbCommand.Parameters*>"
  overload: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Базовый поставщик OLE DB не поддерживает возврат сведений о параметрах хранимой процедуры, текст команды не является допустимым именем хранимой процедуры, или <xref:System.Data.OleDb.OleDbCommand.CommandType*>не <xref uid=&quot;langword_csharp_StoredProcedure&quot; name=&quot;StoredProcedure&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OleDb.OleDbCommand.CommandType*>"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций удаления в источнике данных."
  remarks: "Приложение может использовать метод GetDeleteCommand для информационных и устранения неполадок, поскольку он возвращает <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand>       GetDeleteCommand также можно использовать как основу для измененной команды. Например может вызвать GetDeleteCommand и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае будет GetDeleteCommand по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или GetDeleteCommand.</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций удаления."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций удаления в источнике данных."
  remarks: "Приложение может использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>       Можно также использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>в качестве основы для измененной команды.</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> Например можно вызвать <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>будет по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.OleDb.OleDbCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.OleDb.OleDbCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был указан и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций удаления."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций вставки в источнике данных."
  remarks: "Приложение может использовать метод GetInsertCommand для информационных и устранения неполадок, поскольку она возвращает текст <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand>       GetInsertCommand также можно использовать как основу для измененной команды. Например может вызвать GetInsertCommand и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае будет GetInsertCommand по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или GetInsertCommand.</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций вставки."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций вставки в источнике данных."
  remarks: "Приложение может использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>метод для получения сведений и устранения неполадок, поскольку она возвращает текст <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>       Можно также использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>в качестве основы для измененной команды.</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> Например можно вызвать <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>будет по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.OleDb.OleDbCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.OleDb.OleDbCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был указан и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, который требуется для выполнения операций вставки."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, необходимый для выполнения обновлений в источнике данных."
  remarks: "Приложение может использовать метод GetUpdateCommand для информационных и устранения неполадок, поскольку он возвращает <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand>       GetUpdateCommand также можно использовать как основу для измененной команды. Например может вызвать GetUpdateCommand и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае будет GetUpdateCommand по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или GetUpdateCommand.</xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, необходимый для выполнения обновлений."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, необходимый для выполнения обновлений в источнике данных, при необходимости используя столбцы для имен параметров."
  remarks: "Приложение может использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.OleDb.OleDbCommand>объект для выполнения.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>       Можно также использовать <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>в качестве основы для измененной команды.</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> Например можно вызвать <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>и измените <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.OleDb.OleDbDataAdapter>.</xref:System.Data.OleDb.OleDbDataAdapter> </xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> </xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>       После первоначального создания инструкции SQL приложение должно явно вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>будет по-прежнему использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>или <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.OleDb.OleDbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.OleDb.OleDbCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.OleDb.OleDbCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был указан и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> объект, необходимый для выполнения обновлений."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Данный идентификатор без кавычек в наличии правильного каталога возвращает правильную форму этого идентификатора. Сюда входят корректно исключаются кавычки, внедренные в идентификатор."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "Исходный идентификатор без кавычек."
    return:
      type: System.String
      description: "Версия заключенный в кавычки идентификатор. Кавычки, внедренные в идентификатор, корректно исключаются."
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Данный идентификатор без кавычек в наличии правильного каталога возвращает правильную форму этого идентификатора. Сюда входят корректно исключаются кавычки, внедренные в идентификатор."
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "Не заключенный в кавычки идентификатор должен быть возвращен в формате с кавычками."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "При передаче подключение вызывает управляемую оболочку для получения символ кавычки от поставщика OLE DB. Если подключение не передается, строка заключена в кавычки с помощью значений из <> </> *настроек и <> </> *настроек."
    return:
      type: System.String
      description: "Версия заключенный в кавычки идентификатор. Кавычки, внедренные в идентификатор, корректно исключаются."
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "Для добавления."
  overload: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает корректной форме этот идентификатор, заключенный в кавычки идентификатор. Сюда входят правильно сохраняются все кавычки, внедренные в идентификатор."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Идентификатор, который будет иметь удалены внедренные кавычки."
    return:
      type: System.String
      description: "Не заключенный в кавычки идентификатор, в котором внедренные кавычки корректно учтены."
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Возвращает корректной форме этот идентификатор, заключенный в кавычки идентификатор. Сюда входят правильно сохраняются все кавычки, внедренные в идентификатор."
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Идентификатор, который будет иметь удалены внедренные кавычки."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "The <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>."
    return:
      type: System.String
      description: "Не заключенный в кавычки идентификатор, в котором внедренные кавычки корректно учтены."
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
- uid: System.Data.OleDb.OleDbDataAdapter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OleDbCommandBuilder.DeriveParameters
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OleDbCommandBuilder.GetDeleteCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OleDbCommandBuilder.GetInsertCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OleDbCommandBuilder.GetParameterName
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OleDbCommandBuilder.GetUpdateCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OleDbCommandBuilder.QuoteIdentifier
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier
