### YamlMime:ManagedReference
items:
- uid: System.Net.SocketPermission
  id: SocketPermission
  children:
  - System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  - System.Net.SocketPermission.AcceptList
  - System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  - System.Net.SocketPermission.AllPorts
  - System.Net.SocketPermission.ConnectList
  - System.Net.SocketPermission.Copy
  - System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  - System.Net.SocketPermission.Intersect(System.Security.IPermission)
  - System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.SocketPermission.IsUnrestricted
  - System.Net.SocketPermission.ToXml
  - System.Net.SocketPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SocketPermission
  nameWithType: SocketPermission
  fullName: System.Net.SocketPermission
  type: Class
  summary: "Управляет правами на создание или принятие подключений по транспортному адресу."
  remarks: "Экземпляры SocketPermission разрешения управления, чтобы принимать соединения или инициировать <xref:System.Net.Sockets.Socket>подключений.</xref:System.Net.Sockets.Socket> Объект <xref:System.Net.Sockets.Socket>можно установить разрешения для имени узла или IP адрес, номер порта и транспортный протокол.</xref:System.Net.Sockets.Socket>      Настроек [!NOTE] настроек следует избегать создания разрешений сокета с использованием имен узлов, как эти имена должны разрешаться в IP-адреса, что может заблокировать стек."
  example:
  - "The following example demonstrates how to use the SocketPermission class to set, change, and enforce various socket access restrictions.  \n  \n [!code-cs[SocketPermissionExample#1](~/add/codesnippet/csharp/t-system.net.socketpermi_1.cs)]\n [!code-vb[SocketPermissionExample#1](~/add/codesnippet/visualbasic/t-system.net.socketpermi_1.vb)]\n [!code-cpp[SocketPermissionExample#1](~/add/codesnippet/cpp/t-system.net.socketpermi_1.cpp)]"
  syntax:
    content: 'public sealed class SocketPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: SocketPermission(PermissionState)
  nameWithType: SocketPermission.SocketPermission(PermissionState)
  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.SocketPermission&quot;> </xref> класс, который разрешает неограниченный доступ <xref:System.Net.Sockets.Socket>или запрещает доступ к <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.Socket>"
  remarks: "Если <xref:System.Net.SocketPermission>создается экземпляр с `Unrestricted` значение из <xref:System.Security.Permissions.PermissionState>то <xref:System.Net.SocketPermission>экземпляр передает все запросы.</xref:System.Net.SocketPermission> </xref:System.Security.Permissions.PermissionState> </xref:System.Net.SocketPermission> Любое другое значение для `state` <xref:System.Net.SocketPermission>экземпляр, если не добавлено разрешение адрес транспорта с <xref:System.Net.SocketPermission.AddPermission%2A>.</xref:System.Net.SocketPermission.AddPermission%2A> отклоняет все запросы</xref:System.Net.SocketPermission>"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Security.Permissions.PermissionState> enumerated value.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/0407ee1f-774e-4447-a7b4-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/0407ee1f-774e-4447-a7b4-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/0407ee1f-774e-4447-a7b4-_1.cs)]"
  syntax:
    content: public SocketPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Net.SocketPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  id: '#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)'
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: SocketPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.SocketPermission&quot;> </xref> класс для заданного транспортного адреса с указанным разрешением."
  remarks: "Этот конструктор создает <xref:System.Net.SocketPermission>, управляет доступом к указанным `hostName` и `portNumber` с использованием указанного `transport`.</xref:System.Net.SocketPermission>       `hostName` Может быть DNS-имя, IP-адрес или IP-подсетью, такие как 192.168.1.*.       `portNumber` Может быть любой допустимый номер порта определяется транспорта или <xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>.</xref:System.Net.SocketPermission.AllPorts?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> using a <xref:System.Net.NetworkAccess> enumerated value, a <xref:System.Net.TransportType> enumerated value, the hostname, and the port number.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/1e71f379-a56e-49d8-98b6-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/1e71f379-a56e-49d8-98b6-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/1e71f379-a56e-49d8-98b6-_1.cs)]"
  syntax:
    content: public SocketPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Один из <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> значения."
    - id: transport
      type: System.Net.TransportType
      description: "Один из <xref href=&quot;System.Net.TransportType&quot;> </xref> значения."
    - id: hostName
      type: System.String
      description: "Имя узла для адреса транспорта."
    - id: portNumber
      type: System.Int32
      description: "Номер порта для адреса транспорта."
  overload: System.Net.SocketPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.SocketPermission.AcceptList
  id: AcceptList
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
  fullName: System.Net.SocketPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Получает список <xref href=&quot;System.Net.EndpointPermission&quot;> </xref> экземпляров, которые конечные точки, которые могут быть приняты при данном экземпляре разрешения."
  remarks: ''
  example:
  - "The following example uses the AcceptList property to return a list of endpoints to which accept privileges are granted.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/p-system.net.socketpermi_1_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/p-system.net.socketpermi_1_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/p-system.net.socketpermi_1_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Экземпляр, который реализует <xref:System.Collections.IEnumerator>интерфейс, который содержит <xref href=&quot;System.Net.EndpointPermission&quot;> </xref> экземпляров.</xref:System.Collections.IEnumerator>"
  overload: System.Net.SocketPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  id: AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Добавляет разрешение в набор разрешений для адреса транспорта."
  remarks: "`hostName` Может быть DNS-имя, IP-адрес или IP-подсетью, такие как 192.168.1.*."
  example:
  - "The following example uses the AddPermission method to add connection permissions to the specified host.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/d5f881e9-ca35-4558-976c-_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/d5f881e9-ca35-4558-976c-_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/d5f881e9-ca35-4558-976c-_1.cs)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Net.TransportType transport, string hostName, int portNumber);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Один из <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> значения."
    - id: transport
      type: System.Net.TransportType
      description: "Один из <xref href=&quot;System.Net.TransportType&quot;> </xref> значения."
    - id: hostName
      type: System.String
      description: "Имя узла для адреса транспорта."
    - id: portNumber
      type: System.Int32
      description: "Номер порта для адреса транспорта."
  overload: System.Net.SocketPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.SocketPermission.AllPorts
  id: AllPorts
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: AllPorts
  nameWithType: SocketPermission.AllPorts
  fullName: System.Net.SocketPermission.AllPorts
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Определяет константы, представляющей все порты."
  remarks: "Это поле доступно только для чтения. Значение этого поля равно -1."
  example:
  - "The following example uses the AllPorts property to provide connection permissions to all of the resources ports.  \n  \n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/f-system.net.socketpermi_1.cpp)]\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/f-system.net.socketpermi_1.vb)]\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/f-system.net.socketpermi_1.cs)]"
  syntax:
    content: public const int AllPorts = -1;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.ConnectList
  id: ConnectList
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
  fullName: System.Net.SocketPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Получает список <xref href=&quot;System.Net.EndpointPermission&quot;> </xref> экземпляров, которые конечные точки, которые подключаются к при данном экземпляре разрешения."
  remarks: ''
  example:
  - "The following example uses the ConnectList property to return a list of endpoints to which connection privileges are granted.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/p-system.net.socketpermi_0_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/p-system.net.socketpermi_0_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/p-system.net.socketpermi_0_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Экземпляр, который реализует <xref:System.Collections.IEnumerator>интерфейс, который содержит <xref href=&quot;System.Net.EndpointPermission&quot;> </xref> экземпляров.</xref:System.Collections.IEnumerator>"
  overload: System.Net.SocketPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.Copy
  id: Copy
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SocketPermission.Copy()
  fullName: System.Net.SocketPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает копию объекта <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляра."
  remarks: "Же уровень доступа, что и текущий экземпляр представляет объект, возвращаемый этим методом. Этот метод переопределяет <xref:System.Security.CodeAccessPermission.Copy%2A>и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example creates a <xref:System.Net.SocketPermission> by taking a copy of an existing <xref:System.Net.SocketPermission>.  \n  \n [!code-cs[SocketPermissionExample#4](~/add/codesnippet/csharp/m-system.net.socketpermi_2_1.cs)]\n [!code-vb[SocketPermissionExample#4](~/add/codesnippet/visualbasic/m-system.net.socketpermi_2_1.vb)]\n [!code-cpp[SocketPermissionExample#4](~/add/codesnippet/cpp/m-system.net.socketpermi_2_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Новый экземпляр <xref href=&quot;System.Net.SocketPermission&quot;> </xref> класс, который является копией текущего экземпляра."
  overload: System.Net.SocketPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SocketPermission.FromXml(SecurityElement)
  fullName: System.Net.SocketPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Восстанавливает <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляр для кодировки XML."
  remarks: "Метод FromXml восстанавливает <xref:System.Net.SocketPermission>экземпляр из кодировки XML определяются <xref:System.Security.SecurityElement>классом.</xref:System.Security.SecurityElement> </xref:System.Net.SocketPermission>       Используйте <xref:System.Net.SocketPermission.ToXml%2A>метод для кодирования <xref:System.Net.SocketPermission>экземпляра, включая сведения о состоянии, в формате XML.</xref:System.Net.SocketPermission> </xref:System.Net.SocketPermission.ToXml%2A>"
  example:
  - "The following example uses the FromXml method to convert XML encoded data to a <xref:System.Net.SocketPermission> instance.  \n  \n [!code-cpp[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_6_1.cpp)]\n [!code-vb[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_6_1.vb)]\n [!code-cs[dateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_6_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляра."
  overload: System.Net.SocketPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>securityElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> securityElement </code> Не является элементом разрешений для этого типа."
  platform:
  - net462
- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SocketPermission.Intersect(IPermission)
  fullName: System.Net.SocketPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает логическое пересечение между двумя <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляров."
  remarks: "Пересечение двух разрешений является разрешение, которое помогает защитить ресурсы и операции, защищенные обоими разрешениями. В частности он представляет минимально необходимым разрешением, таким образом, любой запрос, передающий оба разрешения, передает их пересечения. Этот метод переопределяет <xref:System.Security.CodeAccessPermission.Intersect%2A>и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example uses the Intersect method to obtain a logical intersection between two <xref:System.Net.SocketPermission> instances.  \n  \n [!code-cpp[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/cpp/m-system.net.socketpermi_0_1.cpp)]\n [!code-vb[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_0_1.vb)]\n [!code-cs[DateClient_SocketPermission_Constructor#1](~/add/codesnippet/csharp/m-system.net.socketpermi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref> Экземпляра, пересекающееся с текущим экземпляром."
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref> Экземпляр, представляющий собой пересечение двух <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляров. Если пересечение является пустым, метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Если <code> target </code> параметр является указателем null, метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.SocketPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>target</code> parameter is not a <xref href=&quot;System.Net.SocketPermission&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref href=&quot;System.Net.DnsPermission&quot;></xref>не предоставлено объекту, вызвавшему метод."
  platform:
  - net462
- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SocketPermission.IsSubsetOf(IPermission)
  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Определяет, является ли текущее разрешение подмножеством указанного разрешения."
  remarks: "Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении.       Например разрешение, представляющее доступ к 192.168.1.1:80 является подмножеством разрешения, предоставляющего доступ к 192.168.1.1:Any. Если этот метод возвращает `true`, текущее разрешение не предоставляет большего доступа к защищенному ресурсу, чем указанное разрешение."
  example:
  - "The following example uses the IsSubsetOf method to determine if one <xref:System.Net.SocketPermission> is the subset of another.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_5_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_5_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_5_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Net.SocketPermission&quot;> </xref> , для которого требуется проверить отношение подмножества."
    return:
      type: System.Boolean
      description: "Если <code> target </code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, этот метод возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , если текущий экземпляр не определяет никаких разрешений; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если <code> target </code> не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, этот метод возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , если текущий экземпляр не определяет подмножество <code> target </code> разрешений; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.SocketPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>не является <xref:System.Net.Sockets.SocketException>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref href=&quot;System.Net.DnsPermission&quot;></xref>не предоставлено объекту, вызвавшему метод."
  platform:
  - net462
- uid: System.Net.SocketPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: SocketPermission.IsUnrestricted()
  fullName: System.Net.SocketPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Проверяет полное состояние разрешения для объекта."
  remarks: ''
  example:
  - "The following example checks the IsUnrestricted property to determine if the specified <xref:System.Net.SocketPermission> has any restrictions.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_4_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_4_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_4_1.vb)]"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Net.SocketPermission&quot;> </xref> создается экземпляр с <xref uid=&quot;langword_csharp_Unrestricted&quot; name=&quot;Unrestricted&quot; href=&quot;&quot;> </xref> значение из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.SocketPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.ToXml
  id: ToXml
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SocketPermission.ToXml()
  fullName: System.Net.SocketPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает кодировку XML для <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляр и его текущего состояния."
  remarks: "Создает метод ToXml <xref:System.Security.SecurityElement>экземпляра для кодирования представление <xref:System.Net.SocketPermission>экземпляра, включая сведения о состоянии, в формате XML.</xref:System.Net.SocketPermission> </xref:System.Security.SecurityElement>       Используйте <xref:System.Net.SocketPermission.FromXml%2A>метод восстановления сведений о состоянии из <xref:System.Security.SecurityElement>экземпляра.</xref:System.Security.SecurityElement> </xref:System.Net.SocketPermission.FromXml%2A>"
  example:
  - "The following example uses the ToXml method to convert a <xref:System.Net.SocketPermission> to XML.  \n  \n [!code-cs[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/csharp/m-system.net.socketpermi_1_1.cs)]\n [!code-cpp[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/cpp/m-system.net.socketpermi_1_1.cpp)]\n [!code-vb[dateClient_SocketPermission_ToXml#1](~/add/codesnippet/visualbasic/m-system.net.socketpermi_1_1.vb)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Объект <xref href=&quot;System.Security.SecurityElement&quot;> </xref> экземпляр, который содержит представление XML-кодировке <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляра, включая сведения о состоянии."
  overload: System.Net.SocketPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.SocketPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.SocketPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SocketPermission.Union(IPermission)
  fullName: System.Net.SocketPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Возвращает логическое объединение двух <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляров."
  remarks: "Результатом вызова на объединение является разрешение, которое представляет все доступ к <xref:System.Net.Sockets.Socket>подключений, представленных текущим экземпляром, а также уровень доступа к представленный `target`.</xref:System.Net.Sockets.Socket> Любой запрос, передающий текущего экземпляра или `target` передает их объединение. Этот метод переопределяет <xref:System.Security.CodeAccessPermission.Union%2A>и реализуется для поддержки <xref:System.Security.IPermission>интерфейса.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Union%2A>"
  example:
  - "The following example uses the Union method to return the logical union of two existing <xref:System.Net.SocketPermission> instances.  \n  \n [!code-cs[SocketPermissionExample#2](~/add/codesnippet/csharp/m-system.net.socketpermi_3_1.cs)]\n [!code-vb[SocketPermissionExample#2](~/add/codesnippet/visualbasic/m-system.net.socketpermi_3_1.vb)]\n [!code-cpp[SocketPermissionExample#2](~/add/codesnippet/cpp/m-system.net.socketpermi_3_1.cpp)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref> Экземпляра для объединения с текущим экземпляром."
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Net.SocketPermission&quot;> </xref> Экземпляр, представляющий объединение двух <xref href=&quot;System.Net.SocketPermission&quot;> </xref> экземпляров. Если <code> target </code> параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, возвращает копию текущего экземпляра."
  overload: System.Net.SocketPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>is not a <xref href=&quot;System.Net.SocketPermission&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission(PermissionState)
  nameWithType: SocketPermission.SocketPermission(PermissionState)
  fullName: System.Net.SocketPermission.SocketPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.SocketPermission(NetworkAccess,TransportType,String,Int32)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.Net.TransportType
  parent: System.Net
  isExternal: false
  name: TransportType
  nameWithType: TransportType
  fullName: System.Net.TransportType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.SocketPermission.AcceptList
  parent: System.Net.SocketPermission
  isExternal: false
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
  fullName: System.Net.SocketPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)
  parent: System.Net.SocketPermission
  isExternal: false
  name: AddPermission(NetworkAccess,TransportType,String,Int32)
  nameWithType: SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
  fullName: System.Net.SocketPermission.AddPermission(NetworkAccess,TransportType,String,Int32)
- uid: System.Net.SocketPermission.AllPorts
  parent: System.Net.SocketPermission
  isExternal: false
  name: AllPorts
  nameWithType: SocketPermission.AllPorts
  fullName: System.Net.SocketPermission.AllPorts
- uid: System.Net.SocketPermission.ConnectList
  parent: System.Net.SocketPermission
  isExternal: false
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
  fullName: System.Net.SocketPermission.ConnectList
- uid: System.Net.SocketPermission.Copy
  parent: System.Net.SocketPermission
  isExternal: false
  name: Copy()
  nameWithType: SocketPermission.Copy()
  fullName: System.Net.SocketPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.SocketPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.SocketPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SocketPermission.FromXml(SecurityElement)
  fullName: System.Net.SocketPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.SocketPermission.Intersect(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SocketPermission.Intersect(IPermission)
  fullName: System.Net.SocketPermission.Intersect(IPermission)
- uid: System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SocketPermission.IsSubsetOf(IPermission)
  fullName: System.Net.SocketPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.SocketPermission.IsUnrestricted
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: SocketPermission.IsUnrestricted()
  fullName: System.Net.SocketPermission.IsUnrestricted()
- uid: System.Net.SocketPermission.ToXml
  parent: System.Net.SocketPermission
  isExternal: false
  name: ToXml()
  nameWithType: SocketPermission.ToXml()
  fullName: System.Net.SocketPermission.ToXml()
- uid: System.Net.SocketPermission.Union(System.Security.IPermission)
  parent: System.Net.SocketPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SocketPermission.Union(IPermission)
  fullName: System.Net.SocketPermission.Union(IPermission)
- uid: System.Net.SocketPermission.#ctor*
  parent: System.Net.SocketPermission
  isExternal: false
  name: SocketPermission
  nameWithType: SocketPermission.SocketPermission
- uid: System.Net.SocketPermission.AcceptList*
  parent: System.Net.SocketPermission
  isExternal: false
  name: AcceptList
  nameWithType: SocketPermission.AcceptList
- uid: System.Net.SocketPermission.AddPermission*
  parent: System.Net.SocketPermission
  isExternal: false
  name: AddPermission
  nameWithType: SocketPermission.AddPermission
- uid: System.Net.SocketPermission.ConnectList*
  parent: System.Net.SocketPermission
  isExternal: false
  name: ConnectList
  nameWithType: SocketPermission.ConnectList
- uid: System.Net.SocketPermission.Copy*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Copy
  nameWithType: SocketPermission.Copy
- uid: System.Net.SocketPermission.FromXml*
  parent: System.Net.SocketPermission
  isExternal: false
  name: FromXml
  nameWithType: SocketPermission.FromXml
- uid: System.Net.SocketPermission.Intersect*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Intersect
  nameWithType: SocketPermission.Intersect
- uid: System.Net.SocketPermission.IsSubsetOf*
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SocketPermission.IsSubsetOf
- uid: System.Net.SocketPermission.IsUnrestricted*
  parent: System.Net.SocketPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: SocketPermission.IsUnrestricted
- uid: System.Net.SocketPermission.ToXml*
  parent: System.Net.SocketPermission
  isExternal: false
  name: ToXml
  nameWithType: SocketPermission.ToXml
- uid: System.Net.SocketPermission.Union*
  parent: System.Net.SocketPermission
  isExternal: false
  name: Union
  nameWithType: SocketPermission.Union
