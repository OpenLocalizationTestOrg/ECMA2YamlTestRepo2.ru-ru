### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D
  id: ManipulationProcessor2D
  children:
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  langs:
  - csharp
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D
  type: Class
  summary: "Реализует несколькими входами и одним выходом компоновщиком двумерных преобразований (2-D) в общем пространстве координат."
  remarks: "Объект ManipulationProcessor2D воспринимает набор манипуляторов как составной объект. Приложение затем освобождается от отслеживания и управляется отдельными манипуляторами.       Обработчик манипуляции сам по себе не вызывает перемещение элемента. Приложение начинает обработку при необходимости и затем получает данные от процессора манипуляции путем прослушивания <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>и <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>события.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> Значения, получаемые с помощью этих событий позволяют изменять расположение, размер или ориентации элемента при необходимости.       Сообщите допускаются типы манипуляций обработчик манипуляции (перевод, масштабирования, поворота), задав <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>свойство.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> Затем можно предоставить логику без условий для преобразования элемента, который выполняется манипуляция. Например вместо проверки, включено ли вращение перед изменением ориентации элемента, можно безусловно применить коэффициент поворота, полученный от процессора манипуляции; Если поворот не включена, обработчик манипуляции сообщит, что вращающимся изменения не произошло.       При отпускании элемент, над которым выполняется манипуляция (удалены все управляющие элементы), обработку инерции можно использовать для имитации трения и элемент постепенно замедлять его передвижение перед остановкой. Дополнительные сведения см. <xref:System.Windows.Input.Manipulations.InertiaProcessor2D>класс.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D>"
  syntax:
    content: public class ManipulationProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Создает новый <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> объекта."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Начальный набор поддерживаемых манипуляций."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> supportedManipulations </code> Параметр не является допустимым сочетанием <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> значений перечисления."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Создает новый <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> объекта."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Начальный набор поддерживаемых манипуляций."
    - id: pivot
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Сводная информация для поворотов с одиночным манипулятором."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> supportedManipulations </code> Параметр не является допустимым сочетанием <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> значений перечисления."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Происходит при завершении манипуляции."
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  id: CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Вызывает принудительное текущей манипуляции для выполнения и вызывает <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&quot;> </xref> событий."
  syntax:
    content: public void CompleteManipulation (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Отметка времени завершения манипуляции в 100-наносекундных тактов."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Отметка времени меньше, чем предыдущая отметка для текущей обработки."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Происходит при изменении источника манипуляции или после перемещения, масштабирование или поворот."
  remarks: "Дельта-событие и <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName>события относятся к одному типу.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> Как правило можно использовать один и тот же обработчик событий для обоих событий."
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  id: MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает минимальный радиус в единицах координат, необходимый для манипулятора участвовать в масштабировании и повороте."
  remarks: "Если манипулятор находится очень близко к центру массы, обрабатываемый манипуляторов, очень малое движение манипулятора может стать очень большим изменением вращения или масштабирования. Чтобы избежать этой проблемы, установите MinimumScaleRotateRadius больше нуля. Любой манипулятор, расположенный ближе, чем расстояние от центра массы будет отсутствовать в операции поворота и масштабирования.       Обычно используется значение должно быть основано на вероятной величине «случайных» движений манипуляторов. Например если манипулятором является человеческий палец, касающийся экрана, соответствующий около сантиметра radius может быть целесообразным.       Значение для MinimumScaleRotateRadius должно быть конечным положительным числом."
  syntax:
    content: public float MinimumScaleRotateRadius { get; set; }
    return:
      type: System.Single
      description: "Минимальный радиус в единицах координат, необходимый для манипулятора участвовать в масштабировании и повороте."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  id: Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает данные точки вращения для процессора манипуляции."
  remarks: "Свойство Pivot используется для предоставления сводной информации для поворотов с одиночным манипулятором. Этому свойству присвоить значение null, отключает поворотов с одиночным манипулятором."
  syntax:
    content: public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }
    return:
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Данные точки вращения для процессора манипуляции."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  id: ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Обрабатывает заданные манипуляторы как действие одного пакета."
  remarks: "Параметр `manipulators` может быть null или пустой список. Если это приводит к числа манипуляторов достижения нуля, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>событие.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>"
  example:
  - "In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the ProcessManipulators method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D> manipulators);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Отметка времени для пакета в 100-наносекундных тактов."
    - id: manipulators
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
      description: "Набор манипуляторов, которые в настоящее время находятся в области."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Отметка времени меньше, чем предыдущая отметка для текущей обработки."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Задает параметры обработчика манипуляции."
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "Параметры для установки."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  id: Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возникает при запуске нового манипуляции."
  remarks: ''
  example:
  - "In the following example, an event handler for the Started event checks to see if inertia processing is running and if so, stops it.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs> Started;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  id: SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает текущий набор поддерживаемых манипуляций."
  syntax:
    content: public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }
    return:
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Текущий набор поддерживаемых манипуляций."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Свойство пытается задать значение, которое не является допустимым сочетанием <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> значений перечисления."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
- uid: System.Windows.Input.Manipulations.Manipulations2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulations2D
  nameWithType: Manipulations2D
  fullName: System.Windows.Input.Manipulations.Manipulations2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
- uid: System.Windows.Input.Manipulations.ManipulationPivot2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationPivot2D
  nameWithType: ManipulationPivot2D
  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Manipulator2D>
  nameWithType: IEnumerable<Manipulator2D>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulator2D
    name: Manipulator2D
    nameWithType: Manipulator2D
    fullName: Manipulator2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DStartedEventArgs>
  nameWithType: EventHandler<Manipulation2DStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
    name: Manipulation2DStartedEventArgs
    nameWithType: Manipulation2DStartedEventArgs
    fullName: Manipulation2DStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation
  nameWithType: ManipulationProcessor2D.CompleteManipulation
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators
  nameWithType: ManipulationProcessor2D.ProcessManipulators
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: ManipulationProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
