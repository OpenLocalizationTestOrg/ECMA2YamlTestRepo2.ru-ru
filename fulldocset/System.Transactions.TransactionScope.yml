### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionScope
  id: TransactionScope
  children:
  - System.Transactions.TransactionScope.#ctor
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.Complete
  - System.Transactions.TransactionScope.Dispose
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
  type: Class
  summary: "Делает блок кода транзакционным. Этот класс не наследуется."
  remarks: "<xref:System.Transactions>Инфраструктура предоставляет как модель явного программирования на основе <xref:System.Transactions.Transaction>класса, а также модель неявного программирования, использование класса TransactionScope, в котором транзакции автоматически управляются инфраструктурой.</xref:System.Transactions.Transaction> </xref:System.Transactions>      Настроек [!IMPORTANT] настроек рекомендуется создавать неявные транзакции, использование класса TransactionScope, чтобы контекст внешней транзакции автоматически осуществляется. Также следует использовать TransactionScope и <xref:System.Transactions.DependentTransaction>классов для приложений, которые требуют использования одной транзакции между несколькими вызовами функции или вызовов нескольких потоков.</xref:System.Transactions.DependentTransaction> Дополнительные сведения об этой модели см. в разделе [реализации неявные транзакции с помощью области транзакции](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) раздела. Дополнительные сведения о создании транзакционного приложения см. в разделе [записи транзакционного приложения](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       После создания экземпляра TransactionScope с `new` инструкции, диспетчер транзакций определяет, какой транзакции для участия в. После определения область всегда участвует в этой транзакции. Решение на основе двух факторов: присутствует ли внешнюю транзакцию и значение `TransactionScopeOption` параметр в конструкторе.  Внешнюю транзакцию является код выполняется в транзакции. Ссылка на внешнюю транзакцию можно получить, вызвав статическое <xref:System.Transactions.Transaction.Current%2A>свойство <xref:System.Transactions.Transaction>класса.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.Current%2A> Дополнительные сведения об использовании этого параметра см. в разделе «Управление потока транзакций» из [реализации неявные транзакции с помощью области транзакции](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) раздела.       Если исключение не возникает в области транзакции (то есть, между инициализации TransactionScope объекта и вызовом его <xref:System.Transactions.TransactionScope.Dispose%2A>метод), то транзакции, в которой участвует область будет разрешено перейти.</xref:System.Transactions.TransactionScope.Dispose%2A> Если в области транзакции возникает исключение, транзакция, в которой участвует будет выполнен откат.       После завершения всей работы приложения необходимо выполнить в транзакции, следует вызвать <xref:System.Transactions.TransactionScope.Complete%2A>метод только один раз, чтобы информировать диспетчер транзакций, что будет допустимо зафиксировать транзакцию.</xref:System.Transactions.TransactionScope.Complete%2A> Если вызвать этот метод, транзакция прерывается.       Вызов <xref:System.Transactions.TransactionScope.Dispose%2A>метод Отмечает конец области транзакции.</xref:System.Transactions.TransactionScope.Dispose%2A> Исключения, возникающие после вызова этого метода могут не воздействовать на транзакцию.       Если изменить значение <xref:System.Transactions.Transaction.Current%2A>внутри области, создается исключение при <xref:System.Transactions.TransactionScope.Dispose%2A>называется.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.Transactions.Transaction.Current%2A> Однако в конце области восстанавливается предыдущее значение. Кроме того, при вызове метода <xref:System.Transactions.TransactionScope.Dispose%2A>на <xref:System.Transactions.Transaction.Current%2A>внутри области транзакции, создавший транзакцию, транзакция будет прервана в конце области.</xref:System.Transactions.Transaction.Current%2A> </xref:System.Transactions.TransactionScope.Dispose%2A>"
  example:
  - "The following example demonstrates how to use the TransactionScope class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/t-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/t-system.transactions.tr_0_1.cs)]"
  syntax:
    content: 'public sealed class TransactionScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса."
  remarks: "Этот конструктор создает новую область транзакции с параметром области транзакции равно <xref:System.Transactions.TransactionScopeOption>.</xref:System.Transactions.TransactionScopeOption> Это означает, что транзакция запрашивается новой областью и внешняя транзакция используется в том случае, если он уже существует. В противном случае он создает новую транзакцию до ввода области."
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с параметром указанный асинхронный поток."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  id: '#ctor(System.Transactions.TransactionScopeOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с указанным требованиям."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с указанным значением времени ожидания и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>После которого области транзакции, время ожидания и транзакция прерывается.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> с указанным значением времени ожидания и требования."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>После которого области транзакции, время ожидания и транзакция прерывается.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с указанным требованиям."
  remarks: "При использовании `transactionOptions` для указания <xref:System.Transactions.IsolationLevel>и область создает транзакцию позже, новую транзакцию связан с указанным уровнем изоляции.</xref:System.Transactions.IsolationLevel> Если уровень изоляции передается вместе с транзакцией, транзакция должна иметь такой же уровень изоляции, или возникает исключение."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Объект <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> структура, описывающая параметры транзакции для использования, если создана новая транзакция. Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции. Если это время истекает до удаления области, транзакция прерывается."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класс с указанным требованиям и параметр асинхронного потока."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> с указанным значением времени ожидания и COM + требования в отношении взаимодействия и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  remarks: '**Примечание** этот метод использует <xref:System.Security.Permissions.SecurityAction>для предотвращения вызова от ненадежного кода, однако требуется только непосредственно вызывающего метода должны обладать; `FullTrust` набор разрешений.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>После которого области транзакции, время ожидания и транзакция прерывается.</xref:System.TimeSpan>"
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Экземпляр <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> перечисления, которое описывает взаимодействие со связанной транзакцией с транзакциями COM +."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с указанным значением времени ожидания и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "Транзакция, должен быть задан как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>После которого области транзакции, время ожидания и транзакция прерывается.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с указанным значением времени ожидания, требования и параметр асинхронного потока."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>После которого области транзакции, время ожидания и транзакция прерывается.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класса с заданной областью и требованиями к взаимодействию с COM + и параметров транзакции."
  remarks: "При использовании `transactionOptions` для указания <xref:System.Transactions.IsolationLevel>и область создает транзакцию позже, новую транзакцию связан с указанным уровнем изоляции.</xref:System.Transactions.IsolationLevel> Если уровень изоляции передается вместе с транзакцией, транзакция должна иметь такой же уровень изоляции, или возникает исключение.       **Примечание** этот метод использует <xref:System.Security.Permissions.SecurityAction>для предотвращения вызова от ненадежного кода, однако требуется только непосредственно вызывающего метода должны обладать; `FullTrust` набор разрешений.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Объект <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> структура, описывающая параметры транзакции для использования, если создана новая транзакция. Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции. Если это время истекает до удаления области, транзакция прерывается."
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Экземпляр <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> перечисления, которое описывает взаимодействие со связанной транзакцией с транзакциями COM +."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Поддерживается в .NET Framework 4.5.1 и более поздних версиях]       Инициализирует новый экземпляр <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> класс с указанным требованиям и параметр асинхронного потока."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> перечисление, описывающее требования к транзакции, связанные с этой областью транзакции."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "Объект <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> структура, описывающая параметры транзакции для использования, если создана новая транзакция. Если используется существующей транзакции, значение времени ожидания в этот параметр применяется к области транзакции. Если это время истекает до удаления области, транзакция прерывается."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Экземпляр <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> перечисление, описывающее, будет ли внешней транзакции, связанные с областью транзакции проходят через продолжений потока при использовании задачи или async/await .NET асинхронные шаблоны программирования."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Complete
  id: Complete
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Указывает на успешное завершение всех операций в области."
  remarks: "После успешного завершения всех операций в области, то этот метод следует вызывать только один раз для информирования этим диспетчером транзакций согласованного состояния во всех ресурсах, что транзакция может быть зафиксирована. Его рекомендуется очень хорошо поместите вызов в последнем операторе в `using` блока.       Дополнительные сведения об использовании этого метода см. в разделе [реализации неявные транзакции с помощью области транзакции](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) раздела.       Если вызвать этот метод, транзакция прерывается, поскольку диспетчер транзакций интерпретирует это как сбой системы или исключений, создаваемых в пределах области транзакции. Однако следует также отметить, что вызов этого метода не гарантирует фиксации транзакции. Это просто способ информирования диспетчера транзакций о состоянии. После вызова этого метода, больше не доступны через внешнюю транзакцию <xref:System.Transactions.Transaction.Current%2A>Свойства, а также при попытке сделать это произойдет исключение.</xref:System.Transactions.Transaction.Current%2A>       Фактические трудозатраты фиксации между диспетчером ресурсов осуществляется по `End Using` инструкции Если <xref:System.Transactions.TransactionScope>создать объект транзакции.</xref:System.Transactions.TransactionScope> Если он не создавал транзакции, фиксация происходит при каждом вызове <xref:System.Transactions.CommittableTransaction.Commit%2A>вызывается владельцем <xref:System.Transactions.CommittableTransaction>объекта.</xref:System.Transactions.CommittableTransaction> </xref:System.Transactions.CommittableTransaction.Commit%2A> На этом этапе диспетчер транзакций вызывает диспетчеры ресурсов и о том, для фиксации или отката, в зависимости от того, является ли этот метод был вызван для <xref:System.Transactions.TransactionScope>объекта.</xref:System.Transactions.TransactionScope>"
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_1_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_1_1.cs)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.TransactionScope.Complete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Этот метод уже был вызван один раз."
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Dispose
  id: Dispose
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Завершает область транзакции."
  remarks: "Вызов этого метода отмечает конец области транзакции. Если <xref:System.Transactions.TransactionScope>создать объект транзакции и <xref:System.Transactions.TransactionScope.Complete%2A>был вызван для области, <xref:System.Transactions.TransactionScope>объект пытается зафиксировать транзакцию, при вызове этого метода.</xref:System.Transactions.TransactionScope> </xref:System.Transactions.TransactionScope.Complete%2A> </xref:System.Transactions.TransactionScope>       Использование C# `using` конструкции гарантирует, что этот метод вызывается, даже при возникновении исключения. Исключения, возникающие после вызова этого метода могут не воздействовать на транзакцию. Этот метод также восстанавливает внешнюю транзакцию в ее исходное состояние. Объект <xref:System.Transactions.TransactionAbortedException>создается, если транзакция выполняется не фактически.</xref:System.Transactions.TransactionAbortedException>       Этот метод является синхронным и блокирует до транзакция зафиксирована или прервана. По этой причине следует очень внимательно использовать этот метод в приложении Windows Form (WinForm) или может возникнуть взаимоблокировка. Если вызвать этот метод в одно событие управления WinForm (например, нажатие кнопки) и использовать синхронные <xref:System.Windows.Forms.Control.Invoke%2A>метод для прямого управления для выполнения некоторых задач пользовательского интерфейса (например, изменения цветов) в ходе обработки транзакций, произойдет взаимоблокировка.</xref:System.Windows.Forms.Control.Invoke%2A> Это вызвано <xref:System.Windows.Forms.Control.Invoke%2A>метод является синхронным и блокирует рабочий поток, пока поток пользовательского интерфейса не завершит свою работу.</xref:System.Windows.Forms.Control.Invoke%2A> Однако в нашем сценарии поток пользовательского интерфейса также ждет, пока рабочий поток зафиксировать транзакцию. Результат — что не сможет продолжить работу, и область бесконечно ожидает завершения фиксирования. Следует использовать <xref:System.Windows.Forms.Control.BeginInvoke%2A>вместо <xref:System.Windows.Forms.Control.Invoke%2A>везде, где это возможно, поскольку он является асинхронным и, таким образом менее подвержены возникновению взаимоблокировки.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A>       Дополнительные сведения об использовании этого метода см. в разделе [реализации неявные транзакции с помощью области транзакции](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) раздела."
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_0_1.cs)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.TransactionScope.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionScope.#ctor
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.Complete
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
- uid: System.Transactions.TransactionScope.Dispose
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
- uid: System.Transactions.TransactionScope.#ctor*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
- uid: System.Transactions.TransactionScope.Complete*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete
  nameWithType: TransactionScope.Complete
- uid: System.Transactions.TransactionScope.Dispose*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose
  nameWithType: TransactionScope.Dispose
