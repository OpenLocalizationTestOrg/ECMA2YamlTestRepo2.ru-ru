### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  id: ObjectDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  - System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Selected&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Inserted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Updated&quot;></xref>, and <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Deleted&quot;></xref> events of the <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref> control."
  remarks: "Класс ObjectDataSourceStatusEventArgs используется в <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>методы для предоставления доступа к выходных параметров, возвращаемых значений и исключений, создаваемых методом, который вызывается методом <xref:System.Web.UI.WebControls.ObjectDataSource>управления.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> Это осуществляется путем <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>Свойства, соответственно.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> Путем добавления делегата для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, или <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>события, можно проверить эти данные и выполнить необходимую обработку дополнительных post.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected>       <xref:System.Web.UI.WebControls.ObjectDataSource>Элемент управления предоставляет множество событий, которые можно обрабатывать для работы с базовым бизнес-объектом на различных этапах жизненного цикла.</xref:System.Web.UI.WebControls.ObjectDataSource> В следующей таблице перечислены события и связанное с ним <xref:System.EventArgs>классов и делегатов обработчиков событий.</xref:System.EventArgs>      | Событие | EventArgs | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Происходит непосредственно перед создается экземпляр бизнес-объекта. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Происходит непосредственно после создания экземпляра бизнес-объекта. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Происходит до извлечения данных. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Возникает перед вставкой, выполняется, операции обновления или удаления. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Происходит после извлечения данных. | ObjectDataSourceStatusEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler><br /><br /> Возникает после вставки, завершена, операция update или delete. | ObjectDataSourceStatusEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler><br /><br /> Происходит перед уничтожением бизнес-объекта. | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example provides an example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, one parameter is specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection that corresponds to the employee ID. This is because although the ID is included in the <xref:System.Windows.Forms.DataGridView.Columns%2A> collection as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property set to the <xref:System.TypeCode> value, it will pass correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an integer, rather than as string.  \n  \n In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to handle any exceptions that might have occurred. The `NorthwindEmployeeDeleted` delegate accesses possible exceptions that are thrown by the business object that is using the ObjectDataSourceStatusEventArgs object. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_115_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_115_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The following list describes the two major classes that are defined in the code example:  \n  \n-   The `EmployeeLogic` class is a class that does not maintain state and encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n In addition, a `NorthwindDataException` class is provided as a convenience.  \n  \n This set of example classes uses the Northwind Traders database, which is an example database that is available with Microsoft SQL Server and Microsoft Access. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page. The ASP page that is provided in the preceding example is configured to work with this class library.  The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_115_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_115_2.cs)]"
  syntax:
    content: 'public class ObjectDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  id: '#ctor(System.Object,System.Collections.IDictionary)'
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> класса с помощью указанного выходные параметры и возвращаемое значение."
  remarks: "`returnValue` Параметр может быть любой объект, возвращенный вызовом в метод бизнес-объекта данных. `outputParameters` Параметр <xref:System.Collections.IDictionary>коллекцию пар &quot;имя значение&quot;, совпадают с именами в сигнатуре метода и передается по ссылке.</xref:System.Collections.IDictionary>"
  syntax:
    content: public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);
    parameters:
    - id: returnValue
      type: System.Object
      description: "Объект, представляющий возвращаемое значение для завершенной операции базы данных."
    - id: outputParameters
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Пар &quot;имя значение&quot; объектов параметров.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  id: '#ctor(System.Object,System.Collections.IDictionary,System.Exception)'
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> класса с помощью указанного выходных параметров, возвращаемых значений и исключений."
  remarks: "`returnValue` Параметр может быть любой объект, возвращенный вызовом в метод бизнес-объекта данных. `outputParameters` Параметр <xref:System.Collections.IDictionary>коллекцию пар &quot;имя значение&quot;, совпадают с именами в сигнатуре метода и передается по ссылке.</xref:System.Collections.IDictionary> `exception` Параметр <xref:System.Exception>исключение, которое создает оболочку для всех исключений, которые вызываются методом, который вызывается методом <xref:System.Web.UI.WebControls.ObjectDataSource>элемента управления во время операции с данными.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Exception> Если исключение не обработано <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, или <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>метод, он вызывается <xref:System.Web.UI.WebControls.ObjectDataSource>управления после возвращения операции данных.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>"
  syntax:
    content: public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);
    parameters:
    - id: returnValue
      type: System.Object
      description: "Объект, представляющий возвращаемое значение для завершенной операции базы данных."
    - id: outputParameters
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Пар &quot;имя значение&quot; объектов параметров.</xref:System.Collections.IDictionary>"
    - id: exception
      type: System.Exception
      description: "<xref:System.Exception>Все внутренние исключения, возникшие во время вызова метода-оболочки.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает число строк, затронутых операцией с данными."
  remarks: "Позволяет убедиться, что ожидаемое количество строк, на которые влияет значение AffectedRows."
  syntax:
    content: public int AffectedRows { get; set; }
    return:
      type: System.Int32
      description: "Число строк, затронутых операцией данных."
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает программу-оболочку для всех исключений, которые вызываются методом, который вызывается методом <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> управления во время операции с данными."
  remarks: "<xref:System.Exception>Исключение не представляет фактическое исключение создается методом бизнес-объекта данных.</xref:System.Exception> Можно использовать <xref:System.Exception.InnerException%2A>свойство для доступа к созданного исключения.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection.  \n  \n In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to perform any exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see the class overview in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_143_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>Исключения, вызываемые бизнес-объекта в его <xref:System.Exception.InnerException*>.</xref:System.Exception.InnerException*> -оболочки</xref:System.Exception>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает значение, указывающее, был ли обработан исключение, выданное с бизнес-объекта."
  remarks: "Если бизнес-объекта, вызывает исключение, значение свойства ExceptionHandled `false` и помещается в оболочку исключение <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>свойство.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>объекта, вы можете проверить <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>свойство и обработать исключение.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> Если вы обработки исключения, задайте свойства ExceptionHandled `true` или <xref:System.Web.UI.WebControls.ObjectDataSource>управления будет создано исключение.</xref:System.Web.UI.WebControls.ObjectDataSource>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> action has completed, to handle any exceptions that might have occurred. In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see the class overview in <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1019_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1019_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если исключение, вызванное бизнес-объекта было обработано и не должно вызываться по <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  id: OutputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает коллекцию, содержащую метод параметрам бизнес-объектов и их значения."
  remarks: "В коллекции выходные параметры возвращаются все параметры, которые передаются в метод бизнес-объекта по ссылке."
  syntax:
    content: public System.Collections.IDictionary OutputParameters { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Пар &quot;имя значение&quot;, представляющих параметрам метода бизнес-объектов и их значений.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  id: ReturnValue
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  langs:
  - csharp
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Получает возвращаемое значение, возвращаемое методом бизнес-объекта, в том случае, если есть, в качестве объекта."
  remarks: "Свойство ReturnValue задается в <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>конструктор.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Значение равно возвращаемое значение вызова метода объекта бизнеса, который вызывается с помощью отражения. Если бизнес-метод не возвращает значения (например, когда метод бизнес-объекта возвращает `void`), свойству ReturnValue равняется `null`."
  syntax:
    content: public object ReturnValue { get; }
    return:
      type: System.Object
      description: "Объект, представляющий значение, возвращаемое методом бизнес-объекта; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если метод бизнес-объекта не возвращает значения."
  overload: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs(Object,IDictionary,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: ObjectDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: ObjectDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: ObjectDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: OutputParameters
  nameWithType: ObjectDataSourceStatusEventArgs.OutputParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue*
  parent: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: ObjectDataSourceStatusEventArgs.ReturnValue
