### YamlMime:ManagedReference
items:
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute
  id: SuppressUnmanagedCodeSecurityAttribute
  children:
  - System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute
  type: Class
  summary: "Позволяет управляемому коду вызывать неуправляемый код без обхода стека. Этот класс не наследуется."
  remarks: "> [!CAUTION]Настроек этот атрибут используется с особой осторожностью. Неправильное использование может создать уязвимости безопасности.       Этот атрибут может применяться к методам, которые необходимо вызывать в машинном коде без потерь производительности, проверку безопасности во время выполнения при этом. Проверка стека, выполняемая при вызове неуправляемого кода пропущено во время выполнения приведет к значительно повышает быстродействие. С помощью этого атрибута в классе применяет все методы класса.       Как правило, каждый раз, когда управляемый код вызывает неуправляемый код (с помощью взаимодействия PInvoke или COM с машинным кодом), есть требование `UnmanagedCode` разрешения, чтобы все вызывающие объекты имеют необходимое разрешение для этого. Применяя этот явный атрибут, разработчики могут отключить это требование во время выполнения. Разработчик должен отвечать за чтобы удостовериться, что переход к неуправляемому коду надежно защищен другими способами. Потребность в `UnmanagedCode` разрешение по-прежнему будет возникать во время компоновки. Например если функция A вызывает функцию B, а функция B помечена атрибутом SuppressUnmanagedCodeSecurityAttribute, функция A проверяются на разрешение неуправляемого кода во время компиляции just-in-time, но не во время выполнения.       Этот атрибут действует только при применении к методам PInvoke (или классов, содержащих методы PInvoke) либо при определении интерфейса, через который будет осуществляться взаимодействие вызовов. Оно будет игнорироваться во всех других контекстах.       Этот атрибут полезен при реализации класса, который предоставляет доступ к системным ресурсам посредством неуправляемого кода. Код, который не имеет разрешения на доступ к неуправляемому коду, может вызывать класс с этим атрибутом для доступа к неуправляемому коду. Это только безопасным, если модуль записи класса с этим атрибутом, обеспечил безопасность класса. В противном случае этот атрибут является опасной операцией и может разрешить код, который использует его для неправильного использования.       Это не атрибутом декларативной безопасности, а обычным атрибутом (он является производным от <xref:System.Attribute>, а не <xref:System.Security.Permissions.SecurityAttribute>).</xref:System.Security.Permissions.SecurityAttribute> </xref:System.Attribute>"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  id: '#ctor'
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.SuppressUnmanagedCodeSecurityAttribute&quot;> </xref> класса."
  remarks: "Конструктор по умолчанию инициализирует все поля значениями по умолчанию."
  syntax:
    content: public SuppressUnmanagedCodeSecurityAttribute ();
    parameters: []
  overload: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute
