### YamlMime:ManagedReference
items:
- uid: System.Configuration.SectionInformation
  id: SectionInformation
  children:
  - System.Configuration.SectionInformation.AllowDefinition
  - System.Configuration.SectionInformation.AllowExeDefinition
  - System.Configuration.SectionInformation.AllowLocation
  - System.Configuration.SectionInformation.AllowOverride
  - System.Configuration.SectionInformation.ConfigSource
  - System.Configuration.SectionInformation.ForceDeclaration
  - System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  - System.Configuration.SectionInformation.ForceSave
  - System.Configuration.SectionInformation.GetParentSection
  - System.Configuration.SectionInformation.GetRawXml
  - System.Configuration.SectionInformation.InheritInChildApplications
  - System.Configuration.SectionInformation.IsDeclarationRequired
  - System.Configuration.SectionInformation.IsDeclared
  - System.Configuration.SectionInformation.IsLocked
  - System.Configuration.SectionInformation.IsProtected
  - System.Configuration.SectionInformation.Name
  - System.Configuration.SectionInformation.OverrideMode
  - System.Configuration.SectionInformation.OverrideModeDefault
  - System.Configuration.SectionInformation.OverrideModeEffective
  - System.Configuration.SectionInformation.ProtectionProvider
  - System.Configuration.SectionInformation.ProtectSection(System.String)
  - System.Configuration.SectionInformation.RequirePermission
  - System.Configuration.SectionInformation.RestartOnExternalChanges
  - System.Configuration.SectionInformation.RevertToParent
  - System.Configuration.SectionInformation.SectionName
  - System.Configuration.SectionInformation.SetRawXml(System.String)
  - System.Configuration.SectionInformation.Type
  - System.Configuration.SectionInformation.UnprotectSection
  langs:
  - csharp
  name: SectionInformation
  nameWithType: SectionInformation
  fullName: System.Configuration.SectionInformation
  type: Class
  summary: "Содержит метаданные об отдельном разделе в пределах иерархии конфигурации. Этот класс не наследуется."
  remarks: "Объект SectionInformation содержит метаданные об отдельном разделе в пределах иерархии конфигурации. Этот объект можно использовать для проверки и изменения свойств отдельного раздела."
  example:
  - "The following example shows how to get the SectionInformation metadata that is associated with a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#91](~/add/codesnippet/visualbasic/t-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#91](~/add/codesnippet/csharp/t-system.configuration.s_2_1.cs)]  \n  \n The following example is an excerpt of the configuration file that is used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  <configSections>  \n    <section name=\"MyUrls\" type=\"Samples.AspNet.UrlsSection,  \n      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  \n      PublicKeyToken=null\" allowDefinition=\"Everywhere\"  \n      allowExeDefinition=\"MachineToApplication\"  \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  <MyUrls name=\"MyFavorites\">  \n    <simple name=\"Contoso\" url=\"http://www.contoso.com\" port=\"8080\" />  \n    <urls>  \n      <clear />  \n      <add name=\"Microsoft\" url=\"http://www.microsoft.com\" port=\"0\" />  \n    </urls>  \n  </MyUrls>  \n</configuration>  \n```"
  syntax:
    content: public sealed class SectionInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowDefinition
  id: AllowDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, где в иерархии файлов конфигурации, в котором можно определить связанный раздел конфигурации."
  remarks: "AllowDefinition применяется только к файлам конфигурации веб-приложений. Для клиентских приложений необходимо использовать <xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowExeDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_17_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_17_1.cs)]  \n  \n The following example gets the AllowDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#96](~/add/codesnippet/visualbasic/p-system.configuration.s_17_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#96](~/add/codesnippet/csharp/p-system.configuration.s_17_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowDefinition
      description: "Значение, указывающее, где в конфигурации связанного файла иерархии <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта может быть объявлен."
  overload: System.Configuration.SectionInformation.AllowDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  id: AllowExeDefinition
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, где в иерархии файлов конфигурации можно объявить связанный раздел конфигурации."
  remarks: "AllowExeDefinition применяется только к файлам конфигурации для клиентских приложений. Для веб-приложений необходимо использовать <xref:System.Configuration.SectionInformation.AllowDefinition%2A>.</xref:System.Configuration.SectionInformation.AllowDefinition%2A>"
  example:
  - "The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_18_1.cs)]  \n  \n The following example gets the AllowExeDefinition value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#97](~/add/codesnippet/visualbasic/p-system.configuration.s_18_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#97](~/add/codesnippet/csharp/p-system.configuration.s_18_2.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }
    return:
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "Значение, указывающее, где в конфигурации связанного файла иерархии <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта могут быть объявлены для файлов .exe."
  overload: System.Configuration.SectionInformation.AllowExeDefinition*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowLocation
  id: AllowLocation
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, допускает ли раздел конфигурации <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> атрибута."
  remarks: "Если задано значение `false`, свойство AllowLocation указывает, что раздел осуществляется средствами чтения машинного кода. Таким образом, использование `location` атрибут не допускается, поскольку считыватели машинного кода не поддерживают концепцию `location`."
  example:
  - "The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_6_1.cs)]  \n  \n The following example gets the AllowLocation value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#98](~/add/codesnippet/visualbasic/p-system.configuration.s_6_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#98](~/add/codesnippet/csharp/p-system.configuration.s_6_2.cs)]"
  syntax:
    content: public bool AllowLocation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref uid=&quot;langword_csharp_location&quot; name=&quot;location&quot; href=&quot;&quot;> </xref> атрибут разрешено; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowLocation*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.AllowOverride
  id: AllowOverride
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, могут ли быть переопределены связанного раздела конфигурации в файлах конфигурации более низкого уровня."
  remarks: ''
  example:
  - "The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#95](~/add/codesnippet/visualbasic/p-system.configuration.s_16_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#95](~/add/codesnippet/csharp/p-system.configuration.s_16_1.cs)]  \n  \n The following example gets the AllowOverride value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#99](~/add/codesnippet/visualbasic/p-system.configuration.s_16_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#99](~/add/codesnippet/csharp/p-system.configuration.s_16_2.cs)]"
  syntax:
    content: public bool AllowOverride { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если раздел может быть переопределен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.AllowOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ConfigSource
  id: ConfigSource
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает имя включаемого файла, в котором определен связанный раздел конфигурации, если такой файл существует."
  remarks: "ConfigSource свойство представляет значение `configSource` , указанный для атрибута <xref:System.Configuration.ConfigurationSection>объекта, с которым связан <xref:System.Configuration.SectionInformation>объекта.</xref:System.Configuration.SectionInformation> </xref:System.Configuration.ConfigurationSection>       Объект <xref:System.Configuration.ConfigurationSection>реализации при необходимости можно указать отдельный файл, в котором определяются параметры конфигурации для этого раздела.</xref:System.Configuration.ConfigurationSection> Это может быть полезно несколькими способами:-использование включаемых файлов может привести к более логических и модульную структуру для файлов конфигурации.      -Безопасность доступа к файлам и разрешения можно использовать для ограничения доступа к разделам параметров конфигурации.      -Параметры во включаемом файле, которые не используются во время инициализации приложения можно изменить и перезагружена без перезапуска приложения.       В следующем примере показано, как этот атрибут используется в файле конфигурации, чтобы указать, что `pages` определенный раздел в файл включения внешних: `<pages configSource=&quot;pages.config&quot;/>` Если какие-либо параметры в конфигурацию включен файл требуют перезапуска при их изменении приложения задать <xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>Свойства `true`.</xref:System.Configuration.SectionInformation.RestartOnExternalChanges%2A>       В приложениях ASP.NET во время выполнения можно назначить свойству ConfigSource имя файла альтернативная конфигурация. В этом случае содержимое файла перезаписывается по умолчанию строку подключения, содержащиеся в файле Web.config. Это также происходит, если альтернативный файл не существует, и создается во время выполнения. Если файл Web.config содержит все данные строки подключения, в альтернативный файл добавляется пустой раздел &quot;&quot;."
  syntax:
    content: public string ConfigSource { get; set; }
    return:
      type: System.String
      description: "Имя включаемого файла, в котором связанный <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> определяется, если такой файл существует; в противном случае — пустая строка (»»)."
  overload: System.Configuration.SectionInformation.ConfigSource*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Заставляет связанный раздел конфигурации в файле конфигурации."
  remarks: "Метод ForceDeclaration принудительно это <xref:System.Configuration.SectionInformation>объявление для записи в файл конфигурации.</xref:System.Configuration.SectionInformation>      Настроек [!NOTE] настроек ForceDeclaration метод может вызвать <xref:System.Configuration.SectionInformation>объявление для записи в файл конфигурации, даже если раздел не является обязательным, так как он уже объявлен в родительском файле.</xref:System.Configuration.SectionInformation> С помощью метода ForceDeclaration можно сделать файл конфигурации более переносимыми с одного компьютера на другой. Это дает возможность убедитесь в том, что раздел существует, даже при отсутствии контроль над родительских файлов конфигурации."
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Заставляет связанный раздел конфигурации в файле конфигурации или удаляет существующий раздел из файла конфигурации."
  remarks: "Метод ForceDeclaration принудительно это <xref:System.Configuration.SectionInformation>записывается в файл конфигурации, если объявление `force` — `true`.</xref:System.Configuration.SectionInformation> Если `force` — `false`, это действие может быть проигнорирован, если <xref:System.Configuration.SectionInformation>объявление, требуемый системой.</xref:System.Configuration.SectionInformation>      Настроек [!NOTE] настроек ForceDeclaration метод может вызвать <xref:System.Configuration.SectionInformation>объявление для записи в файл конфигурации, даже если в этом разделе не требуется, так как он уже объявлен в родительском файле.</xref:System.Configuration.SectionInformation> С помощью <xref:System.Configuration.SectionInformation.ForceDeclaration%2A>метода можно сделать более переносимыми, с одного компьютера на другой файл конфигурации.</xref:System.Configuration.SectionInformation.ForceDeclaration%2A> Это также позволяет убедиться, что раздел существует, даже если вы не можете контролировать родительских файлов конфигурации."
  example:
  - "The following example shows how to use the ForceDeclaration method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#113](~/add/codesnippet/visualbasic/m-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#113](~/add/codesnippet/csharp/m-system.configuration.s_0_1.cs)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанный раздел должен быть записан в файл конфигурации; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.ForceDeclaration*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>force</code>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и связанный раздел не может быть экспортирован в файл конфигурации дочерний, или он не объявлен."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ForceSave
  id: ForceSave
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, является ли связанный раздел конфигурации будут сохранены, даже если он не был изменен."
  remarks: ''
  example:
  - "The following example shows how to use the ForceSave property of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-cs[System.Configuration.ConfigurationElement#1](~/add/codesnippet/csharp/p-system.configuration.s_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationElement#1](~/add/codesnippet/visualbasic/p-system.configuration.s_7_1.vb)]"
  syntax:
    content: public bool ForceSave { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанный <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объект будет сохранен, даже если он не был изменен; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       <div class=&quot;alert NOTE&quot;>    Если файл конфигурации сохраняется (даже если отсутствуют какие-либо изменения), ASP.NET перезапускает приложение.      </div>"
  overload: System.Configuration.SectionInformation.ForceSave*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetParentSection
  id: GetParentSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает раздел конфигурации, содержащий раздел конфигурации, связанный с данным объектом."
  remarks: "Если этот <xref:System.Configuration.ConfigurationSection>объект не содержит родительских разделов, метод GetParentSection возвращает то же значение, что <xref:System.Configuration.SectionInformation.Name%2A>свойство.</xref:System.Configuration.SectionInformation.Name%2A> </xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to use the GetParentSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#92](~/add/codesnippet/visualbasic/m-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#92](~/add/codesnippet/csharp/m-system.configuration.s_5_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationSection GetParentSection ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationSection
      description: "Раздел конфигурации, содержащий <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> , связанного с данным <xref href=&quot;System.Configuration.SectionInformation&quot;> </xref> объекта."
  overload: System.Configuration.SectionInformation.GetParentSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод вызывается из родительского раздела."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.GetRawXml
  id: GetRawXml
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает объект узла XML, который представляет объект связанного раздела конфигурации."
  remarks: ''
  example:
  - "The following example shows how to use the GetRawXml method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#93](~/add/codesnippet/visualbasic/m-system.configuration.s_4_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#93](~/add/codesnippet/csharp/m-system.configuration.s_4_1.cs)]"
  syntax:
    content: public string GetRawXml ();
    parameters: []
    return:
      type: System.String
      description: "XML-представление для данного раздела конфигурации."
  overload: System.Configuration.SectionInformation.GetRawXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Этот объект конфигурации заблокирован и не может быть изменен."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  id: InheritInChildApplications
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, наследуется ли параметры, заданные в связанный раздел конфигурации приложения, находящиеся в подкаталоге соответствующего приложения."
  remarks: "Представляет свойство InheritInChildApplications `inheritInChildApplications`атрибут `location` элемент в файле конфигурации.       Значение InheritInChildApplications `false` для предотвращения параметры, заданные определенное расположение (например, корневой каталог веб-сайта), от наследования приложений, имеющихся в подкаталогах.       В следующем примере показано, как этот атрибут используется в файле конфигурации, чтобы указать, что параметры, определенные в элементе расположения для корневого веб-сайта не должен наследоваться дочерними приложениями: `<location path=&quot;.&quot; inheritInChildApplications=&quot;false&quot;>` InheritInChildApplications свойство применяется только к расположения параметров конфигурации."
  example:
  - "The following example shows how to get the InheritInChildApplications value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#100](~/add/codesnippet/visualbasic/p-system.configuration.s_13_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#100](~/add/codesnippet/csharp/p-system.configuration.s_13_1.cs)]"
  syntax:
    content: public bool InheritInChildApplications { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если параметры, указанные в этом <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта наследуются дочерними приложениями; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.InheritInChildApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, должны ли быть объявлены в файле конфигурации раздел конфигурации."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_0_1.cs)]  \n  \n The following example gets the IsDeclarationRequired value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#103](~/add/codesnippet/visualbasic/p-system.configuration.s_0_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#103](~/add/codesnippet/csharp/p-system.configuration.s_0_2.cs)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связанный <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта должно быть объявлено в файле конфигурации; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclarationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsDeclared
  id: IsDeclared
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, объявлено ли связанный раздел конфигурации в файле конфигурации."
  remarks: ''
  example:
  - "The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_2_1.cs)]  \n  \n The following example gets the IsDeclared value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#104](~/add/codesnippet/visualbasic/p-system.configuration.s_2_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#104](~/add/codesnippet/csharp/p-system.configuration.s_2_2.cs)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объявлено в файле конфигурации; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsDeclared*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsLocked
  id: IsLocked
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, заблокирован ли связанный раздел конфигурации."
  remarks: "Это свойство возвращает IsLocked `true` при блокировке соответствующий раздел по <xref:System.Configuration.SectionInformation.AllowOverride%2A>или <xref:System.Configuration.SectionInformation.AllowDefinition%2A>свойство.</xref:System.Configuration.SectionInformation.AllowDefinition%2A> </xref:System.Configuration.SectionInformation.AllowOverride%2A> При переопределении или определен в файле конфигурации, раздел будет заблокирована."
  example:
  - "The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_5_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_5_1.cs)]  \n  \n The following example gets the IsLocked value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#105](~/add/codesnippet/visualbasic/p-system.configuration.s_5_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#105](~/add/codesnippet/csharp/p-system.configuration.s_5_2.cs)]"
  syntax:
    content: public bool IsLocked { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если раздел заблокирован; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsLocked*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.IsProtected
  id: IsProtected
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, защищен ли связанный раздел конфигурации."
  remarks: "Защищенные разделы конфигурации зашифровано и только для чтения.       Дополнительные сведения о защищенных разделах конфигурации см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  \n  \n The following example gets the <xref:System.Configuration.SectionInformation> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#102](~/add/codesnippet/visualbasic/p-system.configuration.s_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#102](~/add/codesnippet/csharp/p-system.configuration.s_14_1.cs)]  \n  \n The following example gets the IsProtected value.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#106](~/add/codesnippet/visualbasic/p-system.configuration.s_14_2.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#106](~/add/codesnippet/csharp/p-system.configuration.s_14_2.cs)]"
  syntax:
    content: public bool IsProtected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> защищен; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.IsProtected*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Name
  id: Name
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает имя связанного раздела конфигурации."
  remarks: "Имя — имя раздела, без пути."
  example:
  - "The following example shows how to get the Name value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#107](~/add/codesnippet/visualbasic/p-system.configuration.s_9_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#107](~/add/codesnippet/csharp/p-system.configuration.s_9_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Полное имя раздела конфигурации."
  overload: System.Configuration.SectionInformation.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideMode
  id: OverrideMode
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> значение перечисления, указывающее, может ли связанный раздел конфигурации быть переопределена дочерними файлами конфигурации."
  remarks: "<xref:System.Configuration.SectionInformation.AllowOverride%2A>Возвращает или задает значение, указывающее, объявлено ли ресурсы внутри `location` элемент может быть переопределено дочерних файлов конфигурации.</xref:System.Configuration.SectionInformation.AllowOverride%2A> Свойство OverrideMode Возвращает или задает значение, которое определяет поведение, но делает это для конкретного элемента конфигурации или группы и использует один из <xref:System.Configuration.OverrideMode>значений перечисления.</xref:System.Configuration.OverrideMode> Свойство OverrideMode включает поведение наследуется от родительского элемента.       Невозможно задать программным образом и <xref:System.Configuration.SectionInformation.AllowOverride%2A>и свойство OverrideMode.</xref:System.Configuration.SectionInformation.AllowOverride%2A> Параметр <xref:System.Configuration.SectionInformation.AllowOverride%2A>Свойства `true` задает свойство OverrideMode <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.SectionInformation.AllowOverride%2A> Параметр <xref:System.Configuration.SectionInformation.AllowOverride%2A>Свойства `false` задает для свойства OverrideMode `false`.</xref:System.Configuration.SectionInformation.AllowOverride%2A>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideMode { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Один из <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> значений перечисления."
  overload: System.Configuration.SectionInformation.OverrideMode*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Была предпринята попытка изменить обе <xref:System.Configuration.SectionInformation.AllowOverride*>и OverrideMode свойства, которые не поддерживается для обеспечения совместимости.</xref:System.Configuration.SectionInformation.AllowOverride*>"
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  id: OverrideModeDefault
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее поведение раздела конфигурации дочерними файлами конфигурации переопределить значение по умолчанию."
  remarks: "Свойство OverrideModeDefault раздел конфигурации может устанавливаться только <xref:System.Configuration.OverrideMode>или <xref:System.Configuration.OverrideMode>значение <xref:System.Configuration.OverrideMode>перечисления.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode> Для свойства OverrideModeDefault значение <xref:System.Configuration.OverrideMode>эквивалентно установке значения для <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeDefault { get; set; }
    return:
      type: System.Configuration.OverrideMode
      description: "Один из <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> значений перечисления."
  overload: System.Configuration.SectionInformation.OverrideModeDefault*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Преобразованное поведение указано в родительском разделе конфигурации."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  id: OverrideModeEffective
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Получает поведение переопределения раздела конфигурации, который в свою очередь основан на ли дочерние файлы конфигурации блокировать раздел конфигурации."
  remarks: "Это свойство возвращает либо <xref:System.Configuration.OverrideMode>или <xref:System.Configuration.OverrideMode>.</xref:System.Configuration.OverrideMode> </xref:System.Configuration.OverrideMode>"
  syntax:
    content: public System.Configuration.OverrideMode OverrideModeEffective { get; }
    return:
      type: System.Configuration.OverrideMode
      description: "Один из <xref href=&quot;System.Configuration.OverrideMode&quot;> </xref> значений перечисления."
  overload: System.Configuration.SectionInformation.OverrideModeEffective*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectionProvider
  id: ProtectionProvider
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Получает поставщик защищенной конфигурации для связанного раздела конфигурации."
  remarks: "Для незащищенных разделах свойство ProtectionProvider `null`.       Дополнительные сведения о защищенных разделах конфигурации см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to get the <xref:System.Configuration.SectionInformation.ProtectSection%2A> value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#108](~/add/codesnippet/visualbasic/p-system.configuration.s_11_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#108](~/add/codesnippet/csharp/p-system.configuration.s_11_1.cs)]"
  syntax:
    content: public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }
    return:
      type: System.Configuration.ProtectedConfigurationProvider
      description: "Поставщик защищенной конфигурации для этого <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта."
  overload: System.Configuration.SectionInformation.ProtectionProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  id: ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Отмечает раздел конфигурации для защиты."
  remarks: "Метод ProtectSection отмечает раздел для шифрования, поэтому она будет записана в зашифрованном виде на диске.       По умолчанию включены следующие поставщики защиты: <xref:System.Configuration.DpapiProtectedConfigurationProvider> <xref:System.Configuration.RsaProtectedConfigurationProvider>настроек [!NOTE] настроек при вызове метода ProtectSection с `null` параметра или является пустой строкой, <xref:System.Configuration.RsaProtectedConfigurationProvider>класс используется как поставщик защиты.</xref:System.Configuration.RsaProtectedConfigurationProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider>       </xref:System.Configuration.DpapiProtectedConfigurationProvider>       Дополнительные сведения о защищенных разделах конфигурации см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the ProtectSection method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#94](~/add/codesnippet/visualbasic/m-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#94](~/add/codesnippet/csharp/m-system.configuration.s_3_1.cs)]"
  syntax:
    content: public void ProtectSection (string protectionProvider);
    parameters:
    - id: protectionProvider
      type: System.String
      description: "Имя поставщика защиты."
  overload: System.Configuration.SectionInformation.ProtectSection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Configuration.SectionInformation.AllowLocation*> property is set to <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The target section is already a protected data section."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RequirePermission
  id: RequirePermission
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает значение, указывающее, является ли связанный раздел конфигурации требует разрешений на доступ."
  remarks: "Если значение RequirePermission `true`, `GetSection` методы ограничены параметр уровня доверия приложения. Это означает, что методы или свойства, предоставляющие доступ к обработчики разделов конфигурации ограничены уровня доверия для веб-приложения.      Настроек [!NOTE] настроек из-за высокого и полного доверия являются единственными уровнями, разрешить доступ к файлам за пределами текущего домена приложения, приложение может использовать обработчики разделов конфигурации только на этих уровнях доверия.       Если значение RequirePermission `false`, доступ к данным конфигурации не ограничивается значениях параметров уровней доверия приложения.      Настроек [!NOTE] настроек разрешения ACL (список управления доступом) на соответствующие файлы по-прежнему необходимы, независимо от параметра RequirePermission. Разрешения списка управления Доступом определяют, кто имеет доступ к файлу конфигурации."
  example:
  - "The following example shows two possible trust levels for a Web application when the RequirePermission property of the `appSettings` section is `true`.  \n  \n```  \n<system.web>  \n   // With the following trust value   \n   // the code below works.  \n  <trust level=\"Full\" />  \n</system.web>  \n  \n<system.web>  \n  // With the following trust value   \n  // the code below does not work.  \n  <trust level=\"Medium\" />  \n</system.web>  \n```  \n  \n The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  \n  \n```c#  \nAppSettingsSection apSection =   \n  ConfigurationManager.GetSection(\"appSettings\") as AppSettingsSection;  \n  \nNameValueCollection apSectionCollection =  \n  ConfigurationManager.AppSettings;  \n```  \n  \n```vb#  \nDim apSection As AppSettingsSection = _   \n  TryCast(ConfigurationManager.GetSection(\"appSettings\"),   \n    AppSettingsSection)  \n  \n  Dim apSectionCollection As NameValueCollection = _   \n    ConfigurationManager.AppSettings  \n```"
  syntax:
    content: public bool RequirePermission { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref uid=&quot;langword_csharp_requirePermission&quot; name=&quot;requirePermission&quot; href=&quot;&quot;> </xref> атрибута задано значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RequirePermission*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  id: RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает значение, определяющее, следует ли изменения в конфигурации внешнего файла требуется перезапуск приложения."
  remarks: "Присвойте свойству RestartOnExternalChanges `false` во избежание перезапуск приложения при изменении параметров конфигурации в файл внешнего включения для данного <xref:System.Configuration.ConfigurationSection>объекта.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the RestartOnExternalChanges property value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#109](~/add/codesnippet/visualbasic/p-system.configuration.s_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#109](~/add/codesnippet/csharp/p-system.configuration.s_1_1.cs)]"
  syntax:
    content: public bool RestartOnExternalChanges { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если изменения в конфигурации внешнего включен файл требуется перезапуск приложения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SectionInformation.RestartOnExternalChanges*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.RevertToParent
  id: RevertToParent
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Вызывает связанный раздел конфигурации наследовать все значения из родительского раздела."
  syntax:
    content: public void RevertToParent ();
    parameters: []
  overload: System.Configuration.SectionInformation.RevertToParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Этот метод не может вызываться вне режима редактирования."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SectionName
  id: SectionName
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает имя связанного раздела конфигурации."
  remarks: "Значение свойства SectionName является имя весь раздел, которое включает конфигурации иерархии наследования."
  example:
  - "The following example shows how to get the SectionName value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#110](~/add/codesnippet/visualbasic/p-system.configuration.s_10_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#110](~/add/codesnippet/csharp/p-system.configuration.s_10_1.cs)]"
  syntax:
    content: public string SectionName { get; }
    return:
      type: System.String
      description: "Имя связанного <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> объекта."
  overload: System.Configuration.SectionInformation.SectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  id: SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Задает объект для XML-представление связанного раздела конфигурации в файле конфигурации."
  syntax:
    content: public void SetRawXml (string rawXml);
    parameters:
    - id: rawXml
      type: System.String
      description: "XML для использования."
  overload: System.Configuration.SectionInformation.SetRawXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawXml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.Type
  id: Type
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Возвращает или задает имя класса раздела."
  remarks: "Свойство Type возвращает имя класса раздела, который управляет этот экземпляр <xref:System.Configuration.ConfigurationSection>класса.</xref:System.Configuration.ConfigurationSection>"
  example:
  - "The following example shows how to get the Type value of a <xref:System.Configuration.ConfigurationSection> object.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#111](~/add/codesnippet/visualbasic/p-system.configuration.s_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#111](~/add/codesnippet/csharp/p-system.configuration.s_3_1.cs)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: "Имя класса, который связан с этим <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref> раздела."
  overload: System.Configuration.SectionInformation.Type*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Выбранное значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (»»)."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Выбранное значение противоречит значение, которое уже определено."
  platform:
  - net462
- uid: System.Configuration.SectionInformation.UnprotectSection
  id: UnprotectSection
  parent: System.Configuration.SectionInformation
  langs:
  - csharp
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Удаляет шифрование защищенной конфигурации из связанного раздела конфигурации."
  remarks: "Дополнительные сведения о защищенных разделах конфигурации см. в разделе [шифрование конфигурации сведения с помощью защищенной конфигурации](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use this method.  \n  \n [!code-vb[System.Configuration.ConfigurationElement#112](~/add/codesnippet/visualbasic/m-system.configuration.s_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElement#112](~/add/codesnippet/csharp/m-system.configuration.s_6_1.cs)]"
  syntax:
    content: public void UnprotectSection ();
    parameters: []
  overload: System.Configuration.SectionInformation.UnprotectSection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SectionInformation.AllowDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
  fullName: System.Configuration.SectionInformation.AllowDefinition
- uid: System.Configuration.ConfigurationAllowDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowDefinition
  nameWithType: ConfigurationAllowDefinition
  fullName: System.Configuration.ConfigurationAllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
  fullName: System.Configuration.SectionInformation.AllowExeDefinition
- uid: System.Configuration.ConfigurationAllowExeDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowExeDefinition
  nameWithType: ConfigurationAllowExeDefinition
  fullName: System.Configuration.ConfigurationAllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
  fullName: System.Configuration.SectionInformation.AllowLocation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SectionInformation.AllowOverride
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
  fullName: System.Configuration.SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
  fullName: System.Configuration.SectionInformation.ConfigSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SectionInformation.ForceDeclaration
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration()
  nameWithType: SectionInformation.ForceDeclaration()
  fullName: System.Configuration.SectionInformation.ForceDeclaration()
- uid: System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: SectionInformation.ForceDeclaration(Boolean)
  fullName: System.Configuration.SectionInformation.ForceDeclaration(Boolean)
- uid: System.Configuration.SectionInformation.ForceSave
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
  fullName: System.Configuration.SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection()
  nameWithType: SectionInformation.GetParentSection()
  fullName: System.Configuration.SectionInformation.GetParentSection()
- uid: System.Configuration.ConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
- uid: System.Configuration.SectionInformation.GetRawXml
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml()
  nameWithType: SectionInformation.GetRawXml()
  fullName: System.Configuration.SectionInformation.GetRawXml()
- uid: System.Configuration.SectionInformation.InheritInChildApplications
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
  fullName: System.Configuration.SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
  fullName: System.Configuration.SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
  fullName: System.Configuration.SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
  fullName: System.Configuration.SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
  fullName: System.Configuration.SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
  fullName: System.Configuration.SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
  fullName: System.Configuration.SectionInformation.OverrideMode
- uid: System.Configuration.OverrideMode
  parent: System.Configuration
  isExternal: false
  name: OverrideMode
  nameWithType: OverrideMode
  fullName: System.Configuration.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
  fullName: System.Configuration.SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
  fullName: System.Configuration.SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
  fullName: System.Configuration.SectionInformation.ProtectionProvider
- uid: System.Configuration.ProtectedConfigurationProvider
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
- uid: System.Configuration.SectionInformation.ProtectSection(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection(String)
  nameWithType: SectionInformation.ProtectSection(String)
  fullName: System.Configuration.SectionInformation.ProtectSection(String)
- uid: System.Configuration.SectionInformation.RequirePermission
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
  fullName: System.Configuration.SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
  fullName: System.Configuration.SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent()
  nameWithType: SectionInformation.RevertToParent()
  fullName: System.Configuration.SectionInformation.RevertToParent()
- uid: System.Configuration.SectionInformation.SectionName
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
  fullName: System.Configuration.SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml(System.String)
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml(String)
  nameWithType: SectionInformation.SetRawXml(String)
  fullName: System.Configuration.SectionInformation.SetRawXml(String)
- uid: System.Configuration.SectionInformation.Type
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
  fullName: System.Configuration.SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection()
  nameWithType: SectionInformation.UnprotectSection()
  fullName: System.Configuration.SectionInformation.UnprotectSection()
- uid: System.Configuration.SectionInformation.AllowDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowDefinition
  nameWithType: SectionInformation.AllowDefinition
- uid: System.Configuration.SectionInformation.AllowExeDefinition*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowExeDefinition
  nameWithType: SectionInformation.AllowExeDefinition
- uid: System.Configuration.SectionInformation.AllowLocation*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowLocation
  nameWithType: SectionInformation.AllowLocation
- uid: System.Configuration.SectionInformation.AllowOverride*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: AllowOverride
  nameWithType: SectionInformation.AllowOverride
- uid: System.Configuration.SectionInformation.ConfigSource*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ConfigSource
  nameWithType: SectionInformation.ConfigSource
- uid: System.Configuration.SectionInformation.ForceDeclaration*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceDeclaration
  nameWithType: SectionInformation.ForceDeclaration
- uid: System.Configuration.SectionInformation.ForceSave*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ForceSave
  nameWithType: SectionInformation.ForceSave
- uid: System.Configuration.SectionInformation.GetParentSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetParentSection
  nameWithType: SectionInformation.GetParentSection
- uid: System.Configuration.SectionInformation.GetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: GetRawXml
  nameWithType: SectionInformation.GetRawXml
- uid: System.Configuration.SectionInformation.InheritInChildApplications*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: InheritInChildApplications
  nameWithType: SectionInformation.InheritInChildApplications
- uid: System.Configuration.SectionInformation.IsDeclarationRequired*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: SectionInformation.IsDeclarationRequired
- uid: System.Configuration.SectionInformation.IsDeclared*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsDeclared
  nameWithType: SectionInformation.IsDeclared
- uid: System.Configuration.SectionInformation.IsLocked*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsLocked
  nameWithType: SectionInformation.IsLocked
- uid: System.Configuration.SectionInformation.IsProtected*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: IsProtected
  nameWithType: SectionInformation.IsProtected
- uid: System.Configuration.SectionInformation.Name*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Name
  nameWithType: SectionInformation.Name
- uid: System.Configuration.SectionInformation.OverrideMode*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideMode
  nameWithType: SectionInformation.OverrideMode
- uid: System.Configuration.SectionInformation.OverrideModeDefault*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeDefault
  nameWithType: SectionInformation.OverrideModeDefault
- uid: System.Configuration.SectionInformation.OverrideModeEffective*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: OverrideModeEffective
  nameWithType: SectionInformation.OverrideModeEffective
- uid: System.Configuration.SectionInformation.ProtectionProvider*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectionProvider
  nameWithType: SectionInformation.ProtectionProvider
- uid: System.Configuration.SectionInformation.ProtectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: ProtectSection
  nameWithType: SectionInformation.ProtectSection
- uid: System.Configuration.SectionInformation.RequirePermission*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RequirePermission
  nameWithType: SectionInformation.RequirePermission
- uid: System.Configuration.SectionInformation.RestartOnExternalChanges*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RestartOnExternalChanges
  nameWithType: SectionInformation.RestartOnExternalChanges
- uid: System.Configuration.SectionInformation.RevertToParent*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: RevertToParent
  nameWithType: SectionInformation.RevertToParent
- uid: System.Configuration.SectionInformation.SectionName*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SectionName
  nameWithType: SectionInformation.SectionName
- uid: System.Configuration.SectionInformation.SetRawXml*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: SetRawXml
  nameWithType: SectionInformation.SetRawXml
- uid: System.Configuration.SectionInformation.Type*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: Type
  nameWithType: SectionInformation.Type
- uid: System.Configuration.SectionInformation.UnprotectSection*
  parent: System.Configuration.SectionInformation
  isExternal: false
  name: UnprotectSection
  nameWithType: SectionInformation.UnprotectSection
