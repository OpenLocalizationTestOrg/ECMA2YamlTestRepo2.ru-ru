### YamlMime:ManagedReference
items:
- uid: System.Windows.Thickness
  id: Thickness
  children:
  - System.Windows.Thickness.#ctor(System.Double)
  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Thickness.Bottom
  - System.Windows.Thickness.Equals(System.Object)
  - System.Windows.Thickness.Equals(System.Windows.Thickness)
  - System.Windows.Thickness.GetHashCode
  - System.Windows.Thickness.Left
  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.Right
  - System.Windows.Thickness.Top
  - System.Windows.Thickness.ToString
  langs:
  - csharp
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
  type: Struct
  summary: "Определяет толщину рамки вокруг прямоугольника. Четыре <xref:System.Double>значения описывают <> </> *настроек, <> </> *настроек, <> </> *настроек, и <> </> *настроек стороны прямоугольника, соответственно.</xref:System.Double>"
  remarks: "Толщина значений можно указать двумя способами. Если вы передаете четыре <xref:System.Double>значения в структуре, они представляют <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A>и <xref:System.Windows.Thickness.Bottom%2A>стороны, соответственно, ограничивающего прямоугольника.</xref:System.Windows.Thickness.Bottom%2A> </xref:System.Windows.Thickness.Right%2A> </xref:System.Windows.Thickness.Top%2A> </xref:System.Windows.Thickness.Left%2A> </xref:System.Double> Также может предоставлять одно значение, которое применяется ко всем четырем сторонам ограничивающего прямоугольника универсальный значение.      <a name=&quot;xamlAttributeUsage_Thickness&quot;></a>## Использование атрибута XAML ```   <object property=&quot;left&quot;/>   - or -   <object property=&quot;left,top&quot;/>   - or -   <object property=&quot; left,top,right,bottom&quot; ... />   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> ## значений XAML *левой* левого края рамки, как описано <xref:System.Double>значение, указывающее [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] мер, или как *qualifiedDouble* (см. ниже).</xref:System.Double>       Если указана единственная мера, только меры, она применяется ко всем слева, сверху, справа, снизу значения толщины. Если только указаны пару левой, верхней меры, эти меры применяются симметрично для толщины: значение слева, используемого для права; верхнее значение используется для нижней.       *Начало* верхней границей фрейма, описано, как <xref:System.Double>значение, указывающее [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] мер, или как *qualifiedDouble* (см. ниже).</xref:System.Double> Если только указаны пару левой, верхней меры, эти меры применяются симметрично для толщины: значение слева, используемого для права; верхнее значение используется для нижней.       *правый* правого края рамки, как описано <xref:System.Double>значение, указывающее [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] мер, или как *qualifiedDouble* (см. ниже).</xref:System.Double> Если не указан, будет использовать значение слева.       *нижней* нижнего края рамки, как описано <xref:System.Double>значение, указывающее [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] мер, или как *qualifiedDouble* (см. ниже).</xref:System.Double> Если не указан, будет использовать значение слева.       *qualifiedDouble* A *двойные* значение как описано выше для любых мер, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.       `px`(по умолчанию) — [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` дюймах; 1 дюйм == 96 точек `cm` сантиметрах; 1см==(96/2,54) px `pt` точках; 1точка==(96/72) px настроек [!NOTE] настроек значения не нужно указывать десятичной запятой явным образом в том случае, если задан в виде строки.        Строка «1», указанная в [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] имеет значение 1,0 в коде."
  example:
  - "The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Thickness : IEquatable<System.Windows.Thickness>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Thickness>
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуру, имеющего указанную длину универсальный с каждой стороны."
  syntax:
    content: public Thickness (double uniformLength);
    parameters:
    - id: uniformLength
      type: System.Double
      description: "Единое значение длины для всех четырех сторон ограничивающего прямоугольника."
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры, указанные значения длины (передано в качестве <xref:System.Double>) применяются к каждой стороне прямоугольника.</xref:System.Double>"
  remarks: ''
  example:
  - "The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: public Thickness (double left, double top, double right, double bottom);
    parameters:
    - id: left
      type: System.Double
      description: "Толщина левой стороны прямоугольника."
    - id: top
      type: System.Double
      description: "Толщина верхней стороны прямоугольника."
    - id: right
      type: System.Double
      description: "Толщина правой стороны прямоугольника"
    - id: bottom
      type: System.Double
      description: "Толщина нижней стороны прямоугольника."
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Bottom
  id: Bottom
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает ширину в пикселях нижней стороны обрамляющего прямоугольника."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Bottom { get; set; }
    return:
      type: System.Double
      description: "Объект <xref:System.Double>, представляющий ширину в пикселях в нижней части ограничивающий прямоугольник для этого экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> Пиксель равен 1/96 дюйма. Значение по умолчанию — 0."
  overload: System.Windows.Thickness.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает этот <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры в другую <xref:System.Object>на равенство.</xref:System.Object>"
  remarks: "Тестирование на равенство двух значений с плавающей запятой, логически эквивалентных может завершиться ошибкой из-за ошибки, если могут накапливаться, как значения с которыми совершаются операции."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два объекта равны; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  id: Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает этот <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры в другой <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры на равенство."
  remarks: "Тестирование на равенство или неравенство двух значений с плавающей запятой, логически эквивалентных может завершиться ошибкой из-за ошибки, если могут накапливаться, как значения с которыми совершаются операции."
  syntax:
    content: public bool Equals (System.Windows.Thickness thickness);
    parameters:
    - id: thickness
      type: System.Windows.Thickness
      description: "Экземпляр <xref href=&quot;System.Windows.Thickness&quot;> </xref> для сравнения на равенство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref> равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.GetHashCode
  id: GetHashCode
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает хэш-код структуры."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для этого экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref>."
  overload: System.Windows.Thickness.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Left
  id: Left
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает ширину в пикселях левой стороны обрамляющего прямоугольника."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Left { get; set; }
    return:
      type: System.Double
      description: "Объект <xref:System.Double>, представляющий ширину в пикселях левой стороны обрамляющего прямоугольника для данного экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> пиксель равен 1/96 дюйма. Значение по умолчанию — 0."
  overload: System.Windows.Thickness.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает значения двух <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры на равенство."
  remarks: "Тестирование на равенство двух значений с плавающей запятой, логически эквивалентных может завершиться ошибкой из-за ошибки, если могут накапливаться, как значения с которыми совершаются операции."
  syntax:
    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "Первая сравниваемая структура."
    - id: t2
      type: System.Windows.Thickness
      description: "Другие структуры для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref> равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает два <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры, чтобы определить их неравенство."
  remarks: "Тестирование на равенство или неравенство двух значений с плавающей запятой, логически эквивалентных может завершиться ошибкой из-за ошибки, если могут накапливаться, как значения с которыми совершаются операции."
  syntax:
    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "Первая сравниваемая структура."
    - id: t2
      type: System.Windows.Thickness
      description: "Другие структуры для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref> не равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Right
  id: Right
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает ширину в пикселях правой стороны обрамляющего прямоугольника."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Right { get; set; }
    return:
      type: System.Double
      description: "Объект <xref:System.Double>, представляющий ширину в пикселях правой стороны обрамляющего прямоугольника для данного экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> Пиксель равен 1/96 дюйма. Значение по умолчанию — 0."
  overload: System.Windows.Thickness.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Top
  id: Top
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает ширину в пикселях верхней стороны обрамляющего прямоугольника."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Top { get; set; }
    return:
      type: System.Double
      description: "Объект <xref:System.Double>, представляющий ширину в пикселях в верхней части ограничивающий прямоугольник для этого экземпляра <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> Пиксель равен 1/96 дюйма. Значение по умолчанию — 0."
  overload: System.Windows.Thickness.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.ToString
  id: ToString
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает строковое представление <xref href=&quot;System.Windows.Thickness&quot;> </xref> структуры."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Объект <xref:System.String>, представляющий <xref href=&quot;System.Windows.Thickness&quot;> </xref> значение.</xref:System.String>"
  overload: System.Windows.Thickness.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Thickness.#ctor(System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
- uid: System.Windows.Thickness.Bottom
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
- uid: System.Windows.Thickness.Equals(System.Object)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.GetHashCode
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Thickness.Left
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
- uid: System.Windows.Thickness.Right
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
- uid: System.Windows.Thickness.Top
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
- uid: System.Windows.Thickness.ToString
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Thickness.#ctor*
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness
  nameWithType: Thickness.Thickness
- uid: System.Windows.Thickness.Bottom*
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
- uid: System.Windows.Thickness.Equals*
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals
  nameWithType: Thickness.Equals
- uid: System.Windows.Thickness.GetHashCode*
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode
  nameWithType: Thickness.GetHashCode
- uid: System.Windows.Thickness.Left*
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
- uid: System.Windows.Thickness.op_Equality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality
  nameWithType: Thickness.op_Equality
- uid: System.Windows.Thickness.op_Inequality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality
  nameWithType: Thickness.op_Inequality
- uid: System.Windows.Thickness.Right*
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
- uid: System.Windows.Thickness.Top*
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
- uid: System.Windows.Thickness.ToString*
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString
  nameWithType: Thickness.ToString
