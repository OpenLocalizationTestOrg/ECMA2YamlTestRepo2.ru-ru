### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Type
  id: _Type
  children:
  - System.Runtime.InteropServices._Type.Assembly
  - System.Runtime.InteropServices._Type.AssemblyQualifiedName
  - System.Runtime.InteropServices._Type.Attributes
  - System.Runtime.InteropServices._Type.BaseType
  - System.Runtime.InteropServices._Type.DeclaringType
  - System.Runtime.InteropServices._Type.Equals(System.Object)
  - System.Runtime.InteropServices._Type.Equals(System.Type)
  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Runtime.InteropServices._Type.FullName
  - System.Runtime.InteropServices._Type.GetArrayRank
  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructors
  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.GetDefaultMembers
  - System.Runtime.InteropServices._Type.GetElementType
  - System.Runtime.InteropServices._Type.GetEvent(System.String)
  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetEvents
  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetField(System.String)
  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetFields
  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetHashCode
  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetInterface(System.String)
  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  - System.Runtime.InteropServices._Type.GetInterfaces
  - System.Runtime.InteropServices._Type.GetMember(System.String)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMembers
  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethods
  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedTypes
  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperties
  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetType
  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._Type.GUID
  - System.Runtime.InteropServices._Type.HasElementType
  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Runtime.InteropServices._Type.IsAbstract
  - System.Runtime.InteropServices._Type.IsAnsiClass
  - System.Runtime.InteropServices._Type.IsArray
  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  - System.Runtime.InteropServices._Type.IsAutoClass
  - System.Runtime.InteropServices._Type.IsAutoLayout
  - System.Runtime.InteropServices._Type.IsByRef
  - System.Runtime.InteropServices._Type.IsClass
  - System.Runtime.InteropServices._Type.IsCOMObject
  - System.Runtime.InteropServices._Type.IsContextful
  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.IsEnum
  - System.Runtime.InteropServices._Type.IsExplicitLayout
  - System.Runtime.InteropServices._Type.IsImport
  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  - System.Runtime.InteropServices._Type.IsInterface
  - System.Runtime.InteropServices._Type.IsLayoutSequential
  - System.Runtime.InteropServices._Type.IsMarshalByRef
  - System.Runtime.InteropServices._Type.IsNestedAssembly
  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  - System.Runtime.InteropServices._Type.IsNestedFamily
  - System.Runtime.InteropServices._Type.IsNestedFamORAssem
  - System.Runtime.InteropServices._Type.IsNestedPrivate
  - System.Runtime.InteropServices._Type.IsNestedPublic
  - System.Runtime.InteropServices._Type.IsNotPublic
  - System.Runtime.InteropServices._Type.IsPointer
  - System.Runtime.InteropServices._Type.IsPrimitive
  - System.Runtime.InteropServices._Type.IsPublic
  - System.Runtime.InteropServices._Type.IsSealed
  - System.Runtime.InteropServices._Type.IsSerializable
  - System.Runtime.InteropServices._Type.IsSpecialName
  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  - System.Runtime.InteropServices._Type.IsUnicodeClass
  - System.Runtime.InteropServices._Type.IsValueType
  - System.Runtime.InteropServices._Type.MemberType
  - System.Runtime.InteropServices._Type.Module
  - System.Runtime.InteropServices._Type.Name
  - System.Runtime.InteropServices._Type.Namespace
  - System.Runtime.InteropServices._Type.ReflectedType
  - System.Runtime.InteropServices._Type.ToString
  - System.Runtime.InteropServices._Type.TypeHandle
  - System.Runtime.InteropServices._Type.TypeInitializer
  - System.Runtime.InteropServices._Type.UnderlyingSystemType
  langs:
  - csharp
  name: _Type
  nameWithType: _Type
  fullName: System.Runtime.InteropServices._Type
  type: Interface
  summary: "Предоставляет открытые элементы &lt;xref:System.Type?displayProperty=fullName&gt; класса в неуправляемый код."
  remarks: "Этот интерфейс для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       Этот интерфейс сохраняет порядок таблицы vtable <xref:System.Type?displayProperty=fullName>члены класса, осуществляемым при помощи неуправляемый COM-объектов.</xref:System.Type?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))]

      public interface _Type
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Assembly
  id: Assembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Assembly%2A?displayProperty=fullName>Возвращает свойство <xref:System.Reflection.Assembly>в котором объявлен тип.</xref:System.Reflection.Assembly> </xref:System.Type.Assembly%2A?displayProperty=fullName> Для универсальных типов, то это свойство возвращает <xref:System.Reflection.Assembly>в которой определен универсальный тип.</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>Экземпляр, который описывает сборку, содержащую текущий тип.</xref:System.Reflection.Assembly>"
  overload: System.Runtime.InteropServices._Type.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>Свойство возвращает имя сборки <xref:System.Type>, включая имя сборки, из которой <xref:System.Type>была загружена.</xref:System.Type> </xref:System.Type> </xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>"
  syntax:
    content: public string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: "Имя сборки <xref:System.Type>, включая имя сборки, из которой <xref:System.Type>была загружена.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Attributes%2A?displayProperty=fullName>Получает атрибуты, связанные с <xref:System.Type>.</xref:System.Type> </xref:System.Type.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: "Объект <xref:System.Reflection.TypeAttributes>объект, представляющий набор атрибутов типа <xref:System.Type>, пока не <xref:System.Type>представляет параметр универсального типа, в противном случае это значение не определено.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.TypeAttributes>"
  overload: System.Runtime.InteropServices._Type.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.BaseType
  id: BaseType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.BaseType%2A?displayProperty=fullName>Свойство возвращает тип, от которого текущий <xref:System.Type>является непосредственным наследником.</xref:System.Type> </xref:System.Type.BaseType%2A?displayProperty=fullName>"
  syntax:
    content: public Type BaseType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Откуда текущего <xref:System.Type>непосредственно наследуется или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> если текущего <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> представляет <xref:System.Object>класса</xref:System.Object> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.DeclaringType%2A?displayProperty=fullName>Свойство возвращает класс, который объявляет этот член.</xref:System.Type.DeclaringType%2A?displayProperty=fullName>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Объекта для класса, который объявляет этот член.</xref:System.Type> Если тип является вложенным типом, это свойство возвращает включающего типа."
  overload: System.Runtime.InteropServices._Type.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Equals%2A?displayProperty=fullName>Определяет метод, если базовый системный тип текущего <xref:System.Type>совпадает с базовым системным типом указанного <xref:System.Object>.</xref:System.Object> </xref:System.Type> </xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>—, Базовый системный тип которого сравнивается с базовым системным типом текущего <xref:System.Type>.</xref:System.Type> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если базовый системный тип параметра <code> o </code> совпадает с базовым системным типом текущего <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Equals%2A?displayProperty=fullName>Определяет метод, если базовый системный тип текущего <xref:System.Type>совпадает с базовым системным типом указанного <xref:System.Type>.</xref:System.Type> </xref:System.Type> </xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: "<xref:System.Type>—, Базовый системный тип которого сравнивается с базовым системным типом текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если базовый системный тип параметра <code> o </code> совпадает с базовым системным типом текущего <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>Метод возвращает массив <xref:System.Type>объектов представляющий отфильтрованный список интерфейсов, реализованных или наследуемых текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type> </xref:System.Type.FindInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: "<xref href=&quot;System.Reflection.TypeFilter&quot;> </xref> Делегат, сравнивающий интерфейсы с параметром `filterCriteria`."
    - id: filterCriteria
      type: System.Object
      description: "Критерии поиска, который определяет, должен ли интерфейс включаться в возвращаемый массив."
    return:
      type: System.Type[]
      description: "Массив <xref:System.Type>объектов представляющий отфильтрованный список интерфейсов, реализованных или наследуемых текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type>       - или - пустой массив типа <xref:System.Type>Если отсутствия интерфейсов, соответствующих фильтру реализуемые или наследуемые текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FindInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.FindMembers%2A?displayProperty=fullName>Метод возвращает отфильтрованный массив <xref:System.Reflection.MemberInfo>объекты заданного типа.</xref:System.Reflection.MemberInfo> </xref:System.Type.FindMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "Объект <xref uid=&quot;langword_csharp_MemberTypes&quot; name=&quot;MemberTypes&quot; href=&quot;&quot;> </xref> , указывающий тип элемента для поиска."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: filter
      type: System.Reflection.MemberFilter
      description: "Делегат, выполняющий сравнение и возвращающий <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если проверяемый член соответствует условиям `filterCriteria` и <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае. Можно использовать <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_FilterName&quot; name=&quot;FilterName&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_FilterNameIgnoreCase&quot; name=&quot;FilterNameIgnoreCase&quot; href=&quot;&quot;> </xref> делегаты, предоставляемые этим классом. Первый использует поля классов <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> качестве условий поиска, а два других делегата <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> объектов в качестве критерия поиска."
    - id: filterCriteria
      type: System.Object
      description: "Условия поиска, определяющее, возвращаются ли элемент в массиве <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> объектов.       Поля <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> можно использовать в сочетании с <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref> делегата, предоставляемые этим классом."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Отфильтрованный массив <xref:System.Reflection.MemberInfo>объекты заданного типа.</xref:System.Reflection.MemberInfo>       - или - пустой массив типа <xref:System.Reflection.MemberInfo>, если текущий <xref:System.Type>нет членов типа <code> memberType </code> , удовлетворяющих условиям фильтра.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.FindMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.FullName%2A?displayProperty=fullName>Свойство возвращает полное имя <xref:System.Type>, включая пространство имен <xref:System.Type>, но не сборку.</xref:System.Type> </xref:System.Type> </xref:System.Type.FullName%2A?displayProperty=fullName>"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Строка, содержащая полное имя <xref:System.Type>, включая пространство имен <xref:System.Type>, но не сборку.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  id: GetArrayRank
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetArrayRank%2A?displayProperty=fullName>Метод возвращает количество измерений в <xref:System.Array>.</xref:System.Array> </xref:System.Type.GetArrayRank%2A?displayProperty=fullName>"
  syntax:
    content: public int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержит число измерений в текущем <xref:System.Type>.</xref:System.Type> </xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Метод выполняет поиск открытого конструктора экземпляра, параметры которого соответствуют типам, содержащимся в указанном массиве.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объектов, предоставляющий число, порядок и тип параметров нужного конструктора.</xref:System.Type>       - или - пустой массив <xref:System.Type>объектов, чтобы получить конструктор, который не принимает никаких параметров.</xref:System.Type> Пустой массив предоставляется <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> поле &lt;xref:System.Type?displayProperty=fullName&gt;."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Объект <xref:System.Reflection.ConstructorInfo>объект, представляющий конструктор экземпляра, параметры которого соответствуют типам, в массиве типов параметров, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Метод выполняет поиск конструктора, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для конструктора.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить конструктор, который не имеет параметров.</xref:System.Type>       -or-       <xref:System.Type>.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в массиве типов параметров. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Объект <xref:System.Reflection.ConstructorInfo>объект, представляющий конструктор, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetConstructor%2A?displayProperty=fullName>Метод выполняет поиск конструктора, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки и соглашение о вызовах.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>Объект, который задает набор правил, касающихся порядка и расположения аргументов, способа передачи возвращаемого значения, регистров, используемых для аргументов, и стек будет очищен.</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для конструктора.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить конструктор, который не имеет параметров.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Объект <xref:System.Reflection.ConstructorInfo>объект, представляющий конструктор, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors
  id: GetConstructors
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>Метод возвращает все открытые конструкторы, определенные для текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Массив <xref:System.Reflection.ConstructorInfo>объектов, представляющий все конструкторы открытых экземпляров, определенные для текущего <xref:System.Type>, за исключением инициализатора типа (статический конструктор).</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Если открытые конструкторы экземпляров определенные для текущего <xref:System.Type>, или если текущий <xref:System.Type>представляет параметр типа универсального типа или метода определения, пустой массив типа <xref:System.Reflection.ConstructorInfo>возвращается.</xref:System.Reflection.ConstructorInfo> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetConstructors%2A?displayProperty=fullName>Метод ищет конструкторы, определенные для текущего <xref:System.Type>с помощью указанного <xref:System.Reflection.BindingFlags>.</xref:System.Reflection.BindingFlags> </xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Массив <xref:System.Reflection.ConstructorInfo>объектов, представляющий все конструкторы, определенные для текущего <xref:System.Type>удовлетворяющие указанным ограничениям привязки, в том числе и инициализатор типа, если оно определено.</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Возвращает пустой массив типа <xref:System.Reflection.ConstructorInfo>Если конструкторы не определены для текущего <xref:System.Type>, если ни один из определенных конструкторов не соответствует ограничениям привязки, или если текущий <xref:System.Type>представляет параметр типа в определении универсального типа или метода.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>Метод возвращает все атрибуты, примененные к этому члену.</xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Указывает, следует ли выполнять поиск в цепочке наследования этого члена для поиска атрибутов."
    return:
      type: System.Object[]
      description: "Массив настраиваемых атрибутов, примененных к данному члену, или массив нулей (0), если атрибуты не были применены."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>Метод возвращает все атрибуты, примененные к этому члену.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Тип атрибута для поиска. Возвращаются только те атрибуты, которые можно назначить этот тип."
    - id: inherit
      type: System.Boolean
      description: "Указывает, следует ли выполнять поиск в цепочке наследования этого члена для поиска атрибутов."
    return:
      type: System.Object[]
      description: "Массив настраиваемых атрибутов, примененных к данному члену, или массив нулей (0), если атрибуты не были применены."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>Метод ищет члены, определенные для текущего <xref:System.Type>которого <xref:System.Reflection.DefaultMemberAttribute>задано.</xref:System.Reflection.DefaultMemberAttribute> </xref:System.Type> </xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов</xref:System.Reflection.MemberInfo> , представляющая все элементы по умолчанию текущего <xref:System.Type>.</xref:System.Type>       - или - пустой массив типа <xref:System.Reflection.MemberInfo>, если текущий <xref:System.Type>нет членов по умолчанию.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetElementType
  id: GetElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetElementType%2A?displayProperty=fullName>Возвращает <xref:System.Type>включенных объекта, на который ссылается текущий тип массива, указателя или ссылки.</xref:System.Type> </xref:System.Type.GetElementType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: "<xref:System.Type>Включенных объекта, на который ссылается текущий тип массива, указателя или ссылки.</xref:System.Type>       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> если текущего <xref:System.Type>не является массивом или указателем, или не передается по ссылке либо представляет универсальный тип или параметр типа в определении универсального типа или метода.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetEvent%2A?displayProperty=fullName>Метод ищет события, которые объявлены или унаследованы текущим <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "Массив <xref:System.Reflection.EventInfo>объектов, представляющих все события, которые объявлены или унаследованы текущим <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.EventInfo>       - или - пустой массив типа <xref:System.Reflection.EventInfo>, если текущий <xref:System.Type>Нет событий, или если ни одно событие не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetEvent%2A?displayProperty=fullName>Возвращает <xref:System.Reflection.EventInfo>объект, представляющий указанное событие, используя заданные ограничения привязки.</xref:System.Reflection.EventInfo> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: ", <xref:System.String>Содержащая имя события, которое объявлено или унаследовано в текущем объекте <xref:System.Type>.</xref:System.Type> </xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "<xref:System.Reflection.EventInfo>Объект, представляющий указанное событие, которое объявлено или унаследовано в текущем объекте <xref:System.Type>, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents
  id: GetEvents
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetEvents%2A?displayProperty=fullName>Метод возвращает все открытые события, которые объявлены или унаследованы текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: "Массив <xref:System.Reflection.EventInfo>объектов</xref:System.Reflection.EventInfo> , представляющая все открытые события, объявленные или наследуемые текущим <xref:System.Type>.</xref:System.Type>       - или - пустой массив типа <xref:System.Reflection.EventInfo>, если текущий <xref:System.Type>Нет открытых событий.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetEvents%2A?displayProperty=fullName>Метод ищет события, которые объявлены или унаследованы текущим <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo[]
      description: "Массив <xref:System.Reflection.EventInfo>объектов, представляющих все события, которые объявлены или унаследованы текущим <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.EventInfo>       - или - пустой массив типа <xref:System.Reflection.EventInfo>, если текущий <xref:System.Type>Нет событий, или если ни одно событие не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetField%2A?displayProperty=fullName>Метод выполняет поиск открытого поля с заданным именем.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого поля данных.</xref:System.String>"
    return:
      type: System.Reflection.FieldInfo
      description: "Объект <xref:System.Reflection.FieldInfo>объект, представляющий открытое поле с указанным именем, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetField%2A?displayProperty=fullName>Метод осуществляет поиск указанного поля, используя заданные ограничения привязки.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого поля данных.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo
      description: "Объект <xref:System.Reflection.FieldInfo>объект, представляющий поле, которое соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields
  id: GetFields
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetFields%2A?displayProperty=fullName>Метод возвращает все открытые поля текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: "Массив <xref:System.Reflection.FieldInfo>объектов, представляющий все открытые поля, определенные для текущего <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo>       - или - пустой массив типа <xref:System.Reflection.FieldInfo>Если нет открытых полей определенные для текущего <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetFields%2A?displayProperty=fullName>Метод ищет поля, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo[]
      description: "Массив <xref:System.Reflection.FieldInfo>объектов, представляющий все поля, определенные для текущего <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.FieldInfo>       - или - пустой массив типа <xref:System.Reflection.FieldInfo>, если нет определенных полей для текущего <xref:System.Type>, или если ни один из определенных полей не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetHashCode%2A?displayProperty=fullName>Метод.</xref:System.Type.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержащий хэш-код данного экземпляра.</xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Сопоставляет набор имен соответствующему набору идентификаторов диспетчеризации."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetIDsOfNames`, см. в библиотеке MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Зарезервировано для использования в будущем. Должно быть равным IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Переданный массив имен для сопоставления."
    - id: cNames
      type: System.UInt32
      description: "Количество сопоставляемых имен."
    - id: lcid
      type: System.UInt32
      description: "Контекст языкового стандарта для интерпретации имен."
    - id: rgDispId
      type: System.IntPtr
      description: "Массив, зарезервированный вызывающим объектом, куда помещаются идентификаторы, соответствующие именам."
  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetInterface%2A?displayProperty=fullName>Метод выполняет поиск интерфейса с помощью указанного имени...</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого интерфейса.</xref:System.String> Для универсальных интерфейсов это искаженное имя."
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объект, представляющий интерфейс с заданным именем, реализованных или наследуемых текущим <xref:System.Type>, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetInterface%2A?displayProperty=fullName>Метод осуществляет поиск указанного интерфейса, указывая, следует ли выполнять поиск без учета регистра.</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого интерфейса.</xref:System.String> Для универсальных интерфейсов это искаженное имя."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для выполнения поиска без учета регистра для `name`.       - или - <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для выполнения поиска с учетом регистра для `name`."
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объект, представляющий интерфейс с заданным именем, реализованных или наследуемых текущим <xref:System.Type>, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>Метод возвращает сопоставление для интерфейса заданного типа.</xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: "<xref:System.Type>Интерфейсу, для которого требуется извлечь сопоставление.</xref:System.Type>"
    return:
      type: System.Reflection.InterfaceMapping
      description: "<xref:System.Reflection.InterfaceMapping>Объект, представляющий сопоставление интерфейса для <code> interfaceType </code>.</xref:System.Reflection.InterfaceMapping>"
  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  id: GetInterfaces
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetInterfaces%2A?displayProperty=fullName>Метод возвращает все интерфейсы, реализуемые или наследуемые текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: "Массив <xref:System.Type>объектов</xref:System.Type> , представляющая все интерфейсы, реализуемые или наследуемые текущим <xref:System.Type>.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>Если нет интерфейсы, реализованные или наследуемые текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Метод выполняет поиск открытого члена с заданным именем.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомых открытых членов для получения.</xref:System.String>"
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов, представляющий открытые члены с заданным именем, если он найден; в противном случае — пустой массив.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Метод выполняет поиск указанных членов, используя заданные ограничения привязки.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя для поиска элементов.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - ноль для возвращения пустого массива."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов, представляющий открытые члены с заданным именем, если он найден; в противном случае — пустой массив.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMember%2A?displayProperty=fullName>Метод ищет указанные члены заданного типа, используя заданные ограничения привязки.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя для поиска элементов.</xref:System.String>"
    - id: type
      type: System.Reflection.MemberTypes
      description: "<xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> Искомое значение."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - ноль для возвращения пустого массива."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов, представляющий открытые члены с заданным именем, если он найден; в противном случае — пустой массив.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers
  id: GetMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMembers%2A?displayProperty=fullName>Метод возвращает все открытые члены текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов</xref:System.Reflection.MemberInfo> , представляющая все открытые члены текущего <xref:System.Type>.</xref:System.Type>       - или - пустой массив типа <xref:System.Reflection.MemberInfo>, если текущий <xref:System.Type>Нет открытых членов.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMembers%2A?displayProperty=fullName>Метод ищет члены, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>объектов, представляющий все члены, определенные для текущего <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.MemberInfo>       - или - пустой массив типа <xref:System.Reflection.MemberInfo>, если не определены члены для текущего <xref:System.Type>, или если ни один из определенных членов не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод выполняет поиск открытого метода с указанным именем.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого метода.</xref:System.String>"
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий открытый метод с заданным именем, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод осуществляет поиск указанного метода, используя заданные ограничения привязки.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого метода.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий метод, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод ищет указанный открытый метод, параметры которого соответствуют указанным типам аргументов.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого метода.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для метода.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить метод, который не имеет параметров.</xref:System.Type>"
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий открытый метод, параметры которого соответствуют указанным типам аргументов, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод ищет указанный открытый метод, параметры которого соответствуют указанным типам аргументов и модификаторам.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого метода.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для метода.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить метод, который не имеет параметров.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий открытый метод, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод ищет указанный метод, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого метода.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для метода.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить метод, который не имеет параметров.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий метод, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethod%2A?displayProperty=fullName>Метод ищет указанный метод, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки и соглашение о вызовах.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого метода.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>Объект, задающий набор применяемых правил, касающихся порядка и расположения аргументов, способа передачи возвращаемого значения, регистров, используемых для аргументов, и как стек очищены.</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров для метода.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить метод, который не имеет параметров.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>объект, представляющий метод, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods
  id: GetMethods
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethods%2A?displayProperty=fullName>Метод возвращает все открытые методы текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Массив <xref:System.Reflection.MethodInfo>объектов, представляющий все открытые методы, определенные для текущего <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo>       - или - пустой массив типа <xref:System.Reflection.MethodInfo>Если открытые методы определенные для текущего <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetMethods%2A?displayProperty=fullName>Метод ищет методы, определенные для текущего <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Массив <xref:System.Reflection.MethodInfo>объектов, представляющих все методы, определенные для текущего <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.MethodInfo>       - или - пустой массив типа <xref:System.Reflection.MethodInfo>, если не определены для текущего <xref:System.Type>, или если ни один из определенных методов не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>Метод выполняет поиск открытого вложенного типа с заданным именем.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: "Строка, содержащая имя искомого вложенного типа."
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объект, представляющий открытый вложенный тип с заданным именем, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetNestedType%2A?displayProperty=fullName>Метод ищет указанный вложенный тип, используя заданные ограничения привязки.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "Строка, содержащая имя искомого вложенного типа."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объект, предоставляющий вложенный тип, который соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>Метод возвращает все типы, вложенные в текущий <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Массив <xref:System.Type>объектов, представляющий все типы, вложенные в текущий <xref:System.Type>.</xref:System.Type> </xref:System.Type>       - или - пустой массив типа <xref:System.Type>Если отсутствуют типы, вложенные в текущий <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; метод и ищет типы, вложенные в текущий <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода."
  syntax:
    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие все типы, вложенные в текущий <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Type>       - или - пустой массив типа <xref:System.Type>, если отсутствуют типы, вложенные в текущий <xref:System.Type>, или если ни один из вложенных типов не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties
  id: GetProperties
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperties%2A?displayProperty=fullName>Метод возвращает все открытые свойства текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Массив <xref:System.Reflection.PropertyInfo>объектов представляющий все открытые свойства текущего <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.PropertyInfo>       - или - пустой массив типа <xref:System.Reflection.PropertyInfo>, если текущий <xref:System.Type>Нет открытых свойств.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperties%2A?displayProperty=fullName>Метод ищет свойства текущего <xref:System.Type>, используя заданные ограничения привязки.</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Массив <xref:System.Reflection.PropertyInfo>объектов, представляющий все свойства текущего <xref:System.Type>удовлетворяющие указанным ограничениям привязки.</xref:System.Type> </xref:System.Reflection.PropertyInfo>       - или - пустой массив типа <xref:System.Reflection.PropertyInfo>, если текущий <xref:System.Type>не имеет свойства, или если ни одно свойство не удовлетворяет ограничениям привязки.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод выполняет поиск открытого свойства с указанным именем.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого свойства.</xref:System.String>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, представляющий открытое свойство с указанным именем, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод выполняет поиск заданного свойства, используя заданные ограничения привязки.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого свойства.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, предоставляющий свойство, которое соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод выполняет поиск открытого свойства с заданным именем и типом возвращаемого значения.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого свойства.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Возвращаемый тип свойства."
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, представляющий открытое свойство с указанным именем, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод ищет указанное открытое свойство, параметры которого соответствуют аргументов типов...</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого свойства.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров искомого индексированного свойства.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить неиндексированное свойство.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, представляющий открытое свойство, параметры которого соответствуют указанным типам аргументов, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод ищет указанное открытое свойство, параметры которого соответствуют указанным типам аргументов.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого свойства.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Возвращаемый тип свойства."
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров искомого индексированного свойства.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить неиндексированное свойство.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, представляющий открытое свойство, параметры которого соответствуют указанным типам аргументов, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод ищет указанное открытое свойство, параметры которого соответствуют указанным типам аргументов и модификаторам.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого открытого свойства.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "Возвращаемый тип свойства."
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров искомого индексированного свойства.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить неиндексированное свойство.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, представляющий открытое свойство, которое соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetProperty%2A?displayProperty=fullName>Метод ищет указанное свойство, параметры которого соответствуют указанным типам аргументов и модификаторам, используя заданные ограничения привязки.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащая имя искомого свойства.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск.       - или - нуль, чтобы было возвращено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: returnType
      type: System.Type
      description: "Возвращаемый тип свойства."
    - id: types
      type: System.Type[]
      description: "Массив <xref:System.Type>объекты, представляющие число, порядок и тип параметров искомого индексированного свойства.</xref:System.Type>       - или - пустой массив типа <xref:System.Type>(то есть Type [] types = new Type[0]), если требуется получить неиндексированное свойство.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `types` массива. Связыватель по умолчанию не обрабатывает этот параметр."
    return:
      type: System.Reflection.PropertyInfo
      description: "Объект <xref:System.Reflection.PropertyInfo>объект, предоставляющий свойство, которое соответствует указанным требованиям, если он найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetType%2A?displayProperty=fullName>Метод возвращает текущий <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Текущий <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Извлекает сведения о типе для объекта, которые можно использовать для получения сведений о типе интерфейса."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetTypeInfo`, см. в библиотеке MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Возвращаемые сведения о типе."
    - id: lcid
      type: System.UInt32
      description: "Идентификатор языкового стандарта для сведений о типе."
    - id: ppTInfo
      type: System.IntPtr
      description: "Получает указатель на объект сведений о запрошенного типа."
  overload: System.Runtime.InteropServices._Type.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Возвращает число интерфейсов сведения о типе, предоставляемых объектом (0 или 1)."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetTypeInfoCount`, см. в библиотеке MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Указывает, к которому записывается число предоставляемых объектом интерфейсов сведения о типе."
  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GUID
  id: GUID
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GUID%2A?displayProperty=fullName>Получает идентификатор GUID, связанный с <xref:System.Type>.</xref:System.Type> </xref:System.Type.GUID%2A?displayProperty=fullName>"
  syntax:
    content: public Guid GUID { get; }
    return:
      type: System.Guid
      description: "Идентификатор GUID, связанный с <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GUID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.HasElementType
  id: HasElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.HasElementType%2A?displayProperty=fullName>Свойство</xref:System.Type.HasElementType%2A?displayProperty=fullName>"
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является массивом, указателем или параметром, переданным по ссылке; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.HasElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет доступ к свойствам и методам, предоставляемым объекта."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::Invoke`, см. в библиотеке MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Идентифицирует член."
    - id: riid
      type: System.Guid
      description: "Зарезервировано для использования в будущем. Должно быть равным IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Контекст языкового стандарта, в котором следует интерпретировать аргументы."
    - id: wFlags
      type: System.Int16
      description: "Флаги, описывающие контекст вызова."
    - id: pDispParams
      type: System.IntPtr
      description: "Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах."
    - id: pVarResult
      type: System.IntPtr
      description: "Указатель на расположение, где будет храниться результат."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Указатель на структуру, содержащую сведения об исключении."
    - id: puArgErr
      type: System.IntPtr
      description: "Индекс первого аргумента, вызвавшего ошибку."
  overload: System.Runtime.InteropServices._Type.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Метод вызывает указанный член, с помощью указанным ограничениям привязки и соответствующих указанному списку аргументов.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащий имя конструктора, метода, свойства или поля.</xref:System.String>       - или - пустая строка (&quot;») будет вызван член по умолчанию.       - или - члены для IDispatch, строка, представляющая идентификатор DispID, например «[DispID =&3;]»."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Тип поиска не обязательно. Если тип поиска указан, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> будет применяться."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Для которого следует вызвать указанный член.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Массив с аргументами, передаваемыми вызываемому члену."
    return:
      type: System.Object
      description: "<xref:System.Object>Представляющий возвращаемое значение вызываемого элемента.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Метод вызывает указанный член, с использованием заданных ограничений привязки и указанному списку аргументов языку и региональным параметрам.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащий имя конструктора, метода, свойства или поля.</xref:System.String>       - или - пустая строка (&quot;») будет вызван член по умолчанию.       - или - члены для IDispatch, строка, представляющая идентификатор DispID, например «[DispID =&3;]»."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Тип поиска не обязательно. Если тип поиска указан, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> будет применяться."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Для которого следует вызвать указанный член.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Массив с аргументами, передаваемыми вызываемому члену."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Объект, представляющий используемый языковой стандарт глобализации, который может понадобиться для преобразований, зависящих от языкового стандарта, например преобразования числа в строковом формате к типу Double.</xref:System.Globalization.CultureInfo>       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для использования текущего потока <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>Представляющий возвращаемое значение вызываемого элемента.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.InvokeMember%2A?displayProperty=fullName>Метод вызывает указанный член, с использованием заданных ограничений привязки и указанному списку аргументов, модификаторов, языку и региональным параметрам.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>Содержащий имя конструктора, метода, свойства или поля.</xref:System.String>       - или - пустая строка (&quot;») будет вызван член по умолчанию.       - или - члены для IDispatch, строка, представляющая идентификатор DispID, например «[DispID =&3;]»."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Битовая маска, составленная из одного или нескольких <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> , укажите, как ведется поиск. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. Тип поиска не обязательно. Если тип поиска указан, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> будет применяться."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref href=&quot;System.Reflection.Binder&quot;> </xref> объект, определяющий набор свойств и разрешающий привязку, что может включать выбор перегруженных методов, приведение типов аргументов и вызов члена с помощью отражения.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "<xref:System.Object>Для которого следует вызвать указанный член.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Массив с аргументами, передаваемыми вызываемому члену."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Массив <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> объектов, представляющих атрибуты, связанные с соответствующим элементом в `args` массива. Атрибуты, связанные с параметром, хранятся в подписи элемента. Связыватель по умолчанию не обрабатывает этот параметр."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Объект, представляющий используемый языковой стандарт глобализации, который может понадобиться для преобразований, зависящих от языкового стандарта, например преобразования числа в строковом формате к типу Double.</xref:System.Globalization.CultureInfo>       - или - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для использования текущего потока <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    - id: namedParameters
      type: System.String[]
      description: "Массив, содержащий имена параметров, в котором значения в `args` передаются массива."
    return:
      type: System.Object
      description: "<xref:System.Object>Представляющий возвращаемое значение вызываемого элемента.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsAbstract%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является абстрактным и должен быть переопределен.</xref:System.Type> </xref:System.Type.IsAbstract%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является абстрактным; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут формата строки `AnsiClass` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут формата строки <xref uid=&quot;langword_csharp_AnsiClass&quot; name=&quot;AnsiClass&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAnsiClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsArray
  id: IsArray
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsArray%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является массивом.</xref:System.Type> </xref:System.Type.IsArray%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является массивом; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода."
  syntax:
    content: public bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>Для сравнения с текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> c </code> и текущий <xref:System.Type>представляют один и тот же тип, или если текущий <xref:System.Type>находится в иерархии наследования <code> c </code>, или, если текущий <xref:System.Type>— это интерфейс, <code> c </code> реализует, или, если <code> c </code> является параметром универсального типа и текущий <xref:System.Type>представляет одно из ограничений <code> c </code>.</xref:System.Type> </xref:System.Type> </xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если ни одно из этих условий или если <code> c </code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  id: IsAutoClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsAutoClass%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут формата строки `AutoClass` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут формата строки <xref uid=&quot;langword_csharp_AutoClass&quot; name=&quot;AutoClass&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут размещения класса `AutoLayout` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут размещения класса <xref uid=&quot;langword_csharp_AutoLayout&quot; name=&quot;AutoLayout&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsByRef
  id: IsByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsByRef%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>передается по ссылке.</xref:System.Type> </xref:System.Type.IsByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>передается по ссылке; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsClass
  id: IsClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsClass%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>класса; то есть, не является типом значения или интерфейса.</xref:System.Type> </xref:System.Type.IsClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является классом; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  id: IsCOMObject
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsCOMObject%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>COM-объектом.</xref:System.Type> </xref:System.Type.IsCOMObject%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>COM-объектом; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsCOMObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsContextful
  id: IsContextful
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsContextful%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>может быть помещен в контекст.</xref:System.Type> </xref:System.Type.IsContextful%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>может быть помещен в контекст; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsContextful*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>Метод указывает, является ли один или несколько экземпляров `attributeType` применяется к этому члену.</xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Объекта, к которому применяются настраиваемые атрибуты."
    - id: inherit
      type: System.Boolean
      description: "Указывает, следует ли выполнять поиск в цепочке наследования этого члена для поиска атрибутов."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если один или несколько экземпляров <code> attributeType </code> применяется к этому члену; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsEnum
  id: IsEnum
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsEnum%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли текущий <xref:System.Type>представляет собой перечисление.</xref:System.Type> </xref:System.Type.IsEnum%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущий <xref:System.Type>представляет перечисление; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут размещения класса `ExplicitLayout` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут размещения класса <xref uid=&quot;langword_csharp_ExplicitLayout&quot; name=&quot;ExplicitLayout&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsImport
  id: IsImport
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsImport%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>имеет <xref:System.Runtime.InteropServices.ComImportAttribute>, указывающее на то, что объект был импортирован из библиотеки типов COM.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type> </xref:System.Type.IsImport%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>имеет <xref:System.Runtime.InteropServices.ComImportAttribute>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>Метод определяет, является ли указанный объект экземпляром текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, сравниваемый с текущим <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущий <xref:System.Type>входит в иерархию наследования объекта, представленного <code> o </code>, или если текущий <xref:System.Type>— это интерфейс, <code> o </code> поддерживает.</xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если ни одно из этих условий выполняется, то или, если <code> o </code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или если текущий <xref:System.Type>является открытым универсальным типом (то есть <xref:System.Type.ContainsGenericParameters*>возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).</xref:System.Type.ContainsGenericParameters*> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInterface
  id: IsInterface
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsInterface%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является интерфейсом; иными словами, а не классом или типом значения.</xref:System.Type> </xref:System.Type.IsInterface%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является интерфейсом; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут размещения класса `SequentialLayout` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут размещения класса <xref uid=&quot;langword_csharp_SequentialLayout&quot; name=&quot;SequentialLayout&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли тип маршалируется по ссылке.</xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>маршалируется по ссылке; в противном случае, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является вложенным и видимым только в своей сборке.</xref:System.Type> </xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является вложенным и видимым только в своей сборке; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является вложенным и видимым только классам, принадлежащим его семейству и сборке.</xref:System.Type> </xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является вложенным и видимым только классам, принадлежащим его семейству и сборке; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является вложенным и видимым только внутри собственного семейства.</xref:System.Type> </xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является вложенным и видимым только внутри собственного семейства; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является вложенным и видимым только для классов, принадлежащих либо его семейству или его сборке.</xref:System.Type> </xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является вложенным и видимым только классам, принадлежащим его семейству или его сборке; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является вложенным и объявленным как закрытый.</xref:System.Type> </xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является вложенным и объявленным как закрытый; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>Свойство возвращает значение, указывающее, является ли класс вложенным и объявленным как открытый.</xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если класс является вложенным и объявленным public; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  id: IsNotPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsNotPublic%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли верхнего уровня <xref:System.Type>не объявлен как открытый.</xref:System.Type> </xref:System.Type.IsNotPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если верхнего уровня <xref:System.Type>не объявленным как открытый; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNotPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPointer
  id: IsPointer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsPointer%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является указателем.</xref:System.Type> </xref:System.Type.IsPointer%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является указателем; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPointer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  id: IsPrimitive
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является одним из типов-примитивов.</xref:System.Type> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является одним из типов-примитивов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsPublic%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли верхнего уровня <xref:System.Type>объявлен как открытый.</xref:System.Type> </xref:System.Type.IsPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если верхнего уровня <xref:System.Type>объявлен как открытый; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSealed
  id: IsSealed
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsSealed%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>объявлен как запечатанный.</xref:System.Type> </xref:System.Type.IsSealed%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>объявлен как запечатанный; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSerializable
  id: IsSerializable
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsSerializable%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является сериализуемым.</xref:System.Type> </xref:System.Type.IsSerializable%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является сериализуемым; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsSpecialName%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>имеет имя, которое требует специальной обработки.</xref:System.Type> </xref:System.Type.IsSpecialName%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>имеет имя, которое требует специальной обработки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>Метод определяет, представленного текущей <xref:System.Type>является производным от класса, представленного указанным <xref:System.Type>.</xref:System.Type> </xref:System.Type> класса</xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "<xref:System.Type>Для сравнения с текущим <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>представленный <code> c </code> параметров и текущий <xref:System.Type>представляют классы и класс, представленный текущим <xref:System.Type>является производным от класса, представленного <code> c </code>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type> </xref:System.Type> Этот метод также возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <code> c </code> и текущего <xref:System.Type>представления одного класса.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли атрибут формата строки `UnicodeClass` выбран для <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут формата строки <xref uid=&quot;langword_csharp_UnicodeClass&quot; name=&quot;UnicodeClass&quot; href=&quot;&quot;> </xref> выбирается <xref:System.Type>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsValueType
  id: IsValueType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.IsValueType%2A?displayProperty=fullName>Свойство получает значение, указывающее, является ли <xref:System.Type>является типом значения.</xref:System.Type> </xref:System.Type.IsValueType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Type>является типом значения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.MemberType%2A?displayProperty=fullName>Возвращает свойство <xref:System.Reflection.MemberTypes>значение, указывающее, что этот член является типом или вложенного типа.</xref:System.Reflection.MemberTypes> </xref:System.Type.MemberType%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Объект <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> значение, указывающее, что этот член является типом или вложенного типа."
  overload: System.Runtime.InteropServices._Type.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Module
  id: Module
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Module%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Module%2A?displayProperty=fullName>Свойство возвращает модуль (DLL), в котором текущий <xref:System.Type>определен.</xref:System.Type> </xref:System.Type.Module%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: "Имя модуля, в котором текущий <xref:System.Type>определен.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Module*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Name
  id: Name
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>Свойство возвращает имя <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Имя <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Namespace
  id: Namespace
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.Namespace%2A?displayProperty=fullName>Свойство возвращает пространство имен <xref:System.Type>.</xref:System.Type> </xref:System.Type.Namespace%2A?displayProperty=fullName>"
  syntax:
    content: public string Namespace { get; }
    return:
      type: System.String
      description: "Пространство имен <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.ReflectedType%2A?displayProperty=fullName>Свойство возвращает объект класса, который использовался для получения этого члена.</xref:System.Type.ReflectedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Объект с помощью этого <xref:System.Reflection.MemberInfo>был получен объект.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.ToString%2A?displayProperty=fullName>Возвращает имя текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Объект, <xref:System.String>представляющий имя текущего <xref:System.Type>.</xref:System.Type> </xref:System.String>"
  overload: System.Runtime.InteropServices._Type.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeHandle
  id: TypeHandle
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.TypeHandle%2A?displayProperty=fullName>Свойство возвращает дескриптор текущего <xref:System.Type>.</xref:System.Type> </xref:System.Type.TypeHandle%2A?displayProperty=fullName>"
  syntax:
    content: public RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: "Дескриптор текущего <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.TypeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  id: TypeInitializer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.TypeInitializer%2A?displayProperty=fullName>Свойство возвращает инициализатор для <xref:System.Type>.</xref:System.Type> </xref:System.Type.TypeInitializer%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: "Значение, <xref:System.Reflection.ConstructorInfo>содержащее имя конструктора класса <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.TypeInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к &lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt; свойство."
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>Свойство указывает на тип, предоставляемый средой CLR, представляющей этот тип.</xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>"
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "Базовый системный тип для <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Type.Assembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Type.Attributes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Runtime.InteropServices._Type.BaseType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Type.DeclaringType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Runtime.InteropServices._Type.FullName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._Type.GetConstructors
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
- uid: System.Runtime.InteropServices._Type.GetElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetEvents
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetFields
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetHashCode
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: true
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethods
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperties
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._Type.GUID
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.IsAbstract
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.IsEnum
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
- uid: System.Runtime.InteropServices._Type.IsInterface
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Type.Name
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
- uid: System.Runtime.InteropServices._Type.TypeHandle
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
- uid: System.Runtime.InteropServices._Type.Assembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
- uid: System.Runtime.InteropServices._Type.Attributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
- uid: System.Runtime.InteropServices._Type.BaseType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
- uid: System.Runtime.InteropServices._Type.DeclaringType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals
  nameWithType: _Type.Equals
- uid: System.Runtime.InteropServices._Type.FindInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces
  nameWithType: _Type.FindInterfaces
- uid: System.Runtime.InteropServices._Type.FindMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers
  nameWithType: _Type.FindMembers
- uid: System.Runtime.InteropServices._Type.FullName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank
  nameWithType: _Type.GetArrayRank
- uid: System.Runtime.InteropServices._Type.GetConstructor*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor
  nameWithType: _Type.GetConstructor
- uid: System.Runtime.InteropServices._Type.GetConstructors*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors
  nameWithType: _Type.GetConstructors
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Type.GetCustomAttributes
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: _Type.GetDefaultMembers
- uid: System.Runtime.InteropServices._Type.GetElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType
  nameWithType: _Type.GetElementType
- uid: System.Runtime.InteropServices._Type.GetEvent*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent
  nameWithType: _Type.GetEvent
- uid: System.Runtime.InteropServices._Type.GetEvents*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents
  nameWithType: _Type.GetEvents
- uid: System.Runtime.InteropServices._Type.GetField*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField
  nameWithType: _Type.GetField
- uid: System.Runtime.InteropServices._Type.GetFields*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields
  nameWithType: _Type.GetFields
- uid: System.Runtime.InteropServices._Type.GetHashCode*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode
  nameWithType: _Type.GetHashCode
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _Type.GetIDsOfNames
- uid: System.Runtime.InteropServices._Type.GetInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface
  nameWithType: _Type.GetInterface
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: _Type.GetInterfaceMap
- uid: System.Runtime.InteropServices._Type.GetInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces
  nameWithType: _Type.GetInterfaces
- uid: System.Runtime.InteropServices._Type.GetMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember
  nameWithType: _Type.GetMember
- uid: System.Runtime.InteropServices._Type.GetMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers
  nameWithType: _Type.GetMembers
- uid: System.Runtime.InteropServices._Type.GetMethod*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod
  nameWithType: _Type.GetMethod
- uid: System.Runtime.InteropServices._Type.GetMethods*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods
  nameWithType: _Type.GetMethods
- uid: System.Runtime.InteropServices._Type.GetNestedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType
  nameWithType: _Type.GetNestedType
- uid: System.Runtime.InteropServices._Type.GetNestedTypes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: _Type.GetNestedTypes
- uid: System.Runtime.InteropServices._Type.GetProperties*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties
  nameWithType: _Type.GetProperties
- uid: System.Runtime.InteropServices._Type.GetProperty*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty
  nameWithType: _Type.GetProperty
- uid: System.Runtime.InteropServices._Type.GetType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType
  nameWithType: _Type.GetType
- uid: System.Runtime.InteropServices._Type.GetTypeInfo*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo
  nameWithType: _Type.GetTypeInfo
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _Type.GetTypeInfoCount
- uid: System.Runtime.InteropServices._Type.GUID*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke
  nameWithType: _Type.Invoke
- uid: System.Runtime.InteropServices._Type.InvokeMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember
  nameWithType: _Type.InvokeMember
- uid: System.Runtime.InteropServices._Type.IsAbstract*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: _Type.IsAssignableFrom
- uid: System.Runtime.InteropServices._Type.IsAutoClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined
  nameWithType: _Type.IsDefined
- uid: System.Runtime.InteropServices._Type.IsEnum*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: _Type.IsInstanceOfType
- uid: System.Runtime.InteropServices._Type.IsInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: _Type.IsSubclassOf
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
- uid: System.Runtime.InteropServices._Type.Name*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString
  nameWithType: _Type.ToString
- uid: System.Runtime.InteropServices._Type.TypeHandle*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
