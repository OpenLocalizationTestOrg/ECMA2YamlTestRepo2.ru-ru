### YamlMime:ManagedReference
items:
- uid: System.IO.Log.PolicyUnit
  id: PolicyUnit
  children:
  - System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)
  - System.IO.Log.PolicyUnit.Equals(System.Object)
  - System.IO.Log.PolicyUnit.Extents(System.Int64)
  - System.IO.Log.PolicyUnit.GetHashCode
  - System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  - System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  - System.IO.Log.PolicyUnit.Percentage(System.Int64)
  - System.IO.Log.PolicyUnit.ToString
  - System.IO.Log.PolicyUnit.Type
  - System.IO.Log.PolicyUnit.Value
  langs:
  - csharp
  name: PolicyUnit
  nameWithType: PolicyUnit
  fullName: System.IO.Log.PolicyUnit
  type: Struct
  summary: "Представляет размер в политике хранилища журнала."
  remarks: "Структура PolicyUnit представляет размер в политике хранилища журнала. <xref:System.IO.Log.PolicyUnitType>Перечисления перечислены единицы измерения, который может быть представлен.</xref:System.IO.Log.PolicyUnitType>       Можно использовать <xref:System.IO.Log.PolicyUnit.Value%2A>Свойства, чтобы определить размер измерения.</xref:System.IO.Log.PolicyUnit.Value%2A> Чтобы определить единицы измерения, используйте <xref:System.IO.Log.PolicyUnit.Type%2A>свойство.</xref:System.IO.Log.PolicyUnit.Type%2A> Можно преобразовывать другие типы данных для PolicyUnit с помощью <xref:System.IO.Log.PolicyUnit.Percentage%2A>и <xref:System.IO.Log.PolicyUnit.Extents%2A>методы.</xref:System.IO.Log.PolicyUnit.Extents%2A> </xref:System.IO.Log.PolicyUnit.Percentage%2A>"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogPolicy> class and PolicyUnit structure to set policy for a log record sequence.  \n  \n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/t-system.io.log.policyunit_1.cs)]\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/t-system.io.log.policyunit_1.vb)]"
  syntax:
    content: public struct PolicyUnit
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)
  id: '#ctor(System.Int64,System.IO.Log.PolicyUnitType)'
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: PolicyUnit(Int64,PolicyUnitType)
  nameWithType: PolicyUnit.PolicyUnit(Int64,PolicyUnitType)
  fullName: System.IO.Log.PolicyUnit.PolicyUnit(Int64,PolicyUnitType)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> структуру с указанным ключом и типом."
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogPolicy> class and <xref:System.IO.Log.PolicyUnit> structure to set policy for a log record sequence.  \n  \n [!code-cs[S_UELogRecordSequence#2](~/add/codesnippet/csharp/m-system.io.log.policyun_1.cs)]\n [!code-vb[S_UELogRecordSequence#2](~/add/codesnippet/visualbasic/m-system.io.log.policyun_1.vb)]"
  syntax:
    content: public PolicyUnit (long value, System.IO.Log.PolicyUnitType type);
    parameters:
    - id: value
      type: System.Int64
      description: "Размер <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref>."
    - id: type
      type: System.IO.Log.PolicyUnitType
      description: "Один из <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> значения."
  overload: System.IO.Log.PolicyUnit.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code>или <code>type</code> не является допустимым значением."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Метод был вызван после удаления последовательности."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Не хватает памяти для продолжения выполнения программы."
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PolicyUnit.Equals(Object)
  fullName: System.IO.Log.PolicyUnit.Equals(Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Указывает, равен ли данный экземпляр указанному объекту."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Указанный объект для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот экземпляр и заданный объект равны; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.PolicyUnit.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.Extents(System.Int64)
  id: Extents(System.Int64)
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: Extents(Int64)
  nameWithType: PolicyUnit.Extents(Int64)
  fullName: System.IO.Log.PolicyUnit.Extents(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Создает <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> типа <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> из указанного номера."
  syntax:
    content: public static System.IO.Log.PolicyUnit Extents (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Число, представляющее количество контейнеров."
    return:
      type: System.IO.Log.PolicyUnit
      description: "Объект <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> типа <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> из указанного номера."
  overload: System.IO.Log.PolicyUnit.Extents*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.GetHashCode
  id: GetHashCode
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PolicyUnit.GetHashCode()
  fullName: System.IO.Log.PolicyUnit.GetHashCode()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Предоставляет уникальный хэш-код для данного объекта."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Целое число с хэш-кодом."
  overload: System.IO.Log.PolicyUnit.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  id: op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: op_Equality(PolicyUnit,PolicyUnit)
  nameWithType: PolicyUnit.op_Equality(PolicyUnit,PolicyUnit)
  fullName: System.IO.Log.PolicyUnit.op_Equality(PolicyUnit,PolicyUnit)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Сравнивает два <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> экземпляры, чтобы определить, равны ли они."
  remarks: "Этот оператор используется для сравнения двух <xref:System.IO.Log.PolicyUnit>экземпляров на равенство.</xref:System.IO.Log.PolicyUnit> Объекты равны, они должны иметь одинаковые значения для обоих <xref:System.IO.Log.PolicyUnit.Type%2A>и <xref:System.IO.Log.PolicyUnit.Value%2A>Свойства.</xref:System.IO.Log.PolicyUnit.Value%2A> </xref:System.IO.Log.PolicyUnit.Type%2A>"
  syntax:
    content: public static bool op_Equality (System.IO.Log.PolicyUnit left, System.IO.Log.PolicyUnit right);
    parameters:
    - id: left
      type: System.IO.Log.PolicyUnit
      description: "<xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> Слева от оператора."
    - id: right
      type: System.IO.Log.PolicyUnit
      description: "<xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> Справа от оператора."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если оба <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> экземпляры равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.PolicyUnit.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  id: op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: op_Inequality(PolicyUnit,PolicyUnit)
  nameWithType: PolicyUnit.op_Inequality(PolicyUnit,PolicyUnit)
  fullName: System.IO.Log.PolicyUnit.op_Inequality(PolicyUnit,PolicyUnit)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Сравнивает два <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> экземпляры, чтобы определить, не равны ли они."
  remarks: "Этот оператор используется для сравнения двух <xref:System.IO.Log.PolicyUnit>экземпляров на неравенство.</xref:System.IO.Log.PolicyUnit> Объекты не равны, они должны иметь разные значения для <xref:System.IO.Log.PolicyUnit.Type%2A>и <xref:System.IO.Log.PolicyUnit.Value%2A>Свойства.</xref:System.IO.Log.PolicyUnit.Value%2A> </xref:System.IO.Log.PolicyUnit.Type%2A>"
  syntax:
    content: public static bool op_Inequality (System.IO.Log.PolicyUnit left, System.IO.Log.PolicyUnit right);
    parameters:
    - id: left
      type: System.IO.Log.PolicyUnit
      description: "<xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> Слева от оператора."
    - id: right
      type: System.IO.Log.PolicyUnit
      description: "<xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> Справа от оператора."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если оба <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> экземпляры не равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.PolicyUnit.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.Percentage(System.Int64)
  id: Percentage(System.Int64)
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: Percentage(Int64)
  nameWithType: PolicyUnit.Percentage(Int64)
  fullName: System.IO.Log.PolicyUnit.Percentage(Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Создает <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> типа <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> из указанного номера."
  syntax:
    content: public static System.IO.Log.PolicyUnit Percentage (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Число, представляющее процент."
    return:
      type: System.IO.Log.PolicyUnit
      description: "Объект <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref> типа <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> из указанного номера."
  overload: System.IO.Log.PolicyUnit.Percentage*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.ToString
  id: ToString
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: ToString()
  nameWithType: PolicyUnit.ToString()
  fullName: System.IO.Log.PolicyUnit.ToString()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Возвращает строковое представление этого объекта."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, представляющая этот объект."
  overload: System.IO.Log.PolicyUnit.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.Type
  id: Type
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: Type
  nameWithType: PolicyUnit.Type
  fullName: System.IO.Log.PolicyUnit.Type
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Возвращает тип единиц <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref>."
  syntax:
    content: public System.IO.Log.PolicyUnitType Type { get; }
    return:
      type: System.IO.Log.PolicyUnitType
      description: "Один из <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.IO.Log.PolicyUnitType&quot;> </xref>."
  overload: System.IO.Log.PolicyUnit.Type*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.PolicyUnit.Value
  id: Value
  parent: System.IO.Log.PolicyUnit
  langs:
  - csharp
  name: Value
  nameWithType: PolicyUnit.Value
  fullName: System.IO.Log.PolicyUnit.Value
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Возвращает значение <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref>."
  syntax:
    content: public long Value { get; }
    return:
      type: System.Int64
      description: "Значение <xref href=&quot;System.IO.Log.PolicyUnit&quot;> </xref>."
  overload: System.IO.Log.PolicyUnit.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: PolicyUnit(Int64,PolicyUnitType)
  nameWithType: PolicyUnit.PolicyUnit(Int64,PolicyUnitType)
  fullName: System.IO.Log.PolicyUnit.PolicyUnit(Int64,PolicyUnitType)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.PolicyUnitType
  parent: System.IO.Log
  isExternal: false
  name: PolicyUnitType
  nameWithType: PolicyUnitType
  fullName: System.IO.Log.PolicyUnitType
- uid: System.IO.Log.PolicyUnit.Equals(System.Object)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Equals(Object)
  nameWithType: PolicyUnit.Equals(Object)
  fullName: System.IO.Log.PolicyUnit.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Log.PolicyUnit.Extents(System.Int64)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Extents(Int64)
  nameWithType: PolicyUnit.Extents(Int64)
  fullName: System.IO.Log.PolicyUnit.Extents(Int64)
- uid: System.IO.Log.PolicyUnit
  parent: System.IO.Log
  isExternal: false
  name: PolicyUnit
  nameWithType: PolicyUnit
  fullName: System.IO.Log.PolicyUnit
- uid: System.IO.Log.PolicyUnit.GetHashCode
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: GetHashCode()
  nameWithType: PolicyUnit.GetHashCode()
  fullName: System.IO.Log.PolicyUnit.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: op_Equality(PolicyUnit,PolicyUnit)
  nameWithType: PolicyUnit.op_Equality(PolicyUnit,PolicyUnit)
  fullName: System.IO.Log.PolicyUnit.op_Equality(PolicyUnit,PolicyUnit)
- uid: System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: op_Inequality(PolicyUnit,PolicyUnit)
  nameWithType: PolicyUnit.op_Inequality(PolicyUnit,PolicyUnit)
  fullName: System.IO.Log.PolicyUnit.op_Inequality(PolicyUnit,PolicyUnit)
- uid: System.IO.Log.PolicyUnit.Percentage(System.Int64)
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Percentage(Int64)
  nameWithType: PolicyUnit.Percentage(Int64)
  fullName: System.IO.Log.PolicyUnit.Percentage(Int64)
- uid: System.IO.Log.PolicyUnit.ToString
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: ToString()
  nameWithType: PolicyUnit.ToString()
  fullName: System.IO.Log.PolicyUnit.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.PolicyUnit.Type
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Type
  nameWithType: PolicyUnit.Type
  fullName: System.IO.Log.PolicyUnit.Type
- uid: System.IO.Log.PolicyUnit.Value
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Value
  nameWithType: PolicyUnit.Value
  fullName: System.IO.Log.PolicyUnit.Value
- uid: System.IO.Log.PolicyUnit.#ctor*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: PolicyUnit
  nameWithType: PolicyUnit.PolicyUnit
- uid: System.IO.Log.PolicyUnit.Equals*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Equals
  nameWithType: PolicyUnit.Equals
- uid: System.IO.Log.PolicyUnit.Extents*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Extents
  nameWithType: PolicyUnit.Extents
- uid: System.IO.Log.PolicyUnit.GetHashCode*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: GetHashCode
  nameWithType: PolicyUnit.GetHashCode
- uid: System.IO.Log.PolicyUnit.op_Equality*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: op_Equality
  nameWithType: PolicyUnit.op_Equality
- uid: System.IO.Log.PolicyUnit.op_Inequality*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: op_Inequality
  nameWithType: PolicyUnit.op_Inequality
- uid: System.IO.Log.PolicyUnit.Percentage*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Percentage
  nameWithType: PolicyUnit.Percentage
- uid: System.IO.Log.PolicyUnit.ToString*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: ToString
  nameWithType: PolicyUnit.ToString
- uid: System.IO.Log.PolicyUnit.Type*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Type
  nameWithType: PolicyUnit.Type
- uid: System.IO.Log.PolicyUnit.Value*
  parent: System.IO.Log.PolicyUnit
  isExternal: false
  name: Value
  nameWithType: PolicyUnit.Value
