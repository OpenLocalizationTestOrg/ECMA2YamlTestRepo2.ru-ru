### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  id: SecurityTokenManager
  children:
  - System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  langs:
  - csharp
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
  type: Class
  summary: "Представляет диспетчер маркеров безопасности, который определяет способ предоставлен, проверку подлинности и сериализации маркеров безопасности."
  remarks: "Класс SecurityTokenManager при необходимости пользовательский маркер безопасности, проверки подлинности маркеров безопасности или поставщик маркеров безопасности. Использование пользовательского маркера безопасности для обработки учетными данными, которые [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] не поддерживает. Используйте средство проверки подлинности маркеров безопасности при методы проверки подлинности [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] предоставляет недостаточно. Класс SecurityTokenManager возвращает структуру проверки подлинности маркеров безопасности в <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>метод.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29> Поставщик маркеров безопасности предоставляет маркеры безопасности для исходящих сообщений SOAP. Класс SecurityTokenManager Возвращает поставщик маркеров безопасности в <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>метод.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]с помощью структур проверки подлинности маркеров безопасности и поставщики маркеров безопасности, в разделе [пользовательские учетные данные и проверки учетных данных](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Создание пользовательского маркера безопасности, в разделе [как: Создание пользовательского токена](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract class SecurityTokenManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;></xref> class."
  syntax:
    content: protected SecurityTokenManager ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает проверки подлинности маркеров безопасности, отвечающий требованиям к маркеру безопасности."
  remarks: "Объект <xref:System.IdentityModel.Selectors.SecurityTokenManager>класс предоставляет типы, которые могут предоставлять маркеры безопасности для исходящих сообщений SOAP и проверять подлинность маркеров безопасности во входящих сообщениях SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> Метод CreateSecurityTokenAuthenticator возвращает класс, который может проверять подлинность маркеров безопасности, которые соответствуют критериям, указанным в `tokenRequirement` параметра."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> , задающий требования к маркеру безопасности."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> , определяющий маркер безопасности, соответствующий требованиям к маркеру безопасности."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> , который проверяет подлинность маркеров безопасности во входящих сообщениях SOAP, которые удовлетворяют указанным требованиям."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает поставщик маркеров безопасности, отвечающий требованиям к маркеру безопасности."
  remarks: "Объект <xref:System.IdentityModel.Selectors.SecurityTokenManager>класс предоставляет типы, которые могут предоставлять маркеры безопасности для исходящих сообщений SOAP и проверять подлинность маркеров безопасности во входящих сообщениях SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> Метод CreateSecurityTokenProvider возвращает класс, который может проверять подлинность маркеров безопасности, которые могут предоставлять маркеры безопасности, которые соответствуют критериям, указанным в `tokenRequirement` параметра."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> , задающий требования к маркеру безопасности."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> , предоставляет маркеры безопасности, которые удовлетворяют указанным требованиям для исходящих сообщений SOAP."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает XML-сериализатор, который может сериализовать маркеры безопасности в указанной версии WS-* спецификации."
  remarks: "Чтобы добавить поддержку сериализации пользовательский маркер, создайте класс, производный от <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>и возвратить экземпляр этого класса для метода CreateSecurityTokenSerializer.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer> <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>Класс, который является производным от <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>класса, поддерживающего сериализацию и десериализацию маркеров безопасности, которые поставляются вместе с [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> </xref:System.ServiceModel.Security.WSSecurityTokenSerializer> Таким образом, чтобы добавить поддержку пользовательского маркера в сериализатор, необходимо переопределить виртуальные методы <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>Добавьте код, проверяющий является ли требуемый маркер безопасности пользовательским маркером и, если нет, вызвать метод базового класса.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref> , указывающий WS-* версий спецификации, которые соответствуют маркеры безопасности."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Объект <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> для сериализации маркеров безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager.SecurityTokenManager
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer
