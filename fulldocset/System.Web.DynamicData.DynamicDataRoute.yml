### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicDataRoute
  id: DynamicDataRoute
  children:
  - System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  - System.Web.DynamicData.DynamicDataRoute.Action
  - System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  - System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  - System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  - System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  - System.Web.DynamicData.DynamicDataRoute.Model
  - System.Web.DynamicData.DynamicDataRoute.RouteHandler
  - System.Web.DynamicData.DynamicDataRoute.Table
  - System.Web.DynamicData.DynamicDataRoute.ViewName
  langs:
  - csharp
  name: DynamicDataRoute
  nameWithType: DynamicDataRoute
  fullName: System.Web.DynamicData.DynamicDataRoute
  type: Class
  summary: "Представляет маршрут, используемый платформой динамических данных ASP.NET."
  remarks: "Чтобы настроить поведение платформы динамических данных используются маршруты.       Статический <xref:System.Web.Routing.RouteTable.Routes%2A>свойство <xref:System.Web.Routing.RouteTable>Тип содержит коллекцию маршрутов.</xref:System.Web.Routing.RouteTable> </xref:System.Web.Routing.RouteTable.Routes%2A> Для динамических данных обычно регистрируются один или несколько маршрутов (добавлены <xref:System.Web.Routing.RouteTable.Routes%2A>свойство) в `Application_Start` событий в файле Global.asax.</xref:System.Web.Routing.RouteTable.Routes%2A> Например маршруты определяют, должны ли отображаться на одной странице список строк сведения для строки данных. Они также определяют, следует ли отображать подробные сведения на одной странице список строк для некоторых таблиц, но не других.       Задать <xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A>, <xref:System.Web.DynamicData.DynamicDataRoute.Table%2A>, и <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>Свойства и укажите шаблон для URL-адрес в <xref:System.Web.Routing.Route.%23ctor%2A>конструктор.</xref:System.Web.Routing.Route.%23ctor%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Model%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Table%2A> </xref:System.Web.DynamicData.DynamicDataRoute.ViewName%2A> </xref:System.Web.DynamicData.DynamicDataRoute.Action%2A>       Платформа динамических данных использует шаблон URL-адреса, предоставляемого для сопоставления шаблонов URL-адресов для запросов и создания URL-адресов. Дополнительные сведения см. в разделе <xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>.</xref:System.Web.DynamicData.DynamicDataRoute.%23ctor%2A>"
  syntax:
    content: 'public class DynamicDataRoute : System.Web.Routing.Route'
  inheritance:
  - System.Web.Routing.Route
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: DynamicDataRoute(String)
  nameWithType: DynamicDataRoute.DynamicDataRoute(String)
  fullName: System.Web.DynamicData.DynamicDataRoute.DynamicDataRoute(String)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.DynamicData.DynamicDataRoute&quot;> </xref> , используя указанный шаблон URL-адреса."
  remarks: "Как правило при указании URL-адреса, которые динамических данных будет создан с использованием параметров подстановки. Например, если передать строку «{table} / {action}», результат должен быть URL-адрес «~ / Products/ListDetails.aspx» при просмотре таблицы Product с помощью действия ListDetails.       Использование параметров подстановки не является обязательным. Можно передать строку «Таблицы/DynamicData», который приведет к получению «~ / Table/DynamicData.aspx». Можно передать «MyPageName» для создания «~ / MyPageName.aspx». Платформа динамических данных не зависит от URL-адрес для получения сведений о таблице и действия."
  syntax:
    content: public DynamicDataRoute (string url);
    parameters:
    - id: url
      type: System.String
      description: "Шаблон URL-адреса."
  overload: System.Web.DynamicData.DynamicDataRoute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Action
  id: Action
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Action
  nameWithType: DynamicDataRoute.Action
  fullName: System.Web.DynamicData.DynamicDataRoute.Action
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает имя действия для маршрута."
  remarks: "Список возможных имен действий см. в разделе <xref:System.Web.DynamicData.PageAction?displayProperty=fullName>.</xref:System.Web.DynamicData.PageAction?displayProperty=fullName> Если вы не установите это свойство при создании экземпляра <xref:System.Web.DynamicData.DynamicDataRoute>, маршрут будет применяться ко всем действиям.</xref:System.Web.DynamicData.DynamicDataRoute>"
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "Имя действия для маршрута."
  overload: System.Web.DynamicData.DynamicDataRoute.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  id: GetActionFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetActionFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetActionFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(RouteData)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает действие из <xref:System.Web.Routing.RouteData>объект для текущего динамического веб-данных запроса.</xref:System.Web.Routing.RouteData>"
  syntax:
    content: public string GetActionFromRouteData (System.Web.Routing.RouteData routeData);
    parameters:
    - id: routeData
      type: System.Web.Routing.RouteData
      description: "Данные маршрута, относящиеся к текущего запроса. Дополнительные сведения см. в разделе <xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>.</xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>"
    return:
      type: System.String
      description: "Действие. Список возможных значений см. в разделе <xref href=&quot;System.Web.DynamicData.PageAction&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Действие не найден в информации маршрутизации веб-запроса."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  id: GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetRouteData(HttpContextBase)
  nameWithType: DynamicDataRoute.GetRouteData(HttpContextBase)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetRouteData(HttpContextBase)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает маршрут сведения для конкретного веб-запроса."
  remarks: "`httpContext` Параметр предоставляет информации веб-запроса, который требуется, чтобы можно было идентифицировать запрошенной таблицы и действия."
  syntax:
    content: public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);
    parameters:
    - id: httpContext
      type: System.Web.HttpContextBase
      description: "Содержит сведения о веб-запроса."
    return:
      type: System.Web.Routing.RouteData
      description: "Сведения о маршрутизации веб-запроса."
  overload: System.Web.DynamicData.DynamicDataRoute.GetRouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  id: GetTableFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetTableFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetTableFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(RouteData)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Идентифицирует таблицу, связанный с динамических веб-данных запроса страницы."
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTableFromRouteData (System.Web.Routing.RouteData routeData);
    parameters:
    - id: routeData
      type: System.Web.Routing.RouteData
      description: "Данные маршрута, относящиеся к текущего запроса. Дополнительные сведения см. в разделе <xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>.</xref:System.Web.DynamicData.DynamicDataRoute.GetRouteData*>"
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Метаданные, описывающие таблицы, отображаемой платформой динамических данных."
  overload: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Таблица отсутствует в информации маршрутизации веб-запроса."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  id: GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: GetVirtualPath(RequestContext,RouteValueDictionary)
  nameWithType: DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает виртуальный путь маршрута."
  syntax:
    content: public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);
    parameters:
    - id: requestContext
      type: System.Web.Routing.RequestContext
      description: "Содержит сведения о веб-запроса."
    - id: values
      type: System.Web.Routing.RouteValueDictionary
      description: "Коллекция объектов маршрута для текущего приложения."
    return:
      type: System.Web.Routing.VirtualPathData
      description: "Виртуальный путь."
  overload: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Model
  id: Model
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Model
  nameWithType: DynamicDataRoute.Model
  fullName: System.Web.DynamicData.DynamicDataRoute.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает модель данных, к которому применяется маршрут."
  remarks: "Если вы не установите это свойство при создании экземпляра <xref:System.Web.DynamicData.DynamicDataRoute>, модель по умолчанию для зарегистрированного <xref:System.Data.Linq.DataContext>используется экземпляр.</xref:System.Data.Linq.DataContext> </xref:System.Web.DynamicData.DynamicDataRoute>"
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; set; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Метаданные модели данных, к которому применяется маршрут."
  overload: System.Web.DynamicData.DynamicDataRoute.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  id: RouteHandler
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
  fullName: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает объект, обрабатывающий запросы для маршрута."
  remarks: "Свойство RouteHandler идентично <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>свойство.</xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName> Он предоставляется в качестве строго типизированную версию <xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>свойство для удобства написания кода.</xref:System.Web.Routing.Route.RouteHandler%2A?displayProperty=fullName>"
  syntax:
    content: public System.Web.DynamicData.DynamicDataRouteHandler RouteHandler { get; set; }
    return:
      type: System.Web.DynamicData.DynamicDataRouteHandler
      description: "Обработчик, который используется для обработки запросов для маршрута."
  overload: System.Web.DynamicData.DynamicDataRoute.RouteHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.Table
  id: Table
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: Table
  nameWithType: DynamicDataRoute.Table
  fullName: System.Web.DynamicData.DynamicDataRoute.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает имя таблицы для маршрута."
  remarks: "Если это свойство не задано при создании экземпляра <xref:System.Web.DynamicData.DynamicDataRoute>, маршрут будут применены ко всем таблицам в модели данных, обозначаются <xref:System.Web.DynamicData.DynamicDataRoute.Model%2A>.</xref:System.Web.DynamicData.DynamicDataRoute.Model%2A> </xref:System.Web.DynamicData.DynamicDataRoute>"
  syntax:
    content: public string Table { get; set; }
    return:
      type: System.String
      description: "Имя таблицы, связанном с маршрутом."
  overload: System.Web.DynamicData.DynamicDataRoute.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName
  id: ViewName
  parent: System.Web.DynamicData.DynamicDataRoute
  langs:
  - csharp
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
  fullName: System.Web.DynamicData.DynamicDataRoute.ViewName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает имя ASPX-страницу, связанном с маршрутом."
  remarks: "Платформа динамических данных использует несколько имен стандартных ASPX-страниц для создания пользовательского интерфейса, позволяющего пользователям просматривать, обновлять и удалять данные из заданной таблицы. Эти имена страниц включают List.aspx Details.aspx, Edit.aspx, Insert.aspx и ListDetails.aspx. Свойство ViewName определяет, какая из этих страниц следует использовать для данной таблицы и действия."
  syntax:
    content: public string ViewName { get; set; }
    return:
      type: System.String
      description: "Имя ASPX-страницу, связанном с маршрутом. Если страница не указана для маршрута, свойство возвращает значение <xref:System.Web.DynamicData.DynamicDataRoute.Action*>Свойства с «.aspx» добавляется к нему.</xref:System.Web.DynamicData.DynamicDataRoute.Action*>"
  overload: System.Web.DynamicData.DynamicDataRoute.ViewName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Routing.Route
  isExternal: false
  name: System.Web.Routing.Route
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: DynamicDataRoute(String)
  nameWithType: DynamicDataRoute.DynamicDataRoute(String)
  fullName: System.Web.DynamicData.DynamicDataRoute.DynamicDataRoute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicDataRoute.Action
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Action
  nameWithType: DynamicDataRoute.Action
  fullName: System.Web.DynamicData.DynamicDataRoute.Action
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetActionFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetActionFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(RouteData)
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetRouteData(HttpContextBase)
  nameWithType: DynamicDataRoute.GetRouteData(HttpContextBase)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetRouteData(HttpContextBase)
- uid: System.Web.HttpContextBase
  parent: System.Web
  isExternal: true
  name: HttpContextBase
  nameWithType: HttpContextBase
  fullName: System.Web.HttpContextBase
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetTableFromRouteData(RouteData)
  nameWithType: DynamicDataRoute.GetTableFromRouteData(RouteData)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(RouteData)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetVirtualPath(RequestContext,RouteValueDictionary)
  nameWithType: DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
  fullName: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(RequestContext,RouteValueDictionary)
- uid: System.Web.Routing.VirtualPathData
  parent: System.Web.Routing
  isExternal: true
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: System.Web.Routing.VirtualPathData
- uid: System.Web.Routing.RequestContext
  parent: System.Web.Routing
  isExternal: true
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.Web.Routing.RequestContext
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.DynamicData.DynamicDataRoute.Model
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Model
  nameWithType: DynamicDataRoute.Model
  fullName: System.Web.DynamicData.DynamicDataRoute.Model
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
  fullName: System.Web.DynamicData.DynamicDataRoute.RouteHandler
- uid: System.Web.DynamicData.DynamicDataRouteHandler
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicDataRouteHandler
  nameWithType: DynamicDataRouteHandler
  fullName: System.Web.DynamicData.DynamicDataRouteHandler
- uid: System.Web.DynamicData.DynamicDataRoute.Table
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Table
  nameWithType: DynamicDataRoute.Table
  fullName: System.Web.DynamicData.DynamicDataRoute.Table
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
  fullName: System.Web.DynamicData.DynamicDataRoute.ViewName
- uid: System.Web.DynamicData.DynamicDataRoute.#ctor*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: DynamicDataRoute
  nameWithType: DynamicDataRoute.DynamicDataRoute
- uid: System.Web.DynamicData.DynamicDataRoute.Action*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Action
  nameWithType: DynamicDataRoute.Action
- uid: System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetActionFromRouteData
  nameWithType: DynamicDataRoute.GetActionFromRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetRouteData
  nameWithType: DynamicDataRoute.GetRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetTableFromRouteData
  nameWithType: DynamicDataRoute.GetTableFromRouteData
- uid: System.Web.DynamicData.DynamicDataRoute.GetVirtualPath*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: GetVirtualPath
  nameWithType: DynamicDataRoute.GetVirtualPath
- uid: System.Web.DynamicData.DynamicDataRoute.Model*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Model
  nameWithType: DynamicDataRoute.Model
- uid: System.Web.DynamicData.DynamicDataRoute.RouteHandler*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: RouteHandler
  nameWithType: DynamicDataRoute.RouteHandler
- uid: System.Web.DynamicData.DynamicDataRoute.Table*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: Table
  nameWithType: DynamicDataRoute.Table
- uid: System.Web.DynamicData.DynamicDataRoute.ViewName*
  parent: System.Web.DynamicData.DynamicDataRoute
  isExternal: false
  name: ViewName
  nameWithType: DynamicDataRoute.ViewName
