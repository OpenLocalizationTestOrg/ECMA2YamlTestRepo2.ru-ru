### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnectionStringBuilder
  id: EntityConnectionStringBuilder
  children:
  - System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  - System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  - System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  - System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  - System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  - System.Data.EntityClient.EntityConnectionStringBuilder.Name
  - System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  - System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  - System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  - System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: EntityConnectionStringBuilder
  nameWithType: EntityConnectionStringBuilder
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder
  type: Class
  summary: "Предоставляет простой способ создания и управления содержимым строки подключения, используемых EntityClient."
  remarks: "Построитель строк подключения позволяет разработчикам программным способом создавать синтаксически правильные строки подключения и синтаксический анализ и перестраивать существующие строки подключения с помощью свойств и методов этого класса. Построитель строк соединения предоставляет свойства со строгой типизацией, соответствующие парам известных ключевых слов и значений. Разработчики, создающие строки подключения в рамках приложений можно использовать класс EntityConnectionStringBuilder создавать и изменять строки подключения.       EntityConnectionStringBuilder выполняет проверку пары допустимое ключевое слово/значение, каждый из которых указывается в виде значения свойства EntityConnectionStringBuilder.      Настроек [!NOTE] настроек строке соединения с источником данных является результатом <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A>свойство.</xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> Строка соединения предоставленный поставщик не проверяется для пары допустимое ключевое слово/значение."
  example:
  - "The following example demonstrates how to use the EntityConnectionStringBuilder in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: 'public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder'
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: EntityConnectionStringBuilder()
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string. Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public EntityConnectionStringBuilder ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: EntityConnectionStringBuilder(String)
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> класса с помощью предоставленной строки соединения."
  remarks: "Предоставленный `connectionString` не проверяется для пары допустимое ключевое слово/значение. Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см.       Неизменяемое имя поставщика должно быть указано в `connectionString` параметра. Ниже перечислены поддерживаемые поставщики:-`System.Data.Odbc`      -   `System.Data.OleDb`      -   `System.Data.OracleClient`      -   `System.Data.SqlClient`      -   `Microsoft.SqlServerCe.Client`"
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string. Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties. It does not use the `connectionString` overload.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public EntityConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения к конкретному поставщику в источнике данных."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: EntityConnectionStringBuilder.Clear()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Удаляет содержимое <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> экземпляра."
  remarks: "Метод Clear удаляет все пары &quot;ключ значение&quot; из <xref:System.Data.EntityClient.EntityConnectionStringBuilder>и сбрасывает все соответствующие свойства в значение null (`Nothing` в [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]).</xref:System.Data.EntityClient.EntityConnectionStringBuilder>"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: EntityConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Определяет, является ли <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> содержит конкретный ключ."
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ для поиска в <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> содержит элемент с указанным ключом; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> имеет фиксированный размер."
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> во всех случаях, поскольку <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> предоставляет коллекцию пар «ключ значение» фиксированного размера."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: EntityConnectionStringBuilder.Item(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает или задает значение, связанное с указанным ключом. В C# это свойство является индексатором."
  remarks: "Так как <xref:System.Data.EntityClient.EntityConnectionStringBuilder>содержит словарь фиксированного размера, попытка добавить ключ, который не существует в словаре, вызывает исключение <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException> </xref:System.Data.EntityClient.EntityConnectionStringBuilder>       Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ элемента, чтобы получить или задать."
    return:
      type: System.Object
      description: "Значение, связанное с указанным ключом."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)])."
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "Попытка добавить ключ, который не существует в списке доступных ключей."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Недопустимое значение в строке подключения (в частности, логическое или числовое значение ожидалось, но так и не указано)."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает <xref:System.Collections.ICollection>, содержащую ключи в <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>, Содержащую ключи в <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  id: Metadata
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает или задает расположение метаданных в строке подключения."
  remarks: "Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public string Metadata { get; set; }
    return:
      type: System.String
      description: "Возвращает или задает расположение метаданных в строке подключения."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  id: Name
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает или задает имя раздела, как определено в файле конфигурации."
  remarks: "Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя раздела в файле конфигурации."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  id: Provider
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает или задает имя базового [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] поставщика данных в строке подключения."
  remarks: "Неизменяемое имя поставщика используется извлекать <xref:System.Data.Common.DbProviderFactory>объекта для базового поставщика.</xref:System.Data.Common.DbProviderFactory>       Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public string Provider { get; set; }
    return:
      type: System.String
      description: "Инвариантное имя базового [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] поставщика данных."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  id: ProviderConnectionString
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Возвращает или задает внутреннюю, зависящая от поставщика строку соединения."
  remarks: "Строка подключения к конкретному поставщику не проверяется для пары допустимое ключевое слово/значение перед присваиванием. Разработчики могут создавать строки подключения с помощью либо строго типизированного класса построителя строк соединения, или они могут использовать <xref:System.Data.Common.DbConnectionStringBuilder>класс.</xref:System.Data.Common.DbConnectionStringBuilder> <xref:System.Data.Common.DbConnectionStringBuilder>Не выполняет проверки для пары допустимое ключевое слово/значение.</xref:System.Data.Common.DbConnectionStringBuilder> Таким образом с помощью этого класса можно создавать недопустимые строки соединения.       Синтаксис допустимое ключевое слово/значение <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> см."
  syntax:
    content: public string ProviderConnectionString { get; set; }
    return:
      type: System.String
      description: "Строка подключения внутреннюю, специфичную для поставщика."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: EntityConnectionStringBuilder.Remove(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Удаляет запись с указанным ключом из <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref> экземпляра."
  remarks: "Поскольку `Remove` метод возвращает значение, указывающее, его успешное выполнение, не требуется проверять наличие ключа перед попыткой удаления пары ключевых слов и значений из <xref:System.Data.EntityClient.EntityConnectionStringBuilder>экземпляра.</xref:System.Data.EntityClient.EntityConnectionStringBuilder>"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ пары «ключевое слово значение» удаляются из строки подключения в этом <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , если ключ существовал в строке подключения и был удален; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если ключ не существовал."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)])"
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: EntityConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Получает значение, соответствующее заданному ключу из этого <xref href=&quot;System.Data.EntityClient.EntityConnectionStringBuilder&quot;> </xref>."
  remarks: "Метод TryGetValue позволяет разработчикам получать значение из <xref:System.Data.EntityClient.EntityConnectionStringBuilder>без необходимости убедитесь, что указанное имя ключа имени ключа допустимым.</xref:System.Data.EntityClient.EntityConnectionStringBuilder> `TryGetValue`не вызывает исключение при передаче несуществующего ключа. Вызов `TryGetValue` с помощью несуществующего ключа помещает значение null (`Nothing` в Visual Basic) в `value` параметра."
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "Ключ извлекаемого элемента."
    - id: value
      type: System.Object
      description: "Значение, соответствующее`keyword.`"
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если <code> keyword </code> был найден в строке подключения; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>содержит значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder()
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder()
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder(String)
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.EntityConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: EntityConnectionStringBuilder.Clear()
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Clear()
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: EntityConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: EntityConnectionStringBuilder.Item(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Name
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Provider
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: EntityConnectionStringBuilder.Remove(String)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.Remove(String)
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: EntityConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.#ctor*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: EntityConnectionStringBuilder
  nameWithType: EntityConnectionStringBuilder.EntityConnectionStringBuilder
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Clear*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: EntityConnectionStringBuilder.Clear
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: EntityConnectionStringBuilder.ContainsKey
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: EntityConnectionStringBuilder.IsFixedSize
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Item*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: EntityConnectionStringBuilder.Item
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Keys*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: EntityConnectionStringBuilder.Keys
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Metadata*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Metadata
  nameWithType: EntityConnectionStringBuilder.Metadata
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Name*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Name
  nameWithType: EntityConnectionStringBuilder.Name
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Provider*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Provider
  nameWithType: EntityConnectionStringBuilder.Provider
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: ProviderConnectionString
  nameWithType: EntityConnectionStringBuilder.ProviderConnectionString
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.Remove*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: EntityConnectionStringBuilder.Remove
- uid: System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue*
  parent: System.Data.EntityClient.EntityConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: EntityConnectionStringBuilder.TryGetValue
