### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Описывает интерфейс, который должен быть реализован диспетчером ресурсов для обеспечения диспетчеру транзакций при присоединении к участию две фазы фиксации обратных вызовов для уведомлений."
  remarks: "Чтобы диспетчер ресурсов принять участие в транзакции его необходимо включить в транзакцию посредством диспетчера транзакций. <xref:System.Transactions.Transaction>Класс определяет набор методов, имена которых начинаются с `Enlist` , заработал.</xref:System.Transactions.Transaction> Разные `Enlist` методы соответствуют перечислением, которые ресурсов могут использоваться различные типы.       Этот класс описывает интерфейс, который должен быть реализован диспетчером ресурсов для предоставления две фазы фиксации обратных вызовов для уведомлений для диспетчера транзакций при присоединении к участию. Для реализации интерфейса IEnlistmentNotification каждый диспетчер ресурсов, следует прикрепить его с помощью <xref:System.Transactions.Transaction.EnlistVolatile%2A>метода или <xref:System.Transactions.Transaction.EnlistDurable%2A>метод <xref:System.Transactions.Transaction>класса, в зависимости от того, является ли ресурс неустойчивые и устойчивые.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Дополнительные сведения о присоединении и 2PC см. в разделе [прикрепление ресурсов в качестве участников в транзакции](~/add/includes/ajax-current-ext-md.md) и [Фиксация транзакции в однофазной и двухфазной](~/add/includes/ajax-current-ext-md.md) соответственно.       Диспетчер транзакций уведомляет присоединенный объект на различных этапах протокола двухфазной фиксации следующими методами.      | Метод | Описание |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций во время первой фазы транзакции, когда диспетчер транзакций опрашивает участников, могут ли они зафиксировать транзакцию. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция была зафиксирована. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция прерывается, (откат которой). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Этот метод присоединенного объекта используется как обратный вызов диспетчером транзакций на втором этапе транзакции, если транзакция сомнительна. |      Настроек [!NOTE] настроек следует иметь в виду, что уведомления не могут быть отправлены, последовательно или в определенном порядке.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Уведомляет прикрепленной объекта, что транзакция фиксируется."
  remarks: "Диспетчер транзакций вызывает этот метод присоединенного объекта во время второй фазы фиксации, когда он указывает, что все участники зафиксировать транзакцию.       Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем проинформировать диспетчер будет завершена путем вызова <xref:System.Transactions.Enlistment.Done%2A>метод `enlistment` параметр.</xref:System.Transactions.Enlistment.Done%2A>       Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A>, диспетчер транзакций сомнения в том, что диспетчер ресурсов получил вызов Commit.</xref:System.Transactions.Enlistment.Done%2A> Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A>— никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или в системном ресурсе.</xref:System.Transactions.Enlistment.Done%2A> Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов.</xref:System.Transactions> Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A>метод после завершения диспетчер ресурсов вашей Подготовка рабочих.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "<xref href=&quot;System.Transactions.Enlistment&quot;> </xref> Объект, используемый для отправки ответа диспетчером транзакций."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Уведомляет включенный объект, который находится в состоянии транзакции под сомнением."
  remarks: "Этот метод вызывается для непостоянных ресурсов, после вызова операции фиксации однофазного одному ресурсу устойчивых диспетчера транзакций, а затем потеряно подключение к долговременный ресурс до получения результата транзакции. На этом этапе результат транзакции не удается определить безопасно.       Как InDoubt считается конечное состояние для транзакции, не следует вызывать <xref:System.Transactions.IEnlistmentNotification.Commit%2A>или <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>после вызова InDoubt.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      Настроек [!NOTE] настроек реализации этого метода для непостоянных ресурсов должен выполнить любые операции восстановления или проверки, он понимает затронутых данных.  Он также должен вызвать <xref:System.Transactions.Enlistment.Done%2A>метода на `enlistment` параметра после завершения его работы.</xref:System.Transactions.Enlistment.Done%2A>       Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A>, диспетчер транзакций сомнения в том, что диспетчер ресурсов получил вызов InDoubt.</xref:System.Transactions.Enlistment.Done%2A> Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A>— никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или в системном ресурсе.</xref:System.Transactions.Enlistment.Done%2A> Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов.</xref:System.Transactions> Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A>метод после завершения диспетчер ресурсов вашей Подготовка рабочих.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "<xref href=&quot;System.Transactions.Enlistment&quot;> </xref> Объект, используемый для отправки ответа диспетчером транзакций."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Уведомляет включенный объект, который транзакция готова для фиксации."
  remarks: "Диспетчер транзакций вызывает этот метод прикрепленная ресурса manager во время первой фазы фиксации, когда он опрашивает участников, могут ли они зафиксировать транзакцию.       При реализации диспетчер долгосрочных ресурсов, необходимо войти в вашей Подготовка записи во время этого этапа. В записи должны содержаться все необходимые сведения для выполнения восстановления. Сюда входят <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>Свойства, которые передаются в диспетчер транзакций в <xref:System.Transactions.TransactionManager.Reenlist%2A>метод во время восстановления.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Дополнительные сведения о восстановлении см. в разделе [выполнение восстановления](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       Диспетчер ресурсов необходимо выполнить все действия, которые необходимо завершить перед вызовом <xref:System.Transactions.PreparingEnlistment.Prepared%2A>метод `preparingEnlistment` параметр, чтобы указать его голоса для обязательств.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Следует убедиться в том, что это достигается до получения никаких уведомлений второй фазы таких фиксации, отката или вы сомневаетесь. Это обусловлено уведомлений второго этапа может произойти, встроенные в том же потоке, который вызвал <xref:System.Transactions.PreparingEnlistment.Prepared%2A>метод на этапе 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Таким образом, не следует выполнять никаких операций после <xref:System.Transactions.PreparingEnlistment.Prepared%2A>вызов (например, снимать блокировки), которые должны были быть выполнены перед получением уведомлений второго этапа.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Можно также вызвать метод `preparingEnlistment` параметр, чтобы указать голос для отката.       Если необходимо, чтобы объект просто наблюдать и реагирования на ход выполнения транзакции, без участия в его реализации этого метода следует вызвать <xref:System.Transactions.Enlistment.Done%2A>метод `preparingEnlistment` параметра после завершения его работы.</xref:System.Transactions.Enlistment.Done%2A> Таким образом, диспетчер ресурсов не будет получать никаких уведомлений второй фазы."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "Объект <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> объект, используемый для отправки ответа диспетчером транзакций."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Уведомляет включенный объект, который производится откат транзакции (прервано)."
  remarks: "Диспетчер транзакций вызывает этот метод присоединенного объекта, если транзакция выполняет откат (прервано) из-за неспособности одного или нескольких участников транзакции зафиксировать транзакцию.       Диспетчер ресурсов должен выполнить любые действия, необходимые для завершения транзакции и затем проинформировать диспетчер будет завершена путем вызова <xref:System.Transactions.Enlistment.Done%2A>метод `enlistment` параметр.</xref:System.Transactions.Enlistment.Done%2A>       Если диспетчер ресурсов включен в список, но не отвечает, вызвав <xref:System.Transactions.Enlistment.Done%2A>, диспетчер транзакций сомнения в том, что диспетчер ресурсов получил вызов Rollback.</xref:System.Transactions.Enlistment.Done%2A> Таким образом диспетчер транзакций отслеживает Ожидание ответа и хранит сведения, относящиеся к этой транзакции.  Если <xref:System.Transactions.Enlistment.Done%2A>— никогда не вызывается, этот фрагмент данных хранятся бессрочно в памяти или в системном ресурсе.</xref:System.Transactions.Enlistment.Done%2A> Это приводит к ресурсам, не может быть освобождена. В случае распределенных транзакций это со временем заполнения журнала MSDTC, которое останавливает процесс MSDTC. В случае транзакции, управляемой <xref:System.Transactions>, это приводит к постепенному увеличению потребления памяти процессом диспетчера ресурсов.</xref:System.Transactions> Таким образом, очень важно, вызвать <xref:System.Transactions.Enlistment.Done%2A>метод после завершения диспетчер ресурсов вашей Подготовка рабочих.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Объект <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> объект, используемый для отправки ответа диспетчером транзакций."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
