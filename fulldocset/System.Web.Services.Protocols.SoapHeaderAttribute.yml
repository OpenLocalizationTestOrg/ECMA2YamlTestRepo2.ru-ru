### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeaderAttribute
  id: SoapHeaderAttribute
  children:
  - System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  - System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  - System.Web.Services.Protocols.SoapHeaderAttribute.Required
  langs:
  - csharp
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute
  type: Class
  summary: "Этот атрибут применяется к методу XML-веб-службы или клиента XML-веб-службы для указания заголовка SOAP, который может быть обработан метода XML-веб-службы или клиента XML-веб-службы. Этот класс не наследуется."
  remarks: "Основные шаги для получения и обработки заголовка SOAP: 1.  Создайте класс, производный от <xref:System.Web.Services.Protocols.SoapHeader>представляющий данные, передаваемые в заголовке SOAP.</xref:System.Web.Services.Protocols.SoapHeader>      2.  Добавление члена класса XML-веб-службы или XML-веб-службы клиентский прокси-класс типа, созданного на шаге 1.      3.  Применение SoapHeaderAttribute метода XML-веб-службы или соответствующего метода в класс прокси, указав члена, созданного на шаге 2 в <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>свойство.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>      4.  Внутри метода XML-веб-службы или кода клиента XML-веб-службы, доступ к <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>Свойства для обработки данных, передаваемых в заголовке SOAP.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>       Дополнительные сведения см. в разделе <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>свойство.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method requires the client to invoke the XML Web service method with this <xref:System.Web.Services.Protocols.SoapHeader>. The `Hello` XML Web service also catches any SOAP headers other than `MyHeader`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class SoapHeaderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Services.Protocols.SoapHeaderAttribute&quot;> </xref> класса, задание член класса XML-веб-службы, представляющий содержимое заголовка SOAP."
  remarks: "Клиент XML-веб-службы или веб-службы XML можно указать заголовки SOAP, которые требуется обработать для конкретных методов XML-веб-службы путем применения <xref:System.Web.Services.Protocols.SoapHeaderAttribute>метода XML-веб-службы в классе XML-веб-службы или соответствующий метод в классе прокси-сервера.</xref:System.Web.Services.Protocols.SoapHeaderAttribute> Чтобы метода XML-веб-службы для получения содержимого заголовка SOAP элемент добавляется класс, <xref:System.Type>производный от <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> XML-веб-службы Аналогичным образом клиент XML-веб-службы добавляет член в прокси-класс, производный от <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> <xref:System.Type>Наследующий от <xref:System.Web.Services.Protocols.SoapHeader>представляет содержимое заголовка SOAP и создается разработчиком веб-службы XML или клиента, которым требуется получить заголовок SOAP.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> После создания класса <xref:System.Web.Services.Protocols.SoapHeaderAttribute>может применяться для метода XML-веб-службы или соответствующего метода в указании класса прокси XML-веб-службы клиента содержимое члена, который требуется получить заголовок SOAP с `memberName` параметр для этого конструктора или <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>свойство.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> </xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Метод XML-веб-служба может получать несколько заголовков SOAP, добавив несколько элементов класс XML-веб-службы или прокси-класс XML-веб-службы и применяя множественные <xref:System.Web.Services.Protocols.SoapHeaderAttribute>атрибуты метода XML-веб-службы.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Для получения и обработки неизвестных заголовков SOAP в момент написания веб-службу XML, укажите <xref:System.Type>члена, чтобы быть либо <xref:System.Web.Services.Protocols.SoapUnknownHeader> <xref:System.Web.Services.Protocols.SoapHeader>либо массив либо класса.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Web.Services.Protocols.SoapUnknownHeader> </xref:System.Type>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_3_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_3_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_3_1.vb)]"
  syntax:
    content: public SoapHeaderAttribute (string memberName);
    parameters:
    - id: memberName
      type: System.String
      description: "Член класса XML-веб-службы, представляющий содержимое заголовка SOAP. <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>Свойству будет присвоено значение этого параметра.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  id: Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает заголовок SOAP предназначен для веб-службу XML или клиент XML-веб-службы."
  remarks: ''
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies that `MyHeader` must be sent to the XML Web service method and the client to invocate the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_71_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_71_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_71_1.vb)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapHeaderDirection
      description: "Предполагаемого получателя заголовка SOAP. Значение по умолчанию — <xref href=&quot;System.Web.Services.Protocols.SoapHeaderDirection&quot;> </xref>, означающее получателю имеет только веб-службу XML."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  id: MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает член класса XML-веб-службы, представляющий содержимое заголовка SOAP."
  remarks: "XML-веб-служба или клиент XML-веб-службы можно указать заголовки SOAP, которые требуется обработать путем применения <xref:System.Web.Services.Protocols.SoapHeaderAttribute>метода XML-веб-службы в классе XML-веб-службы или соответствующий метод в классе прокси-сервера.</xref:System.Web.Services.Protocols.SoapHeaderAttribute> В порядке для метода XML-веб-службы для получения содержимого заголовка SOAP, добавляется член типа, производного от <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> класс XML-веб-службы Аналогичным образом клиент XML-веб-службы добавляет член в прокси-класс, производный от <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> <xref:System.Type>Наследующий от <xref:System.Web.Services.Protocols.SoapHeader>представляет содержимое заголовка SOAP и создается разработчиком веб-службы XML или клиента, которым требуется получить заголовок SOAP.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> После создания класса <xref:System.Web.Services.Protocols.SoapHeaderAttribute>может применяться для метода XML-веб-службы или соответствующего метода в класс прокси XML-веб-службы клиента указания члена для получения содержимого заголовка SOAP через свойство MemberName.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Метод XML-веб-служба может получать несколько заголовков SOAP, добавив несколько элементов класс XML-веб-службы или прокси-класс XML-веб-службы и применяя множественные <xref:System.Web.Services.Protocols.SoapHeaderAttribute>атрибуты метода XML-веб-службы.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Для получения и обработки неизвестных заголовков SOAP в момент написания веб-службу XML, укажите тип члена как либо <xref:System.Web.Services.Protocols.SoapUnknownHeader> <xref:System.Web.Services.Protocols.SoapHeader>либо массив либо класса.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Web.Services.Protocols.SoapUnknownHeader>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the MemberName property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_28_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_28_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_28_1.vb)]"
  syntax:
    content: public string MemberName { get; set; }
    return:
      type: System.String
      description: "Член класса XML-веб-службы, представляющий содержимое заголовка SOAP. По умолчанию отсутствует."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  id: Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Данный член является устаревшим и не имеет функциональных возможностей."
  remarks: "Чтобы проверить отправку заголовка SOAP для веб-служб XML, убедитесь, что элемент, указанный в <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>свойство `null`.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> Если это `null`, заголовок SOAP не было отправлено.       В .NET Framework SDK версии 1.0 обязательное свойство указывает на необходимость ли заголовок SOAP понятны и обрабатываемых получателя веб-службы XML или клиентом. Если получатель не обработал заголовок SOAP, создается исключение."
  syntax:
    content: public bool Required { get; set; }
    return:
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение.</xref:System.Boolean>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderDirection
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapHeaderDirection
  nameWithType: SoapHeaderDirection
  fullName: System.Web.Services.Protocols.SoapHeaderDirection
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
