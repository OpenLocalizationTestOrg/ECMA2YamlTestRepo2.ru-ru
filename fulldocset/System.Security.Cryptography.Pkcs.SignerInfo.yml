### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  id: SignerInfo
  children:
  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.Version
  langs:
  - csharp
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
  type: Class
  summary: 'Класс SignerInfo представляет подписывающего лица, связанные с <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> , представляющий сообщения CMS/PKCS 7.'
  remarks: "Подписи, представленный классом SignerInfo может быть либо содержанием сообщения или подпись. Подписи последнего типа называют *скрепляющая подпись*.       Данная реализация CMS/PKCS 7 поддерживает только один уровень скрепляющая подпись.  То есть подпись можно подписать, получив скрепляющей подписи, но что скрепляющая подпись не может быть подписан еще раз.       Этот класс не имеет открытого конструктора; Таким образом его невозможно создать публично. Это класс только для чтения доступен из <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>свойство.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>"
  syntax:
    content: public sealed class SignerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  id: Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Свойства сертификата извлекает сертификат подписи, связанные с информацию о подписавшем."
  remarks: "Если сертификат для подписи не указан во время подписи с помощью <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>Свойства, а затем сертификат не будет возвращен.</xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> , Представляющий сертификат подписи."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод CheckHash проверяет целостность данных информацию о подписавшем сообщения CMS/PKCS 7. Специализированные метод, который используется в приложениях инфраструктуры безопасности, в которых используется тема является CheckHash **HashOnly** членом <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> перечисления при настройке <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> объекта. CheckHash не проверяет подлинность информацию о подписавшем, так как этот метод не выполняется проверка цифровой подписи. Для общего назначения проверки целостности и подлинность подписи сообщения CMS/PKCS 7 и скрепляющая подпись, используйте &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt; или &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; методы.'
  remarks: 'Этот метод не выполняет проверку подлинности информации о подписавшем сообщение CMS/PKCS 7.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод CheckSignature проверяет цифровую подпись сообщения и при необходимости проверяет сертификат."
  remarks: "Этот метод создает исключение при сбое проверки цифровой подписи или любые требования проверки не выполняются.       Если требуется более сложные проверки, что вызывающий может указывать, что только подпись проверяется, а затем использовать <xref:System.Security.Cryptography.X509Certificates.X509Chain>объекта, чтобы выполнить пользовательскую проверку.</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Логическое значение, указывающее, проверяется ли цифровая подпись только. Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, проверяется только подпись. Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, проверяется цифровая подпись проверяется цепь сертификатов и сертификаты в целях проверки. Назначения сертификата считаются допустимыми, если сертификат нет ключ или если ключ поддерживает цифровую подпись или неподдельность."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод CheckSignature проверяет цифровую подпись сообщения, используя указанную коллекцию сертификатов и при необходимости проверяет сертификат."
  remarks: "Этот метод создает исключение при сбое проверки цифровой подписи или любые требования проверки не выполняются.       Если требуется более сложные проверки, что вызывающий может указывать, что только подпись проверяется, а затем использовать <xref:System.Security.Cryptography.X509Certificates.X509Chain>объекта, чтобы выполнить пользовательскую проверку.</xref:System.Security.Cryptography.X509Certificates.X509Chain>"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> Объекта, который может использоваться для проверки цепи. Если дополнительные сертификаты не будут использоваться для проверки цепи используйте &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt; вместо CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Логическое значение, указывающее, проверяется ли цифровая подпись только. Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, проверяется только подпись. Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, проверяется цифровая подпись проверяется цепь сертификатов и сертификаты в целях проверки. Назначения сертификата считаются допустимыми, если сертификат нет ключ или если ключ поддерживает цифровую подпись или неподдельность."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  id: ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод ComputeCounterSignature предлагает пользователю выбрать сертификат для подписи, создает подпись другой стороны и добавляет подписи сообщения CMS/PKCS 7. Скрепляющая подпись ограничены на один уровень.'
  remarks: "Данная реализация CMS/PKCS 7 поддерживает только один уровень скрепляющая подпись.  То есть подпись можно подписать, получив скрепляющей подписи, но что скрепляющая подпись не может быть подписан еще раз.       Этот метод отображает пользовательский интерфейс, в котором выбираются авторов для данного сообщения. Это требует, что текущий процесс работает в *режиме взаимодействия с пользователем*, то есть, <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>свойству `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> Процесс обычно выполняется в режиме взаимодействия с пользователем, если он не является процессом службы или выполнения внутри веб-приложения.       В списке будет отображаться авторов, чьи сертификаты удовлетворяют следующим условиям:-сертификат имеет соответствующий закрытый ключ.      — Сертификат находится в пределах срока его действия.      — Сертификат имеет без использования ключа или использования ключа, который поддерживает цифровые подписи или неподдельность.       Сертификаты подписавшего выбираются из хранилища My.      ## Безопасность платформы .NET framework для отображения пользовательского интерфейса требуются следующие разрешения:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>для доступа к ключу подписи требуются следующие разрешения:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод ComputeCounterSignature создает скрепляющей подписи с помощью указанного подписавшего и добавляет подписи сообщения CMS/PKCS 7. Скрепляющая подпись ограничены на один уровень.'
  remarks: "Данная реализация CMS/PKCS 7 поддерживает только один уровень скрепляющая подпись.  То есть подпись можно подписать, получив скрепляющей подписи, но что скрепляющая подпись не может быть подписан еще раз.      ## Безопасность платформы .NET framework для доступа к ключу подписи требуются следующие разрешения:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> , представляющий счетчик подписавшего."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  id: CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Свойство CounterSignerInfos получает набор счетчиков авторов, связанных с информацию о подписавшем."
  remarks: 'Данная реализация CMS/PKCS 7 поддерживает только один уровень скрепляющая подпись. То есть подпись можно подписать, получив скрепляющей подписи, но что скрепляющая подпись не может быть подписан еще раз.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> коллекция, представляющая авторов счетчика для информацию о подписавшем. Если не подписывающих лиц счетчик, свойство является пустой коллекцией."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Извлекает свойство DigestAlgorithm <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref> , представляющий алгоритм хеширования, используемый при вычислении сигнатуры."
  syntax:
    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "<xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref> , Представляющий алгоритм хеширования, используемый с подписью."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  id: RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод RemoveCounterSignature удаляет скрепляющая подпись по указанному индексу из <xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>коллекции.</xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>"
  syntax:
    content: public void RemoveCounterSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс скрепляющей подписи для удаления."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод RemoveCounterSignature удаляет скрепляющая подпись для указанного <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> объекта."
  syntax:
    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);
    parameters:
    - id: counterSignerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> , представляющий удаляемый скрепляющая подпись."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение аргумента было вне допустимого диапазона значений в соответствии с определением вызываемого метода."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  id: SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Извлекает свойство SignedAttributes <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> коллекцию атрибутов знаком, связанный с информацию о подписавшем. Подписанные атрибуты подписываются вместе с остальными содержимое сообщения."
  remarks: "Примером знаком атрибута, которое может быть включено в <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>Коллекция получить в свойстве SignedAttributes <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>атрибутов времени подписи.</xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> </xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>       Подписанные атрибуты подписываются вместе с остальным <xref:System.Security.Cryptography.Pkcs.SignedCms>сообщения содержимого.</xref:System.Security.Cryptography.Pkcs.SignedCms> Это означает, что сторона, которая успешно проверила подпись может иметь уверенность в том, что содержимое этих атрибутов подлинно и не было изменено.       Объект <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>объекта и <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>объекта будет автоматически создается и помещается в свойство SignedAttributes всякий раз, когда <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName>свойство для соответствующего подписавший не является пустым.</xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName> </xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> </xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "Объект <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> коллекцию, представляющую подписанные атрибуты. Если нет никаких знаком атрибутов, свойство является пустой коллекцией."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  id: SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Свойство SignerIdentifier возвращает идентификатор сертификата подписи, связанные с информацию о подписавшем."
  syntax:
    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifier
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifier&quot;> </xref> объекта, который уникально идентифицирует сертификат, связанный с информацию о подписавшем."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  id: UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Извлекает свойство UnsignedAttributes <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> неподписанные атрибуты, с которыми связана коллекция <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> содержимого. Неподписанные атрибуты можно изменять, оставляя подпись."
  remarks: "Неподписанные атрибуты не подписаны вместе с остальными <xref:System.Security.Cryptography.Pkcs.SignedCms>сообщения содержимого.</xref:System.Security.Cryptography.Pkcs.SignedCms> Несмотря на то, что сторона успешно проверит подпись, неподписанные атрибуты были изменены и не должен считаться подлинными или целостности.       Без знака атрибута, которое может быть включено в <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>получить в свойстве UnsignedAttributes собираются скрепляющей подписи.</xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "Объект <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref> коллекцию, представляющую неподписанные атрибуты. Если атрибуты не число без знака, свойство является пустой коллекцией."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Свойство Version извлекает версию информации о подписавшем."
  remarks: 'Версия определяет, является ли сообщение PKCS #7 сообщения или сообщения шифрования Message Syntax (CMS). CMS является надмножеством новой PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "Целочисленное значение, указывающее версию информации о подписавшем."
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifier
  nameWithType: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash
  nameWithType: SignerInfo.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature
  nameWithType: SignerInfo.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature
  nameWithType: SignerInfo.ComputeCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature
  nameWithType: SignerInfo.RemoveCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
