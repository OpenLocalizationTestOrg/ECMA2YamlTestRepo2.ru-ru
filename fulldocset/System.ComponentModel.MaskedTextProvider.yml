### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MaskedTextProvider
  id: MaskedTextProvider
  children:
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char)
  - System.ComponentModel.MaskedTextProvider.Add(System.String)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  - System.ComponentModel.MaskedTextProvider.AsciiOnly
  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  - System.ComponentModel.MaskedTextProvider.Clear
  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Clone
  - System.ComponentModel.MaskedTextProvider.Culture
  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  - System.ComponentModel.MaskedTextProvider.EditPositionCount
  - System.ComponentModel.MaskedTextProvider.EditPositions
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  - System.ComponentModel.MaskedTextProvider.IncludeLiterals
  - System.ComponentModel.MaskedTextProvider.IncludePrompt
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InvalidIndex
  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsPassword
  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  - System.ComponentModel.MaskedTextProvider.Length
  - System.ComponentModel.MaskedTextProvider.Mask
  - System.ComponentModel.MaskedTextProvider.MaskCompleted
  - System.ComponentModel.MaskedTextProvider.MaskFull
  - System.ComponentModel.MaskedTextProvider.PasswordChar
  - System.ComponentModel.MaskedTextProvider.PromptChar
  - System.ComponentModel.MaskedTextProvider.Remove
  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  - System.ComponentModel.MaskedTextProvider.ResetOnSpace
  - System.ComponentModel.MaskedTextProvider.Set(System.String)
  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.SkipLiterals
  - System.ComponentModel.MaskedTextProvider.ToDisplayString
  - System.ComponentModel.MaskedTextProvider.ToString
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  langs:
  - csharp
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider
  fullName: System.ComponentModel.MaskedTextProvider
  type: Class
  summary: "Представляет службу разбора маски, которая может использоваться любым числом элементов управления, поддерживающих маскирования, таких как <xref href=&quot;System.Windows.Forms.MaskedTextBox&quot;> </xref> управления."
  remarks: "<xref:System.Windows.Forms.MaskedTextBox>Элемент управления содержит маску, которая состоит из литералов и форматирование элементов, которая используется для проверки всех данных введенных пользователем.</xref:System.Windows.Forms.MaskedTextBox> Вместо того чтобы окончательно сопоставлять отдельной программы разбора маски с <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms предоставляет его в качестве отдельной службе, представленный классом MaskedTextProvider, которая определяет синтаксис языка масок описано в документации по <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>свойство.</xref:System.Windows.Forms.MaskedTextBox.Mask%2A> </xref:System.Windows.Forms.MaskedTextBox>       Многие элементы <xref:System.Windows.Forms.MaskedTextBox>класс ссылаться их реализацию одноименная элементов связанного MaskedTextProvider.</xref:System.Windows.Forms.MaskedTextBox> Например, <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>свойство <xref:System.Windows.Forms.MaskedTextBox>класса ссылается весь доступ к <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>MaskedTextProvider класса.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>       Подсистема разбора маски, используемый MaskedTextProvider моделируется после включения управления Masked Edit в Microsoft Visual Basic версии 6. Маски языка описан в документации по <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>       С помощью класса MaskedTextProvider участвуют следующих трех уникальных строк.      | Строковое имя | Описание |   |-----------------|-----------------|   | Входной символ или строку | Представляет символы, используемые в качестве входного для применения маски. На самом деле входная строка может состоять из нескольких входных операций, включая <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>и <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> Таким образом входной строки невозможно открыть напрямую. Однако аспектов обработки входных строк могут применяться хотя <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>и <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>и свойства <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>. |   | Маска | Представляет форматирования используется для преобразования входной строки в форматированную строку маски ввода.</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> </xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Эта строка имеет значение <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>и получить доступ к главным образом хотя <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> Характеристики маски также доступны через другие члены, например <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>и свойства <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>. |   | Строку в формате | Представляет строку, возвращаемую при применении полной маски к входной строке.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> Форматированная строка может запрашиваться с большим числом членов класса, включая <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, и т. д.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> </xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> </xref:System.ComponentModel.MaskedTextProvider.Item%2A> В полном объеме отформатированная строка доступна из <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>и методы <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>. |      Настроек [!NOTE] настроек входная строка может представлять ввод данных пользователем, как в случае <xref:System.Windows.Forms.MaskedTextBox>, или могут быть созданы с другими процессами, не связанный напрямую со операции ввода вывода.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: 'public class MaskedTextProvider : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске и значение ограничения ASCII."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`"
  syntax:
    content: public MaskedTextProvider (string mask, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы ограничить ввод символов ASCII-совместимыми. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> чтобы разрешить весь набор Юникода."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  id: '#ctor(System.String,System.Globalization.CultureInfo)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске и языка и региональных параметров."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, используемый для задания символы-разделители с учетом региона.</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске, знак пароля и значение использования приглашения."
  remarks: "Этот конструктор используется полностью эквивалентен следующий вызов <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>конструктор: `MaskedTextProvider(mask , null, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: passwordChar
      type: System.Char
      description: "Объект <xref:System.Char>, будет отображаться для символы, введенные в строке пароля.</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы разрешить символом приглашения в качестве входных данных; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске, языка и региональных параметров и значение ограничения ASCII."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, используемый для задания символы-разделители с учетом региона.</xref:System.Globalization.CultureInfo>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы ограничить ввод символов ASCII-совместимыми. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> чтобы разрешить весь набор Юникода."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске, языка и региональных параметров, знак пароля и значение использования приглашения."
  remarks: "Этот конструктор используется полностью эквивалентен следующий вызов <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>конструктор: `MaskedTextProvider(mask , culture, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, используемый для задания символы-разделители с учетом региона.</xref:System.Globalization.CultureInfo>"
    - id: passwordChar
      type: System.Char
      description: "Объект <xref:System.Char>, будет отображаться для символы, введенные в строке пароля.</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы разрешить символом приглашения в качестве входных данных; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> класса с помощью указанной маске, язык и региональные параметры, значение использования приглашения, символ приглашения, знак пароля и значение ограничения ASCII."
  remarks: "Этот конструктор представляет наиболее общую перегруженную форму. `mask` Параметр должен соответствовать языка масок, определенных с помощью <xref:System.ComponentModel.MaskedTextProvider>класса, который подробно описан в <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>свойство <xref:System.Windows.Forms.MaskedTextBox>класса.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> </xref:System.ComponentModel.MaskedTextProvider>       Так как нейтральные языки и региональные параметры не удается запросить сведения о культуре, <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>будет использовать конструктор <xref:System.Globalization.CultureInfo.GetCultures%2A>метод для поиска первого нейтральную культуру, который используется для определения правильной разделители.</xref:System.Globalization.CultureInfo.GetCultures%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Объект <xref:System.String>, представляющий маски ввода.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>, используемый для задания символы-разделители с учетом региона.</xref:System.Globalization.CultureInfo>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, следует ли использовать символ приглашения как допустимый входной символ.</xref:System.Boolean>"
    - id: promptChar
      type: System.Char
      description: "Объект <xref:System.Char>, будет отображаться как заполнитель для ввода данных пользователем.</xref:System.Char>"
    - id: passwordChar
      type: System.Char
      description: "Объект <xref:System.Char>, будет отображаться для символы, введенные в строке пароля.</xref:System.Char>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы ограничить ввод символов ASCII-совместимыми. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> чтобы разрешить весь набор Юникода."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Параметр маски <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или <xref:System.String.Empty>.</xref:System.String.Empty>       - или - маска содержит один или несколько непечатаемые символы."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  id: Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет указанного входного символа, в конец форматируемой строки."
  remarks: "Добавляет метод Add `input` символьные значения в первую позицию доступны в форматированную строку после позиции последнего назначенного, которое представляется <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Этот метод завершится с ошибкой по любой из следующих причин:-входное значение `input`, является непечатаемым, или не соответствует элементу маски.      -Нет отсутствуют доступные редактируемые позиции в форматированную строку, или имеется доступные редактируемые позиции после последней назначенной позиции."
  syntax:
    content: public bool Add (char input);
    parameters:
    - id: input
      type: System.Char
      description: "Объект <xref:System.Char>значение для добавления в отформатированной строке.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если введенный символ был успешно добавлен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  id: Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет символы в указанной входной строке, в конец форматируемой строки."
  remarks: "Метод Add добавляет символы из `input` строку отформатированную строку, начиная с позиции первого доступны после <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Этот метод завершится с ошибкой по любой из следующих причин:-символы в входное значение `input`, является непечатаемым или входное значение не соответствует элементу маски.      -Не недостаточно доступных редактируемых позиций в форматированную строку после последней назначенной позиции.       Если этот метод завершается ошибкой, выполняются без дополнения, а метод возвращает `false`."
  syntax:
    content: public bool Add (string input);
    parameters:
    - id: input
      type: System.String
      description: "Объект <xref:System.String>содержащих значения символов для добавления в отформатированной строке.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы из входной строки были успешно добавлены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для указания, что никакие символы были добавлены."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет в конец форматируемой строки указанного входного символа, а затем выводит позицию и описательные сведения."
  remarks: "Метод Add пытается добавить `input` символьные значения в первую позицию доступны в форматированную строку после позиции последнего назначенного, которое представляется <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Этот метод завершится ошибкой, если все доступные позиции находятся до последней назначенной позиции. Этот метод завершится с ошибкой по любой из следующих причин:-входное значение `input`, является непечатаемым, или не соответствует элементу маски.      -Нет отсутствуют доступные редактируемые позиции в форматированную строку, или имеется доступные редактируемые позиции после последней назначенной позиции.       Этот метод работает так же, как переопределения, принимающий один <xref:System.Char>параметр <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, за исключением того, что он выводит дополнительную информацию.</xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> </xref:System.Char>"
  syntax:
    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "Объект <xref:System.Char>значение для добавления в отформатированной строке.</xref:System.Char>"
    - id: testPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, в которой была предпринята попытка добавить знак. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если введенный символ был успешно добавлен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет символы в указанной входной строке, в конец форматируемой строки, а затем выводит позицию и описательные сведения."
  remarks: "Метод Add добавляет символы из `input` строку отформатированную строку, начиная с позиции первого доступны после <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Этот метод завершится с ошибкой по любой из следующих причин:-символы в входное значение `input`, является непечатаемым или входное значение не соответствует элементу маски.      -Не недостаточно доступных редактируемых позиций в форматированную строку после последней назначенной позиции.       Если этот метод завершается ошибкой, выполняются без дополнения, а метод возвращает `false`.       Этот метод работает так же, как переопределения, принимающий один <xref:System.String>параметр <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, за исключением того, что он выводит дополнительную информацию.</xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> </xref:System.String>"
  syntax:
    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Объект <xref:System.String>содержащих значения символов для добавления в отформатированной строке.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, в которой была предпринята попытка добавить знак. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы из входной строки были успешно добавлены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для указания, что никакие символы были добавлены."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  id: AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли символ приглашения должно считаться символа ввода или не."
  remarks: "Значение свойства AllowPromptAsInput задается в <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>конструктор.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       Даже если AllowPromptAsInput не `true`, для принятия должно быть допустимым для текущего расположения в маске символом приглашения."
  syntax:
    content: public bool AllowPromptAsInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь может ввести <xref:System.ComponentModel.MaskedTextProvider.PromptChar*>в элемент управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  id: AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, принимает ли маска символы вне набора символов ASCII."
  remarks: "Значение свойства AsciiOnly задается в <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>конструктор.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       Если `true`, AsciiOnly ограничивает введенных пользователем данных в кодировке ASCII."
  syntax:
    content: public bool AsciiOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если только принимается ASCII; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> может принимать любой произвольный знак Юникода. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  id: AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает количество позиций знаков для редактирования, которые уже были успешно назначены входного значения."
  remarks: "Общее количество позиций знаков для редактирования, представленного <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>свойство, должно быть равно сумме AssignedEditPositionCount и <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AssignedEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержит количество редактируемых позиций знаков в маске ввода, уже назначено значение символа в форматированную строку.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  id: AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает количество позиций знаков для редактирования в маске ввода, которым еще не были назначены входное значение."
  remarks: "Общее количество позиций знаков для редактирования, представленного <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>свойство, должно быть равно сумме <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>и свойства AvailableEditPositionCount.</xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AvailableEditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержит число символов для редактирования располагает, еще не было назначено значение символа.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear
  id: Clear
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Очищает все введенные редактируемые знаки из форматируемой строки, заменяя их знаками приглашения."
  remarks: "Метод Clear повторно инициализирует форматируемой строки, вставляется символ приглашения всех редактируемых позиций."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  id: Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Очищает все введенные редактируемые знаки из форматируемой строки, заменяя их знаками приглашения, а затем выводит описательные сведения."
  remarks: "Метод Clear повторно инициализирует форматируемой строки, вставляется символ приглашения всех редактируемых позиций. Предпочитает для переопределения, который не принимает никаких параметров <xref:System.ComponentModel.MaskedTextProvider.Clear>, за исключением того, он выводит дополнительную информацию.</xref:System.ComponentModel.MaskedTextProvider.Clear>"
  syntax:
    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clone
  id: Clone
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Создает копию текущего <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>."
  remarks: "Метод Clone возвращает новую копию текущего <xref:System.ComponentModel.MaskedTextProvider>.</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> Объект, создаваемый данным методом, приводится к объекту."
  overload: System.ComponentModel.MaskedTextProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Culture
  id: Culture
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает язык и региональные параметры, определяющее значение локализуемых разделителей и местозаполнителей в маске ввода."
  remarks: "Свойство языка и региональных параметров задается в <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>конструктор.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>содержащий языком и региональными параметрами сведения, связанные с маской ввода.</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  id: DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает по умолчанию пароль символ, используемый запутанные вводимых пользователем данных."
  remarks: "Свойство DefaultPasswordChar определено в <xref:System.ComponentModel.MaskedTextProvider>класса следует символ звездочки (*).</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public static char DefaultPasswordChar { get; }
    return:
      type: System.Char
      description: "Объект <xref:System.Char>, представляющий знак пароля по умолчанию.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  id: EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает количество редактируемых позиций в форматированную строку."
  remarks: "Общее количество позиций знаков для редактирования, представленный свойством EditPositionCount, должен быть равен сумме <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>и <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> Это значение включает необходимые и дополнительные символы для редактирования."
  syntax:
    content: public int EditPositionCount { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержит количество редактируемых позиций в форматированную строку.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  id: EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает вновь созданный перечислитель для редактируемых позиций в форматированную строку."
  remarks: "Для каждого доступа к свойству EditPositions создается временная коллекция редактируемых позиций, полученный <xref:System.Collections.IEnumerator>оперирует.</xref:System.Collections.IEnumerator>       Эта коллекция доступна только для чтения."
  syntax:
    content: public System.Collections.IEnumerator EditPositions { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>, Поддерживает перечисление по редактируемых позиций в форматированную строку.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositions*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой назначенной редактируемой позиции после заданной позиции, используя заданное направление поиска."
  remarks: "Форматированная строка состоит из редактируемых знаков и литералов, скопированных из маски. Позиций редактируемых знаков будут либо заняты знаком приглашения, копируются из маски, если они не были назначены, или с символа ввода, если им была назначена входных данных.       Метод FindAssignedEditPositionFrom используется для поиска первого назначенного знака после указанной позиции и поиска направление. Результат впоследствии могут передаваться как параметр <xref:System.ComponentModel.MaskedTextProvider.Item%2A>индексатор для получения значения, назначенные в этой позиции.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>И <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>методы являются дополняет этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindAssignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, чтобы начать поиск."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляет отсчитываемый от нуля позиция первого назначенный позиция обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой назначенной редактируемой позиции между заданными позициями, используя заданное направление поиска."
  remarks: "Форматированная строка состоит из редактируемых знаков и литералов, скопированных из маски. Позиций редактируемых знаков будут либо заняты знаком приглашения, копируются из маски, если они не были назначены, или с символа ввода, если им была назначена входных данных.       Метод FindAssignedEditPositionInRange используется для поиска первого символа, назначенного между двух заданных позиций, включительно, используя заданное направление поиска. Результат впоследствии могут передаваться как параметр <xref:System.ComponentModel.MaskedTextProvider.Item%2A>индексатор для получения значения, назначенные в этой позиции.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>И <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>методы являются дополняет этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, с которого начинается поиск."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается поиска."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляет отсчитываемый от нуля позиция первого назначенный позиция обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  id: FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой редактируемой позиции после заданной позиции, используя заданное направление поиска."
  remarks: "Метод FindEditPositionFrom используется для поиска следующего назначенных или неназначенных редактируемой позиции в форматированную строку после указанной позиции.       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>Метод является дополнением этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, чтобы начать поиск."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий Отсчитываемая от нуля позиция первого редактируемой позиции обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой редактируемой позиции между заданными позициями, используя заданное направление поиска."
  remarks: "Метод FindEditPositionInRange используется для поиска первого символа для редактирования между двух заданных позиций, включительно, используя заданное направление поиска. Результат впоследствии могут передаваться как параметр <xref:System.ComponentModel.MaskedTextProvider.Item%2A>индексатор для получения значения, назначенные в этой позиции.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>Метод является дополнением этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, с которого начинается поиск."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается поиска."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий Отсчитываемая от нуля позиция первого редактируемой позиции обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  id: FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой нередактируемой позиции после заданной позиции, используя заданное направление поиска."
  remarks: "Метод FindNonEditPositionFrom используется для поиска следующий символ в форматированную строку после указанной позиции. Результат впоследствии могут передаваться как параметр <xref:System.ComponentModel.MaskedTextProvider.Item%2A>индексатор для получения литеральное значение в этой позиции.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>Метод является дополнением этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>"
  syntax:
    content: public int FindNonEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, чтобы начать поиск."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий позицию (с нуля) первой позиции литерала обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой нередактируемой позиции между заданными позициями, используя заданное направление поиска."
  remarks: "Метод FindNonEditPositionInRange используется для поиска первого символ между двух заданных позиций, включительно, используя заданное направление поиска. Результат впоследствии могут передаваться как параметр <xref:System.ComponentModel.MaskedTextProvider.Item%2A>индексатор для получения литеральное значение в этой позиции.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>Метод является дополнением этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>"
  syntax:
    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, с которого начинается поиск."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается поиска."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий позицию (с нуля) первой позиции литерала обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой неназначенной редактируемой позиции после заданной позиции, используя заданное направление поиска."
  remarks: "Форматированная строка состоит из редактируемых знаков и литералов, скопированных из маски. Позиций редактируемых знаков будут либо заняты знаком приглашения, копируются из маски, если они не были назначены, или с символа ввода, если им была назначена входных данных.       Метод FindUnassignedEditPositionFrom используется для поиска первого символа неназначенные после указанной позиции и поиска направление. Эту позицию должен занимать символом приглашения.       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>И <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>методы являются дополняет этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindUnassignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, чтобы начать поиск."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий Отсчитываемая от нуля позиция первого неназначенная редактируемой позиции обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает позицию первой неназначенной редактируемой позиции между заданными позициями, используя заданное направление поиска."
  remarks: "Форматированная строка состоит из редактируемых знаков и литералов, скопированных из маски. Позиций редактируемых знаков будут либо заняты знаком приглашения, копируются из маски, если они не были назначены, или с символа ввода, если им была назначена входных данных.       Метод FindUnassignedEditPositionInRange используется для поиска первого символа неназначенные между двух заданных позиций, включительно, используя заданное направление поиска. Эту позицию должен занимать символом приглашения.       <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>И <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>методы являются дополняет этого метода.</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, с которого начинается поиск."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается поиска."
    - id: direction
      type: System.Boolean
      description: "Объект <xref:System.Boolean>поиска, указывающее направление; либо <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> для поиска вперед или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для поиска в обратном направлении.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "В случае успешного выполнения <xref:System.Int32>представляющий Отсчитываемая от нуля позиция первого неназначенная редактируемой позиции обнаружена; в противном случае <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли указанный <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> обозначает успешное выполнение или сбой."
  remarks: 'Следующие методы <xref:System.ComponentModel.MaskedTextProvider>класс содержит параметр типа <xref:System.ComponentModel.MaskedTextResultHint>, используемый для вывода сведений об операции метода: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>и <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Clear%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> </xref:System.ComponentModel.MaskedTextResultHint> </xref:System.ComponentModel.MaskedTextProvider> Метод GetOperationResultFromHint интерпретирует это значение и возвращает логическое значение, указывающее, является ли <xref:System.ComponentModel.MaskedTextResultHint>сообщит, что операция выполнена успешное выполнение или сбой.</xref:System.ComponentModel.MaskedTextResultHint>'
  syntax:
    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> значение обычно получен в виде выходного параметра в предыдущей операции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> значение представляет успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если сбой."
  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  id: IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, указывающее, следует ли включать литералы в маске ввода в форматированную строку."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>И определяет, отображаются ли символы приглашения и литералы при вызове свойства IncludeLiterals <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Оба эти свойства, чтобы `false`, анализируемой строке будет представлять только символы, введенные пользователем."
  syntax:
    content: public bool IncludeLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включаются литералы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  id: IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, указывающее, является ли <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>используется для представления отсутствия пользовательского ввода при отображении форматируемой строки.</xref:System.Windows.Forms.MaskedTextBox.PromptChar*>"
  remarks: "IncludePrompt и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства определяют, отображаются ли символы приглашения и литералы при вызове <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метода.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Оба эти свойства, чтобы `false`, анализируемой строке будет представлять только символы, введенные пользователем."
  syntax:
    content: public bool IncludePrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ приглашения используется для представления позициях, где был предоставлен ввод данных пользователем; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  id: InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Вставляет указанный символ в указанной позиции форматируемой строки."
  remarks: "Метод InsertAt вставляет символ в позиции первого изменения, или превышена, указанному `pos` параметра. Этот метод будет сдвигать все существующие знаки после точки вставки на одну позицию, чтобы освободить место для вставленных `input` символов. Если возникает одна из следующих ошибок, вставка не выполняется и метод возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Редактируемый знак не найден в форматированную строку в или с заданной позиции `pos`.      -Вставляемый знак, `input`, не является допустимым входного символа, так как он является непечатаемым или не соответствует элементу маски.      -Нет нет доступных позиций справа от точки вставки, чтобы существующие символы не могут быть смещены.      -Смещение существующих знаков приведет к нарушению маски.       Пустой `input` строка вызовет никаких изменений в отформатированную строку, но будет возвращать `true`."
  syntax:
    content: public bool InsertAt (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Вставляемый.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматируемой строки для вставки знака."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вставка выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  id: InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Вставляет указанную строку в указанной позиции форматируемой строки."
  remarks: "Метод InsertAt вставляет каждый символ из `input` строка в позиции редактирования, находящейся в позиции `pos` и более. Этот метод будет сдвигать все существующие знаки после точки вставки на одну позицию для каждого вставляемого знака. Если возникает одна из следующих ошибок, вставка не выполняется и метод возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Существует недостаточно редактируемых знаков в форматированную строку в или с заданной позиции `pos`, чтобы вставить все символы из `input` строки.      — Один или несколько знаков не символа ввода, так как они являются непечатными или не соответствует элементу маски.      -Не хватает позиций справа от точки вставки, чтобы существующие символы не могут быть смещены.      -Смещение существующих знаков приведет к нарушению маски. Обратите внимание, что это смещение происходит во время вставки каждого отдельного символа.       Пустой `input` строка вызовет никаких изменений в отформатированную строку, но будет возвращать `true`."
  syntax:
    content: public bool InsertAt (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Вставляемый.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматируемой строки для вставки входной строки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вставка выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Вставляет указанный символ в указанной позиции форматируемой строки, возвращая последнюю позицию вставки и статус операции."
  remarks: "Метод InsertAt вставляет символ в позиции первого изменения, или превышена, указанному `pos` параметра. Этот метод будет сдвигать все существующие знаки после точки вставки на одну позицию, чтобы освободить место для вставленных `input` символов. Если возникает одна из следующих ошибок, вставка не выполняется и метод возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Редактируемый знак не найден в форматированную строку в или с заданной позиции `pos`.      -Вставляемый знак, `input`, не является допустимым входного символа, так как он является непечатаемым или не соответствует элементу маски.      -Нет нет доступных позиций справа от точки вставки, чтобы существующие символы не могут быть смещены.      -Смещение существующих знаков приведет к нарушению маски.       Пустой `input` строка вызовет никаких изменений в отформатированную строку, но будет возвращать `true`."
  syntax:
    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Вставляемый.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматируемой строки для вставки знака."
    - id: testPosition
      type: System.Int32
      description: "Если метод выполнен успешно, последняя позиция вставки символа; в противном случае — первая позиция, в которой не удалось выполнить вставку. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции вставки. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вставка выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Вставляет указанную строку в указанной позиции форматируемой строки, возвращая последнюю позицию вставки и статус операции."
  remarks: "Метод InsertAt вставляет каждый символ из `input` строка в позиции редактирования, находящейся в позиции `pos` и более. Этот метод будет сдвигать все существующие знаки после точки вставки на одну позицию для каждого вставляемого знака. Если возникает одна из следующих ошибок, вставка не выполняется и метод возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Существует недостаточно редактируемых знаков в форматированную строку в или с заданной позиции `pos`, чтобы вставить все символы из `input` строки.      — Один или несколько знаков не символа ввода, так как они являются непечатными или не соответствует элементу маски.      -Не хватает позиций справа от точки вставки, чтобы существующие символы не могут быть смещены.      -Смещение существующих знаков приведет к нарушению маски. Обратите внимание, что это смещение происходит во время вставки каждого отдельного символа.       Пустой `input` строка вызовет никаких изменений в отформатированную строку, но будет возвращать `true`."
  syntax:
    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Вставляемый.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматируемой строки для вставки входной строки."
    - id: testPosition
      type: System.Int32
      description: "Если метод выполнен успешно, последняя позиция вставки символа; в противном случае — первая позиция, в которой не удалось выполнить вставку. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции вставки. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вставка выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  id: InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает верхнюю границу диапазона неправильных индексов."
  remarks: "Свойство InvalidIndex используется для представления результат, который не является допустимым для операции индексирования, такие как <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>метод.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>       При использовании поставщика или реализации собственного, следует использовать это свойство решаете, если индекс является недопустимым, вместо жестко запрограммированного знания о недопустимых значений."
  syntax:
    content: public static int InvalidIndex { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее максимальный неправильный индекс, определяемый реализацией поставщика. Например если минимальный допустимый индекс равен 0, это свойство будет возвращать значение -1."
  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  id: IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, доступен ли заданная позиция для назначения."
  remarks: "Возвращает метод IsAvailablePosition `true` только в том случае, если выполняются все следующие условия: - `pos` параметр является в пределах границ форматируемой строки, то есть его значение больше или равно нулю и меньше чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Заданная позиция является редактируемым знаком.      -Символ уже не были назначены в эту позицию."
  syntax:
    content: public bool IsAvailablePosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в маске для тестирования."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если в указанной позиции форматируемой строки для редактирования и не был назначен еще; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  id: IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли заданная позиция для редактирования."
  remarks: "Возвращает метод IsEditPosition `true` только в том случае, если выполняются оба из следующих условий: - `pos` параметр является в пределах границ форматируемой строки, то есть его значение больше или равно нулю и меньше чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Заданная позиция является редактируемым знаком."
  syntax:
    content: public bool IsEditPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в маске для тестирования."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если в указанной позиции в форматированную строку можно изменять; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  id: IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, определяющее, должна ли применяться защита паролем в форматированную строку."
  remarks: "Защита паролем может быть инициирована одним из следующих двух способов: - параметр <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство, отличное от`null` значение.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      -Свойства IsPassword значение `true`., который также задает <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>Свойства <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>значение.</xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       IsPassword используется <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>и <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>методы для определения необходимости раскрывать фактические входные символы или скрывать их с <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: public bool IsPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если входная строка имеет значение интерпретируется как строка пароля; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  id: IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли указанный символ является допустимым символом ввода."
  remarks: "Допустимые входные символы включают все печатных символов, включая буквы, цифры, знаки пунктуации, символы и символ пробела."
  syntax:
    content: public static bool IsValidInputChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>Значение для тестирования.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заданный знак содержит допустимое входное значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  id: IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли указанный символ является допустимым знаком маски."
  remarks: "Допустимых знаков маски включают все печатных символов, включая буквы, цифры, знаки пунктуации, символы и символ пробела."
  syntax:
    content: public static bool IsValidMaskChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>Значение для тестирования.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заданный знак содержит допустимое значение маски; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  id: IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли указанный символ является допустимым знаком пароля."
  remarks: "Допустимый пароль символы включают все печатаемые символы и нуль-символ, который используется для отключения функции пароля. Печатаемые символы включают буквы, цифры, знаки пунктуации, символы и символ пробела."
  syntax:
    content: public static bool IsValidPasswordChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "<xref:System.Char>Значение для тестирования.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заданный знак содержит допустимое значение пароля; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает элемент в указанной позиции в форматированную строку."
  remarks: "Свойство Item является стандартной индексатором для <xref:System.ComponentModel.MaskedTextProvider>класса.</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс извлекаемого элемента."
    return:
      type: System.Char
      description: "<xref:System.Char>В указанной позиции в форматированную строку.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>меньше нуля или больше или равно <xref:System.ComponentModel.MaskedTextProvider.Length*> маски."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  id: LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает индекс в маске правого входного символа, который был назначен маски."
  remarks: "Свойство LastAssignedPosition представляет самый дальний изменить позицию в маске относительно источника, которой была предоставлена во входной символ. Для языков, чтения слева направо (LTR), таких как английский это самое правое назначенной позиции; для языков, чтения справа налево (RTL) это будет крайней левой позиции."
  syntax:
    content: public int LastAssignedPosition { get; }
    return:
      type: System.Int32
      description: "Если по крайней мере один входной символ был назначен маски, <xref:System.Int32>содержащего индекс крайней правой назначенной позиции; в противном случае, если позиция не имеет назначения, <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Length
  id: Length
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает длину маски маски модификатор символов."
  remarks: "Свойство Length представляет общее число символов в маске, включая литералы и редактируемые знаки. Число буквенных символов можно определить путем вычитания значения <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>от длины.</xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>       Длина также описывает длина форматируемой строки, включая входные символы, литералы и символы приглашения."
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Содержит число позиций в маске, за исключением символов, которые изменения маски ввода.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.Length*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Mask
  id: Mask
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает маску ввода."
  remarks: "Свойство маски задается в <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>конструктор.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> Эта маска должна содержать только допустимые символы в соответствии с языком маски."
  syntax:
    content: public string Mask { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>содержащий полную маску.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.Mask*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  id: MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, были ли введены все необходимые данные в отформатированную строку."
  remarks: "Свойства MaskCompleted проверка необходимых входных элементов. Чтобы определить, были ли введены все обязательные и необязательные входные элементы, используйте <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>свойство <xref:System.Windows.Forms.MaskedTextBox>вместо этого класс.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>       Текущее значение <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>свойства определяет, какие элементы форматирования, рассматриваются как требуется, а какие нет.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все необходимые входные данные были внесены в маске; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  id: MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, были ли введены все обязательные и необязательные входные данные в отформатированную строку."
  remarks: "Чтобы проверить, если только необходимые входные элементы были введены, используйте <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>свойство вместо.</xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> Текущее значение <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>свойства определяет, какие элементы форматирования, рассматриваются как требуется, а какие нет.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если были введены все обязательные и необязательные входные данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.MaskFull*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  id: PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает символ, который должен быть замещен фактические входные символы."
  remarks: "При вводе конфиденциальных данных это обычно следует скрыть фактические данные, введенные пользователем во время операции вывода. Если PasswordChar свойству присвоено значение, отличное от`null` символов, например, вывода методы <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>и <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>скроет входных символов с символом указанного пароля.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Присвоение этому свойству `null` отключает функцию защиты паролем."
  syntax:
    content: public char PasswordChar { get; set; }
    return:
      type: System.Char
      description: "<xref:System.Char>Значение, используемое как знак пароля.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Символ пароль, указанный при задании этого свойства совпадает со значением текущего символ приглашения, <xref:System.ComponentModel.MaskedTextProvider.PromptChar*>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> Два необходимы отличаться."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Символ, указанный при задании этого свойства не является допустимый пароль символом, что определяется <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>метод.</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  id: PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает символ, используемый для представления отсутствия пользовательского ввода для всех доступных позиций редактирования."
  remarks: "Представляет символ приглашения, которая используется свойство PromptChar <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>и <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>методы представляют ее текущее состояние форматированную строку ввода.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Символ приглашения помещается в редактируемые позиции, которые еще не были назначены входного значения. В некоторых версиях <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод также зависеть от значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A>"
  syntax:
    content: public char PromptChar { get; set; }
    return:
      type: System.Char
      description: "Знак, предлагающий пользователю ввести данные. Значение по умолчанию — символ подчеркивания (_)."
  overload: System.ComponentModel.MaskedTextProvider.PromptChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Символ приглашения, указанный при задании этого свойства является таким же, как текущий пароль символ <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*> Два необходимы отличаться."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Символ, указанный при задании этого свойства не является допустимый пароль символом, что определяется <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>метод.</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove
  id: Remove
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет последний назначенный знак из форматируемой строки."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>Метод не оказывает влияния, если доступных символов нет назначенного маске еще.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       При удалении последнего назначенного знака форматируемой строки в этой позиции, разрешая последующий ввод сбрасывается символа маски для редактирования."
  syntax:
    content: public bool Remove ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет последний назначенный знак из форматируемой строки, а затем выводит позицию удаления и описательные сведения."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Remove%2A>Метод не оказывает влияния, если доступных символов нет назначенного маске еще.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       При удалении последнего назначенного знака форматируемой строки в этой позиции, разрешая последующий ввод сбрасывается символа маски для редактирования."
  syntax:
    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: testPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, где фактически удаляются символ. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет назначенный знак в указанной позиции из форматируемой строки."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>Метод не оказывает влияния, если доступных символов нет назначенных в указанной позиции удаления.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> Литералы не затрагиваются этим методом.       При удалении знака влево, чтобы заполнить промежуток, созданный удалением переместит остальные символы выше располагается в маске. Входные данные будут заменены освобождаемые. Если перемещение символов запрещена определение маски, удаление не происходит, и <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>возвращает `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Вызов этого метода эквивалентен счетчику вызов перегруженного <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>версии: `RemoveAt(pos, pos);` </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>"
  syntax:
    content: public bool RemoveAt (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция символа, назначенного для удаления."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  id: RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет назначенные знаки между заданными позициями форматируемой строки."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>Метод не оказывает влияния на удаление позиций, определенных доступных символов нет назначенных.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       При удалении знака влево, чтобы заполнить промежуток, созданный удалением переместит остальные символы выше располагается в маске. Входные данные будут заменены освобождаемые. Если перемещение символов запрещена определение маски, удаление не происходит, и <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>возвращает `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого символа, назначенного для удаления."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля индекс последнего назначенного знака."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет назначенные знаки между заданными позициями форматируемой строки, а затем выводит позицию удаления и описательные сведения."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>Метод не оказывает влияния на удаление позиций, определенных доступных символов нет назначенных.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       При удалении знака влево, чтобы заполнить промежуток, созданный удалением переместит остальные символы выше располагается в маске. Входные данные будут заменены освобождаемые. Если перемещение символов запрещена определение маски, удаление не происходит, и <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>возвращает `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Эта версия <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>предоставляет два дополнительных выходных параметров для передачи дополнительных сведений об операции метода.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого символа, назначенного для удаления."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля индекс последнего назначенного знака."
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, из которой были удалены знаки; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно удален. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  id: Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет указанное символьное значение один символ, или превышена указанной позиции."
  remarks: "Метод Replace выполняет поиск первой редактируемой позиции в форматированную строку в или с заданной позиции `pos`. Если он найден, значение указанного символа изменяется значение редактируемой позиции `input`. Любое из следующих условий приведет к ошибку, которая замена не должны быть выполнены и значение `false` возвращаемых: - `pos` меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Редактируемый знак не найден в форматированную строку в или с заданной позиции `pos`.      -Символ замены `input`, не является допустимым входного символа, так как он является непечатаемым или не соответствует элементу маски."
  syntax:
    content: public bool Replace (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Значение, которое заменяет существующее значение.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция для поиска первого редактируемого знака для замены."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  id: Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет диапазон редактируемых знаков, начиная с указанной позиции в указанной строке."
  remarks: "Метод Replace ищет редактируемой позиции или после нее указанной позиции `pos`. При условии, что имеется недостаточно редактируемых позиций после этой точки, существующие значения символа, замененное по одному на содержимое параметра строки замены, `input`.       Следующие условия считаются ошибками. При возникновении ошибки происходит замена отсутствует, и функция Replace возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Не хватает редактируемых позиций в форматируемой строки для хранения содержимого строки замены.      — Одно из значений символ замены является недопустимым, поскольку он является непечатаемым или не соответствует элементу маски."
  syntax:
    content: public bool Replace (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение, используемое для замены существующих редактируемых знаков.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция для поиска первого редактируемого знака для замены."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы были успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет один символ, или превышена указанной позиции указанное символьное значение, а затем выводит позицию удаления и описательные сведения."
  remarks: "Метод Replace выполняет поиск первой редактируемой позиции в форматированную строку в или с заданной позиции `pos`. Если он найден, значение указанного символа изменяется значение редактируемой позиции `input`. Любое из следующих условий приведет к ошибку, замена не должны быть выполнены и значение `false` возвращаемых: - `pos` меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Редактируемый знак не найден в форматированную строку в или с заданной позиции `pos`.      -Символ замены `input`, не является допустимым входного символа, так как он является непечатаемым или не соответствует элементу маски.       Помимо возвращаемого значения этот метод имеет два параметра выходных данных, предоставляющих дополнительные сведения об операции замены."
  syntax:
    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Значение, которое заменяет существующее значение.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция для поиска первого редактируемого знака для замены."
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, в которой был фактически заменен последнего символа; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции замены. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет диапазон редактируемых знаков, начиная с указанной позиции в указанной строке, а затем выводит позицию удаления и описательные сведения."
  remarks: "Метод Replace ищет редактируемой позиции или после нее указанной позиции `pos`. При условии, что имеется недостаточно редактируемых позиций после этой точки, существующие значения символа, замененное по одному на содержимое параметра строки замены, `input`.       Следующие условия считаются ошибками. При возникновении ошибки происходит замена отсутствует, и функция Replace возвращает `false`.      - `pos` Меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Не хватает редактируемых позиций в форматируемой строки для хранения содержимого строки замены.      — Одно из значений символ замены является недопустимым, поскольку он является непечатаемым или не соответствует элементу маски.       Помимо возвращаемого значения этот метод имеет два параметра выходных данных, предоставляющих дополнительные сведения об операции замены."
  syntax:
    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение, используемое для замены существующих редактируемых знаков.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "Отсчитываемая от нуля позиция для поиска первого редактируемого знака для замены."
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, в которой был фактически заменен последнего символа; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции замены. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы были успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет один символ между заданными начальной и конечной позициями указанное символьное значение, а затем выводит позицию удаления и описательные сведения."
  remarks: "Замените метод выполняет поиск первой редактируемой позиции в форматированную строку между указанным начальным и конечным положениями. Если он найден, значение указанного символа изменяется значение редактируемой позиции `input`. Любое из следующих условий приведет к ошибку, замена не должны быть выполнены и значение `false` возвращаемых: - `startPos` или `endPos` указывают на период до начала форматируемой строки или после ее окончания.      -Редактируемый знак не найден в указанный интервал.      -Символ замены `input`, не является допустимым входного символа, так как он является непечатаемым или не соответствует элементу маски.       Помимо возвращаемого значения этот метод имеет два параметра выходных данных, предоставляющих дополнительные сведения об операции замены."
  syntax:
    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Значение, которое заменяет существующее значение.</xref:System.Char>"
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается замена."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается замена."
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, в которой был фактически заменен последнего символа; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции замены. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если символ был успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Заменяет диапазон редактируемых знаков между заданными начальной и конечной позиции с указанной строкой, а затем выводит позицию удаления и описательные сведения."
  remarks: "Замените метод выполняет поиск первой редактируемой позиции в форматированную строку между указанным начальным и конечным положениями. При условии, что имеется недостаточно редактируемых позиций после этой точки, существующие значения символа, замененное по одному на содержимое параметра строки замены, `input`.       Следующие условия считаются ошибками. При возникновении ошибки происходит замена отсутствует, и функция Replace возвращает `false`.      - `startPos` Или `endPos` указывают на период до начала форматируемой строки или после ее окончания.      -Не хватает редактируемых позиций в форматируемой строки для хранения содержимого строки замены.      — Одно из значений символ замены является недопустимым, поскольку он является непечатаемым или не соответствует элементу маски.       Помимо возвращаемого значения этот метод имеет два параметра выходных данных, предоставляющих дополнительные сведения об операции замены."
  syntax:
    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение, используемое для замены существующих редактируемых знаков.</xref:System.String>"
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается замена."
    - id: endPosition
      type: System.Int32
      description: "Отсчитываемый от нуля позиция в форматированную строку, в которой заканчивается замена."
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, в которой был фактически заменен последнего символа; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции замены. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы были успешно заменен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  id: ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, определяющее способ обработки введенного символа, совпадающего с символом приглашения."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>можно считать две категории символов, то и символы приглашения особым образом.</xref:System.ComponentModel.MaskedTextProvider> Как правило, каждый входной символ будет сравниваться с маске и либо принять или отклонить. При условии, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>свойству присвоено значение, отличное от `null`, затем установите значение свойства ResetOnPrompt `true` приведет к специальной обработки для символом приглашения.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> Если добавляется символ приглашения, то текущая позиция символа маски для очистки и текущей позицией с целью переходить к следующему символу для редактирования.       ResetOnPrompt имеет приоритет над <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>Свойства, как описано в следующей таблице.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      | ResetOnPrompt | <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>| Результирующее поведение |   |---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|   | `true`|`true`| Можно добавить символ приглашения и вызывает сброс текущей позиции маски.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Значение по умолчанию. |   | `true`|`false`| Можно добавить символ приглашения и вызывает сброс текущей позиции маски. |   | `false`|`true`| Символ приглашения обрабатывается как обычный символ ввода. |   | `false`|`false`| Символ приглашения не является допустимым, и методы, попытка добавить символ завершится ошибкой. |"
  syntax:
    content: public bool ResetOnPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ввод символа приглашения вызывает текущей редактируемой позиции в маске требуется сбросить; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> означает символ приглашения должен обрабатываться как обычный введенный знак. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  id: ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, определяющее способ обработки введенного знака пробела."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>можно считать две категории символов, пробелы и символы приглашения особым образом.</xref:System.ComponentModel.MaskedTextProvider> Как правило, каждый входной символ будет сравниваться с маске и либо принять или отклонить. Свойства ResetOnSpace `true` приведет к очистке текущей позиции знака маски и текущей позиции Дополнительно к следующему символу для редактирования.       ResetOnSpace полезно при назначении текста, который был сохранен в строке, за исключением где строке заменяются пробелами. Перед восстановлением такая строка, установите значение ResetOnSpace `true` приведет к сбросу символы приглашения в позициях, занятую пробелов во входной строке."
  syntax:
    content: public bool ResetOnSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если вводимый символ пробела вызывает текущей редактируемой позиции в маске требуется сбросить; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> означает, он должен обрабатываться как обычный введенный знак. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  id: Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Задает форматированную строку в указанной входной строке."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>Метод очищает существующее содержимое форматированную строку и затем применяет маску на `input` строку для обновления содержимого форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       Следующие условия считаются ошибками. При возникновении ошибки, отформатированная строка остается без изменений и <xref:System.ComponentModel.MaskedTextProvider.Set%2A>возвращает `false`.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -Не хватает редактируемых позиций в форматируемой строки для хранения содержимого строки замены.      — Одно из значений символ замены является недопустимым, поскольку он является непечатаемым или не соответствует элементу маски."
  syntax:
    content: public bool Set (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение, используемое для задания форматируемой строки.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы были успешно установлены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Задает форматированную строку в указанной входной строке, а затем выводит позицию удаления и описательные сведения."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.Set%2A>Метод очищает существующее содержимое форматированную строку и затем применяет маску на `input` строку для обновления содержимого форматируемой строки.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       Следующие условия считаются ошибками. При возникновении ошибки, отформатированная строка остается без изменений и <xref:System.ComponentModel.MaskedTextProvider.Set%2A>возвращает `false`.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -Не хватает редактируемых позиций в форматируемой строки для хранения содержимого строки замены.      — Одно из значений символ замены является недопустимым, поскольку он является непечатаемым или не соответствует элементу маски.       Эта версия <xref:System.ComponentModel.MaskedTextProvider.Set%2A>предоставляет два дополнительных выходных параметров для передачи дополнительных сведений об операции метода.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>"
  syntax:
    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение, используемое для задания форматируемой строки.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция в форматированную строку, в котором последний символ, фактически было задано; в противном случае — первая позиция, в котором произошел сбой операции. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции set. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если все символы были успешно установлены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  id: SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает значение, указывающее, возможна ли замена позиций литералов в маске же значениями."
  remarks: "Маски ввода могут содержать литералы и редактируемые знаки. Если попытка добавить входного символа в позиции маски, занятую литералом, значение <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>свойство определяет результат.</xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>      -Если это свойство имеет `true`, он допустим для перезаписи литерал с тем же значением, при вводе символов. Например, значение символа косой черты, `&quot;/&quot;`, может быть добавлен к третьей позиции маски `&quot;00/00/000&quot;`.      -Если это свойство имеет `false`, оно является недопустимым присвоить любое значение в позицию маски, занятую буквенный символ."
  syntax:
    content: public bool SkipLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы разрешить литералы должны быть добавлены обратно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Запрет пользователю переопределять литералы. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  id: ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает форматированную строку в отображаемом виде."
  remarks: "Метод ToDisplayString всегда включает знаки приглашения и литералы в возвращаемом значении, независимо от значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>или <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Если этот метод всегда будет отображаться символами пароля <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойству присвоено значение символа, отличного от `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       ToDisplayString обычно используется для получения строки для отображения элементов интерфейса пользователя, например <xref:System.Windows.Forms.MaskedTextBox>.</xref:System.Windows.Forms.MaskedTextBox>"
  syntax:
    content: public string ToDisplayString ();
    parameters: []
    return:
      type: System.String
      description: "Форматированный <xref:System.String>, включающего приглашения и литералы маски.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString
  id: ToString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает строку форматирования, которая включает в себя все назначенные значения знаков."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод включает приглашения и литералы в соответствии с текущие значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства, соответственно.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Всегда будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод раскрывает сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Форматированный <xref:System.String>, включающего все назначенные значения знаков.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает форматируемой строки, включая символы пароля при необходимости."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод включает приглашения и литералы в соответствии с текущие значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства, соответственно.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Если `ignorePasswordChar` параметр `true`, он будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Если этот параметр имеет `false`, будет использоваться символ пароля затруднять ввод данных пользователем для редактирования, если <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойству присвоено значение, отличное от `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод может раскрывать сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных."
  syntax:
    content: public string ToString (bool ignorePasswordChar);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы вернуть фактические редактируемые знаки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> указывает, что <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>должно быть принят на обработку.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    return:
      type: System.String
      description: "Форматированный <xref:System.String>, включают литералы, приглашения и при необходимости символов пароля.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  id: ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает форматируемой строки, при необходимости включая знаки приглашения и литералы."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод включает приглашения и литералы согласно значениям `IncludePrompt` и `IncludeLiterals` параметров, соответственно.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Обратите внимание, что эти параметры переопределяют значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Этот метод всегда будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод раскрывает сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных."
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить символы приглашения в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить литералы в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Форматированный <xref:System.String>, включает в себя все назначенные значения знаков и при необходимости включает литералы и предлагает.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает подстроку форматируемой строки."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод возвращает подстроку форматируемой строки, начиная с позиции `startPos` и последующие число знаков, указанное в том числе `length` параметр.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Возвращаемая строка содержит приглашения и литералы в соответствии с текущие значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства, соответственно.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Возвращаемая строка будет содержать исходные входные символы; <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство всегда игнорируется.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод раскрывает сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных.       ToString выполняет следующие действия при наличии несоответствия входных параметра: - Если `startPos` меньше нуля, начальная позиция устанавливается равным нулю.      -Если `startPos` больше или равно значению фактического <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Если `length` больше, чем число оставшихся символов последние символы начальную позицию, только оставшиеся возвращаются.      -Если `length` меньше или равно нулю, <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (int startPosition, int length);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается вывод."
    - id: length
      type: System.Int32
      description: "Число возвращаемых символов."
    return:
      type: System.String
      description: "В случае успешного выполнения подстроку форматированный <xref:System.String>, которая содержит все назначенные значения знаков; в противном случае <xref:System.String>строка.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает подстроку форматируемой строки, включая символы пароля при необходимости."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод возвращает подстроку форматируемой строки, начиная с позиции `startPos` и последующие число знаков, указанное в том числе `length` параметр.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Возвращаемая строка содержит приглашения и литералы в соответствии с текущие значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства, соответственно.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Если `ignorePasswordChar` параметр `true`, он будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Если этот параметр имеет `false`, будет использоваться символ пароля затруднять ввод данных пользователем для редактирования, если <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойству присвоено значение, отличное от `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод может раскрывать сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>При наличии несоответствия во входных параметрах, выполняет следующие действия: - Если `startPos` меньше нуля, начальная позиция устанавливается равным нулю.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Если `startPos` больше или равно значению фактического <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Если `length` больше, чем число оставшихся символов последние символы начальную позицию, только оставшиеся возвращаются.      -Если `length` меньше или равно нулю, <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы вернуть фактические редактируемые знаки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> указывает, что <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>должно быть принят на обработку.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается вывод."
    - id: length
      type: System.Int32
      description: "Число возвращаемых символов."
    return:
      type: System.String
      description: "В случае успешного выполнения подстроку форматированный <xref:System.String>, литералы, приглашения и при необходимости символов пароля; в противном случае <xref:System.String>строка.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает подстроку форматируемой строки, при необходимости включая знаки приглашения и литералы."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод возвращает подстроку форматируемой строки, начиная с позиции `startPos` и последующие число знаков, указанное в том числе `length` параметр.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Возвращаемая строка содержит приглашения и литералы согласно значениям `IncludePrompt` и `IncludeLiterals` параметров, соответственно. Обратите внимание, что эти параметры переопределяют значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Этот метод всегда будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод раскрывает сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>При наличии несоответствия во входных параметрах, выполняет следующие действия: - Если `startPos` меньше нуля, начальная позиция устанавливается равным нулю.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Если `startPos` больше или равно значению фактического <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Если `length` больше, чем число оставшихся символов последние символы начальную позицию, только оставшиеся возвращаются.      -Если `length` меньше или равно нулю, <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить символы приглашения в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить литералы в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается вывод."
    - id: length
      type: System.Int32
      description: "Число возвращаемых символов."
    return:
      type: System.String
      description: "В случае успешного выполнения подстроку форматированный <xref:System.String>, где находятся все назначенные значения знаков и при необходимости включает литералы и приглашения; в противном случае <xref:System.String>строка.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает подстроку форматируемой строки, при необходимости включая знаки строки, литералы и пароль."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>метод возвращает подстроку форматируемой строки, начиная с позиции `startPos` и последующие число знаков, указанное в том числе `length` параметр.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Возвращаемая строка содержит приглашения и литералы согласно значениям `IncludePrompt` и `IncludeLiterals` параметров, соответственно. Обратите внимание, что эти параметры переопределяют значения <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>и <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Если `ignorePasswordChar` параметр `true`, он будет возвращать исходные входные символы независимо от значения <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойство.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Если этот параметр имеет `false`, будет использоваться символ пароля затруднять ввод данных пользователем для редактирования, если <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>свойству присвоено значение, отличное от `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      Настроек [!IMPORTANT] настроек, так как этот метод может раскрывать сведения, обычно защищенные в пользовательском интерфейсе знаками пароля, он должен использоваться с особой осторожностью во избежание случайного раскрытия конфиденциальных пользовательских данных.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>При наличии несоответствия во входных параметрах, выполняет следующие действия: - Если `startPos` меньше нуля, начальная позиция устанавливается равным нулю.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Если `startPos` больше или равно значению фактического <xref:System.ComponentModel.MaskedTextProvider.Length%2A>форматируемой строки <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Если `length` больше, чем число оставшихся символов последние символы начальную позицию, только оставшиеся возвращаются.      -Если `length` меньше или равно нулю, <xref:System.String.Empty>возвращается строка.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы вернуть фактические редактируемые знаки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> указывает, что <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>должно быть принят на обработку.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить символы приглашения в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы возвратить литералы в возвращаемую строку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: startPosition
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в форматированную строку, с которой начинается вывод."
    - id: length
      type: System.Int32
      description: "Число возвращаемых символов."
    return:
      type: System.String
      description: "В случае успешного выполнения подстроку форматированный <xref:System.String>, где находятся все назначенные значения знаков и при необходимости включает литералы, приглашения и знаки пароля; в противном случае <xref:System.String>строка.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Проверяет, является ли указанный символ может быть успешно установлена в указанной позиции."
  remarks: "Метод VerifyChar проверяет ли значение одного символа представляет допустимые входные данные в указанной позиции в форматированную строку. Этот метод будет возвращать `false` по следующим причинам: - `pos` меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      — Символ `input` не является допустимым входного символа, который определяется как <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>метод.</xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>      - `input` Не совместим с элементом маски в заданной позиции `pos`.       Последнее условие может зависеть от текущего значения <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>и <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>Свойства.</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>       Чтобы проверить всю входную строку для маски, используйте один из <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>методов вместо.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Значение для тестирования.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Позиция в маске, проверяемое введенного знака."
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный символ является допустимым для указанной позиции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  id: VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Проверяет, является ли указанный символ будет экранирован в указанной позиции."
  remarks: "Символ считается *escape-последовательность* если он является допустимым для ввода, но не назначен этой позиции в форматированную строку. Escape-знаки делятся на три категории:-Prompt символы экранируются, если <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>свойство `true`.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      -Входные символы экранируются, если они имеют одинаковое значение литерала в маске и <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>свойство `true`.</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>      -Экранируются символы разделители, если <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>свойство `true`.</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>       Метод VerifyEscapeChar также вернет `false` Если `pos` меньше нуля или больше, чем <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>"
  syntax:
    content: public bool VerifyEscapeChar (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "<xref:System.Char>Значение для тестирования.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Позиция в маске, проверяемое введенного знака."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный символ будет экранирован в указанной позиции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  id: VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Проверяет, является ли указанная строка может быть успешно установлена."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>Применяется `input` строки на соответствие маске, не изменяя форматируемой строки, чтобы проверить ли `input` будет действителен в соответствующей <xref:System.ComponentModel.MaskedTextProvider.Set%2A>операции.</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Этот метод также возвращает `true` Если входные данные `null` или имеет нулевую длину."
  syntax:
    content: public bool VerifyString (string input);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение для тестирования.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанная строка представляет допустимые входные данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Проверяет, является ли указанная строка может быть успешно установлена, а затем выводит позицию и описательные сведения."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>Применяется `input` строки на соответствие маске, не изменяя форматируемой строки, чтобы проверить ли `input` будет действителен в соответствующей <xref:System.ComponentModel.MaskedTextProvider.Set%2A>операции.</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Этот метод также возвращает `true` Если входные данные `null` или имеет нулевую длину.       Эта версия <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>предоставляет два дополнительных выходных параметров для передачи дополнительных сведений об операции метода.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "<xref:System.String>Значение для тестирования.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "В случае успешного выполнения Отсчитываемая от нуля позиция последнего символа тестируемой; в противном случае — первая позиция, где тест не пройден. Выходной параметр."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Объект <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> четко, описывающее результат операции проверки. Выходной параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанная строка представляет допустимые входные данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MaskedTextResultHint
  parent: System.ComponentModel
  isExternal: false
  name: MaskedTextResultHint
  nameWithType: MaskedTextResultHint
  fullName: System.ComponentModel.MaskedTextResultHint
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Clone
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
- uid: System.ComponentModel.MaskedTextProvider.Culture
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
- uid: System.ComponentModel.MaskedTextProvider.ToString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.#ctor*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider.MaskedTextProvider
- uid: System.ComponentModel.MaskedTextProvider.Add*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add
  nameWithType: MaskedTextProvider.Add
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear
  nameWithType: MaskedTextProvider.Clear
- uid: System.ComponentModel.MaskedTextProvider.Clone*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone
  nameWithType: MaskedTextProvider.Clone
- uid: System.ComponentModel.MaskedTextProvider.Culture*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom
  nameWithType: MaskedTextProvider.FindEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange
  nameWithType: MaskedTextProvider.FindEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint
  nameWithType: MaskedTextProvider.GetOperationResultFromHint
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt
  nameWithType: MaskedTextProvider.InsertAt
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition
  nameWithType: MaskedTextProvider.IsAvailablePosition
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition
  nameWithType: MaskedTextProvider.IsEditPosition
- uid: System.ComponentModel.MaskedTextProvider.IsPassword*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar
  nameWithType: MaskedTextProvider.IsValidInputChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar
  nameWithType: MaskedTextProvider.IsValidMaskChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar
  nameWithType: MaskedTextProvider.IsValidPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.Item*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item
  nameWithType: MaskedTextProvider.Item
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove
  nameWithType: MaskedTextProvider.Remove
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt
  nameWithType: MaskedTextProvider.RemoveAt
- uid: System.ComponentModel.MaskedTextProvider.Replace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace
  nameWithType: MaskedTextProvider.Replace
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set
  nameWithType: MaskedTextProvider.Set
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString
  nameWithType: MaskedTextProvider.ToDisplayString
- uid: System.ComponentModel.MaskedTextProvider.ToString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString
  nameWithType: MaskedTextProvider.ToString
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar
  nameWithType: MaskedTextProvider.VerifyChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar
  nameWithType: MaskedTextProvider.VerifyEscapeChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString
  nameWithType: MaskedTextProvider.VerifyString
