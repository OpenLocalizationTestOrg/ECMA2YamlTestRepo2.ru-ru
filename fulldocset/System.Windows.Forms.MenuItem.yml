### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MenuItem
  id: MenuItem
  children:
  - System.Windows.Forms.MenuItem.#ctor
  - System.Windows.Forms.MenuItem.#ctor(System.String)
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  - System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MenuItem.BarBreak
  - System.Windows.Forms.MenuItem.Break
  - System.Windows.Forms.MenuItem.Checked
  - System.Windows.Forms.MenuItem.Click
  - System.Windows.Forms.MenuItem.CloneMenu
  - System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  - System.Windows.Forms.MenuItem.DefaultItem
  - System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  - System.Windows.Forms.MenuItem.DrawItem
  - System.Windows.Forms.MenuItem.Enabled
  - System.Windows.Forms.MenuItem.Index
  - System.Windows.Forms.MenuItem.IsParent
  - System.Windows.Forms.MenuItem.MdiList
  - System.Windows.Forms.MenuItem.MeasureItem
  - System.Windows.Forms.MenuItem.MenuID
  - System.Windows.Forms.MenuItem.MergeMenu
  - System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  - System.Windows.Forms.MenuItem.MergeOrder
  - System.Windows.Forms.MenuItem.MergeType
  - System.Windows.Forms.MenuItem.Mnemonic
  - System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  - System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  - System.Windows.Forms.MenuItem.OwnerDraw
  - System.Windows.Forms.MenuItem.Parent
  - System.Windows.Forms.MenuItem.PerformClick
  - System.Windows.Forms.MenuItem.PerformSelect
  - System.Windows.Forms.MenuItem.Popup
  - System.Windows.Forms.MenuItem.RadioCheck
  - System.Windows.Forms.MenuItem.Select
  - System.Windows.Forms.MenuItem.Shortcut
  - System.Windows.Forms.MenuItem.ShowShortcut
  - System.Windows.Forms.MenuItem.Text
  - System.Windows.Forms.MenuItem.ToString
  - System.Windows.Forms.MenuItem.Visible
  langs:
  - csharp
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
  type: Class
  summary: "Представляет отдельный элемент, отображаемый в <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> или <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>. Несмотря на то что <xref href=&quot;System.Windows.Forms.ToolStripMenuItem&quot;> </xref> заменяет и расширяет его функциональные возможности для элемента управления MenuItem предыдущих версий, MenuItem сохраняется для обеспечения обратной совместимости и использования в будущем при выборе."
  remarks: "Чтобы элемент меню для отображения необходимо добавить его <xref:System.Windows.Forms.MainMenu>или <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> Чтобы создать подменю, можно добавлять объекты MenuItem <xref:System.Windows.Forms.Menu.MenuItems%2A>свойство родительского объекта MenuItem.</xref:System.Windows.Forms.Menu.MenuItems%2A>       MenuItem класс предоставляет свойства, которые позволяют настраивать внешний вид и функциональные возможности элемента меню. Чтобы отобразить флажок рядом с элементом меню, используйте <xref:System.Windows.Forms.MenuItem.Checked%2A>свойство.</xref:System.Windows.Forms.MenuItem.Checked%2A> Эту функцию можно использовать для идентификации элемента меню, который выбран в списке взаимно исключающих элементов. Например, если у вас есть набор пунктов меню для установки цвета текста в <xref:System.Windows.Forms.TextBox>элемента управления, можно использовать <xref:System.Windows.Forms.MenuItem.Checked%2A>свойство, чтобы определить, какой цвет выбранного.</xref:System.Windows.Forms.MenuItem.Checked%2A> </xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.MenuItem.Shortcut%2A>Свойство может использоваться для определения сочетания клавиш, которые можно нажать для выбора элемента меню.</xref:System.Windows.Forms.MenuItem.Shortcut%2A>       Объекты MenuItem отображались в приложении многодокументного интерфейса (MDI), можно использовать <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>родительской метод для слияния меню MDI с, ее дочерних форм для создания объединенного меню структуры.</xref:System.Windows.Forms.MenuItem.MergeMenu%2A> Поскольку MenuItem нельзя использовать повторно в нескольких местах одновременно, например в <xref:System.Windows.Forms.MainMenu>и <xref:System.Windows.Forms.ContextMenu>, можно использовать <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>метод для создания копии MenuItem для использования в другом месте.</xref:System.Windows.Forms.MenuItem.CloneMenu%2A> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu>       <xref:System.Windows.Forms.MenuItem.Popup>Событий позволяет выполнять задачи перед отображением меню.</xref:System.Windows.Forms.MenuItem.Popup> Например можно создать обработчик событий для этого события отобразить или скрыть элементы меню, исходя из состояния кода. <xref:System.Windows.Forms.MenuItem.Select>Событий позволяет выполнять задачи, например обеспечении подробную справку для пунктов меню приложения, когда пользователь наводит указатель мыши на элемент меню.</xref:System.Windows.Forms.MenuItem.Select>"
  example:
  - "The following code example creates a menu structure for a form. The example code adds a MenuItem to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application. The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four MenuItem objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.  \n  \n [!code-cpp[Classic Menu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_8_1.cpp)]\n [!code-cs[Classic Menu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_8_1.cs)]\n [!code-vb[Classic Menu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.DesignTimeVisible(false)]

      [System.ComponentModel.ToolboxItem(false)]

      public class MenuItem : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.CreateMenuHandle
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Forms.MenuItem.MenuItem()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> с пустым заголовком."
  remarks: "После создания пустой, <xref:System.Windows.Forms.MenuItem>с помощью этого конструктора, можно использовать свойства и методы <xref:System.Windows.Forms.MenuItem>класса, чтобы задать внешний вид и поведение <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> using this version of the constructor.  \n  \n [!code-vb[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_13_1.vb)]\n [!code-cpp[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_13_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_13_1.cs)]"
  syntax:
    content: public MenuItem ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> класса с заданной подписью для пункта меню."
  remarks: "При задании надписи для элемента меню с `text` параметр, можно также указать клавишу доступа, поместив символ «&» перед символом, который используется как клавиша доступа. Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры.       Установка `text` параметр «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> that specifies the caption of the menu item at the time it is constructed.  \n  \n [!code-cpp[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_1_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_1_1.cs)]\n [!code-vb[Classic MenuItem.MenuItem1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_1_1.vb)]"
  syntax:
    content: public MenuItem (string text);
    parameters:
    - id: text
      type: System.String
      description: "Заголовок элемента меню."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  id: '#ctor(System.String,System.EventHandler)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,EventHandler)
  nameWithType: MenuItem.MenuItem(String,EventHandler)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр класса с заданным заголовком и обработчиком событий для <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> событий для элемента меню."
  remarks: "При задании надписи для элемента меню с `text` параметр, можно также указать клавишу доступа, поместив перед символом, который используется как ключ доступа «&». Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры.       Установка `text` параметр «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента.       Кроме того, этот конструктор можно использовать для указания делегата, который будет обрабатывать <xref:System.Windows.Forms.MenuItem.Click>событий для создаваемого элемента меню.</xref:System.Windows.Forms.MenuItem.Click> <xref:System.EventHandler>Передать этот конструктор должен быть настроен на вызов обработчика событий, который может обрабатывать <xref:System.Windows.Forms.MenuItem.Click>событий.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> object with a specified caption and an <xref:System.EventHandler> delegate connected to an event handler that will handle the <xref:System.Windows.Forms.MenuItem.Click> event for the menu item.  \n  \n [!code-cpp[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_4_1.cpp)]\n [!code-cs[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_4_1.cs)]\n [!code-vb[Classic MenuItem.MenuItem2 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_4_1.vb)]"
  syntax:
    content: public MenuItem (string text, EventHandler onClick);
    parameters:
    - id: text
      type: System.String
      description: "Заголовок элемента меню."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>, Обрабатывающий <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> событий для данного элемента меню.</xref:System.EventHandler>"
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  id: '#ctor(System.String,System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,MenuItem[])
  nameWithType: MenuItem.MenuItem(String,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр класса с заданной подписью и массивом элементов вложенного меню для элемента меню."
  remarks: "При задании надписи для элемента меню с `text` параметр, можно также указать клавишу доступа, поместив перед символом, который используется как ключ доступа «&». Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры.       Установка `text` параметр «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента.       `items` Позволяет назначать массив элементов меню для определения вложенного данного элемента меню. Каждый элемент в массиве также может иметь массив элементов меню. Это позволяет создавать законченные структуры меню и их назначение в конструктор для данного элемента меню.       Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.  \n  \n [!code-cpp[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/cpp/cfa20f10-2c8a-466e-a0e8-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/visualbasic/cfa20f10-2c8a-466e-a0e8-_1.vb)]\n [!code-cs[Classic MenuItem.MenuItem4 Example#1](~/add/codesnippet/csharp/cfa20f10-2c8a-466e-a0e8-_1.cs)]"
  syntax:
    content: public MenuItem (string text, System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: text
      type: System.String
      description: "Заголовок элемента меню."
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "Массив <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> объектов, содержащих элементы вложенного меню для данного элемента меню."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  id: '#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(String,EventHandler,Shortcut)
  nameWithType: MenuItem.MenuItem(String,EventHandler,Shortcut)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler,Shortcut)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр класса с заданной подписью, обработчик событий и сочетанием клавиш для элемента меню."
  remarks: "При задании надписи для элемента меню с `text` параметр, можно также указать клавишу доступа, поместив перед символом, который используется как ключ доступа «&». Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры. Этот конструктор также позволяет задать сочетание клавиш, помимо клавиши доступа для предоставления с помощью клавиатуры. Сочетания клавиш позволяют задать сочетание клавиш, которые можно использовать для активации элементов меню.       Установка `text` параметр «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента.       Кроме того, этот конструктор можно использовать для указания делегата, который будет обрабатывать <xref:System.Windows.Forms.MenuItem.Click>событий для создаваемого элемента меню.</xref:System.Windows.Forms.MenuItem.Click> <xref:System.EventHandler>Передать этот конструктор должен быть настроен на вызов обработчика событий, который может обрабатывать <xref:System.Windows.Forms.MenuItem.Click>событий.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.  \n  \n [!code-cpp[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/cpp/feb14794-39b6-433b-90a5-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/visualbasic/feb14794-39b6-433b-90a5-_1.vb)]\n [!code-cs[Classic MenuItem.MenuItem3 Example#1](~/add/codesnippet/csharp/feb14794-39b6-433b-90a5-_1.cs)]"
  syntax:
    content: public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);
    parameters:
    - id: text
      type: System.String
      description: "Заголовок элемента меню."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>, Обрабатывающий <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> событий для данного элемента меню.</xref:System.EventHandler>"
    - id: shortcut
      type: System.Windows.Forms.Shortcut
      description: "Один из <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> значения."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  nameWithType: MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> класса с заданной подписью; определенные обработчики событий для <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref>, <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> и <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> события; сочетания клавиш; типа слияния; и порядке, заданном для данного элемента меню."
  remarks: "При задании надписи для элемента меню с `text` параметр, можно также указать клавишу доступа, поместив перед символом, который используется как ключ доступа «&». Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры.       Установка `text` параметр «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента.       `items` Позволяет назначать массив элементов меню для определения вложенного данного элемента меню. Каждый элемент в массиве также может иметь массив элементов меню. Это позволяет создавать законченные структуры меню и их назначение в конструктор для данного элемента меню.       `mergeType` И `mergeOrder` параметры позволяют определить поведение данного элемента меню при слиянии с другим меню пункта меню. В зависимости от значения, указываемые для `mergeType` параметр, вы можно добавить, удалить, заменить или слияние элементов меню и пунктов подменю с меню, которое его слияние с. `mergeOrder` Параметр определяет, где будет располагаться создаваемого элемента меню при слиянии меню.       Кроме того, можно использовать этот конструктор для создания <xref:System.Windows.Forms.MenuItem>и подключения его к обработчику событий в коде, который будет обрабатывать выбор пункта меню.</xref:System.Windows.Forms.MenuItem> <xref:System.EventHandler>, Передаваемый в этот конструктор должен быть настроен для вызова обработчика событий, который может обрабатывать <xref:System.Windows.Forms.MenuItem.Click>событий.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.EventHandler> С помощью этой версии конструктора, можно также подключиться, <xref:System.Windows.Forms.MenuItem.Popup>и <xref:System.Windows.Forms.MenuItem.Select>событий, чтобы определить, при выборе этого пункта меню.</xref:System.Windows.Forms.MenuItem.Select> </xref:System.Windows.Forms.MenuItem.Popup> Эти события можно использовать для выполнения задач, таких как определение ли флажок рядом с элементами вложенного меню либо включение или отключение элементов меню на основании состояния приложения. <xref:System.Windows.Forms.MenuItem.Select>И <xref:System.Windows.Forms.MenuItem.Click>события вызываются только <xref:System.Windows.Forms.MenuItem>объекты, не родительских элементов меню.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem.Select> Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a menu item that has a caption and shortcut key. The menu item also has event handlers defined for the <xref:System.Windows.Forms.MenuItem.Popup>, <xref:System.Windows.Forms.MenuItem.Click>, and <xref:System.Windows.Forms.MenuItem.Select> events. If this menu item is merged, it will add the menu item to the menu with the merge order of zero.  \n  \n [!code-cs[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/csharp/a423d634-c30f-4d0b-905e-_1.cs)]\n [!code-cpp[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/cpp/a423d634-c30f-4d0b-905e-_1.cpp)]\n [!code-vb[Classic MenuItem.MenuItem5 Example#1](~/add/codesnippet/visualbasic/a423d634-c30f-4d0b-905e-_1.vb)]"
  syntax:
    content: public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: mergeType
      type: System.Windows.Forms.MenuMerge
      description: "Один из <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> значения."
    - id: mergeOrder
      type: System.Int32
      description: "Относительное положение данного элемента меню будет выполняться в объединенное меню."
    - id: shortcut
      type: System.Windows.Forms.Shortcut
      description: "Один из <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> значения."
    - id: text
      type: System.String
      description: "Заголовок элемента меню."
    - id: onClick
      type: System.EventHandler
      description: "<xref:System.EventHandler>, Обрабатывающий <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> событий для данного элемента меню.</xref:System.EventHandler>"
    - id: onPopup
      type: System.EventHandler
      description: "<xref:System.EventHandler>, Обрабатывающий <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> событий для данного элемента меню.</xref:System.EventHandler>"
    - id: onSelect
      type: System.EventHandler
      description: "<xref:System.EventHandler>, Обрабатывающий <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> событий для данного элемента меню.</xref:System.EventHandler>"
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "Массив <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> объектов, содержащих элементы вложенного меню для данного элемента меню."
  overload: System.Windows.Forms.MenuItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.BarBreak
  id: BarBreak
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: BarBreak
  nameWithType: MenuItem.BarBreak
  fullName: System.Windows.Forms.MenuItem.BarBreak
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее ли <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> помещается на новой строке (для элемента меню, добавленного к <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> объекта) или в новом столбце (для элемента вложенного меню или элемента меню, отображаемого в <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>)."
  remarks: "Свойство BarBreak можно использовать для создания меню расположение каждого элемента меню рядом с друг с другом по горизонтали вместо в вертикальном списке. Это свойство может использоваться для создания строки меню, содержащей несколько строк элементов меню верхнего уровня.       Это свойство отличается от <xref:System.Windows.Forms.MenuItem.Break%2A>Свойства в том, что строка отображается по левому краю каждого элемента меню, содержащее <xref:System.Windows.Forms.MenuItem.Break%2A>свойство `true`.</xref:System.Windows.Forms.MenuItem.Break%2A> </xref:System.Windows.Forms.MenuItem.Break%2A> Панель отображается только в том случае, если элемент меню не является элементом меню верхнего уровня."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> with two submenu items. The two submenu items are displayed horizontally instead of vertically using the BarBreak property.  \n  \n [!code-cs[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_7_1.cs)]\n [!code-cpp[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_7_1.cpp)]\n [!code-vb[Classic MenuItem.BarBreak Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_7_1.vb)]"
  syntax:
    content: public bool BarBreak { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню размещается в новой строке или в новом столбце; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если оставить элемент меню в его размещение по умолчанию. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.BarBreak*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Break
  id: Break
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Break
  nameWithType: MenuItem.Break
  fullName: System.Windows.Forms.MenuItem.Break
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, помещается ли элемент на новой строке (для элемента меню, добавленного к <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> объекта) или в новом столбце (для элемента меню или подменю отображается в <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>)."
  remarks: "Свойства разрыва можно использовать для создания меню расположение каждого меню рядом с друг с другом по горизонтали вместо в вертикальном списке. Это свойство может использоваться для создания строки меню, содержащей несколько строк элементов меню верхнего уровня."
  example:
  - "The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.  \n  \n [!code-cs[Classic MenuItem.Break Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_31_1.cs)]\n [!code-vb[Classic MenuItem.Break Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_31_1.vb)]\n [!code-cpp[Classic MenuItem.Break Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_31_1.cpp)]"
  syntax:
    content: public bool Break { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню размещается в новой строке или в новом столбце; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если оставить элемент меню в его размещение по умолчанию. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Break*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Checked
  id: Checked
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Forms.MenuItem.Checked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, отображается ли флажок рядом с текстом элемента меню."
  remarks: "Свойство Checked можно использовать в сочетании с другими элементами меню отображает состояние для приложения. Например можно поместить флажок для пункта меню в группу элементов, чтобы определить размер шрифта для текста в приложении. Можно также использовать свойства Checked для идентификации выбранного пункта меню в группу пунктов меню взаимно исключают друг друга.      Настроек [!NOTE] настроек это свойство не может быть присвоено `true` пункты меню верхнего уровня."
  example:
  - "The following code example uses the Checked property to provide the state in an application. In this example, a group of menu items are used to specify the color for the text in a <xref:System.Windows.Forms.TextBox> control. The event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of three menu items. Each menu item specifies a text color, `menuItemRed` (Red), `menuItemGreen` (Green), or `menuItemBlue` (Blue). The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control. The example requires that the <xref:System.Drawing> namespace has been added to the form that this code is placed in. The example also requires that a <xref:System.Windows.Forms.TextBox> has been added to the form that this example code is located in that is named `textBox1`.  \n  \n [!code-cpp[Classic MenuItem.Checked Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_32_1.cpp)]\n [!code-cs[Classic MenuItem.Checked Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_32_1.cs)]\n [!code-vb[Classic MenuItem.Checked Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_32_1.vb)]"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если установлен флажок рядом с пунктом меню; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Checked*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> Меню верхнего уровня, или имеет дочерние элементы."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Click
  id: Click
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Forms.MenuItem.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит при щелчке или выбранного пункта меню с помощью сочетания клавиш или клавиши доступа определено для элемента меню."
  remarks: "Событие Click возникает, когда это <xref:System.Windows.Forms.MenuItem>нажатой пользователем.</xref:System.Windows.Forms.MenuItem> Это событие также возникает, если пользователь выбирает пункт меню с помощью клавиатуры и нажимает клавишу ВВОД. Она также может происходить, если ключ доступа или нажатии сочетания клавиш, связанный с <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек Если <xref:System.Windows.Forms.Menu.MenuItems%2A>свойство <xref:System.Windows.Forms.MenuItem>содержит элементы, это событие не происходит.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.MenuItems%2A> Это событие не вызывается для родительских элементов меню."
  example:
  - "The following code example demonstrates how to use the Click event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked. The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`). It then connects the `Click` event to the `menuItem1_Click` event handler. When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MenuItemClick#1](~/add/codesnippet/csharp/e-system.windows.forms.m_15_1.cs)]\n [!code-cpp[MenuItemClick#1](~/add/codesnippet/cpp/e-system.windows.forms.m_15_1.cpp)]\n [!code-vb[MenuItemClick#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_15_1.vb)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.CloneMenu
  id: CloneMenu
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: CloneMenu()
  nameWithType: MenuItem.CloneMenu()
  fullName: System.Windows.Forms.MenuItem.CloneMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает копию текущего <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  remarks: "<xref:System.Windows.Forms.MenuItem>объекты не может использоваться в нескольких местах, пока не получите копию <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MenuItem> Можно вызвать этот метод, чтобы создать копию данного элемента меню для использования в <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, или другие <xref:System.Windows.Forms.MenuItem>в приложении.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.ContextMenu> При клонировании элемента меню все обработчики событий, указанный в исходном элементе меню будет продолжать работать в точной копии версии элемента меню. Например, если вы создали <xref:System.Windows.Forms.MenuItem>и подключенных его <xref:System.Windows.Forms.MenuItem.Click>событий к обработчику событий.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem> При клонировании элемента меню данного элемента меню копия будет вызывать тот же обработчик событий."
  example:
  - "The following code example clones a <xref:System.Windows.Forms.MenuItem> and displays it in a <xref:System.Windows.Forms.ContextMenu>. The example requires that a <xref:System.Windows.Forms.MenuItem> exists in a <xref:System.Windows.Forms.MainMenu> on a form with the name of `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> object named `contextMenu1` also exists on the form.  \n  \n [!code-cs[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_17_1.cs)]\n [!code-cpp[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_17_1.cpp)]\n [!code-vb[Classic MenuItem.CloneMenu Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_17_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.MenuItem CloneMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MenuItem
      description: "Объект <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> , представляющий продублированный элемент меню."
  overload: System.Windows.Forms.MenuItem.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  id: CloneMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: CloneMenu(MenuItem)
  nameWithType: MenuItem.CloneMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.CloneMenu(MenuItem)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает копию указанного <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  remarks: "Этот метод используется для создания копии элементов меню, уже созданные для использования в контекстном меню или в другой структуре меню в приложении. Эта версия <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>позволяет указать конкретный <xref:System.Windows.Forms.MenuItem>копирование вместо элемента меню, вызывающего метод.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.CloneMenu%2A> Этот метод можно использовать для инициализации нового <xref:System.Windows.Forms.MenuItem>объекта с копией другого <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem> При клонировании элемента меню все обработчики событий, указанный в исходном элементе меню будет продолжать работать в точной копии версии элемента меню. Например, если вы создали <xref:System.Windows.Forms.MenuItem>и подключенных его <xref:System.Windows.Forms.MenuItem.Click>событий к обработчику событий.</xref:System.Windows.Forms.MenuItem.Click> </xref:System.Windows.Forms.MenuItem> При клонировании элемента меню данного элемента меню копия будет вызывать тот же обработчик событий."
  example:
  - "The following code example initializes a new <xref:System.Windows.Forms.MenuItem> with a copy of an existing <xref:System.Windows.Forms.MenuItem> that is used in a <xref:System.Windows.Forms.MainMenu> on a form. The code then adds the cloned <xref:System.Windows.Forms.MenuItem> to a <xref:System.Windows.Forms.ContextMenu> on the form. This example requires that a <xref:System.Windows.Forms.MenuItem> is already created and named `menuItem1` and that a <xref:System.Windows.Forms.ContextMenu> control has been created and named `contextMenu1`.  \n  \n [!code-cs[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_14_1.cs)]\n [!code-cpp[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_14_1.cpp)]\n [!code-vb[Classic MenuItem.CloneMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_14_1.vb)]"
  syntax:
    content: protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);
    parameters:
    - id: itemSrc
      type: System.Windows.Forms.MenuItem
      description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> , Представляющий копируемый элемент меню."
  overload: System.Windows.Forms.MenuItem.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.DefaultItem
  id: DefaultItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
  fullName: System.Windows.Forms.MenuItem.DefaultItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли элемент меню пункт меню по умолчанию."
  remarks: "Элемент меню по умолчанию для меню отображается полужирным шрифтом. При двойном щелчке подменю, содержащее элемент по умолчанию, элемент по умолчанию выбран и вложенное меню закрывается. Свойства DefaultItem можно использовать для указания, действие по умолчанию, ожидаемое в меню или в контекстном меню."
  example:
  - "The following code example creates a menu item with two submenu items. The example sets `menuItem2` as the default menu item using the DefaultItem property.  \n  \n [!code-cs[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_5_1.cs)]\n [!code-cpp[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_5_1.cpp)]\n [!code-vb[Classic MenuItem.DefaultItem Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_5_1.vb)]"
  syntax:
    content: public bool DefaultItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню элементом по умолчанию, в меню; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.DefaultItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MenuItem.Dispose(Boolean)
  fullName: System.Windows.Forms.MenuItem.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Уничтожает ресурсы (кроме памяти), используемые <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  remarks: "После использования <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Windows.Forms.MenuItem>окажется в неработоспособном состоянии.</xref:System.Windows.Forms.MenuItem> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Windows.Forms.MenuItem>, занимаемая ими память можно удалять его сборщику мусора.</xref:System.Windows.Forms.MenuItem>      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> В противном случае ресурсы <xref:System.Windows.Forms.MenuItem>— не будут освобождены до сборки мусора не будет <xref:System.Windows.Forms.MenuItem>деструктор объекта.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Windows.Forms.MenuItem.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: DrawItem
  nameWithType: MenuItem.DrawItem
  fullName: System.Windows.Forms.MenuItem.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит при <xref:System.Windows.Forms.MenuItem.OwnerDraw*>пункта меню свойству <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и запрос для рисования элемента меню.</xref:System.Windows.Forms.MenuItem.OwnerDraw*>"
  remarks: "<xref:System.Windows.Forms.DrawItemEventArgs>Предоставляет аргумент, передаваемый обработчику событий DrawItem <xref:System.Drawing.Graphics>объект, позволяющий выполнять рисования и другие графические операции на поверхности элемента меню.</xref:System.Drawing.Graphics> </xref:System.Windows.Forms.DrawItemEventArgs> Этот обработчик событий можно использовать для создания пользовательских меню, соответствующих потребностям приложения. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to handle the DrawItem event. This example draws a menu item using a <xref:System.Drawing.Brush> and a <xref:System.Drawing.Font>, and then draws a <xref:System.Drawing.Rectangle> around the menu item. The drawing is performed through the <xref:System.Drawing.Graphics> object, which is passed to the event handler in the <xref:System.Windows.Forms.DrawItemEventArgs> parameter. This example requires that you have initialized the <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> property for the item to `true`. For the C# example, add the following code in the form's constructor, after `InitializeComponent`, to hook up the event:  \n  \n `this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);`  \n  \n [!code-cs[OwnerDraw example#1](~/add/codesnippet/csharp/e-system.windows.forms.m_10_1.cs)]\n [!code-cpp[OwnerDraw example#1](~/add/codesnippet/cpp/e-system.windows.forms.m_10_1.cpp)]\n [!code-vb[OwnerDraw example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Enabled
  id: Enabled
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Windows.Forms.MenuItem.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, включен ли элемент меню."
  remarks: "Объект <xref:System.Windows.Forms.MenuItem>, отключено отображается серым цветом для указания состояния.</xref:System.Windows.Forms.MenuItem> При отключении родительского пункта меню, элементы вложенного меню не отображаются."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/p-system.windows.forms.m_23_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/p-system.windows.forms.m_23_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_23_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включен элемент меню. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Index
  id: Index
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Index
  nameWithType: MenuItem.Index
  fullName: System.Windows.Forms.MenuItem.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее положение элемента меню в его родительском меню."
  remarks: "Это свойство предоставляет индексированное положение элемента меню в коллекции элементов меню в его родительском меню. Это свойство можно использовать для изменения положения элемента меню в другое место в пределах меню. Это свойство также можно использовать при создании <xref:System.Windows.Forms.MenuItem>для указания его положение в структуре меню во время создания.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example switches the position of two menu items in a menu. The following code example requires that two <xref:System.Windows.Forms.MenuItem> objects are created named `menuItem1` and `menuItem2`. The `menuItem1` menu item moves down one position in the menu, while `menuItem2` moves up one position.  \n  \n [!code-cpp[Classic MenuItem.Index Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_27_1.cpp)]\n [!code-cs[Classic MenuItem.Index Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_27_1.cs)]\n [!code-vb[Classic MenuItem.Index Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_27_1.vb)]"
  syntax:
    content: public int Index { get; set; }
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, представляющий позицию элемента меню в его родительском меню."
  overload: System.Windows.Forms.MenuItem.Index*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Присвоенное значение меньше нуля или больше, чем число элементов."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.IsParent
  id: IsParent
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: IsParent
  nameWithType: MenuItem.IsParent
  fullName: System.Windows.Forms.MenuItem.IsParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, содержит ли данный элемент меню дочерние элементы меню."
  remarks: "Можно использовать это свойство с <xref:System.Windows.Forms.MenuItem.Parent%2A>свойство для навигации в коде с помощью структуры всего меню.</xref:System.Windows.Forms.MenuItem.Parent%2A>"
  example:
  - "The following code example determines whether there are any submenus associated with a <xref:System.Windows.Forms.MenuItem> named `menuItem1`. If any submenus exist, it disables them by setting the <xref:System.Windows.Forms.MenuItem.Enabled%2A> property to `false`. The example requires that there is a <xref:System.Windows.Forms.MenuItem> created named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.IsParent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_17_1.cs)]\n [!code-cpp[Classic MenuItem.IsParent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_17_1.cpp)]\n [!code-vb[Classic MenuItem.IsParent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_17_1.vb)]"
  syntax:
    content: public override bool IsParent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню содержит дочерние элементы меню; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если меню отдельный элемент меню."
  overload: System.Windows.Forms.MenuItem.IsParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MdiList
  id: MdiList
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MdiList
  nameWithType: MenuItem.MdiList
  fullName: System.Windows.Forms.MenuItem.MdiList
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, будет ли элемент меню заполняться с помощью списка дочерних окон многодокументного интерфейса (MDI), отображаемых в связанной форме."
  remarks: "При выборе пункта меню для отображения списка дочерних окон интерфейса MDI список отображается в качестве вложенного элемента меню. В списке окон отображаются только формы, определенных для дочерних MDI-форм. Одновременно можно отобразить только девять дочерних окон. Если имеется более девяти дочерних окон, пункт меню «Другие окна...» отображается в конце списка. Щелкнуть этот элемент меню отображает диалоговое окно с полный список дочерних окон, которые активны в данный момент."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> that is used to display the list of currently open MDI child forms in an MDI form.  \n  \n [!code-cs[Classic MenuItem.MdiList Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_41_1.cs)]\n [!code-cpp[Classic MenuItem.MdiList Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_41_1.cpp)]\n [!code-vb[Classic MenuItem.MdiList Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_41_1.vb)]"
  syntax:
    content: public bool MdiList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если отображается список дочерних MDI-окон данного пункта меню; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.MdiList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MeasureItem
  nameWithType: MenuItem.MeasureItem
  fullName: System.Windows.Forms.MenuItem.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возникает, когда меню требуются сведения о размере элемента меню перед его отрисовкой."
  remarks: "Чтобы это событие, необходимо иметь <xref:System.Windows.Forms.MenuItem.OwnerDraw%2A>значение свойства элемента меню `true`.</xref:System.Windows.Forms.MenuItem.OwnerDraw%2A> Это событие вызывается до отрисовки меню его владельцем Чтобы получить размер элемента меню для отображения должен быть задан. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MeasureItem event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MenuItem> named `MenuItem1`. Then ensure that the event handler is associated with the MeasureItem event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#499](~/add/codesnippet/csharp/e-system.windows.forms.m_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#499](~/add/codesnippet/visualbasic/e-system.windows.forms.m_11_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MenuID
  id: MenuID
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MenuID
  nameWithType: MenuItem.MenuID
  fullName: System.Windows.Forms.MenuItem.MenuID
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее идентификатор Windows для данного элемента меню."
  syntax:
    content: protected int MenuID { get; }
    return:
      type: System.Int32
      description: "Идентификатор Windows для данного элемента меню."
  overload: System.Windows.Forms.MenuItem.MenuID*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeMenu
  id: MergeMenu
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeMenu()
  nameWithType: MenuItem.MergeMenu()
  fullName: System.Windows.Forms.MenuItem.MergeMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Объединяет этот <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> с другим <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> и возвращает объединенный <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  remarks: "При вызове этой версии MergeMenu, <xref:System.Windows.Forms.MenuItem>возвращается является копией текущего элемента меню, могут быть объединены с другим элементом меню, не затрагивая функциональность текущего элемента.</xref:System.Windows.Forms.MenuItem> Эта версия метода MergeMenu аналогично вызову <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>метод, который не содержит параметров.</xref:System.Windows.Forms.MenuItem.CloneMenu%2A>"
  syntax:
    content: public virtual System.Windows.Forms.MenuItem MergeMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MenuItem
      description: "Объект <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> , представляющий объединенное меню элемента."
  overload: System.Windows.Forms.MenuItem.MergeMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  id: MergeMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeMenu(MenuItem)
  nameWithType: MenuItem.MergeMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.MergeMenu(MenuItem)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Выполняет слияние другого элемента меню с данным элементом меню."
  remarks: "Пункты меню объединяются в соответствии со значением элемента меню <xref:System.Windows.Forms.MenuItem.MergeType%2A>и <xref:System.Windows.Forms.MenuItem.MergeOrder%2A>Свойства.</xref:System.Windows.Forms.MenuItem.MergeOrder%2A> </xref:System.Windows.Forms.MenuItem.MergeType%2A> Эта версия <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>метод позволяет объединять два <xref:System.Windows.Forms.MenuItem>объектов (и их вложенные меню) в единое меню.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.MergeMenu%2A> Слияние меню обрабатывается автоматически, когда родительская форма многодокументного интерфейса (MDI) и дочерняя форма имеют меню. Данную версию метода можно использовать для слияния двух <xref:System.Windows.Forms.MenuItem>объектов (и их подменю), расположенный в <xref:System.Windows.Forms.MainMenu>правления в единое меню в <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.MenuItem> Например можно вызвать эту версию <xref:System.Windows.Forms.MenuItem.MergeMenu%2A>метода способ слияния пунктов меню меню файла и изменения в одном <xref:System.Windows.Forms.MenuItem>добавлены и отобразить <xref:System.Windows.Forms.ContextMenu>.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.MergeMenu%2A>"
  example:
  - "The following code example uses this version of the <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> method to create a copy of a <xref:System.Windows.Forms.MenuItem> and merge it with another. The merged <xref:System.Windows.Forms.MenuItem> is then added to a <xref:System.Windows.Forms.ContextMenu> control. This example requires that there are two menu items called `menuItem1` and `menuItem2` that contain submenu items within them and a <xref:System.Windows.Forms.ContextMenu> named `contextMenu1` to display the menu items. `menuItem1` and `menuItem2` have different menu items contained within them. After the call to <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> is made, a consolidated menu is created.  \n  \n [!code-vb[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_12_1.vb)]\n [!code-cpp[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_12_1.cpp)]\n [!code-cs[Classic MenuItem.MergeMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_12_1.cs)]"
  syntax:
    content: public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);
    parameters:
    - id: itemSrc
      type: System.Windows.Forms.MenuItem
      description: "Объект <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref> , указывающий пункт меню для объединения с данным элементом."
  overload: System.Windows.Forms.MenuItem.MergeMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeOrder
  id: MergeOrder
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
  fullName: System.Windows.Forms.MenuItem.MergeOrder
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее относительное положение данного элемента меню при слиянии с другим."
  remarks: "Порядок объединения элемента меню указывает относительное положение данного элемента меню будет выполняться, если структура меню, содержащая <xref:System.Windows.Forms.MenuItem>содержится объединяется с другим.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "The following code example demonstrates using the MergeOrder property to control the way a merged menu is displayed. This is a complete example, ready to run once you add it to your project.  \n  \n [!code-cs[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/csharp/p-system.windows.forms.m_47_1.cs)]\n [!code-cpp[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/cpp/p-system.windows.forms.m_47_1.cpp)]\n [!code-vb[System.Windows.Forms.MenuItemMergeOrder#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_47_1.vb)]"
  syntax:
    content: public int MergeOrder { get; set; }
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, представляющий позицию порядка слияния для данного элемента меню. Значение по умолчанию — 0."
  overload: System.Windows.Forms.MenuItem.MergeOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.MergeType
  id: MergeType
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: MergeType
  nameWithType: MenuItem.MergeType
  fullName: System.Windows.Forms.MenuItem.MergeType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее поведение данного элемента меню при слиянии его меню с другим."
  remarks: "Тип объединения элемента меню указывает поведение элемента меню, когда он имеет такой же порядок объединения, как выполняется слияние другого элемента меню. Слияние меню можно использовать для создания объединенного меню на основе двух или более существующих меню."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MenuItem> with the MergeType and <xref:System.Windows.Forms.MenuItem.MergeOrder%2A> specified so that the menu item is added to the merged menu at first position.  \n  \n [!code-cpp[Classic MenuItem.MergeType Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_8_1.cpp)]\n [!code-cs[Classic MenuItem.MergeType Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_8_1.cs)]\n [!code-vb[Classic MenuItem.MergeType Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.MenuMerge MergeType { get; set; }
    return:
      type: System.Windows.Forms.MenuMerge
      description: "Объект <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> значение, представляющее тип объединения элемента меню."
  overload: System.Windows.Forms.MenuItem.MergeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Назначенное значение не является одним из <xref href=&quot;System.Windows.Forms.MenuMerge&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Mnemonic
  id: Mnemonic
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
  fullName: System.Windows.Forms.MenuItem.Mnemonic
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее назначенный символ, связанный с данным элементом меню."
  remarks: "Назначенный символ после первого символа знак амперсанда (&) в тексте <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> Это свойство не будет возвращать назначенный, если два символа амперсанда размещаются вместе как амперсанды используются для отображения амперсанда в тексте <xref:System.Windows.Forms.MenuItem>вместо того чтобы определять назначенный символ.</xref:System.Windows.Forms.MenuItem>"
  syntax:
    content: public char Mnemonic { get; }
    return:
      type: System.Char
      description: "Символ, представляющий назначенный символ, связанный с данным элементом меню. Возвращает символ NUL (значение ASCII 0), если назначенный знак не указан в тексте <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Mnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: MenuItem.OnClick(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.Click&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Click> event to perform tasks when a <xref:System.Windows.Forms.MenuItem> is clicked. The example creates a <xref:System.Windows.Forms.MainMenu> called `mainMenu1` and adds two <xref:System.Windows.Forms.MenuItem> objects, `topMenuItem` (`File`) and `menuItem1` (`Open`). It then connects the `Click` event to the `menuItem1_Click` event handler. When the user clicks the `Open` menu item, an <xref:System.Windows.Forms.OpenFileDialog> is initialized and displayed. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MenuItemClick#1](~/add/codesnippet/csharp/m-system.windows.forms.m_3_1.cs)]\n [!code-cpp[MenuItemClick#1](~/add/codesnippet/cpp/m-system.windows.forms.m_3_1.cpp)]\n [!code-vb[MenuItemClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_3_1.vb)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: MenuItem.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.DrawItem&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "Объект <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Windows.Forms.MenuItem.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  id: OnInitMenuPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnInitMenuPopup(EventArgs)
  nameWithType: MenuItem.OnInitMenuPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnInitMenuPopup(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> событий."
  syntax:
    content: protected virtual void OnInitMenuPopup (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnInitMenuPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: MenuItem.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.MeasureItem&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "Объект <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Windows.Forms.MenuItem.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  id: OnPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnPopup(EventArgs)
  nameWithType: MenuItem.OnPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnPopup(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.Popup&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Popup> event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/m-system.windows.forms.m_25_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/m-system.windows.forms.m_25_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_25_1.vb)]"
  syntax:
    content: protected virtual void OnPopup (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  id: OnSelect(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OnSelect(EventArgs)
  nameWithType: MenuItem.OnSelect(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnSelect(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.MenuItem.Select> event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control. This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form. The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form. The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.  \n  \n [!code-vb[MenuItem.Select#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_19_1.vb)]\n [!code-cs[MenuItem.Select#1](~/add/codesnippet/csharp/m-system.windows.forms.m_19_1.cs)]\n [!code-cpp[MenuItem.Select#1](~/add/codesnippet/cpp/m-system.windows.forms.m_19_1.cpp)]"
  syntax:
    content: protected virtual void OnSelect (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.MenuItem.OnSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.OwnerDraw
  id: OwnerDraw
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
  fullName: System.Windows.Forms.MenuItem.OwnerDraw
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее ли элемент меню рисоваться кода указываемое или средствами Windows."
  remarks: "Если значение свойства OwnerDraw `true`, необходимо обработать все рисование элемента меню. Эту возможность можно использовать для создания собственных стилей отображения меню."
  example:
  - "The following code example demonstrates a menu with an owner-drawn menu item. This example set the OwnerDraw property and uses the `AddHandler` statement and the `AddressOf` operator to designate a delegate to handle the <xref:System.Windows.Forms.MenuItem.DrawItem> event. To run the example, paste it in a form that imports the <xref:System>, <xref:System.Windows.Forms>, and <xref:System.Drawing> namespaces. Call `InitializeMenu` from the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/csharp/p-system.windows.forms.m_22_1.cs)]\n [!code-cpp[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/cpp/p-system.windows.forms.m_22_1.cpp)]\n [!code-vb[System.Windows.Forms.MenuItemOwnerDraw#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_22_1.vb)]"
  syntax:
    content: public bool OwnerDraw { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню будет перерисовываться с помощью кода. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если элемент меню будет отображаться в Windows. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.OwnerDraw*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Parent
  id: Parent
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Windows.Forms.MenuItem.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее меню, содержащее данный элемент меню."
  remarks: "Это свойство можно использовать для получения <xref:System.Windows.Forms.Menu>объекта для подменю.</xref:System.Windows.Forms.Menu> Можно привести <xref:System.Windows.Forms.Menu>объект, возвращаемый этим свойством, <xref:System.Windows.Forms.MenuItem>для управления его.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu>"
  example:
  - "In this example, you create a main menu and a top-level menu item, `menuItem1` (`File`). You also create two menu items, `menuItem2` (`New`) and `menuItem3` (`Open`), and add them to the menu item list of `menuItem1`. Then you check to see if `menuItem3` has got a parent menu, which is true, and display the information of this parent menu in message box. This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[ParentMenu#1](~/add/codesnippet/csharp/p-system.windows.forms.m_25_1.cs)]\n [!code-cpp[ParentMenu#1](~/add/codesnippet/cpp/p-system.windows.forms.m_25_1.cpp)]\n [!code-vb[ParentMenu#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_25_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Menu Parent { get; }
    return:
      type: System.Windows.Forms.Menu
      description: "Объект <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref> , представляющий меню, содержащее данный элемент меню."
  overload: System.Windows.Forms.MenuItem.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.PerformClick
  id: PerformClick
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: PerformClick()
  nameWithType: MenuItem.PerformClick()
  fullName: System.Windows.Forms.MenuItem.PerformClick()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Приводит к возникновению ошибки <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> событий для <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>, имитируя щелчок мышью."
  remarks: "В этом меню можно использовать для активации элемента меню с помощью кода, не передавая никаких сведений о событии. Например если вы хотите активировать элемент меню на основе действия, которая возникает в приложении, можно вызвать метод PerformClick для <xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem>"
  example:
  - "In this example you programmatically click a menu item by using the `PerformClick` method. First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`). You also use the <xref:System.Windows.Forms.MenuItem.Click> event to send data to the event handler when a menu item is clicked. Then you use the `PerformClick` method to click the `File` menu item. When you start the application, the `File` menu item is activated, and a message box that contains the text \"The File menu is clicked.\" appears on the screen. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[PerformClick#1](~/add/codesnippet/cpp/m-system.windows.forms.m_0_1.cpp)]\n [!code-cs[PerformClick#1](~/add/codesnippet/csharp/m-system.windows.forms.m_0_1.cs)]\n [!code-vb[PerformClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_0_1.vb)]"
  syntax:
    content: public void PerformClick ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.PerformClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.PerformSelect
  id: PerformSelect
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: PerformSelect()
  nameWithType: MenuItem.PerformSelect()
  fullName: System.Windows.Forms.MenuItem.PerformSelect()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.MenuItem.Select&quot;> </xref> событий для данного элемента меню."
  remarks: "Этот метод позволяет вызывать <xref:System.Windows.Forms.MenuItem.Select>событий без передачи каких-либо сведений в обработчик событий.</xref:System.Windows.Forms.MenuItem.Select>"
  example:
  - "In this example you programmatically select a menu item by using the `PerformSelect` method. First, you create a main menu (`mainMenu1`) and add to it two menu items, `menuItem1` (`File`) and `menuItem2` (`Edit`). You also use the <xref:System.Windows.Forms.MenuItem.Select> event to send data to the event handler when a menu item is selected. Then you use the `PerformSelect` method to select the `File` menu item. When you start the application, the `File` menu item is selected, and a message box that contains the text \"The File menu is selected.\" appears on the screen. The example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[PerformSelect#1](~/add/codesnippet/cpp/m-system.windows.forms.m_16_1.cpp)]\n [!code-cs[PerformSelect#1](~/add/codesnippet/csharp/m-system.windows.forms.m_16_1.cs)]\n [!code-vb[PerformSelect#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_16_1.vb)]"
  syntax:
    content: public virtual void PerformSelect ();
    parameters: []
  overload: System.Windows.Forms.MenuItem.PerformSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Popup
  id: Popup
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Popup
  nameWithType: MenuItem.Popup
  fullName: System.Windows.Forms.MenuItem.Popup
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит перед отображением списка элементов меню."
  remarks: "Это событие происходит только после подменю для отображения пункта меню. Этот обработчик событий можно использовать для добавления, удаления, включить, отключить, установите или снимите пунктов меню, исходя из состояния приложения перед их отображением. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Popup event to determine whether <xref:System.Windows.Forms.MenuItem> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if `textBox1`, a <xref:System.Windows.Forms.TextBox> control on the form, is enabled, has input focus, and has text selected before enabling the <xref:System.Windows.Forms.MenuItem> objects. This example requires that three <xref:System.Windows.Forms.MenuItem> objects are created named `menuCut`, `menuCopy`, and `menuDelete` have been created.  \n  \n [!code-cs[MenuItem.Popup#1](~/add/codesnippet/csharp/e-system.windows.forms.m_8_1.cs)]\n [!code-cpp[MenuItem.Popup#1](~/add/codesnippet/cpp/e-system.windows.forms.m_8_1.cpp)]\n [!code-vb[MenuItem.Popup#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public event EventHandler Popup;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.RadioCheck
  id: RadioCheck
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
  fullName: System.Windows.Forms.MenuItem.RadioCheck
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>, если этот флажок установлен, отображается переключатель вместо флажок."
  remarks: "Флажки не обязательно подразумевают взаимно исключают друг друга состояние для группы элементов меню. Это свойство можно использовать, чтобы уведомить пользователя, что флажок для пункта меню являются взаимно исключающими."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MenuItem.Checked%2A> property to change the state of an application. In the example, a group of menu items are provided that are used to specify the color for the text in an <xref:System.Windows.Forms.TextBox> control. In the example, the event handler provided is used by the <xref:System.Windows.Forms.MenuItem.Click> event of the three menu items. Each menu item specifies a color, `menuItemRed`, `menuItemGreen`, or `menuItemBlue`. The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <xref:System.Windows.Forms.TextBox> control, named `textBox1`. The example also uses the RadioCheck property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive. This example requires that the <xref:System.Drawing?displayProperty=fullName> namespace has been added to the form that contains this code.  \n  \n [!code-cs[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_14_1.cs)]\n [!code-vb[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_14_1.vb)]\n [!code-cpp[Classic MenuItem.RadioCheck Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_14_1.cpp)]"
  syntax:
    content: public bool RadioCheck { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если переключатель, который будет использоваться вместо флажок; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если стандартный флажок будет отображаться при выборе пункта меню. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.RadioCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Select
  id: Select
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Select
  nameWithType: MenuItem.Select
  fullName: System.Windows.Forms.MenuItem.Select
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда пользователь наводит указатель мыши на элемент меню."
  remarks: "Это событие обычно происходит, когда пользователь наводит указатель мыши на элемент меню. Это событие также может возникнуть, когда пользователь выделяет элемент меню с помощью клавиатуры, перейдите к пункту меню с помощью клавиш со стрелками. Это событие можно использовать для отображения строки подробные справочные сведения, относящиеся к данному элементу меню в строке состояния приложения. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек Если <xref:System.Windows.Forms.Menu.MenuItems%2A>свойство <xref:System.Windows.Forms.MenuItem>содержит элементы, это событие не происходит.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Menu.MenuItems%2A> Это событие не вызывается для родительских элементов меню."
  example:
  - "The following code example demonstrates how to use the Select event of the <xref:System.Windows.Forms.MenuItem> class to assign help text to a <xref:System.Windows.Forms.StatusBarPanel> of a <xref:System.Windows.Forms.StatusBar> control. This example requires that <xref:System.Windows.Forms.MenuItem> objects named `menuOpen`, `menuSave`, and `menuExit` are added to a <xref:System.Windows.Forms.MainMenu> control on a form. The example also requires that a <xref:System.Windows.Forms.StatusBar> control, named `statusBar1` has been added to the form. The <xref:System.Windows.Forms.StatusBar> control should contain a <xref:System.Windows.Forms.StatusBarPanel>.  \n  \n [!code-vb[MenuItem.Select#1](~/add/codesnippet/visualbasic/e-system.windows.forms.m_0_1.vb)]\n [!code-cs[MenuItem.Select#1](~/add/codesnippet/csharp/e-system.windows.forms.m_0_1.cs)]\n [!code-cpp[MenuItem.Select#1](~/add/codesnippet/cpp/e-system.windows.forms.m_0_1.cpp)]"
  syntax:
    content: public event EventHandler Select;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Shortcut
  id: Shortcut
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: System.Windows.Forms.MenuItem.Shortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее сочетание клавиш, связанное с элементом меню."
  remarks: "Сочетания клавиш позволяют пользователям вызывать часто используемые элементы меню в системе меню и на доступ с клавиатуры в приложение для пользователей, которые имеют доступ к мыши или другого устройства указатель."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_39_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_39_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_39_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Shortcut Shortcut { get; set; }
    return:
      type: System.Windows.Forms.Shortcut
      description: "Один из <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Shortcut.None&quot; name=&quot;Shortcut.None&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Shortcut*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Назначенное значение не является одним из <xref href=&quot;System.Windows.Forms.Shortcut&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.ShowShortcut
  id: ShowShortcut
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
  fullName: System.Windows.Forms.MenuItem.ShowShortcut
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, отображается ли сочетание клавиш, связанное с элементом меню рядом с надписью элемента меню."
  remarks: "Это свойство можно использовать для предоставления пользователям возможность скрывать сочетания клавиш меню для экономии места или скрыть сочетания клавиш будут отображаться."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_30_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_30_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_30_1.vb)]"
  syntax:
    content: public bool ShowShortcut { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сочетание клавиш отображается рядом с надписью элемента меню; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если сочетание клавиш не отображаться. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.ShowShortcut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Text
  id: Text
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Windows.Forms.MenuItem.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее подпись данного элемента меню."
  remarks: "При указании заголовка для элемента меню можно также указать клавишу доступа, поместив перед символом, который используется как ключ доступа «&». Например указание «F» в «Файл» в качестве ключа доступа, вы укажите заголовок для элемента меню в виде «& файла». Эту функцию можно использовать для предоставления по меню с помощью клавиатуры.       Присвоение этому свойству «`-`» вызывает элемент меню будет выводиться в качестве разделителя (горизонтальной линии), а не стандартного элемента."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_56_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_56_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_56_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Текст подписи данного элемента меню."
  overload: System.Windows.Forms.MenuItem.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.ToString
  id: ToString
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuItem.ToString()
  fullName: System.Windows.Forms.MenuItem.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает строку, представляющую <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, представляющая текущий <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>. Строка содержит тип и <xref:System.Windows.Forms.MenuItem.Text*>свойству элемента управления.</xref:System.Windows.Forms.MenuItem.Text*>"
  overload: System.Windows.Forms.MenuItem.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MenuItem.Visible
  id: Visible
  parent: System.Windows.Forms.MenuItem
  langs:
  - csharp
  name: Visible
  nameWithType: MenuItem.Visible
  fullName: System.Windows.Forms.MenuItem.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, видим ли элемент меню."
  remarks: "Это свойство можно использовать для изменения структуры меню без объединения или отключения меню. Например, если вы хотите скрыть часть функциональности из меню в приложении, можно скрыть их от пользователя, присвоив этому свойству значение `false`."
  example:
  - "The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <xref:System.Windows.Forms.MenuItem> has been created that is named `menuItem1`.  \n  \n [!code-cs[Classic MenuItem.Text Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_51_1.cs)]\n [!code-cpp[Classic MenuItem.Text Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_51_1.cpp)]\n [!code-vb[Classic MenuItem.Text Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_51_1.vb)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент меню будет виден в меню. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.MenuItem.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.MenuItem.#ctor
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem()
  nameWithType: MenuItem.MenuItem()
  fullName: System.Windows.Forms.MenuItem.MenuItem()
- uid: System.Windows.Forms.MenuItem.#ctor(System.String)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String)
  nameWithType: MenuItem.MenuItem(String)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,EventHandler)
  nameWithType: MenuItem.MenuItem(String,EventHandler)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,MenuItem[])
  nameWithType: MenuItem.MenuItem(String,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(String,EventHandler,Shortcut)
  nameWithType: MenuItem.MenuItem(String,EventHandler,Shortcut)
  fullName: System.Windows.Forms.MenuItem.MenuItem(String,EventHandler,Shortcut)
- uid: System.Windows.Forms.Shortcut
  parent: System.Windows.Forms
  isExternal: false
  name: Shortcut
  nameWithType: Shortcut
  fullName: System.Windows.Forms.Shortcut
- uid: System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  nameWithType: MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
  fullName: System.Windows.Forms.MenuItem.MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])
- uid: System.Windows.Forms.MenuMerge
  parent: System.Windows.Forms
  isExternal: false
  name: MenuMerge
  nameWithType: MenuMerge
  fullName: System.Windows.Forms.MenuMerge
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.MenuItem.BarBreak
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: BarBreak
  nameWithType: MenuItem.BarBreak
  fullName: System.Windows.Forms.MenuItem.BarBreak
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.MenuItem.Break
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Break
  nameWithType: MenuItem.Break
  fullName: System.Windows.Forms.MenuItem.Break
- uid: System.Windows.Forms.MenuItem.Checked
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: System.Windows.Forms.MenuItem.Checked
- uid: System.Windows.Forms.MenuItem.Click
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Click
  nameWithType: MenuItem.Click
  fullName: System.Windows.Forms.MenuItem.Click
- uid: System.Windows.Forms.MenuItem.CloneMenu
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu()
  nameWithType: MenuItem.CloneMenu()
  fullName: System.Windows.Forms.MenuItem.CloneMenu()
- uid: System.Windows.Forms.MenuItem
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
- uid: System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu(MenuItem)
  nameWithType: MenuItem.CloneMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.CloneMenu(MenuItem)
- uid: System.Windows.Forms.MenuItem.DefaultItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
  fullName: System.Windows.Forms.MenuItem.DefaultItem
- uid: System.Windows.Forms.MenuItem.Dispose(System.Boolean)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MenuItem.Dispose(Boolean)
  fullName: System.Windows.Forms.MenuItem.Dispose(Boolean)
- uid: System.Windows.Forms.MenuItem.DrawItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DrawItem
  nameWithType: MenuItem.DrawItem
  fullName: System.Windows.Forms.MenuItem.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.MenuItem.Enabled
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
  fullName: System.Windows.Forms.MenuItem.Enabled
- uid: System.Windows.Forms.MenuItem.Index
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Index
  nameWithType: MenuItem.Index
  fullName: System.Windows.Forms.MenuItem.Index
- uid: System.Windows.Forms.MenuItem.IsParent
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: IsParent
  nameWithType: MenuItem.IsParent
  fullName: System.Windows.Forms.MenuItem.IsParent
- uid: System.Windows.Forms.MenuItem.MdiList
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MdiList
  nameWithType: MenuItem.MdiList
  fullName: System.Windows.Forms.MenuItem.MdiList
- uid: System.Windows.Forms.MenuItem.MeasureItem
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MeasureItem
  nameWithType: MenuItem.MeasureItem
  fullName: System.Windows.Forms.MenuItem.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.MenuItem.MenuID
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuID
  nameWithType: MenuItem.MenuID
  fullName: System.Windows.Forms.MenuItem.MenuID
- uid: System.Windows.Forms.MenuItem.MergeMenu
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu()
  nameWithType: MenuItem.MergeMenu()
  fullName: System.Windows.Forms.MenuItem.MergeMenu()
- uid: System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu(MenuItem)
  nameWithType: MenuItem.MergeMenu(MenuItem)
  fullName: System.Windows.Forms.MenuItem.MergeMenu(MenuItem)
- uid: System.Windows.Forms.MenuItem.MergeOrder
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
  fullName: System.Windows.Forms.MenuItem.MergeOrder
- uid: System.Windows.Forms.MenuItem.MergeType
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeType
  nameWithType: MenuItem.MergeType
  fullName: System.Windows.Forms.MenuItem.MergeType
- uid: System.Windows.Forms.MenuItem.Mnemonic
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
  fullName: System.Windows.Forms.MenuItem.Mnemonic
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.MenuItem.OnClick(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: MenuItem.OnClick(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: MenuItem.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnInitMenuPopup(EventArgs)
  nameWithType: MenuItem.OnInitMenuPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnInitMenuPopup(EventArgs)
- uid: System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: MenuItem.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.MenuItem.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnPopup(EventArgs)
  nameWithType: MenuItem.OnPopup(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnPopup(EventArgs)
- uid: System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnSelect(EventArgs)
  nameWithType: MenuItem.OnSelect(EventArgs)
  fullName: System.Windows.Forms.MenuItem.OnSelect(EventArgs)
- uid: System.Windows.Forms.MenuItem.OwnerDraw
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
  fullName: System.Windows.Forms.MenuItem.OwnerDraw
- uid: System.Windows.Forms.MenuItem.Parent
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: System.Windows.Forms.MenuItem.Parent
- uid: System.Windows.Forms.MenuItem.PerformClick
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformClick()
  nameWithType: MenuItem.PerformClick()
  fullName: System.Windows.Forms.MenuItem.PerformClick()
- uid: System.Windows.Forms.MenuItem.PerformSelect
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformSelect()
  nameWithType: MenuItem.PerformSelect()
  fullName: System.Windows.Forms.MenuItem.PerformSelect()
- uid: System.Windows.Forms.MenuItem.Popup
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Popup
  nameWithType: MenuItem.Popup
  fullName: System.Windows.Forms.MenuItem.Popup
- uid: System.Windows.Forms.MenuItem.RadioCheck
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
  fullName: System.Windows.Forms.MenuItem.RadioCheck
- uid: System.Windows.Forms.MenuItem.Select
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Select
  nameWithType: MenuItem.Select
  fullName: System.Windows.Forms.MenuItem.Select
- uid: System.Windows.Forms.MenuItem.Shortcut
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: System.Windows.Forms.MenuItem.Shortcut
- uid: System.Windows.Forms.MenuItem.ShowShortcut
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
  fullName: System.Windows.Forms.MenuItem.ShowShortcut
- uid: System.Windows.Forms.MenuItem.Text
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
  fullName: System.Windows.Forms.MenuItem.Text
- uid: System.Windows.Forms.MenuItem.ToString
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ToString()
  nameWithType: MenuItem.ToString()
  fullName: System.Windows.Forms.MenuItem.ToString()
- uid: System.Windows.Forms.MenuItem.Visible
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Visible
  nameWithType: MenuItem.Visible
  fullName: System.Windows.Forms.MenuItem.Visible
- uid: System.Windows.Forms.MenuItem.#ctor*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem.MenuItem
- uid: System.Windows.Forms.MenuItem.BarBreak*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: BarBreak
  nameWithType: MenuItem.BarBreak
- uid: System.Windows.Forms.MenuItem.Break*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Break
  nameWithType: MenuItem.Break
- uid: System.Windows.Forms.MenuItem.Checked*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Checked
  nameWithType: MenuItem.Checked
- uid: System.Windows.Forms.MenuItem.CloneMenu*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: CloneMenu
  nameWithType: MenuItem.CloneMenu
- uid: System.Windows.Forms.MenuItem.DefaultItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: DefaultItem
  nameWithType: MenuItem.DefaultItem
- uid: System.Windows.Forms.MenuItem.Dispose*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Dispose
  nameWithType: MenuItem.Dispose
- uid: System.Windows.Forms.MenuItem.Enabled*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Enabled
  nameWithType: MenuItem.Enabled
- uid: System.Windows.Forms.MenuItem.Index*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Index
  nameWithType: MenuItem.Index
- uid: System.Windows.Forms.MenuItem.IsParent*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: IsParent
  nameWithType: MenuItem.IsParent
- uid: System.Windows.Forms.MenuItem.MdiList*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MdiList
  nameWithType: MenuItem.MdiList
- uid: System.Windows.Forms.MenuItem.MenuID*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MenuID
  nameWithType: MenuItem.MenuID
- uid: System.Windows.Forms.MenuItem.MergeMenu*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeMenu
  nameWithType: MenuItem.MergeMenu
- uid: System.Windows.Forms.MenuItem.MergeOrder*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeOrder
  nameWithType: MenuItem.MergeOrder
- uid: System.Windows.Forms.MenuItem.MergeType*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: MergeType
  nameWithType: MenuItem.MergeType
- uid: System.Windows.Forms.MenuItem.Mnemonic*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Mnemonic
  nameWithType: MenuItem.Mnemonic
- uid: System.Windows.Forms.MenuItem.OnClick*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnClick
  nameWithType: MenuItem.OnClick
- uid: System.Windows.Forms.MenuItem.OnDrawItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnDrawItem
  nameWithType: MenuItem.OnDrawItem
- uid: System.Windows.Forms.MenuItem.OnInitMenuPopup*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnInitMenuPopup
  nameWithType: MenuItem.OnInitMenuPopup
- uid: System.Windows.Forms.MenuItem.OnMeasureItem*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnMeasureItem
  nameWithType: MenuItem.OnMeasureItem
- uid: System.Windows.Forms.MenuItem.OnPopup*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnPopup
  nameWithType: MenuItem.OnPopup
- uid: System.Windows.Forms.MenuItem.OnSelect*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OnSelect
  nameWithType: MenuItem.OnSelect
- uid: System.Windows.Forms.MenuItem.OwnerDraw*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: OwnerDraw
  nameWithType: MenuItem.OwnerDraw
- uid: System.Windows.Forms.MenuItem.Parent*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Parent
  nameWithType: MenuItem.Parent
- uid: System.Windows.Forms.MenuItem.PerformClick*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformClick
  nameWithType: MenuItem.PerformClick
- uid: System.Windows.Forms.MenuItem.PerformSelect*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: PerformSelect
  nameWithType: MenuItem.PerformSelect
- uid: System.Windows.Forms.MenuItem.RadioCheck*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: RadioCheck
  nameWithType: MenuItem.RadioCheck
- uid: System.Windows.Forms.MenuItem.Shortcut*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Shortcut
  nameWithType: MenuItem.Shortcut
- uid: System.Windows.Forms.MenuItem.ShowShortcut*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ShowShortcut
  nameWithType: MenuItem.ShowShortcut
- uid: System.Windows.Forms.MenuItem.Text*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Text
  nameWithType: MenuItem.Text
- uid: System.Windows.Forms.MenuItem.ToString*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: ToString
  nameWithType: MenuItem.ToString
- uid: System.Windows.Forms.MenuItem.Visible*
  parent: System.Windows.Forms.MenuItem
  isExternal: false
  name: Visible
  nameWithType: MenuItem.Visible
