### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow
  id: IWebPartRow
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  langs:
  - csharp
  name: IWebPartRow
  nameWithType: IWebPartRow
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow
  type: Interface
  summary: "Определяет интерфейс поставщика для соединения двух серверных элементов управления с помощью одного поля данных."
  remarks: "Этот интерфейс предназначен для использования с подключениями к веб-части. Соединение веб-частей, двух серверных элементов управления, которые находятся в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны установления соединения и совместное использование данных с одного элемента управления, выступающего в качестве потребителя и элемент управления, выступающий в роли поставщика.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Механизм для совместного использования данных в соединении веб-частей является экземпляр интерфейса, который поставщик предоставляет объекту-получателю с помощью метода обратного вызова. Для подключения потребителя и поставщика и обсудить с тем же типом интерфейса для совместного использования данных. Если потребитель не распознает тип интерфейса, отправленного поставщиком, существует возможность подключения элементов управления с помощью преобразователя ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>объекта), преобразует экземпляр интерфейса, отправленный поставщиком, в тип, который распознается объектом-получателем.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Дополнительные сведения о разделе <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>и [Общие сведения о подключениях веб частей](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       Интерфейс интерфейсом IWebPartRow является интерфейсом поставщика с помощью элемента управления веб-частей задать в качестве стандартного интерфейса для создания связей на основе строки данных. Можно также создавать пользовательские интерфейсы для использования с подключениями к веб-части, но многих управляемых данными веб-приложений, это полезно для создания соединений с учетом с общим полем (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartField>интерфейса), таблица (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>интерфейса), или строки из источника данных.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> В обычного соединения <xref:System.Web.UI.WebControls.WebParts.WebPart>управления действовать как поставщик реализует интерфейс интерфейсом IWebPartRow и предоставить экземпляр интерфейса потребителям в специальный метод обратного вызова.</xref:System.Web.UI.WebControls.WebParts.WebPart> Например поставщик может реализовать интерфейс интерфейсом IWebPartRow для строки, которая относится к пользователю в таблице сведения пользователя. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart>управления действовать как потребитель определении особый метод для получения экземпляра интерфейса и может затем извлекать пользовательские данные, использовать его для поиска дополнительной информации об учетных записях пользователя и отображать всю информацию, относящуюся к пользователю, на странице.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Интерфейс интерфейсом IWebPartRow имеет два предоставленных членов. <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A>Свойство возвращает сведений о строке данных, содержащийся в схеме <xref:System.ComponentModel.PropertyDescriptorCollection>объекта.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>Метод объявляет метод, который использует реализации (например, элемент управления поставщика) для извлечения данных в строке экземпляр интерфейса при вызове метода обратного вызова.</xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartRow interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartRow interface, with one control acting as the provider, and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartRow interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified row, which the provider makes available through an instance of the IWebPartRow interface."
  syntax:
    content: public interface IWebPartRow
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  id: GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает данные для строки, который используется интерфейсом в качестве основы для связи между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Используйте этот метод для получения значений строк данных, передаваемых по интерфейсу. Поставщик реализует этот метод, а потребитель вызывает его в момент, когда он готов к обработке или визуализации данных."
  example:
  - "The following code example shows the implementation and use of the GetRowData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the GetRowData method, returning the value of a particular row in the data table. The consumer control calls the GetRowData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/98668bea-41a0-4fc3-85fe-_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/98668bea-41a0-4fc3-85fe-_1.vb)]"
  syntax:
    content: public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.RowCallback
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.RowCallback&quot;> </xref> делегат, который содержит адрес метода, который получает данные."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает сведения схемы для строки данных, используемый для обмена данными между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Это свойство предоставляет сведения о свойстве для данных. С помощью <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>интерфейса в соединении, получение <xref:System.ComponentModel.PropertyDescriptorCollection>объекта, который ссылается свойство схемы.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Контракт указывает, что вызов `Schema[n].GetValue(RowData)` возвращает значение *n*столбцов в строке. Необходимо использовать свойство схемы для получения значений в строке."
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the row as it writes the row data to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_721_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_721_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Объект <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> описания данных."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
- uid: System.Web.UI.WebControls.WebParts.RowCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: RowCallback
  nameWithType: RowCallback
  fullName: System.Web.UI.WebControls.WebParts.RowCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData
  nameWithType: IWebPartRow.GetRowData
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
