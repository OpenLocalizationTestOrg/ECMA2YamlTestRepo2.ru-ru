### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  id: CompositionContainer
  children:
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  langs:
  - csharp
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
  type: Class
  summary: "Управляет композиции частей."
  remarks: "A CompositionContainer object serves two major purposes in an application. First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes. Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property. All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container. Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts. Imports marked as recomposable will be registered for recomposition.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container. If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.  \n  \n CompositionContainer objects should always be disposed. When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the CompositionContainer object also disposes all the parts that it has created.  \n  \n A CompositionContainer object that can be accessed from multiple threads must be constructed with the `isThreadSafe` parameter set to `true`, using the [CompositionContainer(ComposablePartCatalog, Boolean, ExportProvider\\[\\])](assetId:///M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])?qualifyHint=False&autoUpgrade=False) constructor. Performance will be slightly slower when `isThreadSafe` is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios. The default is `false`.  \n  \n> [!WARNING]\n>  A CompositionContainer should never import itself, or a part that has a reference to it. Such a reference could allow an untrusted part to gain access all the parts in the container."
  example:
  - "In the following example, a CompositionContainer object is initialized with a catalog and is used to fill the imports of a part. This example uses the Attributed Programming Model.  \n  \n [!code-cs[Composition.CompositionContainer#1](~/add/codesnippet/csharp/composition.compositioncontainer.consoleapplication1/program.cs#1)]\n [!code-vb[Composition.CompositionContainer#1](~/add/codesnippet/visualbasic/compositioncontainerexample/module1.vb#1)]"
  syntax:
    content: 'public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Hosting.ExportProvider
  implements:
  - System.ComponentModel.Composition.ICompositionService
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса."
  syntax:
    content: public CompositionContainer ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса с поставщиками указанный экспорт."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Массив <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для задания <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>на пустой &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>содержит элемент, который является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса с помощью параметров и поставщики указанный экспорт."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "Объект, задающий механизм действия данного контейнера."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Массив <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для задания <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>на пустой &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>содержит элемент, который является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса с указанным каталогом и экспортировать поставщиков."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Каталог, который предоставляет <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Массив <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для задания <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>на пустой &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>содержит элемент, который является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса каталоге режим поточно ориентированного и экспортировать поставщиков."
  remarks: "Объект <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>необходимо задать объект, который может осуществляться из нескольких потоков `isThreadSafe` параметра `true`.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Производительность будет немного медленнее, если `isThreadSafe` — `true`, поэтому мы рекомендуем установить этот параметр, `false` в однопоточных сценариях. Значение по умолчанию — `false`."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Каталог, который предоставляет <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: isThreadSafe
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> объект должен быть потокобезопасным; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Массив <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> присвоить <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>значение пустой &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Один или несколько элементов <code> providers </code> , <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса с помощью указанного каталога, параметры и экспортировать поставщиков."
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Каталог, который предоставляет <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: "Объект, указывающий параметры, влияющие на поведение контейнера."
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: "Массив <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для задания <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>на пустой &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*>"
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providers</code>содержит элемент, который является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  id: Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Возвращает <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> , предоставляющий доступ к контейнеру для <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов."
  syntax:
    content: public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: "Каталог, который предоставляет <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ на экспортируемые элементы, формируемые <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> объектов. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> Был удален объект."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  id: Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Добавляет или удаляет элементы в указанном <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionBatch&quot;> </xref> из контейнера и выполняет композицию."
  remarks: "Этот метод является основным способом непосредственного добавления и удаления компонентов из контейнера. <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>Будет всегда поддерживать постоянное, включать состояние.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Таким образом, вызов Создание сообщения с пустым <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>не требуется для запуска композиции.</xref:System.ComponentModel.Composition.Hosting.CompositionBatch> Вместо этого необходимо вызовите метод создания при необходимости вносить изменения в части доступны на <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       <xref:System.ComponentModel.Composition.Hosting.CompositionBatch>Может содержать элементы для добавления и частей, которые должны быть удалены.</xref:System.ComponentModel.Composition.Hosting.CompositionBatch>  Рекомпозиции будет выполнено только один раз для каждого вызова метода Compose."
  example:
  - "In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled. This example uses the Attributed Programming Model.  \n  \n [!code-vb[Composition.CompositionContainer.Compose#1](~/add/codesnippet/visualbasic/consoleapplication6/module1.vb#1)]\n [!code-cs[Composition.CompositionContainer.Compose#1](~/add/codesnippet/csharp/consoleapplication5/program.cs#1)]"
  syntax:
    content: public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: "Изменения <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> для включения во время компоновки."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> класса."
  remarks: "Вызовите `Dispose` после использования <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> `Dispose` Метода <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>окажется в неработоспособном состоянии.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, сборщик мусора мог освободить память, <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>занимаемую.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек вызова всегда `Dispose` перед освобождением последней ссылки на <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>объекта `Finalize` метод.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Возвращает коллекцию всех экспорты, которые соответствуют условиям в указанном <xref href=&quot;System.ComponentModel.Composition.Primitives.ImportDefinition&quot;> </xref> объекта."
  remarks: "Реализации несовпадения не следует обрабатывать как ошибки и не должны вызывать исключения для несовпадения. Например, если поставщик имеет отсутствуют соответствующие экспорты или более одного импорта запрашивает ровно один экспорт, GetExportsCore метод должен возвращать пустой <xref:System.Collections.Generic.IEnumerable%601>коллекцию <xref:System.ComponentModel.Composition.Primitives.Export>объектов.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected override System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "Объект, определяющий условия <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов для получения."
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: "Транзакция композиции для использования, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для отключения транзакционной композиции."
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "Коллекция всех <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов в этом <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> объекта, который соответствует условиям, указанным <code> definition </code>."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  id: Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Возвращает дополнительные поставщики экспорта, которые предоставляют доступ к контейнеру для <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartCatalog&quot;> </xref> объектов."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider> Providers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: "Коллекция <xref href=&quot;System.ComponentModel.Composition.Hosting.ExportProvider&quot;> </xref> объектов, предоставляющих <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> доступ к дополнительной <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов. Значение по умолчанию — пустая коллекция типа &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> Был удален."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  id: ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Освобождает указанный <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объекта из <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
  remarks: "Поведение данного метода зависят от реализации <xref:System.ComponentModel.Composition.Hosting.ExportProvider>, создавший <xref:System.ComponentModel.Composition.Primitives.Export>экземпляра.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.ExportProvider> Как правило не являющийся общим экспорты должны быть отсоединены от контейнера.       Например <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>будет только выпуск <xref:System.ComponentModel.Composition.Primitives.Export>, если он поступает из <xref:System.ComponentModel.Composition.Primitives.ComposablePart>, был создан в разделе <xref:System.ComponentModel.Composition.CreationPolicy>контекста.</xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> Выпуск в данном контексте означает проходу цепочку зависимостей <xref:System.ComponentModel.Composition.Primitives.Export>объектов, отсоединение ссылки из контейнера и вызова `Dispose` на <xref:System.ComponentModel.Composition.Primitives.ComposablePart>объектов при необходимости.</xref:System.ComponentModel.Composition.Primitives.ComposablePart> </xref:System.ComponentModel.Composition.Primitives.Export> Если <xref:System.ComponentModel.Composition.Primitives.Export>был создан в разделе <xref:System.ComponentModel.Composition.CreationPolicy>контекст <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>не выполняет никаких действий, что и заданный <xref:System.ComponentModel.Composition.Primitives.Export>мая, используемых другими запрашивающей стороне.</xref:System.ComponentModel.Composition.Primitives.Export> </xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> </xref:System.ComponentModel.Composition.CreationPolicy> </xref:System.ComponentModel.Composition.Primitives.Export> Те, будут отсоединены только при удалении контейнера."
  syntax:
    content: public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);
    parameters:
    - id: export
      type: System.ComponentModel.Composition.Primitives.Export
      description: "<xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> , Должно быть запущено."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>export</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  id: ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExport<T> (Lazy<T> export);
    parameters:
    - id: export
      type: System.Lazy{T}
      description: "Для добавления."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  id: ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Освобождает набор <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов из <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>."
  remarks: "Поведение данного метода зависят от контекста, в котором <xref:System.ComponentModel.Composition.Primitives.Export>был создан.</xref:System.ComponentModel.Composition.Primitives.Export> Дополнительные сведения см. в разделе <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>метод.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A>"
  syntax:
    content: public void ReleaseExports (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: "Коллекция <xref href=&quot;System.ComponentModel.Composition.Primitives.Export&quot;> </xref> объектов освобождается."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exports</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>exports</code>содержит элемент, который является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  id: ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T> (System.Collections.Generic.IEnumerable<Lazy<T>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: "Для добавления."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  id: ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public void ReleaseExports<T,TMetadataView> (System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: "Для добавления."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Удовлетворяет импорты указанного <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePart&quot;> </xref> объект без его регистрации для рекомпозиции."
  syntax:
    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "Часть, для удовлетворения импортов."
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> Был удален объект."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>part</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Composition.CompositionException
    commentId: T:System.ComponentModel.Composition.CompositionException
    description: "Произошла ошибка при построении. <xref:System.ComponentModel.Composition.CompositionException.Errors*>будет содержать коллекцию возникших ошибок.</xref:System.ComponentModel.Composition.CompositionException.Errors*>"
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: System.ComponentModel.Composition.Hosting.ExportProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Composition.CompositionException
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CompositionException
  nameWithType: CompositionException
  fullName: System.ComponentModel.Composition.CompositionException
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.ExportProvider[]
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
  spec.csharp:
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionOptions
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionOptions
  nameWithType: CompositionOptions
  fullName: System.ComponentModel.Composition.Hosting.CompositionOptions
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
- uid: System.ComponentModel.Composition.Hosting.CompositionBatch
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionBatch
  nameWithType: CompositionBatch
  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ComponentModel.Composition.Primitives.Export>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.Export
    name: Export
    nameWithType: Export
    fullName: Export
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ExportProvider>
  nameWithType: ReadOnlyCollection<ExportProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ExportProvider
    name: ExportProvider
    nameWithType: ExportProvider
    fullName: ExportProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
- uid: System.ComponentModel.Composition.Primitives.Export
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: Export
  nameWithType: Export
  fullName: System.ComponentModel.Composition.Primitives.Export
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
- uid: System.Lazy{T}
  parent: System
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T>>
  nameWithType: IEnumerable<Lazy<T>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`1
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Lazy<T,TMetadataView>>
  nameWithType: IEnumerable<Lazy<T,TMetadataView>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Lazy<T,TMetadataView>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Lazy`2
    name: Lazy
    nameWithType: Lazy
    fullName: Lazy<T,TMetadataView>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMetadataView
    name: TMetadataView
    nameWithType: TMetadataView
    fullName: TMetadataView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer
  nameWithType: CompositionContainer.CompositionContainer
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose
  nameWithType: CompositionContainer.Compose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose
  nameWithType: CompositionContainer.Dispose
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore
  nameWithType: CompositionContainer.GetExportsCore
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport
  nameWithType: CompositionContainer.ReleaseExport
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport<T>
  nameWithType: CompositionContainer.ReleaseExport<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports
  nameWithType: CompositionContainer.ReleaseExports
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T>
  nameWithType: CompositionContainer.ReleaseExports<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports<T,TMetadataView>*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports<T,TMetadataView>
  nameWithType: CompositionContainer.ReleaseExports<T,TMetadataView>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce
  nameWithType: CompositionContainer.SatisfyImportsOnce
