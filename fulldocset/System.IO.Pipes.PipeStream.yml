### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Предоставляет <xref:System.IO.Stream>для канала, поддерживающий анонимные и именованные каналы.</xref:System.IO.Stream>"
  remarks: "Класс PipeStream предоставляет базовый класс для операций именованные и анонимные каналы в .NET Framework. Используйте <xref:System.IO.Pipes.NamedPipeServerStream>и <xref:System.IO.Pipes.NamedPipeClientStream>классы для операций именованного канала.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Используйте <xref:System.IO.Pipes.AnonymousPipeServerStream>и <xref:System.IO.Pipes.AnonymousPipeClientStream>классы для анонимного канала операций.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Дополнительные сведения об каналах см. в разделе [каналы](~/add/includes/ajax-current-ext-md.md). Пример анонимных каналов см. в разделе [как: использование анонимных каналов для локального взаимодействия межпроцессное](~/add/includes/ajax-current-ext-md.md). Пример именованных каналов см. в разделе [как: использование именованных каналов для сетевого взаимодействия межпроцессное](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> класса с помощью указанного <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> значения и размера буфера."
  remarks: "Этот конструктор использует режим передачи <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Один из <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> значений, указывающих направление объекта канала."
    - id: bufferSize
      type: System.Int32
      description: "Положительное <xref:System.Int32>значение больше или равно 0, указывающее размер буфера.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>не является допустимым <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> значение.       - или - <code>bufferSize</code> меньше 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> класса с помощью указанного <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>и размер буфера."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Один из <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> значений, указывающих направление объекта канала."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Один из <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значений, указывающих режим передачи для объекта канала."
    - id: outBufferSize
      type: System.Int32
      description: "Положительное <xref:System.Int32>значение больше или равно 0, указывающее размер буфера.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>не является допустимым <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> значение.       - или - <code>transmissionMode</code> не является допустимым <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значение.       - или - <code>bufferSize</code> меньше 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Начинает операцию асинхронного чтения."
  remarks: "Передать возвращенный <xref:System.IAsyncResult>объект <xref:System.IO.Pipes.PipeStream.EndRead%2A>метод, чтобы определить, сколько байтов, считанных и освобождаются ресурсы операционной системы, используемый для чтения.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>необходимо вызывать один раз для каждого вызова BeginRead.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Это можно сделать в тот же код, который вызвал BeginRead или с помощью обратного вызова, который передается BeginRead.       Используйте <xref:System.IO.Pipes.PipeStream.CanRead%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции чтения.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Если канал закрыт или недопустимый аргумент, передаваемый BeginRead, соответствующие исключения вызываются сразу. Ошибки, возникающие при выполнении запроса асинхронного чтения происходят в потоке пула потоков, который выполняет запрос. Исключения вызываются, когда код вызывает <xref:System.IO.Pipes.PipeStream.EndRead%2A>метод.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Буфер для чтения данных."
    - id: offset
      type: System.Int32
      description: "Смещение байтов в `buffer` с которого начинается чтение."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов для чтения."
    - id: callback
      type: System.AsyncCallback
      description: "Выполняется метод, вызываемый при операции асинхронного чтения."
    - id: state
      type: System.Object
      description: "Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного асинхронного запроса на чтение от других запросов."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, который ссылается на асинхронное чтение.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>меньше 0.       - или - <code>count</code> меньше 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>больше, чем число доступных байтов в <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции чтения."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал отключен, ожидает подключения, или дескриптор не задан."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Начинает операцию асинхронной записи."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>необходимо вызывать один раз для каждого вызова BeginWrite.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Это можно сделать в тот же код, который вызвал BeginWrite или с помощью обратного вызова, который передается BeginWrite.       Используйте <xref:System.IO.Pipes.PipeStream.CanWrite%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции записи.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Если канал закрыт или недопустимый аргумент, передаваемый BeginWrite, соответствующие исключения вызываются сразу. Ошибки, возникающие при выполнении запроса асинхронной записи, происходят в потоке пула потоков, который выполняет запрос. Исключения вызываются, когда код вызывает <xref:System.IO.Pipes.PipeStream.EndWrite%2A>метод.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Буфер, содержащий данные для записи в текущий поток."
    - id: offset
      type: System.Int32
      description: "Отсчитываемое от нуля смещение в `buffer` с которого начинается копирование байтов в текущий поток."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов для записи."
    - id: callback
      type: System.AsyncCallback
      description: "Метод, вызываемый после завершения операции асинхронной записи."
    - id: state
      type: System.Object
      description: "Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного асинхронного запроса запись от других запросов."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, который ссылается на асинхронную операцию записи.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>меньше 0.       - или - <code>count</code> меньше 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>больше, чем число доступных байтов в <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции записи."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал отключен, ожидает подключения, или дескриптор не задан."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, поддерживает ли текущий поток операции чтения."
  remarks: "Если <xref:System.IO.Pipes.PipeStream>объект был закрыт, это свойство возвращает `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поток поддерживает операции чтения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, является ли текущий поток поддерживает операции поиска."
  remarks: "Если <xref:System.IO.Pipes.PipeStream>объект был закрыт, это свойство возвращает `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, поддерживает ли текущий поток операции записи."
  remarks: "Если <xref:System.IO.Pipes.PipeStream>объект был закрыт, это свойство возвращает `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поток поддерживает операции записи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Проверяет, что канала правильности состояния для получения или задания свойства."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Проверяет, что канал находится в подключенном состоянии для выполнения операций чтения."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Проверяет, что канал находится в подключенном состоянии для выполнения операций записи."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> класса и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые <xref:System.ComponentModel.Component.Dispose%2A>метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>вызывает защищенный метод Dispose с `disposing` равным `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>вызывает метод Dispose с `disposing` значение `false`.</xref:System.Object.Finalize%2A> Если параметр disposing имеет `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.IO.Pipes.PipeStream>ссылки на объекты.</xref:System.IO.Pipes.PipeStream> Этот метод вызывает метод Dispose каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Завершает отложенный запрос асинхронного чтения."
  remarks: "Этот метод возвращает количество байтов, считанных в массив байтов, указанного ранее вызовом <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Передать возвращенный <xref:System.IAsyncResult>объект метод EndRead, чтобы определить, сколько байтов, считанных и освобождаются ресурсы операционной системы, используемый для чтения.</xref:System.IAsyncResult> EndRead должен вызываться по одному разу для каждого вызова <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Это можно сделать либо с тем же кодом, который вызвал <xref:System.IO.Pipes.PipeStream.BeginRead%2A>или с помощью обратного вызова, который передается <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Используйте <xref:System.IO.Pipes.PipeStream.CanRead%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции чтения.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Если канал закрыт или передается недопустимый аргумент <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, соответствующие исключения вызываются сразу.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Ошибки, возникающие при выполнении запроса асинхронного чтения происходят в потоке пула потоков, который выполняет запрос. Исключения вызываются, когда код вызывает метод EndRead."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Ссылка на отложенный асинхронный запрос."
    return:
      type: System.Int32
      description: "Количество прочитанных байтов. Возвращаемое значение 0 указывает конец потока (канал закрыт)."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>был получен не из <xref:System.IO.Pipes.PipeStream.BeginRead*> метода в текущем потоке."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Поток закрыт или произошла внутренняя ошибка."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Завершает отложенный запрос асинхронной записи."
  remarks: "Метод EndWrite должен вызываться по одному разу для каждого вызова <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Это можно сделать либо с тем же кодом, который вызвал <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>или с помощью обратного вызова, который передается <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>       Используйте <xref:System.IO.Pipes.PipeStream.CanWrite%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции записи.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Если канал закрыт или передается недопустимый аргумент <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, соответствующие исключения вызываются сразу.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Ошибки, возникающие при выполнении запроса асинхронной записи, происходят в потоке пула потоков, который выполняет запрос. Исключения вызываются при код вызывает метод EndWrite метод."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Ссылка на отложенный асинхронный запрос."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>был получен не из <xref:System.IO.Pipes.PipeStream.BeginWrite*> метода в текущем потоке."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Поток закрыт или произошла внутренняя ошибка."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Очищает буфер для текущего потока и вызывает запись всех буферизованных данных в базовое устройство."
  remarks: "Метод Flush не поддерживается в <xref:System.IO.Pipes.PipeStream>класса и не nothing в том случае, если он вызван.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции записи."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта, который инкапсулирует записи списка управления Доступом для канала, описываемого текущим <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта."
  remarks: 'Список управления доступом (ACL) определяются пользователи и группы, которые имеют или не имеющие права на выполнение определенных действий для указанного файла. Дополнительные сведения см. в разделе [как: Добавление или удаление записей списка управления доступом](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "Объект <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта, который инкапсулирует записи списка управления Доступом для канала, описываемого текущим <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает размер в байтах входящего буфера для канала."
  remarks: "Если InBufferSize равно 0, размер буфера выделяется при необходимости."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "Целочисленное значение, представляющее размер входящего буфера, в байтах."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Поток не может быть прочитан."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал ожидает соединения."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объект из указанного <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> объекта."
  remarks: "Если канал находится в подключенном состоянии, этот метод также задает <xref:System.IO.Pipes.PipeStream.IsConnected%2A>Свойства `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "<xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> Канала для инициализации."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для предоставления дескриптора; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что дескриптор был открыт асинхронно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Дескриптор не привязан к каналу."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> был открыт объект синхронно или асинхронно."
  remarks: "Это свойство позволяет коду использовать <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>свойство правильно.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объект был открыт асинхронно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает или задает значение, указывающее, является ли <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> подключен объект."
  remarks: "Это свойство возвращает сетевым розеткам `true` только тогда, когда <xref:System.IO.Pipes.PipeStream>подключен объект.</xref:System.IO.Pipes.PipeStream> Если это свойство возвращает `false`, канал может быть ожидает подключения, или отключен, закрыто или нечитаемым."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта подключен; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, является ли дескриптор <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объект предоставляется."
  remarks: "Значение этого свойства устанавливается при получении дескриптора канала, инкапсулируется в текущем <xref:System.IO.Pipes.PipeStream>объекта.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если дескриптор <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объект предоставляется; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает значение, указывающее, имеются ли дополнительные данные в сообщении, возвращенном из последней операции чтения."
  remarks: "Данное свойство имеет значение Если канала <xref:System.IO.Pipes.PipeStream.ReadMode%2A>было установлено на <xref:System.IO.Pipes.PipeTransmissionMode>самой последней вызовом <xref:System.IO.Pipes.PipeStream.Read%2A>или <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.Read%2A> </xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если больше нет символов для чтения в сообщении; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал не подключен.       - или - дескриптор канала не задан.       - или - канала <xref:System.IO.Pipes.PipeStream.ReadMode*>значение свойства не является <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает длину потока в байтах."
  remarks: "<xref:System.IO.Pipes.PipeStream>Класс не поддерживает свойство Length.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "0 во всех случаях."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает размер в байтах исходящего буфера для канала."
  remarks: "Если OutBufferSize равно 0, размер буфера выделяется при необходимости."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "Размер исходящего буфера в байтах."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "В поток невозможна."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал ожидает соединения."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает или задает текущую позицию в текущем потоке."
  remarks: "<xref:System.IO.Pipes.PipeStream>Класс не поддерживает свойства Position.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "0 во всех случаях."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Создается всегда."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Считывает блок байтов из потока и записывает данные в заданный буфер."
  remarks: "Используйте <xref:System.IO.Pipes.PipeStream.CanRead%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции чтения.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Вызов метода чтения блокируется до `count` считанных байтов или достигнут конец потока. Для асинхронных операций чтения. в разделе <xref:System.IO.Pipes.PipeStream.BeginRead%2A>и <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "При возвращении этого метода содержит указанный массив байтов со значениями от `offset` и (`offset`  +  `count` - 1) заменены байтами, считанными из текущего источника."
    - id: offset
      type: System.Int32
      description: "Смещение байтов в `buffer` массива, начиная с которого будут размещаться байтов, которые доступны для чтения."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов для чтения."
    return:
      type: System.Int32
      description: "Общее число байтов, считанных в <code> buffer </code>. Это может быть меньше запрошенного числа байтов, если это количество байтов недоступен, или 0, если достигнут конец потока."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>меньше 0.       - или - <code>count</code> меньше 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>больше, чем число доступных байтов в <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции чтения."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал отключен, ожидает подключения, или дескриптор не задан."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Считывает байт из канала."
  remarks: "Используйте <xref:System.IO.Pipes.PipeStream.CanRead%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции чтения.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Байт, приведенный к <xref:System.Int32>, или значение -1 обозначает конец потока (канал закрыт).</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции чтения."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал отключен, ожидает подключения, или дескриптор не задан."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает или задает режим чтения для <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта."
  remarks: "Анонимные каналы не поддерживают <xref:System.IO.Pipes.PipeTransmissionMode>режим передачи сообщений.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Один из <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значений, указывающее, как <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объект считывает из канала."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Указанное значение не является допустимым <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значение."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Указанное значение не поддерживается <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значение для этого потока канала."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Дескриптор не был задан.       - или - канал ожидает соединения с именованным клиентом."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван, или произошла ошибка ввода-вывода с именованным клиентом."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает безопасный дескриптор для локального конца канала, текущий <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> инкапсулирует объект."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Объект <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> для канала, инкапсулируемого текущим <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Дескриптор канала не был задан."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Задает текущую позицию в текущем потоке с указанным значением."
  remarks: "Метод не поддерживается в каналы и вызывает <xref:System.NotSupportedException>при ее вызове.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Точки относительно `origin`, от которой начинается поиск."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Указывает начало, конечную или текущую позицию как опорную точку для `offset`, используя значение типа <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Новое положение в потоке."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Применяет записи списка управления Доступом управления доступом, заданные <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> к каналу, заданному текущим <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> объекта."
  remarks: 'Список управления доступом (ACL) определяются пользователи и группы, которые имеют или не имеющие права на выполнение определенных действий для указанного файла. Дополнительные сведения см. в разделе [как: Добавление или удаление записей списка управления доступом](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "Объект <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> , задающий запись списка управления Доступом управления доступом для применения к текущему каналу."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Не удалось выполнить базовый вызов для установки сведений о безопасности."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Задает длину текущего потока в указанное значение."
  remarks: "<xref:System.IO.Pipes.PipeStream>Класс не поддерживает метод SetLength.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Новая длина потока."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает режим передачи канала, поддерживаемый текущим каналом."
  remarks: "Анонимные каналы не поддерживают <xref:System.IO.Pipes.PipeTransmissionMode>режим передачи сообщений.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Один из <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> значений, указывающих режим передачи, поддерживаемый текущим каналом."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Дескриптор не был задан.       - или - канал ожидает соединения в операции Анонимный клиент сервер или с именованным клиентом."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ожидает на другом конце канала для считывания всех отправленных байтов."
  remarks: "Метод WaitForPipeDrain блокируется до другом конце канала считывания всех отправленных байтов."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции записи."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Записывает блок байтов в текущий поток, используя данные из буфера."
  remarks: "Используйте <xref:System.IO.Pipes.PipeStream.CanWrite%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции записи.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Вызов метода записи блокируется до `count` считанных байтов или достигнут конец потока. Для асинхронных операций чтения. в разделе <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>и <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Буфер, содержащий данные для записи в канал."
    - id: offset
      type: System.Int32
      description: "Отсчитываемое от нуля смещение в `buffer` с которого начинается копирование байтов в текущий поток."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов для записи в текущий поток."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>меньше 0.       - или - <code>count</code> меньше 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>больше, чем число доступных байтов в <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции записи."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Записывает байт в текущий поток."
  remarks: "Используйте <xref:System.IO.Pipes.PipeStream.CanWrite%2A>свойство, чтобы определить ли текущий <xref:System.IO.Pipes.PipeStream>поддерживает операции записи.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Байт, записываемый в поток."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Канал закрыт."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Канал не поддерживает операции записи."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Канал отключен, ожидает подключения, или дескриптор не задан."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Канал разорван или возникла другая ошибка ввода-вывода."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
