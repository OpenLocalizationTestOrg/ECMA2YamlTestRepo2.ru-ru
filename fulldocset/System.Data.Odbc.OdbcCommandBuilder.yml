### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommandBuilder
  id: OdbcCommandBuilder
  children:
  - System.Data.Odbc.OdbcCommandBuilder.#ctor
  - System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  - System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  langs:
  - csharp
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder
  fullName: System.Data.Odbc.OdbcCommandBuilder
  type: Class
  summary: "Автоматически создает однотабличные команды, используемые для согласования изменений, внесенных <xref href=&quot;System.Data.DataSet&quot;> </xref> с связанного источника данных. Этот класс не наследуется."
  remarks: "<xref:System.Data.Odbc.OdbcDataAdapter>Не создает автоматически инструкции SQL, необходимые для согласования изменений, внесенных в <xref:System.Data.DataSet>связанные с источником данных.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter> Тем не менее можно создать объект OdbcCommandBuilder, который создает инструкции SQL для отдельных обновлений, присвоив <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>свойству <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Затем OdbcCommandBuilder создает любые дополнительные инструкции SQL, которые не заданы.       Связь между <xref:System.Data.Odbc.OdbcDataAdapter>и его соответствующие OdbcCommandBuilder всегда равно одному.</xref:System.Data.Odbc.OdbcDataAdapter> Чтобы создать данное отношение, необходимо задать <xref:System.Data.Odbc.OdbcDataAdapter>Свойства объекта OdbcCommandBuilder.</xref:System.Data.Odbc.OdbcDataAdapter> В результате OdbcCommandBuilder регистрируется как прослушиватель, который выводятся данные событий, <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>которые влияют на <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>       Для создания инструкций INSERT, UPDATE или DELETE, использует OdbcCommandBuilder <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>свойство для получения требуемого набора метаданных.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Если изменить значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>после метаданные получения, такие как после первого обновления, необходимо вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>метод для обновления метаданных.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>      Настроек [!NOTE] настроек Если инструкция SELECT, присвоенная <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>свойство использует имена столбцов с псевдонимами, результирующие инструкции INSERT, UPDATE, и инструкции DELETE может оказаться неточным или ошибкой.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> Если основной драйвер ODBC не может предоставить имя соответствующего базового столбца для имени псевдонима столбца (с помощью значения SQL_DESC_BASE_COLUMN_NAME `SQLColAttribute`), псевдоним может использоваться в созданный инструкций INSERT, UPDATE и DELETE. Например драйвер Microsoft ODBC для Oracle возвращает псевдоним имени базового столбца. Таким образом созданных инструкций INSERT, UPDATE и DELETE может привести к ошибкам.       Также использует OdbcCommandBuilder <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>и <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>Свойства ссылается <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> Пользователь должен вызвать метод <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если одна или несколько из этих свойств будут изменены или если значение <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>изменяется само свойство.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, и <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>Свойства сохраняют свои предыдущие значения.</xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>       При вызове метода <xref:System.ComponentModel.Component.Dispose%2A>, OdbcCommandBuilder отсоединяется от <xref:System.Data.Odbc.OdbcDataAdapter>, и созданные команды больше не используются.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OdbcCommandBuilder.  \n  \n [!code-cs[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: 'public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> класса."
  remarks: "Базовый конструктор инициализирует все поля значениями по умолчанию."
  syntax:
    content: public OdbcCommandBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  id: '#ctor(System.Data.Odbc.OdbcDataAdapter)'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> класса со связанным <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> объекта."
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>Регистрирует себя в качестве прослушивателя <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter>указанный в этом свойстве.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder>связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter>освобождается.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> Объект, связанный с этим <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "Для добавления."
    - id: datarow
      type: System.Data.DataRow
      description: "Для добавления."
    - id: statementType
      type: System.Data.StatementType
      description: "Для добавления."
    - id: whereClause
      type: System.Boolean
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> объекта, для которого данный <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> объекта будет создавать инструкции SQL."
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>Регистрирует себя в качестве прослушивателя <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>событий, создаваемых <xref:System.Data.Odbc.OdbcDataAdapter>указанный в этом свойстве.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> </xref:System.Data.Odbc.OdbcCommandBuilder>       При создании нового экземпляра <xref:System.Data.Odbc.OdbcCommandBuilder>, все существующие <xref:System.Data.Odbc.OdbcCommandBuilder>связанный с этим <xref:System.Data.Odbc.OdbcDataAdapter>освобождается.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.Odbc.OdbcCommandBuilder>"
  syntax:
    content: public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> Объект, связанный с этим <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  id: DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Получает сведения о параметрах из хранимой процедуры, указанной в <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> и заполняет <xref:System.Data.Odbc.OdbcCommand.Parameters*>коллекции указанного <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объекта.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  remarks: "DeriveParameters перезаписывает любые существующие данные параметров для <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>       DeriveParameters требуется дополнительное обращение к источнику данных для получения сведений. Если сведения о параметрах известна заранее, более эффективно будет заполнить коллекцию параметров путем задания сведений явным образом.       DeriveParameters можно использовать только с хранимыми процедурами. DeriveParameters нельзя использовать для заполнения <xref:System.Data.Odbc.OdbcParameterCollection>произвольными инструкциями Transact-SQL, таких как инструкции SELECT с параметрами.</xref:System.Data.Odbc.OdbcParameterCollection>"
  syntax:
    content: public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);
    parameters:
    - id: command
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> Ссылается хранимую процедуру, из которой извлекаются сведения о параметрах. Производные параметры добавляются <xref:System.Data.Odbc.OdbcCommand.Parameters*>коллекцию <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>.</xref:System.Data.Odbc.OdbcCommand.Parameters*>"
  overload: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Основной драйвер ODBC не поддерживает возврат сведений о параметрах хранимой процедуры или текст команды не является допустимым именем хранимой процедуры, или <xref href=&quot;System.Data.CommandType&quot;> </xref> не <xref uid=&quot;langword_csharp_CommandType.StoredProcedure&quot; name=&quot;CommandType.StoredProcedure&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций удаления в источнике данных."
  remarks: "Можно использовать метод GetDeleteCommand для информационных и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand>       GetDeleteCommand также можно использовать как основу для измененной команды. Например может вызвать GetDeleteCommand и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае GetDeleteCommand будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A>или GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций удаления."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций удаления в источнике данных."
  remarks: "Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>в качестве основы для измененной команды.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> Например можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.Common.DbDataAdapter.Update%2A>или <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Odbc.OdbcCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.Odbc.OdbcCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был определен, и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций удаления."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций вставки в источнике данных."
  remarks: "Можно использовать метод GetInsertCommand для информационных и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand>       GetInsertCommand также можно использовать как основу для измененной команды. Например может вызвать GetInsertCommand и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае GetInsertCommand по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A>или GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций вставки."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций вставки в источнике данных."
  remarks: "Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>в качестве основы для измененной команды.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> Например можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.Common.DbDataAdapter.Update%2A>или <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.Common.DbCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был определен, и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, который требуется для выполнения операций вставки."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.String
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, необходимый для выполнения обновлений в источнике данных."
  remarks: "Можно использовать метод GetUpdateCommand для информационных и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand>       GetUpdateCommand также можно использовать как основу для измененной команды. Например может вызвать GetUpdateCommand и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае GetUpdateCommand по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными. Инструкции SQL впервые создаются, когда приложение вызывает метод <xref:System.Data.Common.DbDataAdapter.Update%2A>или GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, необходимый для выполнения обновлений."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает автоматически сгенерированный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, необходимый для выполнения обновлений в источнике данных."
  remarks: "Можно использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>метод для получения сведений и устранения неполадок, поскольку он возвращает <xref:System.Data.Odbc.OdbcCommand>объект для выполнения.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       Можно также использовать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>в качестве основы для измененной команды.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> Например можно вызвать <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>и измените <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>значение, а затем явно установить <xref:System.Data.Odbc.OdbcDataAdapter>.</xref:System.Data.Odbc.OdbcDataAdapter> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       После первоначального создания инструкции SQL, необходимо явным образом вызвать <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>Если инструкция каким-либо образом была изменена.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> В противном случае <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>по-прежнему будет использовать сведения из предыдущей инструкции, которые могут быть неправильными.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> Инструкции SQL впервые создаются, когда приложение вызывает один <xref:System.Data.Common.DbDataAdapter.Update%2A>или <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       Поведение по умолчанию, при создании имен параметра является использование @p1, @p2, и так далее для различных параметров. Передача `true` для `useColumnsForParameterNames` параметра позволяет принудительно выполнять <xref:System.Data.Common.DbCommandBuilder>для создания параметров на основе имен столбцов вместо.</xref:System.Data.Common.DbCommandBuilder> Он завершается успешно только в том случае, если выполняются следующие условия: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>был определен, и его длина меньше, чем имя создаваемого параметра.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -Имя создаваемого параметра соответствует критериям, указанным в <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>регулярное выражение.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>указано.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, создаются имена параметров, совпадающие с именами столбцов, если это возможно. Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, создания @p1, @p2, и т. д."
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Автоматически созданный <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> объект, необходимый для выполнения обновлений."
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Данный идентификатор без кавычек в наличии правильного каталога возвращает правильную форму этого идентификатора. Сюда входят корректно исключаются кавычки, внедренные в идентификатор."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "Исходный идентификатор без кавычек."
    return:
      type: System.String
      description: "Версия заключенный в кавычки идентификатор. Кавычки, внедренные в идентификатор, корректно исключаются."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Данный идентификатор без кавычек в наличии правильного каталога возвращает правильную форму этого идентификатора. Сюда входят корректно исключаются кавычки, внедренные в идентификатор."
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "Исходный идентификатор без кавычек."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "При передаче подключение вызывает управляемую оболочку для получения символ кавычки с помощью драйвера ODBC, вызов SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR). Если подключение не передается, строка заключена в кавычки с помощью значений из <> </> *настроек и <> </> *настроек."
    return:
      type: System.String
      description: "Версия заключенный в кавычки идентификатор. Кавычки, внедренные в идентификатор, корректно исключаются."
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Идентификатор заключен в кавычки, возвращает корректной форме идентификатора, включая правильно учитываются кавычки, внедренные в идентификатор."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Идентификатор, который будет иметь удалены внедренные кавычки."
    return:
      type: System.String
      description: "Не заключенный в кавычки идентификатор, в котором внедренные кавычки правильно escape-последовательности."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Идентификатор заключен в кавычки, возвращает корректной форме идентификатора, включая правильно учитываются кавычки, внедренные в идентификатор."
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "Идентификатор, который будет иметь удалены внедренные кавычки."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "The <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
    return:
      type: System.String
      description: "Не заключенный в кавычки идентификатор, в котором внедренные кавычки правильно escape-последовательности."
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
- uid: System.Data.Odbc.OdbcDataAdapter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OdbcCommandBuilder.DeriveParameters
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OdbcCommandBuilder.GetDeleteCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OdbcCommandBuilder.GetInsertCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OdbcCommandBuilder.GetParameterName
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OdbcCommandBuilder.GetUpdateCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OdbcCommandBuilder.QuoteIdentifier
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier
