### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.RegistryKey
  id: RegistryKey
  children:
  - Microsoft.Win32.RegistryKey.Close
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetAccessControl
  - Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  langs:
  - csharp
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  summary: "Представляет узел уровня раздела в реестре Windows. Этот класс является инкапсуляцией реестра."
  remarks: "To get an instance of RegistryKey, use one of the static members of the <xref:Microsoft.Win32.Registry> class.  \n  \n The registry acts as a central repository of information for the operating system and the applications on a computer. The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy). When storing information in the registry, select the appropriate location based on the type of information being stored. Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer. A particular key can have subkeys, just as a folder can have subfolders. Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys. Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information — for example, information about an application installed on the computer. Each value holds one particular piece of information, which can be retrieved or updated when required. For instance, you can create a RegistryKey for your company, under the key HKEY_LOCAL_MACHINE\\Software, and then a subkey for each application that your company creates. Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.  \n  \n Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.  \n  \n> [!CAUTION]\n>  Do not expose RegistryKey objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n Starting in the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], the length of a registry key is no longer limited to 255 characters."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/t-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/t-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/t-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryKey : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Close
  id: Close
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Закрыть раздел и записать его на диск, если его содержимое было изменено."
  remarks: "Вызов этого метода для системных разделов не будет действовать, поскольку системные ключи никогда не закрываются.       Этот метод не выполняет никаких действий, при вызове метода экземпляра `RegistryKey` уже закрыт."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_4_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_4_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_4_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает новый подраздел или открывает существующий для доступа на запись."
  remarks: "Для выполнения этого действия, пользователь должен иметь разрешение на этом уровне и ниже по иерархии реестра.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_15_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_15_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_15_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела. Эта строка не учитывает регистр."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции. Если задана строка нулевой длины <code> subkey </code>, текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> возвращается объект."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> На которой вызывается этот метод закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Не может быть записан; например, он не был открыт в качестве ключа для записи, или пользователь не имеет необходимых прав доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает новый подраздел или открывает существующий доступом на запись, используя заданные параметры проверки разрешений."
  remarks: "Для выполнения этого действия, пользователь должен иметь разрешение на этом уровне и ниже по иерархии реестра.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.       Чтобы использовать <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, необходимо иметь установленный экземпляр из <xref:Microsoft.Win32.RegistryKey>класса</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела. Эта строка не учитывает регистр."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции. Если задана строка нулевой длины <code> subkey </code>, текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> возвращается объект."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>содержит недопустимое значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> На которой вызывается этот метод закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Не может быть записан; например, он не был открыт в качестве ключа для записи, или пользователь не имеет необходимых прав доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает новый подраздел или открывает существующий с указанным доступом.       Доступно начиная с версии[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "Для выполнения этого действия, пользователь должен иметь разрешение на этом уровне и ниже по иерархии реестра.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.       Чтобы использовать метод CreateSubKey, необходимо иметь экземпляр <xref:Microsoft.Win32.RegistryKey>класса.</xref:Microsoft.Win32.RegistryKey> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела. Эта строка не учитывает регистр."
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что новый подраздел доступен для записи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции. Если задана строка нулевой длины <code> subkey </code>, текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> возвращается объект."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> не может быть записан; например, он не был открыт в качестве ключа для записи, или пользователь не имеет необходимых прав доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает подраздел или подраздел с доступом на запись, используя параметры проверки и реестра указанное разрешение."
  remarks: "Чтобы получить текущее <xref:Microsoft.Win32.RegistryKey>объекта, укажите пустую строку (&quot;») для `subkey`.</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "Параметр реестра, чтобы использовать; Например, который создает временный ключ."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объект закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объекта не может быть записан; например, он не был открыт в качестве ключа для записи или пользователь не имеет соответствующие права доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает новый подраздел или открывает существующий доступом на запись, используя указанное разрешение проверьте параметр и реестром безопасности."
  remarks: "Метод CreateSubKey создает раздел реестра с элементом управления доступом, заданные `registrySecurity` параметра. <xref:Microsoft.Win32.RegistryKey>Возвращаемый объект представляет раздел реестра, но этот объект не ограничен с помощью управления доступом, указанных в `registrySecurity` параметр.</xref:Microsoft.Win32.RegistryKey>       Если `permissionCheck` — <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт для чтения и записи.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> Если `permissionCheck` — <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт доступ для чтения.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       Для обеспечения обратной совместимости ключ открыт для чтения и записи, если `permissionCheck` , а <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>родительский ключ также имеет <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> Если родительский ключ задано любое другое значение, состояние чтения/записи контролируются параметром родительского раздела.       Чтобы выполнить это действие, пользователь должен иметь разрешения на этом уровне и ниже по иерархии реестра.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.       Чтобы использовать <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, необходимо иметь установленный экземпляр из <xref:Microsoft.Win32.RegistryKey>класса</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела. Эта строка не учитывает регистр."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "Безопасность управления доступом для нового ключа."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции. Если задана строка нулевой длины <code> subkey </code>, текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> возвращается объект."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>содержит недопустимое значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> На которой вызывается этот метод закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> не может быть записан; например, он не был открыт в качестве ключа для записи, или пользователь не имеет необходимых прав доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает новый подраздел или открывает существующий с указанным доступом.       Доступно начиная с версии[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "Для выполнения этого действия, пользователь должен иметь разрешение на этом уровне и ниже по иерархии реестра.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.       Чтобы использовать метод CreateSubKey, необходимо иметь экземпляр <xref:Microsoft.Win32.RegistryKey>класса.</xref:Microsoft.Win32.RegistryKey> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела. Эта строка не учитывает регистр."
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что новый подраздел доступен для записи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "Параметр реестра для использования."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции. Если задана строка нулевой длины <code> subkey </code>, текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> возвращается объект."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>не задает допустимый параметр."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> не может быть записан; например, он не был открыт в качестве ключа для записи, или пользователь не имеет необходимых прав доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает подраздел или подраздел с доступом на запись, используя заданные параметры проверки разрешений, параметр реестра и безопасности реестра."
  remarks: "Чтобы получить текущее <xref:Microsoft.Win32.RegistryKey>объекта, укажите пустую строку (&quot;») для `subkey`.</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    - id: registryOptions
      type: Microsoft.Win32.RegistryOptions
      description: "Параметр реестра для использования."
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "Безопасность управления доступом для нового раздела."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Созданный подраздел или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объект закрыт. Невозможно получить доступ к закрытым ключам."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объекта не может быть записан; например, он не был открыт в качестве ключа для записи или пользователь не имеет соответствующие права доступа."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Уровень вложенности превышает 510.       - или - произошла системная ошибка, например при удалении ключа или при попытке создать ключ в <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref> корневой."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или открытия раздела реестра."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет заданный подраздел."
  remarks: "Чтобы удалить дочерние подразделы, используйте <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>       Будьте внимательны при удалении разделов реестра."
  example:
  - "The following example demonstrates how to use DeleteSubKey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/cpp/m-microsoft.win32.regist_5_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/csharp/m-microsoft.win32.regist_5_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_5_1.vb)]"
  syntax:
    content: public void DeleteSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя удаляемого подраздела. Эта строка не учитывает регистр."
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> subkey </code> Содержит дочерние подразделы"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subkey </code> Не указывает допустимый ключ реестра"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>—<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления раздела."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет заданный подраздел и определяет, вызывает исключение, если подраздел не найден."
  remarks: "Чтобы удалить дочерние подразделы, используйте <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>       Будьте внимательны при удалении разделов реестра."
  syntax:
    content: public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя удаляемого подраздела. Эта строка не учитывает регистр."
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "Указывает, должно ли вызываться исключение, если не удается найти заданный подраздел. Если этот аргумент является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и заданный подраздел не существует, возникает исключение. Если этот аргумент является <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> и заданный подраздел не существует, никакие действия не выполняются."
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>subkey</code>содержит дочерние подразделы."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subkey</code>не указывает допустимый ключ реестра, и <code>throwOnMissingSubKey</code> — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления раздела."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет подраздел и все дочерние подразделы рекурсивно."
  remarks: "Необходимо иметь разрешения на удаление подраздела его и дерева.      Настроек [!CAUTION] настроек при удалении определенного ключа удаляются все записи под ключом в дереве. Предупреждение не предоставляется. Если вы хотите удалить подраздел только в том случае, если он не имеет дочерних подразделов, используйте <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>метод.</xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_12_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_12_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_12_1.vb)]"
  syntax:
    content: public void DeleteSubKeyTree (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "Удаляемый подраздел. Эта строка не учитывает регистр."
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Выполняется попытка удаления корневого куста.       - или - <code> subkey </code> не указывает допустимый раздел реестра."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла ошибка ввода-вывода."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления раздела."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет заданный подраздел и все дочерние подразделы рекурсивно и указывает ли исключение возникает, если раздел не найден."
  syntax:
    content: public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "Имя удаляемого подраздела. Эта строка не учитывает регистр."
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "Указывает, должно ли вызываться исключение, если не удается найти заданный подраздел. Если этот аргумент является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и заданный подраздел не существует, возникает исключение. Если этот аргумент является <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> и заданный подраздел не существует, никакие действия не выполняются."
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Попытка удаления корневого куста дерева.       - или - <code> subkey </code> не указывает допустимый раздел реестра, и <code> throwOnMissingSubKey </code> — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления раздела."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет указанное значение из данного раздела."
  remarks: "В Windows 95, Windows 98, Windows 98 Second Edition и Windows Millennium Edition, необходимо указать пустую строку для `name` параметр не удаляет значение по умолчанию."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/cpp/m-microsoft.win32.regist_13_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/csharp/m-microsoft.win32.regist_13_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_13_1.vb)]"
  syntax:
    content: public void DeleteValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя удаляемого параметра."
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>не является допустимой ссылкой на значение."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления значения."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Обрабатывается только для чтения."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Удаляет указанное значение из данного раздела и указывает, нужно ли исключение, если значение не найдено."
  remarks: "Если `throwOnMissingValue` — `false`, нет способа определить, если удаление выполнено успешно, без попытки доступа к значению только что удален. Будьте осторожны при удалении значений из реестра таким образом.       В Windows 95, Windows 98, Windows 98 Second Edition и Windows Millennium Edition, необходимо указать пустую строку для `name` параметр не удаляет значение по умолчанию."
  syntax:
    content: public void DeleteValue (string name, bool throwOnMissingValue);
    parameters:
    - id: name
      type: System.String
      description: "Имя удаляемого параметра."
    - id: throwOnMissingValue
      type: System.Boolean
      description: "Указывает, должно ли вызываться исключение, если не удается найти указанное значение. Если этот аргумент является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и указанное значение не существует, возникает исключение. Если этот аргумент является <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> и указанное значение не существует, никакие действия не выполняются."
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>не является допустимой ссылкой на значение и <code>throwOnMissingValue</code> — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для удаления значения."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Обрабатывается только для чтения."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Освобождает все ресурсы, используемые текущим экземпляром <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> класса."
  remarks: "Вызовите `Dispose` после использования <xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey> `Dispose` Метода <xref:Microsoft.Win32.RegistryKey>окажется в неработоспособном состоянии.</xref:Microsoft.Win32.RegistryKey> После вызова метода `Dispose`, необходимо освободить все ссылки на <xref:Microsoft.Win32.RegistryKey>, сборщик мусора мог освободить память, <xref:Microsoft.Win32.RegistryKey>занимаемую.</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey>       Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек вызова всегда `Dispose` перед освобождением последней ссылки на <xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:Microsoft.Win32.RegistryKey>объекта `Finalize` метод.</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Записывает все атрибуты заданного открытого раздела реестра в реестр."
  remarks: "Нет необходимости вызывать `Flush` для записи изменений в раздел. Изменения в реестр записываются на диск, когда реестр использует отложенную запись. Отложенная запись происходит автоматически и регулярно через интервал времени, заданного в системе. Изменения реестра также сбрасываются на диск при завершении работы системы.       В отличие от <xref:Microsoft.Win32.RegistryKey.Close%2A>, `Flush` функция возвращает только после записи всех данных в реестр.</xref:Microsoft.Win32.RegistryKey.Close%2A>       `Flush` Функции также могут записывать части или всех других ключей. Слишком частые вызовы этой функции может иметь отрицательное воздействие на производительность приложения.       Приложение должно вызывать только `Flush` если должен быть абсолютным определенных, что изменения реестра записаны на диск. В общем случае `Flush` редко, если вообще должны использоваться."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает раздел реестра на базе указанного дескриптора."
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "Дескриптор раздела реестра."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Раздел реестра."
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для выполнения этого действия."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Создает раздел реестра из указанного дескриптора и параметров представления реестра."
  remarks: "`view` Параметр для этого метода используется в последующих операциях, таких как открытие подразделов.       Если `view` — <xref:Microsoft.Win32.RegistryView>, но системе 32-разрядной операционной системе, возвращаемый ключ будет использоваться <xref:Microsoft.Win32.RegistryView>представление.</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView>"
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "Дескриптор раздела реестра."
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "Представление реестра для использования."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Раздел реестра."
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>view</code>является недопустимым."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для выполнения этого действия."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  id: GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает настройки управления доступом для текущего раздела реестра."
  remarks: "Эта перегрузка метода эквивалентен вызову <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29>перегрузка метода с побитовое сочетание следующих флагов: <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>и <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>.</xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> Эту перегрузку можно использовать для поиска других разрешений.       Пользователь должен иметь <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>правами для вызова этого метода.</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "Объект, описывающий разрешения управления доступом для раздела реестра, представленного текущим <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>."
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет необходимых разрешений."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает заданные разделы безопасности управления доступом для текущего раздела реестра."
  remarks: "Чтобы запросить разрешения на доступ, предоставленный в настоящее время для пользователей, укажите побитовое сочетание следующих флагов: <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>, <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>и <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>.</xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> Кроме того, можно использовать <xref:Microsoft.Win32.RegistryKey.GetAccessControl>перегрузка метода, который указывает только что сочетание значений.</xref:Microsoft.Win32.RegistryKey.GetAccessControl>       Пользователь должен иметь <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>правами для вызова этого метода.</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Побитовая комбинация значений перечисления, указывающее тип для получения сведений о безопасности."
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "Объект, описывающий разрешения управления доступом для раздела реестра, представленного текущим <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>."
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет необходимых разрешений."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает массив строк, содержащий все имена подразделов."
  remarks: "Этот метод не рекурсивно не находит имена. Он возвращает имена для базового уровня, из которого он был вызван."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_7_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_7_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_7_1.vb)]"
  syntax:
    content: public string[] GetSubKeyNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена подразделов для текущего ключа."
  overload: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла системная ошибка, например текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает значение, связанное с указанным именем. Возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пара имя значение не существует в реестре."
  remarks: "> [!NOTE]Настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Для получения этого безымянного значения, укажите `null` или пустая строка (&quot;») для `name`.       Когда метод GetValue извлекает значения Расширяемая строка (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), он расширяет строк среды с использованием данных из локальной среды.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> Чтобы получить расширяемого строкового значения реестра на удаленном компьютере, используйте <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>перегрузку, можно указать, что не развернут строк среды.</xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>      Настроек [!NOTE] настроек, если значение, содержащее расширяемый ссылки на переменные среды, сохраненный в виде строки (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), а не как Расширяемая строка (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), GetValue не развертывает его</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> Вы можете развернуть такой строки после получения путем вызова <xref:System.Environment.ExpandEnvironmentVariables%2A>метод.</xref:System.Environment.ExpandEnvironmentVariables%2A>      Настроек [!NOTE] настроек рекомендуемый способ получения данных из <xref:Microsoft.Win32.Registry.PerformanceData>ключа является использование <xref:System.Diagnostics.PerformanceCounter>класса вместо <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>метод.</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> </xref:System.Diagnostics.PerformanceCounter> </xref:Microsoft.Win32.Registry.PerformanceData>   >> Считывание значений типа REG_NONE или REG_LINK GetValue не поддерживает.  В обоих случаях значение по умолчанию (`null`) возвращается вместо фактического значения."
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_3_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_3_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_3_1.vb)]"
  syntax:
    content: public object GetValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого значения. Эта строка не учитывает регистр."
    return:
      type: System.Object
      description: "Значение, связанное с <code> name </code>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <code> name </code> не найден."
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение, помечен для удаления."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает значение, связанное с указанным именем. Если имя не найдено, возвращает предоставленное значение по умолчанию."
  remarks: "Используйте эту перегрузку <xref:Microsoft.Win32.RegistryKey.GetValue%2A>для обработки случаев, где имя еще не существует, например, в первый раз, запустите приложение.</xref:Microsoft.Win32.RegistryKey.GetValue%2A> При вызове этой перегрузки используйте `defaultValue` параметр, чтобы указать значение, возвращаемое, если `name` не существует.      Настроек [!NOTE] настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Для получения этого безымянного значения, укажите `null` или пустая строка (&quot;») для `name`.       Когда <xref:Microsoft.Win32.RegistryKey.GetValue%2A>метод извлекает значения Расширяемая строка (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), он расширяет строк среды с использованием данных из локальной среды.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.GetValue%2A> Чтобы получить расширяемого строкового значения реестра на удаленном компьютере, используйте <xref:Microsoft.Win32.RegistryKey.GetValue%2A>перегрузку, чтобы указать, что не развернут строк среды.</xref:Microsoft.Win32.RegistryKey.GetValue%2A>      Настроек [!NOTE] настроек, если значение, содержащее расширяемый ссылки на переменные среды, сохраненный в виде строки (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), а не как Расширяемая строка (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A>метод не развертывает его</xref:Microsoft.Win32.RegistryKey.GetValue%2A> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> Вы можете развернуть такой строки после получения путем вызова <xref:System.Environment.ExpandEnvironmentVariables%2A>метод.</xref:System.Environment.ExpandEnvironmentVariables%2A>      Настроек [!NOTE] настроек рекомендуемый способ получения данных из <xref:Microsoft.Win32.Registry.PerformanceData>ключа является использование <xref:System.Diagnostics.PerformanceCounter>класса вместо <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>метод.</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName> </xref:System.Diagnostics.PerformanceCounter> </xref:Microsoft.Win32.Registry.PerformanceData>   >> Считывание значений типа REG_NONE или REG_LINK GetValue не поддерживает.  В обоих случаях значение по умолчанию (`null`) возвращается вместо фактического значения."
  example:
  - "The following code example creates a test key with a value and retrieves that value. The example then attempts to retrieve a nonexistent value from the key; in this case the GetValue method returns the specified default value.  \n  \n [!code-cs[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_6_1.cs)]\n [!code-cpp[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_6_1.cpp)]\n [!code-vb[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_6_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого значения. Эта строка не учитывает регистр."
    - id: defaultValue
      type: System.Object
      description: "Значение, возвращаемое, если `name` не существует."
    return:
      type: System.Object
      description: "Значение, связанное с <code> name </code>, ни с одним внедренных слева свернуты, переменные среды или <code> defaultValue </code> Если <code> name </code> не найден."
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение, помечен для удаления."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает значение, связанное с указанным именем и параметрами извлечения. Если имя не найдено, возвращает предоставленное значение по умолчанию."
  remarks: "Используйте эту перегрузку, чтобы задать специальную обработку возвращаемого значения. Например, можно указать <xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>при получении значения реестра типа <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>для извлечения строки без развертывания встроенные переменные среды.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>       Используйте `defaultValue` параметр, чтобы указать значение, возвращаемое, если `name` не существует.      Настроек [!NOTE] настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Для получения этого безымянного значения, укажите `null` или пустая строка (&quot;») для `name`.   >> Считывание значений типа REG_NONE или REG_LINK GetValue не поддерживает.  В обоих случаях значение по умолчанию (`null`) возвращается вместо фактического значения."
  example:
  - "The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.  \n  \n [!code-cs[RegistryValueOptions#1](~/add/codesnippet/csharp/0ecb41d1-0eb1-4d34-96b2-_1.cs)]\n [!code-cpp[RegistryValueOptions#1](~/add/codesnippet/cpp/0ecb41d1-0eb1-4d34-96b2-_1.cpp)]\n [!code-vb[RegistryValueOptions#1](~/add/codesnippet/visualbasic/0ecb41d1-0eb1-4d34-96b2-_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого значения. Эта строка не учитывает регистр."
    - id: defaultValue
      type: System.Object
      description: "Значение, возвращаемое, если `name` не существует."
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: "Одно из значений перечисления, определяющее дополнительную обработку возвращаемого значения."
    return:
      type: System.Object
      description: "Значение, связанное с <code> name </code>, обработанные согласно указанному <code> options </code>, или <code> defaultValue </code> Если <code> name </code> не найден."
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение, помечен для удаления."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>не является допустимым <xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;> </xref> значения; например, недопустимое значение приводится к <xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;> </xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает тип данных реестра значение, связанное с указанным именем."
  remarks: "> [!NOTE]Настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Чтобы получить тип данных реестра для этого безымянного значения, укажите `null` или пустая строка (&quot;») для `name`.       Описание поддерживаемых типов данных реестра, см. в разделе <xref:Microsoft.Win32.RegistryValueKind>перечисления.</xref:Microsoft.Win32.RegistryValueKind>"
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the GetValueKind method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryValueKind GetValueKind (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя извлекаемого имеет тип данных реестра значение. Эта строка не учитывает регистр."
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: "Тип данных реестра значение, связанное с <code> name </code>."
  overload: Microsoft.Win32.RegistryKey.GetValueKind*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: ", Содержащий указанное значение не существует.       - или - пары имя/значение, определяемое <code> name </code> не существует.       Это исключение не вызывается в Windows 95, Windows 98 или Windows Millennium Edition."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает массив строк, содержащий все имена значений, связанных с этим разделом."
  remarks: "Если отсутствуют имена значений для ключа не найдены, возвращается пустой массив.       Раздел реестра может иметь значение по умолчанию, т. е пару имя значение, в которой имя является пустой строкой (»»). Если значение по умолчанию для раздела реестра, массив, возвращаемый методом GetValueNames содержит пустую строку."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public string[] GetValueNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена значений для текущего ключа."
  overload: Microsoft.Win32.RegistryKey.GetValueNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения из раздела реестра."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла системная ошибка; например текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает <xref href=&quot;Microsoft.Win32.SafeHandles.SafeRegistryHandle&quot;> </xref> ключ, представляющий реестра текущего <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> инкапсулирует объект."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "Дескриптор раздела реестра."
  overload: Microsoft.Win32.RegistryKey.Handle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Закрыт раздел реестра. Невозможно получить доступ к закрытым ключам."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла системная ошибка, например при удалении текущего ключа."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения на чтение ключа."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает имя ключа."
  remarks: "Имя ключа включает абсолютный путь этого ключа в реестре, всегда начиная с базового ключа, например, HKEY_LOCAL_MACHINE."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/p-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/p-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Абсолютное (полное) имя ключа."
  overload: Microsoft.Win32.RegistryKey.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Открывает новую <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , представляющий запрошенный раздел на локальном компьютере в указанном представлении."
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "Раздел HKEY, чтобы открыть."
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "Представление реестра для использования."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Запрошенный раздел реестра."
  overload: Microsoft.Win32.RegistryKey.OpenBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>или <code>view</code> является недопустимым."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для выполнения этого действия."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Открывает новую <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , представляющий запрошенный раздел на удаленном компьютере."
  remarks: "При открытии реестра локального компьютера `machineName` <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Запрошенный ключ должен быть корневой ключ на удаленном компьютере, которое определяется с помощью соответствующего <xref:Microsoft.Win32.RegistryHive>значение.</xref:Microsoft.Win32.RegistryHive>       Чтобы ключ должен быть открыт удаленно серверных и клиентских компьютерах должен быть запущена служба удаленного реестра и включено удаленное администрирование."
  example:
  - "The following code example shows how to open a registry key on a remote computer and enumerate the values of the key. The remote computer must be running the remote registry service. Specify the name of the remote computer as a command-line argument when invoking the program.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/cpp/e08e963c-edd7-45e7-b967-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/csharp/e08e963c-edd7-45e7-b967-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/visualbasic/e08e963c-edd7-45e7-b967-_1.vb)]"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "Раздел HKEY, чтобы открыть, из <xref href=&quot;Microsoft.Win32.RegistryHive&quot;> </xref> перечисления."
    - id: machineName
      type: System.String
      description: "Удаленный компьютер."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Запрошенный раздел реестра."
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>является недопустимым."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>не найден."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь имеет разрешения, необходимые для выполнения этой операции."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Открывает новый раздел реестра, который представляет запрошенный раздел на удаленном компьютере в указанном представлении."
  remarks: "При открытии реестра локального компьютера `machineName` <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Запрошенный ключ должен быть корневой ключ на удаленном компьютере, которое определяется с помощью соответствующего <xref:Microsoft.Win32.RegistryHive>значение.</xref:Microsoft.Win32.RegistryHive>       Чтобы ключ должен быть открыт удаленно серверных и клиентских компьютерах должен быть запущена служба удаленного реестра и включено удаленное администрирование.       На 64-разрядных версиях Windows разделы реестра для 32-разрядных и 64-разрядных приложений хранятся отдельно. Это 32-разрядное представление для 32-разрядных приложений и 64-разрядное представление для 64-разрядных приложений. Если `view` — <xref:Microsoft.Win32.RegistryView>, но удаленный компьютер находится под управлением 32-разрядной операционной системе, возвращаемый ключ будет использоваться <xref:Microsoft.Win32.RegistryView>представление.</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView>"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "Раздел HKEY, открываемого из <xref href=&quot;Microsoft.Win32.RegistryHive&quot;> </xref> перечисления..."
    - id: machineName
      type: System.String
      description: "Удаленный компьютер."
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "Представление реестра для использования."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Запрошенный раздел реестра."
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>или <code>view</code> является недопустимым."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>не найден."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь имеет необходимые разрешения для выполнения этой операции."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает подраздел с доступом только для чтения."
  remarks: "Прежде чем ими можно управлять с помощью других методов и свойств, необходимо открыть ключ. Изменение ключа, необходимо открыть его с перегрузку <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, который можно указать доступ для записи, такие как <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29>перегружать или <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29>перегрузить.</xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>       Если заданный подраздел не удается найти, затем `null` возвращается.       Чтобы использовать метод OpenSubKey, необходимо иметь экземпляр <xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_11_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_11_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_11_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя или путь к разделу, чтобы открыть только для чтения."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Подраздел, в запросе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>—<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения раздела реестра."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает заданный подраздел для чтения или чтения и записи для доступа к."
  remarks: "Вместо создания исключения, этот метод возвращает `null` Если запрошенный раздел не существует.       Если `permissionCheck` — <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт для чтения и записи; Если `permissionCheck` или <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт для чтения, если родительский ключ был открыт с <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       Чтобы использовать <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, необходимо иметь установленный экземпляр из <xref:Microsoft.Win32.RegistryKey>класса</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a subkey containing 100 key/value pairs and closes it. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck>, records the time it takes to read all the values, and closes the subkey. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck> and records the time it takes to read all the values. Finally, the example computes and displays the percentage improvement.  \n  \n [!code-cs[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/csharp/1404fbf5-0fde-46f3-9877-_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/visualbasic/1404fbf5-0fde-46f3-9877-_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: name
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Подраздел, в запросе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>—<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>содержит недопустимое значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для чтения раздела реестра."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает заданный подраздел и указывает, является ли доступ на запись для применения к ключу."
  remarks: "Если запрошенный раздел не существует, этот метод возвращает `null` вместо создания исключения.       Если `writable` — `true`, ключ будет открыт для чтения и записи, в противном случае ключ будет открыт только для чтения.       Чтобы использовать <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, необходимо иметь установленный экземпляр из <xref:Microsoft.Win32.RegistryKey>метод.</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_1_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_1_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_1_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);
    parameters:
    - id: name
      type: System.String
      description: "Имя или путь к разделу, чтобы открыть."
    - id: writable
      type: System.Boolean
      description: "Значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> при необходимости записи доступа к ключу."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Подраздел, в запросе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для доступа к разделу реестра в заданном режиме."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает подраздел с указанным именем и.       Доступно начиная с версии[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]"
  remarks: "Прежде чем ими можно управлять с помощью других методов и свойств, необходимо открыть ключ. Чтобы изменить ключ, необходимо открыть его с перегрузку <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, который можно указать доступ на запись.</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела."
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "Права для раздела реестра."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Подраздел, в запросе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для доступа к разделу реестра в заданном режиме."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает заданный подраздел для чтения или чтения и записи для доступа к, запросом заданных прав доступа."
  remarks: "Вместо создания исключения, этот метод возвращает `null` Если запрошенный раздел не существует.       Если `permissionCheck` — <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт для чтения и записи; Если `permissionCheck` или <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>, ключ открыт для чтения, если родительский ключ был открыт с <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       Доступ, заданный для `permissionCheck` имеет приоритет над доступ, заданный для `rights`. Например, если указать <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>для `permissionCheck` и <xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>для `rights`, попытка записи в подраздел возникло исключение.</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       Чтобы использовать <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>метод, необходимо иметь установленный экземпляр из <xref:Microsoft.Win32.RegistryKey>класса</xref:Microsoft.Win32.RegistryKey> </xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> Чтобы получить экземпляр <xref:Microsoft.Win32.RegistryKey>, используйте один из статических членов <xref:Microsoft.Win32.Registry>класса.</xref:Microsoft.Win32.Registry> </xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "Имя или путь создаваемого или открываемого подраздела."
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "Одно из значений перечисления, которое указывает, является ли ключ открыт для чтения или чтения и записи."
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "Побитовая комбинация значений перечисления, указывающее, требуемыми правами доступа."
    return:
      type: Microsoft.Win32.RegistryKey
      description: "Подраздел, в запросе, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> при сбое операции."
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>—<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>содержит недопустимое значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>rights</code>содержит недопустимый прав доступа к реестру.       - или - пользователь не имеет запрошенные разрешения."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  id: SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Применяет безопасность управления доступом Windows к существующему разделу реестра."
  remarks: "Чтобы изменить разрешения для реестра, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>метод, чтобы получить <xref:System.Security.AccessControl.RegistrySecurity>объект, представляющий существующий безопасность управления доступом Windows, изменение, <xref:System.Security.AccessControl.RegistrySecurity>, а затем использовать метод SetAccessControl для обновления безопасности для ключа.</xref:System.Security.AccessControl.RegistrySecurity> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>      Настроек [!CAUTION] настроек <xref:System.Security.AccessControl.RegistrySecurity>объект, указанный для `registrySecurity` заменяет существующие безопасности для раздела реестра.</xref:System.Security.AccessControl.RegistrySecurity> Чтобы добавить разрешения для нового пользователя, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>метод, чтобы получить существующие безопасность управления доступом, а затем измените его.</xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>"
  example:
  - "The following code example creates a test key. The current user is allowed <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights but denied <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights. Subsequent attempts to manipulate the key succeed or fail depending on these permissions.  \n  \n Before the key is deleted, the code pauses. You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor. (This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights. The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights. If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)  \n  \n [!code-cpp[RegistrySecurity101#1](~/add/codesnippet/cpp/463455ee-8295-4a1a-9af9-_1.cpp)]\n [!code-cs[RegistrySecurity101#1](~/add/codesnippet/csharp/463455ee-8295-4a1a-9af9-_1.cs)]\n [!code-vb[RegistrySecurity101#1](~/add/codesnippet/visualbasic/463455ee-8295-4a1a-9af9-_1.vb)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "Безопасность управления доступом для текущего подраздела."
  overload: Microsoft.Win32.RegistryKey.SetAccessControl*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Текущий <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объект представляет собой ключ с помощью управления доступом, а вызывающий объект не имеет <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> права."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registrySecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Задает пары указанного имени и значения."
  remarks: "Поскольку многие значения могут храниться в каждый раздел реестра, необходимо использовать `name` для указания, нужно задать конкретное значение.      Настроек [!NOTE] настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Чтобы задать это безымянное значение, укажите `null` или пустая строка (&quot;») для `name`.       Чтобы задать значения в ключе, необходимо открыть ключ с доступом на запись. После открытия раздела с доступом на запись можно изменить любой из пары имя/значение в этом разделе.       Если указанный `name` не существует в ключе, оно создается и ее значение равно `value`.       Эта перегрузка <xref:Microsoft.Win32.RegistryKey.SetValue%2A>хранятся 64-битовых целых чисел в виде строк (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>).</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> Для хранения 64-разрядные числа как <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>значения, используйте <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>перегрузку, указывающий <xref:Microsoft.Win32.RegistryValueKind>.</xref:Microsoft.Win32.RegistryValueKind> </xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>       Эта перегрузка <xref:Microsoft.Win32.RegistryKey.SetValue%2A>хранятся все строковые значения как <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, даже если они содержат раскрывающиеся ссылки на переменные среды.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> Для сохранения строковых значений, как развернуть строки (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>), используйте <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>перегрузку, указывающий <xref:Microsoft.Win32.RegistryValueKind>.</xref:Microsoft.Win32.RegistryValueKind> </xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>       Числовые типы, отличные от 32-разрядные целые числа хранятся в виде строки, эта перегрузка метода. Перечисления элементов хранятся в виде строк, содержащих имена элементов.      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.      Настроек [!NOTE] настроек Windows 98 и Windows Millennium Edition реестра не в Юникоде и не все символы Юникода допустимы для всех кодовых страниц. Знак Юникода, который является недопустимым для текущей кодовой страницы, заменяется наиболее подходящим соответствием. Исключение не возникает."
  example:
  - "The following code example shows how the SetValue method determines the registry data type when it sets values. The example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_10_1.vb)]\n [!code-cs[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_10_1.cs)]\n [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_10_1.cpp)]"
  syntax:
    content: public void SetValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Имя значения для хранения."
    - id: value
      type: System.Object
      description: "Для сохранения данных."
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>имеет неподдерживаемый тип данных."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Доступно только для чтения и не может быть записан; например, ключ не был открыт с доступом на запись.       - или - <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объект представляет корневой узел, а операционной системой является Windows Millennium Edition или Windows 98."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или изменения реестра."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Объект представляет корневой узел, а операционной системой является Windows 2000, Windows XP или Windows Server 2003."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Устанавливает значение пары &quot;имя значение&quot; в разделе реестра, используя заданный тип данных реестра."
  remarks: "Поскольку многие значения могут храниться в каждый раздел реестра, необходимо использовать `name` для указания, нужно задать конкретное значение.      Настроек [!NOTE] настроек реестра может иметь одно значение, которое не связан с любым именем. Когда это безымянное значение отображается в редакторе реестра, строка «(Default)» отображается вместо имени. Чтобы задать это безымянное значение, укажите `null` или пустая строка (&quot;») для `name`.       Чтобы задать значения в ключе, необходимо открыть ключ с доступом на запись. После открытия раздела с доступом на запись можно изменить любой из пары имя/значение в этом разделе.       Если указанный `name` не существует в ключе, оно создается и ее значение равно `value`.      Настроек [!NOTE] настроек указан тип данных реестра <xref:Microsoft.Win32.RegistryValueKind>совпадает с помощью <xref:Microsoft.Win32.RegistryKey.SetValue%2A>перегрузить.</xref:Microsoft.Win32.RegistryKey.SetValue%2A> </xref:Microsoft.Win32.RegistryValueKind>       Если тип указанного `value` не соответствует указанным `valueKind`, и данные не могут быть преобразованы, <xref:System.ArgumentException>возникает исключение.</xref:System.ArgumentException> Например, можно хранить <xref:System.Int64?displayProperty=fullName>как <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, но только в том случае, если его значение меньше, чем максимальное значение <xref:System.Int32?displayProperty=fullName>.</xref:System.Int32?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:System.Int64?displayProperty=fullName> Не удается сохранить одно строковое значение как <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>      Настроек [!NOTE] настроек Если упакованного значения передаются <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>или <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>, преобразование осуществляется с помощью инвариантного языка и региональных параметров.</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>      Настроек [!CAUTION] настроек не предоставляют <xref:Microsoft.Win32.RegistryKey>объектов таким образом, что вредоносная программа может создать тысячи бессмысленной подразделов или пары &quot;ключ значение&quot;.</xref:Microsoft.Win32.RegistryKey> Например не позволяют вызывающим объектам вводить произвольные разделы или значения.      Настроек [!NOTE] настроек Windows 98 и Windows Millennium Edition реестра не в Юникоде и не все символы Юникода допустимы для всех кодовых страниц. Знак Юникода, который является недопустимым для текущей кодовой страницы, заменяется наиболее подходящим соответствием. Исключение не возникает."
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/4d7d6152-5710-4faa-8e5f-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/4d7d6152-5710-4faa-8e5f-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/4d7d6152-5710-4faa-8e5f-_1.vb)]"
  syntax:
    content: public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: name
      type: System.String
      description: "Имя параметра для сохранения."
    - id: value
      type: System.Object
      description: "Для сохранения данных."
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "Тип данных реестра, используемый для хранения данных."
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип <code> value </code> не соответствует типу данных реестра, определяемое <code> valueKind </code>, поэтому данные не удалось правильно преобразовать."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> , Содержит указанное значение закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Доступно только для чтения и не может быть записан; например, ключ не был открыт с доступом на запись.       - или - <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> объект представляет корневой узел, а операционной системой является Windows Millennium Edition или Windows 98."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь не имеет разрешения, необходимые для создания или изменения реестра."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Объект представляет корневой узел, а операционной системой является Windows 2000, Windows XP или Windows Server 2003."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает количество подразделов для текущего раздела."
  remarks: "Данное свойство не рекурсивно не считает имена. Он только возвращает число имен на базовом уровне, из которого он был вызван."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_1_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_1_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_1_1.vb)]"
  syntax:
    content: public int SubKeyCount { get; }
    return:
      type: System.Int32
      description: "Количество подразделов для текущего раздела."
  overload: Microsoft.Win32.RegistryKey.SubKeyCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь имеет разрешение на чтение для ключа."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла системная ошибка, например текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает строковое представление этого ключа."
  remarks: "Возвращаемое значение включает путь реестра для заданного ключа и шестнадцатеричное значение для ключа. Путь реестра содержит абсолютный корень указанного ключа, всегда начинается с одного из базовых разделов реестра, например, HKEY_LOCAL_MACHINE."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_9_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_9_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_9_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, представляющая ключ. Если указанный ключ является недопустимым (отсутствует) затем <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> возвращается."
  overload: Microsoft.Win32.RegistryKey.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Доступ к закрыт (к закрытым ключам доступ отсутствует)."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Получает количество значений в ключе."
  remarks: "Каждый раздел реестра имеет значение по умолчанию, который не связан с любым именем. Это безымянное значение можно задать с помощью <xref:Microsoft.Win32.RegistryKey.SetValue%2A>метод и указывая, либо `null` или пустая строка (&quot;») для `name`.</xref:Microsoft.Win32.RegistryKey.SetValue%2A> Если значение по умолчанию не задан, он не учитывается при подсчете суммарного количества, возвращаемого свойством ValueCount; После его установки, однако она всегда учитывается."
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public int ValueCount { get; }
    return:
      type: System.Int32
      description: "Число пар &quot;имя значение&quot; в ключе."
  overload: Microsoft.Win32.RegistryKey.ValueCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Пользователь имеет разрешение на чтение для ключа."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref> Управлении закрыт (к закрытым ключам доступ отсутствует)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Пользователь имеет необходимые права."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла системная ошибка, например текущий ключ был удален."
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "Возвращает представление, который использовался для создания раздела реестра."
  remarks: "На 64-разрядных версиях Windows разделы реестра для 32-разрядных и 64-разрядных приложений хранятся отдельно. Это 32-разрядное представление для 32-разрядных приложений и 64-разрядное представление для 64-разрядных приложений.       Не следует предполагать, что представление всегда соответствует фактическим представлением <xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey>"
  syntax:
    content: public Microsoft.Win32.RegistryView View { get; }
    return:
      type: Microsoft.Win32.RegistryView
      description: "Представление, используемое для создания раздела реестра.       - или - <xref href=&quot;Microsoft.Win32.RegistryView&quot;> </xref>, если представление не использовался."
  overload: Microsoft.Win32.RegistryKey.View*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.Win32.RegistryKey.Close
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKeyPermissionCheck
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKeyPermissionCheck
  nameWithType: RegistryKeyPermissionCheck
  fullName: Microsoft.Win32.RegistryKeyPermissionCheck
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryOptions
  nameWithType: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
- uid: System.Security.AccessControl.RegistrySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistrySecurity
  nameWithType: RegistrySecurity
  fullName: System.Security.AccessControl.RegistrySecurity
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.Dispose
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
- uid: Microsoft.Win32.RegistryKey.Flush
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryView
  nameWithType: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueOptions
  nameWithType: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
- uid: Microsoft.Win32.RegistryKey.Handle
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryHive
  nameWithType: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryKey.ToString
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
- uid: Microsoft.Win32.RegistryKey.ValueCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
- uid: Microsoft.Win32.RegistryKey.Close*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close
  nameWithType: RegistryKey.Close
- uid: Microsoft.Win32.RegistryKey.CreateSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey
  nameWithType: RegistryKey.CreateSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey
  nameWithType: RegistryKey.DeleteSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree
  nameWithType: RegistryKey.DeleteSubKeyTree
- uid: Microsoft.Win32.RegistryKey.DeleteValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue
  nameWithType: RegistryKey.DeleteValue
- uid: Microsoft.Win32.RegistryKey.Dispose*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose
  nameWithType: RegistryKey.Dispose
- uid: Microsoft.Win32.RegistryKey.Flush*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush
  nameWithType: RegistryKey.Flush
- uid: Microsoft.Win32.RegistryKey.FromHandle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle
  nameWithType: RegistryKey.FromHandle
- uid: Microsoft.Win32.RegistryKey.GetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl
  nameWithType: RegistryKey.GetAccessControl
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames
  nameWithType: RegistryKey.GetSubKeyNames
- uid: Microsoft.Win32.RegistryKey.GetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue
  nameWithType: RegistryKey.GetValue
- uid: Microsoft.Win32.RegistryKey.GetValueKind*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind
  nameWithType: RegistryKey.GetValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames
  nameWithType: RegistryKey.GetValueNames
- uid: Microsoft.Win32.RegistryKey.Handle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey
  nameWithType: RegistryKey.OpenBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey
  nameWithType: RegistryKey.OpenRemoteBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey
  nameWithType: RegistryKey.OpenSubKey
- uid: Microsoft.Win32.RegistryKey.SetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl
  nameWithType: RegistryKey.SetAccessControl
- uid: Microsoft.Win32.RegistryKey.SetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue
  nameWithType: RegistryKey.SetValue
- uid: Microsoft.Win32.RegistryKey.SubKeyCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
- uid: Microsoft.Win32.RegistryKey.ToString*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString
  nameWithType: RegistryKey.ToString
- uid: Microsoft.Win32.RegistryKey.ValueCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
