### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  id: SecurityAlgorithmSuite
  children:
  - System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  langs:
  - csharp
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
  type: Class
  summary: "Задает свойства алгоритмов. Это <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> класса."
  remarks: "Экземпляры этого класса используются для указания характеристики криптографических алгоритмов, используемых при защите сообщений.       Этот класс используется производными классами для создания экземпляров наборов алгоритмов безопасности и содержит свойства, описывающие алгоритмы безопасности. Например `wsBasicHttp` привязки используется внутренний производный класс для указания свойства алгоритмов безопасности."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))]

      public abstract class SecurityAlgorithmSuite
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> класса."
  remarks: "Экземпляры этого класса состоят из статических свойств и свойств, доступных только для чтения, поэтому конструктор не инициализирует никаких свойств."
  syntax:
    content: protected SecurityAlgorithmSuite ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  id: Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов Basic128."
  remarks: "По умолчанию используется AES-128 в качестве алгоритма шифрования."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Базовый 128-разрядный <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  id: Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, в качестве алгоритма шифрования ключей и базовый 128-разрядный используется RSA15 в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и базовый 128-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  id: Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и базовый 128-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и базовый 128-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  id: Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 128-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 128-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  id: Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется в качестве алгоритма шифрования сообщений — базовый 192-разрядный."
  remarks: "По умолчанию AES&192; используется в качестве алгоритма шифрования."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, который использует в качестве алгоритма шифрования сообщений — базовый 192-разрядный."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  id: Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, в качестве алгоритма шифрования ключей и базовый 192-разрядный используется RSA15 в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и базовый 192-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  id: Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, в котором используется SHA256 для хэш-кода сигнатуры и базовый 192-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, в котором используется SHA256 для хэш-кода сигнатуры и базовый 192-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  id: Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 192-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 192-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  id: Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, в качестве алгоритма шифрования сообщений используется базовый 256-разрядный."
  remarks: "По умолчанию алгоритм шифрования используется алгоритм AES-256."
  example:
  - "The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.se_4_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.se_4_1.cs)]"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, в качестве алгоритма шифрования сообщений используется базовый 256-разрядный."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  id: Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, в качестве алгоритма шифрования ключей и базовый 256-разрядный используется RSA15 в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и базовый 256-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  id: Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и базовый 256-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и базовый 256-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  id: Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 256-разрядный в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и базовый 256-разрядный в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  id: Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов по умолчанию."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс, переопределяющий свойства, задающие значения по умолчанию, а также методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Значение по умолчанию <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> — <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>, который указывает 256-разрядный Advanced Encryption Standard (AES) в качестве алгоритма симметричного шифрования.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  id: DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает используемый по умолчанию алгоритм шифрования асимметричного ключа в виде строки."
  remarks: "При переопределении возвращает строковое значение, которое будет использоваться для сравнения в <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>метод.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "Используемый по умолчанию алгоритм шифрования асимметричного ключа."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  id: DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает по умолчанию асимметричный алгоритм создания сигнатуры в виде строки."
  remarks: "При переопределении возвращает строковое значение, которое будет использоваться для сравнения в <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>метод.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "По умолчанию асимметричный алгоритм создания сигнатуры."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  id: DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает используемый по умолчанию алгоритм канонизации в виде строки."
  remarks: "При переопределении возвращает строковое значение, которое будет использоваться для сравнения в методе <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultCanonicalizationAlgorithm { get; }
    return:
      type: System.String
      description: "По умолчанию алгоритм канонизации."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  id: DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает используемый по умолчанию алгоритм хэш-кода в виде строки."
  remarks: "При переопределении возвращает строковое значение, которое будет использоваться для сравнения в <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>метод.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultDigestAlgorithm { get; }
    return:
      type: System.String
      description: "Алгоритм хэш-кода по умолчанию."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает алгоритм шифрования по умолчанию в виде строки."
  remarks: "При переопределении возвращает строковое значение, которое будет использоваться для сравнения в <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>метод.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultEncryptionAlgorithm { get; }
    return:
      type: System.String
      description: "По умолчанию алгоритм шифрования."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  id: DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает длину производного ключа шифрования по умолчанию в виде <xref:System.Int32>значение.</xref:System.Int32>"
  remarks: "Возвращаемое значение будет зависеть от подкласса, в котором оно реализовано. Для `Basic256` шифрования, возвращается значение 256."
  syntax:
    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "Длина производного ключа шифрования по умолчанию."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  id: DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает длину производного ключа сигнатуры по умолчанию как <xref:System.Int32>значение.</xref:System.Int32>"
  remarks: "Возвращаемое значение будет зависеть от подкласса, в котором оно реализовано. Для `Basic256` шифрования, он возвращает 192."
  syntax:
    content: public abstract int DefaultSignatureKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "Длина производного ключа сигнатуры по умолчанию."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  id: DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает длину симметричного ключа по умолчанию как <xref:System.Int32>значение.</xref:System.Int32>"
  remarks: "Возвращаемое значение будет зависеть от подкласса, в котором оно реализовано. Для `Basic256` шифрования, возвращается значение 256."
  syntax:
    content: public abstract int DefaultSymmetricKeyLength { get; }
    return:
      type: System.Int32
      description: "По умолчанию длина симметричного ключа."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  id: DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает используемый по умолчанию алгоритм шифрования симметричного ключа в виде строки."
  syntax:
    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "Алгоритм шифрования симметричного ключа по умолчанию."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  id: DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает по умолчанию симметричный алгоритм создания сигнатуры в виде строки."
  syntax:
    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "По умолчанию симметричный алгоритм создания сигнатуры."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  id: IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли асимметричным алгоритмом конкретная длина ключа."
  remarks: "Обычно используются ключи длиной 128, 192 и 256 бит."
  syntax:
    content: public abstract bool IsAsymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "Длина ключа для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если длина ключа поддерживается асимметричным алгоритмом; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм шифрования асимметричного ключа."
  remarks: '`algorithm`Возвращает по сравнению со строкой, возвращенной из <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>'
  syntax:
    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Проверяемый алгоритм."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм шифрования асимметричного ключа поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  id: IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли асимметричный алгоритм создания сигнатуры."
  remarks: '`algorithm`Возвращает по сравнению со строкой, возвращенной из <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>'
  syntax:
    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если асимметричный алгоритм создания сигнатуры поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  id: IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм канонизации."
  remarks: '`algorithm`Возвращает по сравнению со строкой, возвращенной из <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>'
  syntax:
    content: public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм канонизации поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  id: IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм хэш-кода."
  remarks: '`algorithm`Возвращает по сравнению со строкой, возвращенной из <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>'
  syntax:
    content: public virtual bool IsDigestAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм хэширования поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  id: IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм шифрования."
  remarks: '`algorithm`Возвращает по сравнению со строкой, возвращенной из <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>'
  syntax:
    content: public virtual bool IsEncryptionAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм шифрования поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм создания производных ключей шифрования."
  syntax:
    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм создания производных ключей шифрования поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм создания производных ключей сигнатуры."
  syntax:
    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм создания производных ключей сигнатуры поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  id: IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "При переопределении в производном классе указывает, поддерживается ли конкретная длина симметричного ключа."
  remarks: "`length` Сравнивается с диапазоном значений в зависимости от подкласса. Например, в `TripleDES` подкласс, этот метод проверяет, что `length` от 192 до 256 включительно."
  syntax:
    content: public abstract bool IsSymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "Длина ключа для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если длина симметричного ключа поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли алгоритм шифрования симметричного ключа."
  syntax:
    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если алгоритм шифрования симметричного ключа поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  id: IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Указывает, поддерживается ли симметричный алгоритм создания сигнатуры."
  syntax:
    content: public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если симметричный алгоритм создания сигнатуры поддерживается; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  id: TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов Triple Data Encryption Standard (DES)."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов&3;DES <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  id: TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  id: TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется SHA256 для хэш-кода сигнатуры и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  id: TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  remarks: "<xref:System.ServiceModel.Security.SecurityAlgorithmSuite>Вернул фактически представляет собой внутренний подкласс котором переопределены некоторые свойства, задающие значения по умолчанию, а также некоторые методы.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Набор алгоритмов, используется RSA15, в качестве алгоритма шифрования ключей, SHA256 для хэш-кода сигнатуры и 192-разрядный Triple DES Data Encryption Standard () в качестве алгоритма шифрования сообщений."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
