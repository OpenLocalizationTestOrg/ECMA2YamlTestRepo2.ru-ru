### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.ChannelServices
  id: ChannelServices
  children:
  - System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  - System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain(System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IChannelReceiver)
  - System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessage@)
  - System.Runtime.Remoting.Channels.ChannelServices.GetChannel(System.String)
  - System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties(System.Object)
  - System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject(System.MarshalByRefObject)
  - System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel)
  - System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)
  - System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels
  - System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage)
  - System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel(System.Runtime.Remoting.Channels.IChannel)
  langs:
  - csharp
  name: ChannelServices
  nameWithType: ChannelServices
  fullName: System.Runtime.Remoting.Channels.ChannelServices
  type: Class
  summary: "Предоставляет статические методы для регистрации канала удаленного взаимодействия, разрешения и поиска URL-адреса. Этот класс не наследуется."
  remarks: "Channels transport messages between applications across such remoting boundaries as application domains, processes, and computers. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range of protocols, even though the runtime might not be at the other end of the channel. Run-time objects can be used to expose a wide range of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols.  \n  \n Channels must expose the <xref:System.Runtime.Remoting.Channels.IChannel> interface, which provides informational properties such as the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> and <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A>. Channels are registered using the <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName> method. Channels can also be loaded from the remoting configuration. (See [\\<channel> Element (Template)](http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce) for details.)  \n  \n On the client side, messages are handed off to the client channel sink chain after they traverse the client <xref:System.Runtime.Remoting.Contexts.Context> chain. The first channel sink is typically a <xref:System.Runtime.Remoting.Channels.IClientFormatterSink>, which serializes the message into a stream that is passed down the channel sink chain to the client transport sink. The client transport sink then writes this stream out to the wire.  \n  \n On the server side, the server transport sink reads requests off the wire and passes the request stream to the server channel sink chain. The server formatter sink at the end of this chain will deserialize the request into a message. It will then hand this message off to the remoting infrastructure, which will dispatch it to the server <xref:System.Runtime.Remoting.Contexts.Context> chain."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ChannelServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  id: AsyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: AsyncDispatchMessage(IMessage,IMessageSink)
  nameWithType: ChannelServices.AsyncDispatchMessage(IMessage,IMessageSink)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage(IMessage,IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Асинхронно отправляет указанное сообщение в цепи стороне сервера, на основе URI на внедренном в сообщение."
  remarks: "Текущий метод сразу же завершает, обработал ли сервер указанное сообщение или нет."
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMessageCtrl AsyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Отправляемое сообщение."
    - id: replySink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "Приемник, который обрабатывает возвращаемое сообщение, если это не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageCtrl
      description: "Объект <xref href=&quot;System.Runtime.Remoting.Messaging.IMessageCtrl&quot;> </xref> объект, используемый для управления сообщения, отправляемого асинхронно."
  overload: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>msg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain(System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IChannelReceiver)
  id: CreateServerChannelSinkChain(System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IChannelReceiver)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
  nameWithType: ChannelServices.CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Создает цепочку приемников канала для указанного канала."
  syntax:
    content: public static System.Runtime.Remoting.Channels.IServerChannelSink CreateServerChannelSinkChain (System.Runtime.Remoting.Channels.IServerChannelSinkProvider provider, System.Runtime.Remoting.Channels.IChannelReceiver channel);
    parameters:
    - id: provider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "Первый поставщик в цепи поставщиков приемников, которые создают цепь приемников канала."
    - id: channel
      type: System.Runtime.Remoting.Channels.IChannelReceiver
      description: "<xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiver&quot;> </xref> Для которого создается цепочка приемника канала."
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "Новая цепочка приемника канала для указанного канала."
  overload: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessage@)
  id: DispatchMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessage@)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
  nameWithType: ChannelServices.DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Отправляет входящие удаленные вызовы."
  remarks: "Этот метод используется каналами для отправки входящих удаленных вызовов."
  syntax:
    content: public static System.Runtime.Remoting.Channels.ServerProcessing DispatchMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage msg, out System.Runtime.Remoting.Messaging.IMessage replyMsg);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "Стек каналов сервера приемников, что сообщение уже прошло."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Отправляемое сообщение."
    - id: replyMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "При возвращении этого метода содержит <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> , содержащий ответ от сервера сообщение, которое содержится в `msg` параметра. Этот параметр передается неинициализированным."
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "Объект <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;> </xref> , задающая состояние обработки сообщения сервера."
  overload: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>msg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannel(System.String)
  id: GetChannel(System.String)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: GetChannel(String)
  nameWithType: ChannelServices.GetChannel(String)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetChannel(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Возвращает зарегистрированный канал с указанным именем."
  remarks: ''
  example:
  - >-
    [!code-vb[ChannelServices_GetChannel#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_68_1.vb)]
     [!code-cpp[ChannelServices_GetChannel#1](~/add/codesnippet/cpp/m-system.runtime.remotin_68_1.cpp)]
     [!code-cs[ChannelServices_GetChannel#1](~/add/codesnippet/csharp/m-system.runtime.remotin_68_1.cs)]
  syntax:
    content: public static System.Runtime.Remoting.Channels.IChannel GetChannel (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя канала."
    return:
      type: System.Runtime.Remoting.Channels.IChannel
      description: "Интерфейс к зарегистрированному каналу или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если канал не зарегистрирован."
  overload: System.Runtime.Remoting.Channels.ChannelServices.GetChannel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties(System.Object)
  id: GetChannelSinkProperties(System.Object)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: GetChannelSinkProperties(Object)
  nameWithType: ChannelServices.GetChannelSinkProperties(Object)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Возвращает <xref:System.Collections.IDictionary>свойств для заданного прокси.</xref:System.Collections.IDictionary>"
  remarks: ''
  example:
  - >-
    [!code-vb[ChannelServices_GetChannel#2](~/add/codesnippet/visualbasic/2af55bad-b9b3-4c93-8983-_1.vb)]
     [!code-cpp[ChannelServices_GetChannel#2](~/add/codesnippet/cpp/2af55bad-b9b3-4c93-8983-_1.cpp)]
     [!code-cs[ChannelServices_GetChannel#2](~/add/codesnippet/csharp/2af55bad-b9b3-4c93-8983-_1.cs)]
  syntax:
    content: public static System.Collections.IDictionary GetChannelSinkProperties (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Прокси-сервер, свойства которого необходимо извлечь."
    return:
      type: System.Collections.IDictionary
      description: "Интерфейс к словарю свойств, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если свойства не найдены."
  overload: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Хотя бы один из вызывающих объектов, находящихся в стеке вызовов не имеет разрешения на настройку каналы и типы удаленного взаимодействия."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject(System.MarshalByRefObject)
  id: GetUrlsForObject(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: GetUrlsForObject(MarshalByRefObject)
  nameWithType: ChannelServices.GetUrlsForObject(MarshalByRefObject)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Возвращает массив всех URL-адресов, которые могут использоваться для доступа к указанному объекту."
  remarks: ''
  example:
  - >-
    [!code-cpp[ChannelServices_RegisteredChannels#4](~/add/codesnippet/cpp/1a19c242-e7eb-4e57-bfd4-_1.cpp)]
     [!code-cs[ChannelServices_RegisteredChannels#4](~/add/codesnippet/csharp/1a19c242-e7eb-4e57-bfd4-_1.cs)]
     [!code-vb[ChannelServices_RegisteredChannels#4](~/add/codesnippet/visualbasic/1a19c242-e7eb-4e57-bfd4-_1.vb)]
  syntax:
    content: public static string[] GetUrlsForObject (MarshalByRefObject obj);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "Объект для извлечения массива для URL-адрес."
    return:
      type: System.String[]
      description: "Массив строк, содержащий URL-адреса, которые могут использоваться для удаленного определения объекта, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если ни один объект не найден."
  overload: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel)
  id: RegisterChannel(System.Runtime.Remoting.Channels.IChannel)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: RegisterChannel(IChannel)
  nameWithType: ChannelServices.RegisterChannel(IChannel)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(IChannel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Регистрирует канал со службами канала. RegisterChannel является устаревшим. Используйте &lt;xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%28System.Runtime.Remoting.Channels.IChannel%2CSystem.Boolean%29&gt; вместо него."
  remarks: "> [!NOTE]\n>  RegisterChannel is obsolete. Please use <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%28System.Runtime.Remoting.Channels.IChannel%2CSystem.Boolean%29> instead.  \n  \n The RegisterChannel method takes in the <xref:System.Runtime.Remoting.Channels.IChannel> interface from a channel object. The channel's <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> must be unique, or the channel must be anonymous. A channel is anonymous if the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A?displayProperty=fullName> is set to either `null` or <xref:System.String.Empty> by using the `name` configuration property.  \n  \n You cannot register two channels with the same name in a <xref:System.AppDomain>. By default, the name of a <xref:System.Runtime.Remoting.Channels.Http.HttpChannel> is \"http\" and the name of a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is \"tcp.\" Therefore, if you want to register two channels of the same type, you must specify a different name for one of them through configuration properties.  \n  \n For more information about channel configuration properties, see <xref:System.Runtime.Remoting.Channels.Http.HttpChannel>, and [\\<channel> Element (Template)](http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce)."
  example:
  - >-
    [!code-vb[HttpChannel#1](~/add/codesnippet/visualbasic/de15fc22-0d89-4c17-b753-_1.vb)]
     [!code-cpp[HttpChannel#1](~/add/codesnippet/cpp/de15fc22-0d89-4c17-b753-_1.cpp)]
     [!code-cs[HttpChannel#1](~/add/codesnippet/csharp/de15fc22-0d89-4c17-b753-_1.cs)]
  syntax:
    content: public static void RegisterChannel (System.Runtime.Remoting.Channels.IChannel chnl);
    parameters:
    - id: chnl
      type: System.Runtime.Remoting.Channels.IChannel
      description: "Канал для регистрации."
  overload: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>chnl</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Канал уже был зарегистрирован."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "По крайней мере один из вызывающим объектам выше в стеке вызовов не имеет разрешения для настраивать каналы и типы удаленного взаимодействия."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)
  id: RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: RegisterChannel(IChannel,Boolean)
  nameWithType: ChannelServices.RegisterChannel(IChannel,Boolean)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(IChannel,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Регистрирует канал со службами канала."
  remarks: "The RegisterChannel method receives the <xref:System.Runtime.Remoting.Channels.IChannel> interface from a channel object. The channel's <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> must be unique, or the channel must be anonymous. A channel is anonymous if the <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A?displayProperty=fullName> is set to either `null` or <xref:System.String.Empty> by using the `name` configuration property.  \n  \n You cannot register two channels with the same name in a <xref:System.AppDomain>. By default, the name of a <xref:System.Runtime.Remoting.Channels.Http.HttpChannel> is \"http\" and the name of a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is \"tcp\". Therefore, if you want to register two channels of the same type, you must specify a different name for one of them through configuration properties.  \n  \n For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe) and [\\<channel> Element (Template)](http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce).  \n  \n If the `ensureSecurity` parameter is set to `true`, the remoting system determines whether the channel implements <xref:System.Runtime.Remoting.Channels.ISecurableChannel>, and if so, enables encryption and digital signatures. An exception is thrown if the channel does not implement <xref:System.Runtime.Remoting.Channels.ISecurableChannel>.  \n  \n> [!NOTE]\n>  Setting `ensureSecurity` to `true` throws a <xref:System.Runtime.Remoting.RemotingException> for the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> on Windows 98 (Since secure tcp channels are not supported on Windows 9x), and for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> on all platforms (You must host your service in IIS if you want to use a secure http channel)."
  syntax:
    content: public static void RegisterChannel (System.Runtime.Remoting.Channels.IChannel chnl, bool ensureSecurity);
    parameters:
    - id: chnl
      type: System.Runtime.Remoting.Channels.IChannel
      description: "Канал для регистрации."
    - id: ensureSecurity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>гарантирует, что защита включена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. При установке значения <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> не влияет на параметр безопасности по TCP или IPC каналу."
  overload: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>chnl</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Канал уже был зарегистрирован."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "По крайней мере один из вызывающим объектам выше в стеке вызовов не имеет разрешения для настраивать каналы и типы удаленного взаимодействия."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Не поддерживается в Windows 98 для <xref href=&quot;System.Runtime.Remoting.Channels.Tcp.TcpServerChannel&quot;> </xref> и на всех платформах для <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;> </xref>. Разместите службу с помощью Internet Information Services (IIS), если требуется безопасный канал HTTP."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels
  id: RegisteredChannels
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: RegisteredChannels
  nameWithType: ChannelServices.RegisteredChannels
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Возвращает список зарегистрированных в настоящее время каналов."
  remarks: ''
  example:
  - >-
    [!code-cs[ChannelServices_RegisteredChannels#2](~/add/codesnippet/csharp/p-system.runtime.remotin_96_1.cs)]
     [!code-vb[ChannelServices_RegisteredChannels#2](~/add/codesnippet/visualbasic/p-system.runtime.remotin_96_1.vb)]
     [!code-cpp[ChannelServices_RegisteredChannels#2](~/add/codesnippet/cpp/p-system.runtime.remotin_96_1.cpp)]
  syntax:
    content: public static System.Runtime.Remoting.Channels.IChannel[] RegisteredChannels { get; }
    return:
      type: System.Runtime.Remoting.Channels.IChannel[]
      description: "Массив всех зарегистрированных в настоящее время каналов."
  overload: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage)
  id: SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: SyncDispatchMessage(IMessage)
  nameWithType: ChannelServices.SyncDispatchMessage(IMessage)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(IMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Синхронно отправляет входящего сообщения в цепи стороне сервера, на основе URI на внедренном в сообщение."
  remarks: ''
  example:
  - >-
    [!code-vb[ChannelServices_SyncDispatchMessage#1](~/add/codesnippet/visualbasic/541e1629-5570-4f34-ab02-_1.vb)]
     [!code-cs[ChannelServices_SyncDispatchMessage#1](~/add/codesnippet/csharp/541e1629-5570-4f34-ab02-_1.cs)]
     [!code-cpp[ChannelServices_SyncDispatchMessage#1](~/add/codesnippet/cpp/541e1629-5570-4f34-ab02-_1.cpp)]
  syntax:
    content: public static System.Runtime.Remoting.Messaging.IMessage SyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Отправляемое сообщение."
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Ответное сообщение возвращается при вызове на стороне сервера цепочку."
  overload: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>msg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel(System.Runtime.Remoting.Channels.IChannel)
  id: UnregisterChannel(System.Runtime.Remoting.Channels.IChannel)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  langs:
  - csharp
  name: UnregisterChannel(IChannel)
  nameWithType: ChannelServices.UnregisterChannel(IChannel)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel(IChannel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Отменяет регистрацию указанного канала в списке зарегистрированных каналов."
  remarks: ''
  example:
  - >-
    [!code-cs[ChannelServices_RegisteredChannels#3](~/add/codesnippet/csharp/e0a1191d-abbc-4d5b-b0d6-_1.cs)]
     [!code-vb[ChannelServices_RegisteredChannels#3](~/add/codesnippet/visualbasic/e0a1191d-abbc-4d5b-b0d6-_1.vb)]
     [!code-cpp[ChannelServices_RegisteredChannels#3](~/add/codesnippet/cpp/e0a1191d-abbc-4d5b-b0d6-_1.cpp)]
  syntax:
    content: public static void UnregisterChannel (System.Runtime.Remoting.Channels.IChannel chnl);
    parameters:
    - id: chnl
      type: System.Runtime.Remoting.Channels.IChannel
      description: "Канал для отмены регистрации."
  overload: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>chnl</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Канал не зарегистрирован."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "По крайней мере один из вызывающим объектам выше в стеке вызовов не имеет разрешения для настраивать каналы и типы удаленного взаимодействия."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: AsyncDispatchMessage(IMessage,IMessageSink)
  nameWithType: ChannelServices.AsyncDispatchMessage(IMessage,IMessageSink)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage(IMessage,IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageCtrl
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageCtrl
  nameWithType: IMessageCtrl
  fullName: System.Runtime.Remoting.Messaging.IMessageCtrl
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain(System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IChannelReceiver)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
  nameWithType: ChannelServices.CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessage@)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
  nameWithType: ChannelServices.DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannel(System.String)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetChannel(String)
  nameWithType: ChannelServices.GetChannel(String)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetChannel(String)
- uid: System.Runtime.Remoting.Channels.IChannel
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.Runtime.Remoting.Channels.IChannel
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties(System.Object)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetChannelSinkProperties(Object)
  nameWithType: ChannelServices.GetChannelSinkProperties(Object)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties(Object)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetUrlsForObject(MarshalByRefObject)
  nameWithType: ChannelServices.GetUrlsForObject(MarshalByRefObject)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject(MarshalByRefObject)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: RegisterChannel(IChannel)
  nameWithType: ChannelServices.RegisterChannel(IChannel)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(IChannel)
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: RegisterChannel(IChannel,Boolean)
  nameWithType: ChannelServices.RegisterChannel(IChannel,Boolean)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(IChannel,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: RegisteredChannels
  nameWithType: ChannelServices.RegisteredChannels
  fullName: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels
- uid: System.Runtime.Remoting.Channels.IChannel[]
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.Runtime.Remoting.Channels.IChannel[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: IChannel[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: SyncDispatchMessage(IMessage)
  nameWithType: ChannelServices.SyncDispatchMessage(IMessage)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage(IMessage)
- uid: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel(System.Runtime.Remoting.Channels.IChannel)
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: UnregisterChannel(IChannel)
  nameWithType: ChannelServices.UnregisterChannel(IChannel)
  fullName: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel(IChannel)
- uid: System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: AsyncDispatchMessage
  nameWithType: ChannelServices.AsyncDispatchMessage
- uid: System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: CreateServerChannelSinkChain
  nameWithType: ChannelServices.CreateServerChannelSinkChain
- uid: System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: DispatchMessage
  nameWithType: ChannelServices.DispatchMessage
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannel*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetChannel
  nameWithType: ChannelServices.GetChannel
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetChannelSinkProperties
  nameWithType: ChannelServices.GetChannelSinkProperties
- uid: System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: GetUrlsForObject
  nameWithType: ChannelServices.GetUrlsForObject
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: RegisterChannel
  nameWithType: ChannelServices.RegisterChannel
- uid: System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: RegisteredChannels
  nameWithType: ChannelServices.RegisteredChannels
- uid: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: SyncDispatchMessage
  nameWithType: ChannelServices.SyncDispatchMessage
- uid: System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel*
  parent: System.Runtime.Remoting.Channels.ChannelServices
  isExternal: false
  name: UnregisterChannel
  nameWithType: ChannelServices.UnregisterChannel
