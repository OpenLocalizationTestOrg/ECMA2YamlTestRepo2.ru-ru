### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Преобразует данные XML с помощью таблицы для таблицы стилей преобразования (XSLT)."
  remarks: "> [!NOTE]Настроек класса XslTransform не используется в Microsoft .NET Framework версии 2.0. <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       XslTransform поддерживает синтаксис XSLT 1.0. Таблица стилей XSLT необходимо использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.       Дополнительные аргументы также могут быть добавлены в таблицу стилей с помощью <xref:System.Xml.Xsl.XsltArgumentList>класса.</xref:System.Xml.Xsl.XsltArgumentList> Этот класс содержит входные параметры для стиля таблицы и объекты расширения, которые могут быть вызваны из таблицы стилей.       Для преобразования данных XML: 1.  Создайте объект XslTransform.      2.  Используйте <xref:System.Xml.Xsl.XslTransform.Load%2A>метод для загрузки таблицы стилей для преобразования.</xref:System.Xml.Xsl.XslTransform.Load%2A> Этот метод имеет несколько перегрузок и можно загрузить таблицу стилей с помощью <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, или URL-адрес расположения файла.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  Используйте <xref:System.Xml.Xsl.XslTransform.Transform%2A>метод для преобразования данных XML.</xref:System.Xml.Xsl.XslTransform.Transform%2A> Этот метод имеет несколько перегрузок и может обрабатывать различные типы входных и выходных данных. Можно также указать <xref:System.Xml.Xsl.XsltArgumentList>содержащий дополнительные аргументы для использования в качестве входных данных во время преобразования.</xref:System.Xml.Xsl.XsltArgumentList>       **Вопросы безопасности** при создании приложения, использующего класс XslTransform, следует помнить о следующих особенностях и их последствиях:-объекты расширения по умолчанию включены. Если <xref:System.Xml.Xsl.XsltArgumentList>передается объект, содержащий объекты расширения <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, они используются.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -Таблицы стилей XSLT могут содержать ссылки на другие файлы и внедренные блоки скриптов. Пользователь-злоумышленник может воспользоваться этим, предоставив данные или таблицы стилей, которые при выполнении приведет к системе для обработки, пока компьютер не хватает ресурсов.      -XSLT приложения, работающие в смешанной доверенной среде может привести к подделке таблицы стилей. Например, злонамеренный пользователь может загрузить объект с вредоносной таблицей стилей и передать ее другому пользователю, который впоследствии вызовет <xref:System.Xml.Xsl.XslTransform.Transform%2A>метод и выполнит преобразование.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       Эти вопросы безопасности могут быть уменьшены, не принимая XslTransform объектов, таблиц стилей XSLT или исходные данные XML из ненадежных источников.       **Поддержка сценариев** этот класс поддерживает использование внедренных сценариев с помощью `msxsl:script` элемента.       В .NET Framework версии 1.1 свидетельство таблицы стилей определяет права, предоставляемые внедренным сценариям.      — Если таблица стилей была загружена из универсальный код ресурса (URI), URI используется для создания свидетельства. Это свидетельство включает URI вместе с его узла и зоны.      — Если таблица стилей была загружена из другого источника, можно предоставить свидетельство, передав <xref:System.Security.Policy.Evidence?displayProperty=fullName>объект <xref:System.Xml.Xsl.XslTransform.Load%2A>метод.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> В противном случае сборка скриптов имеет полное доверие.       Частично доверенным вызывающим объектам: `UnmanagedCode` разрешения, необходимые для компиляции встроенного сценария. `ControlEvidence`разрешение требуется для предоставления <xref:System.Security.Policy.Evidence>для <xref:System.Xml.Xsl.XslTransform.Load%2A>метод.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> Объект <xref:System.Security.SecurityException>создается, если вызывающий объект не имеет необходимых разрешений.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       `msxsl:script` Элемент должна соответствовать следующим требованиям: - `msxsl:script` элемент принадлежит `urn:schemas-microsoft-com:xslt` пространства имен. Таблица стилей должна включать объявление пространства имен `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.      - `msxsl:script` Элемент может содержать `language` атрибут, указывающий используемый язык сценариев. Значение `language` атрибут должен быть одним из следующих: C#, c#, VB, VisualBasic, JScript или JavaScript. Поскольку имя языка не учитывается, JavaScript и javascript являются допустимы. Если `language` атрибут не указан, то по умолчанию используется язык JScript.      - `msxsl:script` Элемент должен включать `implements-prefix` атрибута, который содержит префикс, представляющий пространство имен, связанное с блоком сценария. Это пространство имен должны быть определены в таблице стилей. Таблица стилей может содержать несколько блоков скриптов, сгруппированных по пространствам имен. Не может иметь блоки сценариев с несколькими языками, в том же пространстве имен. Блоки сценариев могут вызывать функции, определенной в другой блок сценария, расположенных блоки сценариев в том же пространстве имен. Содержимое блока сценариев анализируется согласно правилам и синтаксису языка сценариев (предоставляемый `language` атрибута). Например, если у вас есть блок скрипта C#, комментарии будет стоять `//` символов. Комментарии должны быть допустимые XML-содержимое.       `Note`Рекомендуется заключать блоки сценариев в раздел CDATA.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```Функции могут быть объявлены внутри `msxsl:script` элемента. В следующей таблице показаны пространства имен, поддерживаемые по умолчанию.      | Пространства имен поддерживается | Описание |   |--------------------------|-----------------|   | `System`| Классы системы. |   | `System.Collection`| Классы коллекций. |   | `System.Text`| Обработка классы текста. |   | `System.Xml`| Основные классы XML. |   | `System.Xml.Xsl`| Классы XSLT. |   | `System.Xml.XPath`| Классы языка XML Path (XPath). |       Указанные аргументы и возвращаемые значения, определенные функциями скрипта должен быть один из перечисленных ниже типов World Wide Web Consortium (W3C). В следующей таблице представлены сопоставления типов W3C XPath или XSLT и соответствующие классы .NET Framework.      | Тип W3C | Эквивалентный класс .NET |   |--------------|---------------------------|   | Строка (XPath) | `System.String`|   | Логическое значение (XPath) | `System.Boolean`|   | Номер (XPath) | `System.Double`|   | Вызвать фрагмент дерева (XSLT) | `System.Xml.XPath.XPathNavigator`|   | Набор узлов (XPath) | `System.Xml.XPath.XPathNodeIterator`|       Если функция скрипта использует один из числовых типов: Int16, UInt16, Int32, UInt32, Int64, UInt64, одной или Decimal, эти типы приводятся к типу Double, который сопоставлен с числовым типом W3C XPath.       Исключение при вызове функции не удается преобразовать аргумент результат в один из требуемых типов.      настроек [!NOTE]  >   `msxsl:script` и `msxsl:node-list` — единственные функции из `urn:schemas-microsoft-com:xslt` пространства имен, которые поддерживаются с помощью класса XslTransform.       XslTransform имеет возможность использования кода среды выполнения (CLR) как механизм расширения. Это достигается путем передачи экземпляра класса в классе XslTransform и вызова его открытых методов из таблицы стилей XSLT. Методы, определенные с `params` ключевое слово, которое допускает неопределенное число параметров для передачи, не работают в этом сценарии. В разделе [params](~/add/includes/ajax-current-ext-md.md) для получения дополнительных сведений.       Дополнительные сведения см. [XSLT-преобразования с помощью класса XslTransform](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> класса."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT, URL-адрес."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver>без учетных данных пользователя.</xref:System.Xml.XmlUrlResolver> Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver>как один из его аргументов и укажите <xref:System.Xml.XmlResolver>необходимые учетные данные.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. URI таблицы стилей, используется для создания свидетельства, которое применяется к сборке. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "URL-адрес, который указывает таблицу стилей XSLT для загрузки."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Загружаемый ресурс не является допустимой таблицей стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренный скрипт и вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицы стилей XSLT, содержащихся в списке <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver>без учетных данных пользователя.</xref:System.Xml.XmlUrlResolver> Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver>как один из его аргументов и укажите <xref:System.Xml.XmlResolver>необходимые учетные данные.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader>всех его потомков.</xref:System.Xml.XmlReader> Это позволяет использовать часть документа в качестве таблицы стилей. После <xref:System.Xml.Xsl.XslTransform.Load%2A>возвращает метод <xref:System.Xml.XmlReader>располагается на следующий узел после окончания таблицы стилей.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> При достижении конца документа <xref:System.Xml.XmlReader>позиционируется в конец файла (EOF).</xref:System.Xml.XmlReader>       Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> возвращает `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> В этом случае <xref:System.Xml.XmlValidatingReader>может быть использован.</xref:System.Xml.XmlValidatingReader>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>метод.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>, Содержащий таблицу стилей XSLT.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver>без учетных данных пользователя.</xref:System.Xml.XmlUrlResolver> Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver>как один из его аргументов и укажите <xref:System.Xml.XmlResolver>необходимые учетные данные.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>метод.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий таблицу стилей XSLT."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Загружаемый ресурс не является допустимой таблицей стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver>без учетных данных пользователя.</xref:System.Xml.XmlUrlResolver> Если таблиц стилей расположены на сетевом ресурсе, который требует проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver>как один из его аргументов и укажите <xref:System.Xml.XmlResolver>необходимые учетные данные.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Чтобы использовать только часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода Load <xref:System.Xml.XPath.XPathNavigator>располагается в начале таблицы стилей (на `xsl:style sheet` узел).</xref:System.Xml.XPath.XPathNavigator>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>метод.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> , Содержащий таблицу стилей XSLT."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT, URL-адрес."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. URI таблицы стилей, используется для создания свидетельства, которое применяется к сборке. Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "URL-адрес, который указывает таблицу стилей XSLT для загрузки."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> , Используемый для загрузки таблицы стилей и всех таблиц стилей в `xsl:import` и `xsl:include` элементы.       Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, значение по умолчанию <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> без пользователем учетных данных используется для открытия таблицы стилей. Значение по умолчанию <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> не используется для разрешения внешних ресурсов в таблице стилей, поэтому `xsl:import` и `xsl:include` элементы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода Load."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Загружаемый ресурс не является допустимой таблицей стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренный скрипт и вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицы стилей XSLT, содержащихся в списке <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader>всех его потомков.</xref:System.Xml.XmlReader> Это позволяет использовать часть документа в качестве таблицы стилей.       После возврата метода Load, <xref:System.Xml.XmlReader>располагается на следующий узел после окончания таблицы стилей.</xref:System.Xml.XmlReader> При достижении конца документа <xref:System.Xml.XmlReader>позиционируется в конец файла (EOF).</xref:System.Xml.XmlReader>       Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> возвращает `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> В этом случае <xref:System.Xml.XmlValidatingReader>может быть использован.</xref:System.Xml.XmlValidatingReader>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>метод.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>, Содержащий таблицу стилей XSLT.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода Load."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставлять основание, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>метод.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий таблицу стилей XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Load*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Загружаемый ресурс не является допустимой таблицей стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода Load <xref:System.Xml.XPath.XPathNavigator>располагается в начале таблицы стилей (на `xsl:style sheet` узел).</xref:System.Xml.XPath.XPathNavigator>       Если таблица стилей содержит внедренный сценарий, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство, используя <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      Настроек [!NOTE] настроек Если вызывающий объект не имеет `UnmanagedCode` разрешение встроенный скрипт не компилируется и <xref:System.Security.SecurityException>возникает исключение.</xref:System.Security.SecurityException> В разделе <xref:System.Security.Permissions.SecurityPermission>и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>Подробнее.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> , Содержащий таблицу стилей XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Load*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Таблица стилей содержит внедренные скрипты, а вызывающий объект не имеет <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицы стилей XSLT, содержащихся в списке <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> Этот метод позволяет ограничить разрешения таблицы стилей, указывая свидетельство."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые ссылается `xsl:include` и `xsl:import` элементы. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader>всех его потомков.</xref:System.Xml.XmlReader> Это позволяет использовать часть документа в качестве таблицы стилей.       После возврата метода Load, <xref:System.Xml.XmlReader>располагается на следующий узел после окончания таблицы стилей.</xref:System.Xml.XmlReader> При достижении конца документа <xref:System.Xml.XmlReader>позиционируется в конец файла (EOF).</xref:System.Xml.XmlReader>       Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, можно разрешить сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> возвращает `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> В этом случае <xref:System.Xml.XmlValidatingReader>может быть использован.</xref:System.Xml.XmlValidatingReader>       Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Объект, содержащий таблицу стилей для загрузки.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Load*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Для сборки, созданные для блока скрипта в таблице стилей XSLT.       Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, не являются блоках сценария обработки XSLT `document()` функция не поддерживается и привилегированные объекты расширения запрещены.       Вызывающий объект должен иметь <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение свидетельство для сборки сценария. Этот параметр можно задавать в частично доверенных вызывающих объектов <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Указанной таблице стилей требуется функциональность, не допускается с учетом свидетельств, предоставленных.       Вызывающий объект пытается передать основание и не имеет <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>. Этот метод позволяет ограничить разрешения таблицы стилей, указывая свидетельство."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий таблицу стилей XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Load*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Для сборки, созданные для блока скрипта в таблице стилей XSLT.       Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, не являются блоках сценария обработки XSLT `document()` функция не поддерживается и привилегированные объекты расширения запрещены.       Вызывающий объект должен иметь <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение свидетельство для сборки сценария. Этот параметр можно задавать в частично доверенных вызывающих объектов <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Загружаемый ресурс не является допустимой таблицей стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Указанной таблице стилей требуется функциональность, не допускается с учетом свидетельств, предоставленных.       Вызывающий объект пытается передать основание и не имеет <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Загружает таблицу стилей XSLT из <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>. Этот метод позволяет ограничить разрешения таблицы стилей, указывая свидетельство."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Таблица стилей загружается из текущей позиции <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода Load <xref:System.Xml.XPath.XPathNavigator>располагается в начале таблицы стилей (на `xsl:style sheet` узел).</xref:System.Xml.XPath.XPathNavigator>       Для устранения проблем с <xref:System.Xml.Xsl.XslTransform.Load%2A>метод и стиль листы с внедренными скриптами см. в статье Q316755 базы знаний Майкрософт на http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Существуют различные способы предоставления свидетельства. Следующая таблица описывает тип свидетельства для распространенных сценариев пользователя."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Объект, содержащий таблицу стилей для загрузки."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для загрузки любые таблицы стилей, на которые ссылается `xsl:import` и `xsl:include` элементы. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, внешние ресурсы не разрешаются.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Load*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Для сборки, созданные для блока скрипта в таблице стилей XSLT.       Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, не являются блоках сценария обработки XSLT `document()` функция не поддерживается и привилегированные объекты расширения запрещены.       Вызывающий объект должен иметь <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение свидетельство для сборки сценария. Этот параметр можно задавать в частично доверенных вызывающих объектов <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Текущий узел не соответствует допустимой таблице стилей."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Указанной таблице стилей требуется функциональность, не допускается с учетом свидетельств, предоставленных.       Вызывающий объект пытается передать основание и не имеет <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML во входном файле и выводит результат в выходной файл."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      Настроек [!NOTE] настроек этот метод является устаревшим в .NET Framework версии 1.1. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-адрес исходного документа для преобразования."
    - id: outputfile
      type: System.String
      description: "URL-адрес выходного файла."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlReader>( `xsl:output` элемент игнорируется).</xref:System.Xml.XmlReader> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Этот метод позволяет осуществлять асинхронные преобразования исходного документа.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Содержащий результаты преобразования.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       Поскольку <xref:System.Xml.XmlReader>предоставляет выходные данные только для чтения, `xsl:output` элемент игнорируется.</xref:System.Xml.XmlReader> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Этот метод позволяет осуществлять асинхронные преобразования исходного документа.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, как разрешить XSLT-функции document().</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Содержащий результаты преобразования.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML во входном файле и выводит результат в выходной файл."
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "URL-адрес исходного документа для преобразования."
    - id: outputfile
      type: System.String
      description: "URL-адрес выходного файла."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Transform*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.Stream
      description: "Поток, в который требуется направить вывод."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.       Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмент и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Для которого нужно направить выход.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlReader>( `xsl:output` элемент игнорируется).</xref:System.Xml.XmlReader> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Этот метод позволяет осуществлять асинхронные преобразования исходного документа.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмент и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Содержащий результаты преобразования.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter>(`xsl:output` учитывается).</xref:System.Xml.XmlWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Для которого нужно направить выход.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.Stream
      description: "Поток, в который требуется направить вывод."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Для которого нужно направить выход.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       Поскольку <xref:System.Xml.XmlReader>предоставляет выходные данные только для чтения, `xsl:output` элемент игнорируется.</xref:System.Xml.XmlReader> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Этот метод позволяет осуществлять асинхронные преобразования исходного документа."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Содержащий результаты преобразования.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> используя указанные аргументы и выдает результат на <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter>(`xsl:output` учитывается).</xref:System.Xml.XmlWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.      Настроек [!NOTE] настроек этот метод устарел. Параметр <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>свойство определяет, каким образом XSLT `document()` функции разрешается.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> Рекомендуется использовать <xref:System.Xml.Xsl.XslTransform.Transform%2A>метода, принимающую <xref:System.Xml.XmlResolver>объекта в виде одного из своих аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Для которого нужно направить выход.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.Stream
      description: "Поток, в который требуется направить вывод."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после <xref:System.Xml.Xsl.XslTransform.Transform*>метод завершения.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей.       Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Для которого нужно направить выход.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter>(`xsl:output` учитывается).</xref:System.Xml.XmlWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации.       Преобразования применяются к документу в целом. Другими словами Если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>содержащий только узел фрагмента и передать этот <xref:System.Xml.XmlDocument>метода преобразования.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       В следующем примере выполняется преобразование фрагмента узла.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```В этом примере `library.xml` и `print_root.xsl` файлы в качестве входных данных и выводит на консоль следующее.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Объект, реализующий <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> интерфейса. В .NET Framework, это может быть либо <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (обычно <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), или <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Для которого нужно направить выход.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.Stream
      description: "Поток, в который требуется направить вывод."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> с использованием указанного <code> args </code> и выдает результат на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       Атрибут кодировки в `xsl:output` элемент не поддерживается при выводе на <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) конкретные сведения, на котором `xsl:output` атрибуты поддерживаются."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Для которого нужно направить выход.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Преобразует данные XML в <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> используя указанные аргументы и выдает результат на <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>поддерживает синтаксис XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       `args` Сопоставляются с `xsl:param` элементы, определенные в таблице стилей. Выбранные преобразования применяются к документу в целом. Другими словами Если текущий узел имеет значение узла дерева, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. После преобразования выполняются, <xref:System.Xml.XPath.XPathNavigator>остается в своем исходном состоянии.</xref:System.Xml.XPath.XPathNavigator> Это означает, что узел, который является текущим до начала процесса преобразования, останется текущим после вызова метода преобразования.       `xsl:output` Элемент не поддерживается при выводе в <xref:System.Xml.XmlWriter>(`xsl:output` учитывается).</xref:System.Xml.XmlWriter> В разделе [выходные данные XslTransform](~/add/includes/ajax-current-ext-md.md) для получения дополнительной информации."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> Содержащий преобразуемые данные."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> С аргументами, уточненное пространством имен, используется в качестве входных данных для преобразования."
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Для которого нужно направить выход.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Используется для обработки XSLT `document()` функции. Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, `document()` функция не будет устранена.       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Не кэшируется после завершения метода преобразования."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Произошла ошибка при обработке XSLT-преобразования.       Примечание: Это изменение в поведении из более ранних версий. <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Создается, если вы используете Microsoft .NET Framework версии 1.1 или более ранней."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Наборы <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> используется для разрешения внешних ресурсов при <xref:System.Xml.Xsl.XslTransform.Transform*>вызывается метод.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]Настроек <xref:System.Xml.Xsl.XslTransform>класса является устаревшим в .NET Framework версии 2.0.</xref:System.Xml.Xsl.XslTransform> <xref:System.Xml.Xsl.XslCompiledTransform>Класс — новый обработчик XSLT.</xref:System.Xml.Xsl.XslCompiledTransform> Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) и [Миграция с класса XslTransform](~/add/includes/ajax-current-ext-md.md).       В .NET Framework версии 1.1 уровень доверия приложения определяет поведение по умолчанию: `Fully trusted code:` значение по умолчанию <xref:System.Xml.XmlUrlResolver>без пользователем учетных данных используется для разрешения `document()` функция.</xref:System.Xml.XmlUrlResolver> Если для доступа к внешнему ресурсу требуется проверка подлинности, это свойство используется для указания <xref:System.Xml.XmlResolver>необходимые учетные данные.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`Свойство имеет значение `null`, означающее, что `document()` функция не будет устранена. Поскольку полного доверия, необходимо указать <xref:System.Xml.XmlResolver>, это свойство также не может быть задано.</xref:System.Xml.XmlResolver>       Данный Сопоставитель используется при XSLT `document()` функция вызывается. Он не используется для разрешения `xsl:import` и `xsl:include` элементы, ссылка в таблице стилей. Чтобы указать <xref:System.Xml.XmlResolver>для разрешения `xsl:import` и `xsl:include` использовать элементы, ссылка в таблице стилей <xref:System.Xml.Xsl.XslTransform.Load%2A>перегрузки, который принимает <xref:System.Xml.XmlResolver>как один из его аргументов.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      Настроек [!NOTE] настроек это свойство является устаревшим в .NET Framework версии 1.1. Указание <xref:System.Xml.XmlResolver>с помощью <xref:System.Xml.Xsl.XslTransform.Transform%2A>метод рекомендуется.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> В этом случае <xref:System.Xml.XmlResolver>не кэшируется после <xref:System.Xml.Xsl.XslTransform.Transform%2A>метод завершения.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> Для использования во время преобразования. Если значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, XSLT `document()` функция не будет устранена."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
