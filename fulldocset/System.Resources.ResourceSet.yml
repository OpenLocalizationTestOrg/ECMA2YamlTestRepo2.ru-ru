### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceSet
  id: ResourceSet
  children:
  - System.Resources.ResourceSet.#ctor
  - System.Resources.ResourceSet.#ctor(System.IO.Stream)
  - System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  - System.Resources.ResourceSet.#ctor(System.String)
  - System.Resources.ResourceSet.Close
  - System.Resources.ResourceSet.Dispose
  - System.Resources.ResourceSet.Dispose(System.Boolean)
  - System.Resources.ResourceSet.GetDefaultReader
  - System.Resources.ResourceSet.GetDefaultWriter
  - System.Resources.ResourceSet.GetEnumerator
  - System.Resources.ResourceSet.GetObject(System.String)
  - System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  - System.Resources.ResourceSet.GetString(System.String)
  - System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  - System.Resources.ResourceSet.Reader
  - System.Resources.ResourceSet.ReadResources
  - System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResourceSet.Table
  langs:
  - csharp
  name: ResourceSet
  nameWithType: ResourceSet
  fullName: System.Resources.ResourceSet
  type: Class
  summary: "Хранит все ресурсы, локализованные для одного определенного языка и региональных параметров, игнорируя все другие языки и региональные параметры, включая любые правила отката.       **Примечание по безопасности**: вызов методов в классе с недоверенными данными представляет угрозу безопасности. Вызовите методы в классе только с надежными данными. Дополнительные сведения см. в разделе [угрозы безопасности непроверенных данных](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)."
  remarks: "Перечисляет класса ResourceSet <xref:System.Resources.IResourceReader>, загружая каждую пару имя-значение и сохраняя их в <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Resources.IResourceReader> Настраиваемый <xref:System.Resources.IResourceReader>может использоваться.</xref:System.Resources.IResourceReader>       Можно создать объект ResourceSet, который представляет ресурсы для конкретного языка и региональных параметров, вызвав <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>метод.</xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=fullName>      Настроек [!IMPORTANT] настроек этот тип реализует <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> После завершения с помощью типа следует освободить его прямо или косвенно. Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A>метод в `try` / `catch` блока.</xref:System.IDisposable.Dispose%2A> Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable>разделе интерфейса.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResourceSet : IDisposable, System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor
  id: '#ctor'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> класса со свойствами по умолчанию."
  syntax:
    content: protected ResourceSet ();
    parameters: []
  overload: System.Resources.ResourceSet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Создает новый экземпляр <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> класса, используя стандартное <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> , считывает ресурсы из заданного потока."
  syntax:
    content: public ResourceSet (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Ресурсов для чтения.</xref:System.IO.Stream> Поток должен указывать на существующий файл ресурсов."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> stream </code> Недоступен для чтения."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  id: '#ctor(System.Resources.IResourceReader)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Создает новый экземпляр <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> класса, используя заданное средство чтения ресурсов."
  remarks: "Этот конструктор можно использовать для поддержки пользовательских форматов файлов ресурсов с помощью пользовательских <xref:System.Resources.IResourceReader>.</xref:System.Resources.IResourceReader>"
  syntax:
    content: public ResourceSet (System.Resources.IResourceReader reader);
    parameters:
    - id: reader
      type: System.Resources.IResourceReader
      description: "Средство чтения, которое будет использоваться."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reader</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Создает новый экземпляр <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> класса, используя стандартное <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> , открывает и считывает ресурсы из заданного файла."
  remarks: ''
  example:
  - "The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_2_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_2_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_2_1.vb)]"
  syntax:
    content: public ResourceSet (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Файл ресурсов для чтения."
  overload: System.Resources.ResourceSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Close
  id: Close
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Закрывает и освобождает все ресурсы, используемые этим <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "Все вызовы методов на <xref:System.Resources.ResourceSet>после вызова этого метода может завершиться ошибкой.</xref:System.Resources.ResourceSet>       Закройте может безопасно вызываться несколько раз.      Настроек [!NOTE] настроек текущая реализация вызывает закрытие <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  example:
  - "The following code example uses the Close method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_15_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_15_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_15_1.vb)]"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Resources.ResourceSet.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose
  id: Dispose
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Уничтожает ресурсы (кроме памяти), используемые текущим экземпляром <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  remarks: "Вызывается <xref:System.Resources.ResourceSet.Dispose%2A>при завершении использования <xref:System.Resources.ResourceSet>.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> <xref:System.Resources.ResourceSet.Dispose%2A>Метода <xref:System.Resources.ResourceSet>окажется в неработоспособном состоянии.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A> После вызова метода <xref:System.Resources.ResourceSet.Dispose%2A>, необходимо освободить все ссылки на <xref:System.Resources.ResourceSet>, занимаемая ими память можно удалять его сборщику мусора.</xref:System.Resources.ResourceSet> </xref:System.Resources.ResourceSet.Dispose%2A>      Настроек [!NOTE] настроек текущий метод является реализацией <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName> Данная реализация вызывает <xref:System.Resources.ResourceSet.Dispose%2A>(`true`).</xref:System.Resources.ResourceSet.Dispose%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Освобождает ресурсы (кроме памяти), связанные с текущим экземпляром, закрывая внутренние управляемые объекты, если запрошено."
  remarks: "Если `dispose` параметр `true`, данный метод освобождает все ресурсы, связанные с ним, а также все объекты, связанные с ним. Если `dispose` — `false`, текущий метод освобождает ресурсы, выделенные для него и игнорирует любые связанные с ним объекты."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Указывает, следует ли явно закрыть объекты, содержащиеся в текущем экземпляре."
  overload: System.Resources.ResourceSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultReader
  id: GetDefaultReader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Возвращает предпочтительное устройство чтения данных для данного вида <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultReader ();
    parameters: []
    return:
      type: System.Type
      description: "Возвращает <xref:System.Type>для предпочтительного средства чтения ресурсов для этого типа из <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultReader*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetDefaultWriter
  id: GetDefaultWriter
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Возвращает предпочтительное устройство записи для данного вида <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>."
  syntax:
    content: public virtual Type GetDefaultWriter ();
    parameters: []
    return:
      type: System.Type
      description: "Возвращает <xref:System.Type>для предпочтительного объекта записи ресурсов для этого типа из <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Type>"
  overload: System.Resources.ResourceSet.GetDefaultWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Возвращает <xref:System.Collections.IDictionaryEnumerator>, служащий для прохода <xref href=&quot;System.Resources.ResourceSet&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "Перечислители допускают только чтение данных в коллекции. Перечислители не может использоваться для изменения коллекции.       Изначально перечислитель располагается перед первым элементом в коллекции. <xref:System.Collections.IEnumerator.Reset%2A>также переводит перечислитель в эту позицию.</xref:System.Collections.IEnumerator.Reset%2A> В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A>приводит к возникновению исключения.</xref:System.Collections.IEnumerator.Current%2A> Таким образом необходимо вызвать <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Возвращает тот же объект, пока не <xref:System.Collections.IEnumerator.MoveNext%2A>или <xref:System.Collections.IEnumerator.Reset%2A>называется.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Задает <xref:System.Collections.IEnumerator.Current%2A>к следующему элементу.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       После окончания коллекции перечислитель помещается за последним элементом в коллекции и при вызове метода <xref:System.Collections.IEnumerator.MoveNext%2A>возвращает `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Если последний вызов метода <xref:System.Collections.IEnumerator.MoveNext%2A>возвращается `false`, вызов <xref:System.Collections.IEnumerator.Current%2A>приводит к возникновению исключения.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Чтобы задать <xref:System.Collections.IEnumerator.Current%2A>первый элемент коллекции, можно вызвать <xref:System.Collections.IEnumerator.Reset%2A>следуют <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Перечислитель остается действительным, пока коллекция остается неизменной. При внесении изменений в коллекцию, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и при следующем вызове <xref:System.Collections.IEnumerator.MoveNext%2A>или <xref:System.Collections.IEnumerator.Reset%2A>вызывает <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Если коллекция изменяется в промежутке между <xref:System.Collections.IEnumerator.MoveNext%2A>и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Можно использовать <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName>свойство для доступа к значению в текущий элемент.</xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName> Используйте <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName>свойство для доступа к ключу текущего элемента.</xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=fullName> Используйте <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>свойство для доступа к значению текущего элемента.</xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>       Перечислитель не имеет монопольного доступа к коллекции. Таким образом, перечисление коллекции само по себе не является потокобезопасной процедурой. Даже если коллекция синхронизирована, другие потоки могут по-прежнему изменять коллекцию, что приводит к возникновению исключения перечислителем. Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления или перехватывать исключения, возникающие в результате изменений, внесенных другими потоками."
  example:
  - "The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`. Next, the GetEnumerator method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`. The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/cpp/m-system.resources.resou_5_1.cpp)]\n [!code-cs[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/csharp/m-system.resources.resou_5_1.cs)]\n [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.resources.resou_5_1.vb)]"
  syntax:
    content: public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for this <xref href=&quot;System.Resources.ResourceSet&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Resources.ResourceSet.GetEnumerator*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Набор ресурсов был закрыт или удален."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String)
  id: GetObject(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Ищет объект ресурса с указанным именем."
  remarks: "Имя объекта ресурса чувствительно к регистру. Для поиска без учета регистра используйте <xref:System.Resources.ResourceSet.GetObject%2A>.</xref:System.Resources.ResourceSet.GetObject%2A>"
  syntax:
    content: public virtual object GetObject (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя ресурса для поиска с учетом регистра."
    return:
      type: System.Object
      description: "Запрошенный ресурс."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был закрыт или удален."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  id: GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Ищет объект ресурса с указанным именем регистра, при запросе."
  remarks: "Если значение `ignoreCase` параметр `true`, ресурс с именем «Resource» эквивалентен ресурс с именем «resource». Обратите внимание, что этот метод всегда выполняет сравнения строк без учета регистра, с использованием <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Преимущество заключается в том, что результаты сравнения строк без учета регистра, с помощью этого метода одинаковы на всех компьютерах, независимо от языка и региональных параметров. Недостаток заключается в том, что результаты не соответствуют правила определения регистра для всех языков и региональных параметров.       Например в турецком алфавите имеет два варианта знака I: один с точкой и один без точки. В турецком алфавите символ I (Unicode 0049) считается версия другой символ ı (Unicode 0131) в верхнем регистре. Символ i (Unicode 0069) считается вариант нижнем регистре еще одного символа (Unicode 0130). В соответствии с правилами сравнения строк без учета регистра знаков i (Unicode 0069) и I (Unicode 0049) приведет к ошибке для языка и региональных параметров «tr-TR» (турецкий Турция). С помощью `GetObject` метод с `ignoreCase` значение `true`, данное сравнение успешно."
  syntax:
    content: public virtual object GetObject (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Имя ресурса для поиска."
    - id: ignoreCase
      type: System.Boolean
      description: "Указывает, следует ли игнорировать регистр указанного имени."
    return:
      type: System.Object
      description: "Запрошенный ресурс."
  overload: System.Resources.ResourceSet.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был закрыт или удален."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String)
  id: GetString(System.String)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Выполняет поиск <xref:System.String>ресурс с указанным именем.</xref:System.String>"
  syntax:
    content: public virtual string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя ресурса для поиска."
    return:
      type: System.String
      description: "Значение ресурса, если значение равно <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ресурс, заданный параметром <code> name </code> не <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был закрыт или удален."
  platform:
  - net462
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  id: GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Выполняет поиск <xref:System.String>ресурс с указанным именем в виде без учета регистра, если запрошено.</xref:System.String>"
  remarks: "Если значение `ignoreCase` параметр `true`, ресурс с именем «Resource» эквивалентен ресурс с именем «resource». Обратите внимание, что этот метод всегда выполняет сравнения строк без учета регистра, с использованием <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> Преимущество заключается в том, что результаты сравнения строк без учета регистра, с помощью этого метода одинаковы на всех компьютерах, независимо от языка и региональных параметров. Недостаток заключается в том, что результаты не соответствуют правила определения регистра для всех языков и региональных параметров.       Например в турецком алфавите имеет два варианта знака I: один с точкой и один без точки. В турецком алфавите символ I (Unicode 0049) считается версия другой символ ı (Unicode 0131) в верхнем регистре. Символ i (Unicode 0069) считается вариант нижнем регистре еще одного символа (Unicode 0130). В соответствии с правилами сравнения строк без учета регистра знаков i (Unicode 0069) и I (Unicode 0049) приведет к ошибке для языка и региональных параметров «tr-TR» (турецкий Турция). С помощью `GetString` метод с `ignoreCase` значение `true`, данное сравнение успешно."
  syntax:
    content: public virtual string GetString (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "Имя ресурса для поиска."
    - id: ignoreCase
      type: System.Boolean
      description: "Указывает, следует ли игнорировать регистр знаков в указанном имени."
    return:
      type: System.String
      description: "Значение ресурса, если значение равно <xref:System.String>.</xref:System.String>"
  overload: System.Resources.ResourceSet.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ресурс, заданный параметром <code> name </code> не <xref:System.String>.</xref:System.String>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был закрыт или удален."
  platform:
  - net462
- uid: System.Resources.ResourceSet.Reader
  id: Reader
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Указывает <xref href=&quot;System.Resources.IResourceReader&quot;> </xref> используется для чтения ресурсов."
  syntax:
    content: protected System.Resources.IResourceReader Reader;
    return:
      type: System.Resources.IResourceReader
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.ReadResources
  id: ReadResources
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Считывает все ресурсы и сохраняет их в <xref href=&quot;System.Collections.Hashtable&quot;> </xref> в <xref href=&quot;System.Resources.ResourceSet.Table&quot;> </xref> свойство."
  syntax:
    content: protected virtual void ReadResources ();
    parameters: []
  overload: System.Resources.ResourceSet.ReadResources*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "Возвращает <xref:System.Collections.IEnumerator>Чтобы избежать состояния гонки с <xref uid=&quot;langword_csharp_Dispose&quot; name=&quot;Dispose&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IEnumerator> Этот член не предназначен для использования непосредственно из программного кода."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Перечислитель для текущего <xref href=&quot;System.Resources.ResourceSet&quot;> </xref> объекта."
  overload: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResourceSet.Table
  id: Table
  parent: System.Resources.ResourceSet
  langs:
  - csharp
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: "<xref href=&quot;System.Collections.Hashtable&quot;> </xref> , В котором сохраняются ресурсы."
  syntax:
    content: protected System.Collections.Hashtable Table;
    return:
      type: System.Collections.Hashtable
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResourceSet.#ctor
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet()
  nameWithType: ResourceSet.ResourceSet()
  fullName: System.Resources.ResourceSet.ResourceSet()
- uid: System.Resources.ResourceSet.#ctor(System.IO.Stream)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(Stream)
  nameWithType: ResourceSet.ResourceSet(Stream)
  fullName: System.Resources.ResourceSet.ResourceSet(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(IResourceReader)
  nameWithType: ResourceSet.ResourceSet(IResourceReader)
  fullName: System.Resources.ResourceSet.ResourceSet(IResourceReader)
- uid: System.Resources.IResourceReader
  parent: System.Resources
  isExternal: false
  name: IResourceReader
  nameWithType: IResourceReader
  fullName: System.Resources.IResourceReader
- uid: System.Resources.ResourceSet.#ctor(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet(String)
  nameWithType: ResourceSet.ResourceSet(String)
  fullName: System.Resources.ResourceSet.ResourceSet(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResourceSet.Close
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close()
  nameWithType: ResourceSet.Close()
  fullName: System.Resources.ResourceSet.Close()
- uid: System.Resources.ResourceSet.Dispose
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose()
  nameWithType: ResourceSet.Dispose()
  fullName: System.Resources.ResourceSet.Dispose()
- uid: System.Resources.ResourceSet.Dispose(System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResourceSet.Dispose(Boolean)
  fullName: System.Resources.ResourceSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResourceSet.GetDefaultReader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader()
  nameWithType: ResourceSet.GetDefaultReader()
  fullName: System.Resources.ResourceSet.GetDefaultReader()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Resources.ResourceSet.GetDefaultWriter
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter()
  nameWithType: ResourceSet.GetDefaultWriter()
  fullName: System.Resources.ResourceSet.GetDefaultWriter()
- uid: System.Resources.ResourceSet.GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceSet.GetEnumerator()
  fullName: System.Resources.ResourceSet.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResourceSet.GetObject(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String)
  nameWithType: ResourceSet.GetObject(String)
  fullName: System.Resources.ResourceSet.GetObject(String)
- uid: System.Resources.ResourceSet.GetObject(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject(String,Boolean)
  nameWithType: ResourceSet.GetObject(String,Boolean)
  fullName: System.Resources.ResourceSet.GetObject(String,Boolean)
- uid: System.Resources.ResourceSet.GetString(System.String)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String)
  nameWithType: ResourceSet.GetString(String)
  fullName: System.Resources.ResourceSet.GetString(String)
- uid: System.Resources.ResourceSet.GetString(System.String,System.Boolean)
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString(String,Boolean)
  nameWithType: ResourceSet.GetString(String,Boolean)
  fullName: System.Resources.ResourceSet.GetString(String,Boolean)
- uid: System.Resources.ResourceSet.Reader
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Reader
  nameWithType: ResourceSet.Reader
  fullName: System.Resources.ResourceSet.Reader
- uid: System.Resources.ResourceSet.ReadResources
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources()
  nameWithType: ResourceSet.ReadResources()
  fullName: System.Resources.ResourceSet.ReadResources()
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResourceSet.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResourceSet.Table
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Table
  nameWithType: ResourceSet.Table
  fullName: System.Resources.ResourceSet.Table
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Resources.ResourceSet.#ctor*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ResourceSet
  nameWithType: ResourceSet.ResourceSet
- uid: System.Resources.ResourceSet.Close*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Close
  nameWithType: ResourceSet.Close
- uid: System.Resources.ResourceSet.Dispose*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: Dispose
  nameWithType: ResourceSet.Dispose
- uid: System.Resources.ResourceSet.GetDefaultReader*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultReader
  nameWithType: ResourceSet.GetDefaultReader
- uid: System.Resources.ResourceSet.GetDefaultWriter*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetDefaultWriter
  nameWithType: ResourceSet.GetDefaultWriter
- uid: System.Resources.ResourceSet.GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceSet.GetEnumerator
- uid: System.Resources.ResourceSet.GetObject*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetObject
  nameWithType: ResourceSet.GetObject
- uid: System.Resources.ResourceSet.GetString*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: GetString
  nameWithType: ResourceSet.GetString
- uid: System.Resources.ResourceSet.ReadResources*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: ReadResources
  nameWithType: ResourceSet.ReadResources
- uid: System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResourceSet
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceSet.System.Collections.IEnumerable.GetEnumerator
