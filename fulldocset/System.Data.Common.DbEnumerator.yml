### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbEnumerator
  id: DbEnumerator
  children:
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.Current
  - System.Data.Common.DbEnumerator.MoveNext
  - System.Data.Common.DbEnumerator.Reset
  langs:
  - csharp
  name: DbEnumerator
  nameWithType: DbEnumerator
  fullName: System.Data.Common.DbEnumerator
  type: Class
  summary: "Предоставляет <xref:System.Collections.IEnumerable.GetEnumerator*>метод, который поддерживает простой перебор элементов коллекции с помощью поставщика данных .NET Framework.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  remarks: "Класс DbEnumerator реализуется с помощью поставщика данных .NET Framework для поддержки привязки данных.       Изначально объект DbEnumerator предназначен для использования с только один результирующий набор. Например при выполнении инструкции пакета, содержащего две инструкции SQL SELECT, возвращающих разные схемы, вторая инструкция может не вернуть полную схему. Чтобы избежать такой ситуации, получить DbEnumerator для каждого результирующего набора, а затем вызвать `NextResult` метода объекта DataReader поставщика данных .NET Framework."
  syntax:
    content: 'public class DbEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  id: '#ctor(System.Data.Common.DbDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> класса с модулем чтения данных."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "DataReader, по которому выполняется итерация."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  id: '#ctor(System.Data.IDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> класса с помощью указанного <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "<xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> По которому выполняется итерация."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  id: '#ctor(System.Data.Common.DbDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> класса, используя указанное средство чтения и указывает, следует ли автоматически закрывать модуль чтения после итераций по данным."
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: "DataReader, по которому выполняется итерация."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы автоматически закрывать объект DataReader после выполнения итераций по данным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  id: '#ctor(System.Data.IDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Common.DbEnumerator&quot;> </xref> класса с помощью указанного <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>и указывает, следует ли автоматически закрывать <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> после выполнения итераций по данным."
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: "<xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> По которому выполняется итерация."
    - id: closeReader
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы автоматически закрывать <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref> после выполнения итераций по данным; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Current
  id: Current
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Получает текущий элемент в коллекции."
  remarks: "После создания перечислителя или после <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A>необходимо вызвать, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства текущего; в противном случае текущего не определено.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> </xref:System.Data.Common.DbEnumerator.Reset%2A> Текущий также вызывает исключение, если последний вызов метода <xref:System.Data.Common.DbEnumerator.MoveNext%2A>вернула значение false, который указывает конец коллекции.</xref:System.Data.Common.DbEnumerator.MoveNext%2A> Текущий не изменяет положение перечислителя и последовательных вызовов текущего возвратить объект, пока не будет <xref:System.Data.Common.DbEnumerator.MoveNext%2A>или <xref:System.Data.Common.DbEnumerator.Reset%2A>называется.</xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Перечислитель остается действительным, пока коллекция остается неизменной. При внесении изменений в коллекцию, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и при следующем вызове <xref:System.Data.Common.DbEnumerator.MoveNext%2A>или <xref:System.Data.Common.DbEnumerator.Reset%2A>приводит к возникновению ошибки <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A> </xref:System.Data.Common.DbEnumerator.MoveNext%2A> Если коллекция изменяется в промежутке между <xref:System.Data.Common.DbEnumerator.MoveNext%2A>и текущим, текущий возвращает элемент, для которого оно задано, даже если перечислитель уже недействителен.</xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "Текущий элемент в коллекции."
  overload: System.Data.Common.DbEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Перечислитель располагается перед первым элементом коллекции или после последнего элемента."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.MoveNext
  id: MoveNext
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Перемещает перечислитель к следующему элементу коллекции."
  remarks: "После создания перечислителя или после вызова <xref:System.Data.Common.DbEnumerator.Reset%2A>, перечислитель располагается перед первым элементом коллекции, и первый вызов MoveNext перемещает перечислитель на первый элемент коллекции.</xref:System.Data.Common.DbEnumerator.Reset%2A> После окончания коллекции последующие вызовы MoveNext возвращают значение false, пока <xref:System.Data.Common.DbEnumerator.Reset%2A>называется.</xref:System.Data.Common.DbEnumerator.Reset%2A> Перечислитель остается действительным, пока коллекция остается неизменной. При внесении изменений в коллекцию, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и следующий вызов MoveNext и не <xref:System.Data.Common.DbEnumerator.Reset%2A>вызывает <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если перечислитель был успешно перемещен к следующему элементу; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если перечислитель достиг конца коллекции."
  overload: System.Data.Common.DbEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Коллекция была изменена после создания перечислителя."
  platform:
  - net462
- uid: System.Data.Common.DbEnumerator.Reset
  id: Reset
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Устанавливает перечислитель в его начальное положение, перед первым элементом в коллекции."
  remarks: "Перечислитель остается действительным, пока коллекция остается неизменной. Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, и при следующем вызове <xref:System.Data.Common.DbEnumerator.MoveNext%2A>или сброс вызывает <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.Common.DbEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Data.Common.DbEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Коллекция была изменена после создания перечислителя."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
- uid: System.Data.Common.DbEnumerator.Current
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
- uid: System.Data.Common.DbEnumerator.Reset
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
- uid: System.Data.Common.DbEnumerator.#ctor*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator
  nameWithType: DbEnumerator.DbEnumerator
- uid: System.Data.Common.DbEnumerator.Current*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
- uid: System.Data.Common.DbEnumerator.MoveNext*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: DbEnumerator.MoveNext
- uid: System.Data.Common.DbEnumerator.Reset*
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset
  nameWithType: DbEnumerator.Reset
