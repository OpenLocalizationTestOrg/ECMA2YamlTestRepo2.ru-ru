### YamlMime:ManagedReference
items:
- uid: System.Media.SoundPlayer
  id: SoundPlayer
  children:
  - System.Media.SoundPlayer.#ctor
  - System.Media.SoundPlayer.#ctor(System.IO.Stream)
  - System.Media.SoundPlayer.#ctor(System.String)
  - System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.IsLoadCompleted
  - System.Media.SoundPlayer.Load
  - System.Media.SoundPlayer.LoadAsync
  - System.Media.SoundPlayer.LoadCompleted
  - System.Media.SoundPlayer.LoadTimeout
  - System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  - System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  - System.Media.SoundPlayer.Play
  - System.Media.SoundPlayer.PlayLooping
  - System.Media.SoundPlayer.PlaySync
  - System.Media.SoundPlayer.SoundLocation
  - System.Media.SoundPlayer.SoundLocationChanged
  - System.Media.SoundPlayer.Stop
  - System.Media.SoundPlayer.Stream
  - System.Media.SoundPlayer.StreamChanged
  - System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.Tag
  langs:
  - csharp
  name: SoundPlayer
  nameWithType: SoundPlayer
  fullName: System.Media.SoundPlayer
  type: Class
  summary: "Элементы управления воспроизведением звукового WAV-файла."
  remarks: "Класс SoundPlayer предоставляет простой интерфейс для загрузки и воспроизведения WAV-файла. Класс SoundPlayer поддерживает загрузку WAV-файла из пути к файлу, URL-адрес, <xref:System.IO.Stream>, содержащее WAV-файла или внедренный ресурс, содержащий WAV-файла.</xref:System.IO.Stream>       Для воспроизведения звука, используя класс SoundPlayer, настройте SoundPlayer с путем к WAV-файла и вызовите один из методов воспроизведения. Можно определить WAV-файла для воспроизведения с помощью одного из конструкторов или путем задания либо <xref:System.Media.SoundPlayer.SoundLocation%2A>или <xref:System.Media.SoundPlayer.Stream%2A>свойство.</xref:System.Media.SoundPlayer.Stream%2A> </xref:System.Media.SoundPlayer.SoundLocation%2A> Перед воспроизведение с помощью одного из методов загрузки можно загрузить файл или загрузку можно отложить, пока не будет вызван один из методов воспроизведения. SoundPlayer настроено для загрузки WAV-файла из <xref:System.IO.Stream>или URL-адрес необходимо загрузить WAV-файла в памяти до начала воспроизведения.</xref:System.IO.Stream>       Можно загрузить или воспроизведения WAV-файла, синхронно или асинхронно. Если синхронный вызов или воспроизведение метод, вызывающий поток ожидает метода, что может привести к прерыванию рисования и других событий. Вызов асинхронного метода загрузки или воспроизведения позволяет вызывающему потоку продолжить работу без прерывания. Дополнительные сведения об асинхронном вызове методов см. в разделе [как: выполнение операции в фоновом режиме](~/add/includes/ajax-current-ext-md.md).       После завершения загрузки WAV-файла SoundPlayer вызывает <xref:System.Media.SoundPlayer.LoadCompleted>событий.</xref:System.Media.SoundPlayer.LoadCompleted> Можно проверить <xref:System.ComponentModel.AsyncCompletedEventArgs>в обработчике событий для определения, если нагрузка успешно или неудачно.</xref:System.ComponentModel.AsyncCompletedEventArgs> <xref:System.Media.SoundPlayer.SoundLocationChanged>Событие возникает, когда источник аудио имеет значение новый путь к файлу или URL-адрес.</xref:System.Media.SoundPlayer.SoundLocationChanged> <xref:System.Media.SoundPlayer.StreamChanged>Событие возникает, когда источник звука присвоено новое <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer.StreamChanged> Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Дополнительные сведения о SoundPlayer см. в разделе [Общие сведения о классе SoundPlayer](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек класс SoundPlayer не удается воспроизвести другие типы файлов, например .wma или MP3. Если требуется воспроизвести файлы других типов, можно использовать элемент управления проигрывателя Windows Media. Дополнительные сведения см. в разделе [с помощью элемента управления в Windows Media Player в решении .NET Framework](http://go.microsoft.com/fwlink/?LinkId=131267) и [Windows Media Player Справочник по объектной модели для C# и Visual Basic .NET](http://go.microsoft.com/fwlink/?LinkId=131269) пакета SDK для Windows Media Player."
  example:
  - "The following code example demonstrates the use of the SoundPlayer class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  \n  \n [!code-vb[System.Windows.Forms.Sound#1](~/add/codesnippet/visualbasic/t-system.media.soundplayer_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#1](~/add/codesnippet/cpp/t-system.media.soundplayer_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#1](~/add/codesnippet/csharp/t-system.media.soundplayer_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor
  id: '#ctor'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> класса."
  remarks: "Этот конструктор инициализирует <xref:System.Media.SoundPlayer>без источника аудио.</xref:System.Media.SoundPlayer> Пока не будет оснащен аудио исходный путь <xref:System.Media.SoundPlayer>воспроизводится сигнал звуковой при вызове одного из методов воспроизведения.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer ();
    parameters: []
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> класса и присоединяет WAV-файла в пределах указанного <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "<xref:System.IO.Stream>Передаваемый `stream` параметр должен быть <xref:System.IO.Stream>содержащий WAV-файла.</xref:System.IO.Stream> </xref:System.IO.Stream> Данные, возвращенные <xref:System.IO.Stream.Read%2A>метод <xref:System.IO.Stream>должны быть данных внутри WAV-файла.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>"
  syntax:
    content: public SoundPlayer (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>WAV-файла.</xref:System.IO.Stream>"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> класса и присоединяет указанный WAV-файла."
  remarks: "Строка, передаваемая `soundLocation` параметр может быть путь к файлу или URL-адрес WAV-файла. Если путь или URL-адрес является недопустимым, <xref:System.Media.SoundPlayer>по-прежнему будут сконструированный, но последующие вызовы нагрузки или воспроизведение метод завершится с ошибкой.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer (string soundLocation);
    parameters:
    - id: soundLocation
      type: System.String
      description: "Расположение загружаемого WAV-файла."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Значения URL-адреса, указанного в <code> soundLocation </code> не удается разрешить."
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> класса."
  syntax:
    content: protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Для десериализации."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Назначения, используемый для десериализации."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<xref:System.Media.SoundPlayer.SoundLocation*>Указано в <code> serializationInfo </code> не удается разрешить.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.IsLoadCompleted
  id: IsLoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Возвращает значение, указывающее, было ли загрузка WAV-файла завершена успешно."
  syntax:
    content: public bool IsLoadCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если загружается WAV-файла; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если WAV-файл не был загружен."
  overload: System.Media.SoundPlayer.IsLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Load
  id: Load
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Синхронно загружает звуковой файл."
  remarks: "Метод Load текущий поток использует для загрузки WAV-файла, поток из обрабатывать другие сообщения до завершения загрузки.      Настроек [!CAUTION] настроек метода нагрузки может дать задержки при загрузке больших WAV-файла. Кроме того рисования и другие события будут заблокированы до завершения загрузки. Используйте <xref:System.Media.SoundPlayer.LoadAsync%2A>метод для загрузки звука асинхронно, что позволяет вызывающему потоку продолжить работу без прерывания.</xref:System.Media.SoundPlayer.LoadAsync%2A>       Этот метод вызывает <xref:System.Media.SoundPlayer.LoadCompleted>завершения события при загрузке, даже если загрузка не выполнена.</xref:System.Media.SoundPlayer.LoadCompleted>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/m-system.media.soundplay_2_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/m-system.media.soundplay_2_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/m-system.media.soundplay_2_1.cs)]"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Media.SoundPlayer.Load*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Время в миллисекундах, <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> превышает время, прошедшее во время загрузки"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не найден.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadAsync
  id: LoadAsync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Загружает WAV-файла из потока или веб-ресурса, с помощью нового потока."
  remarks: "Если <xref:System.Media.SoundPlayer>настроено для загрузки WAV-файла из <xref:System.IO.Stream>или веб-ресурсу, этот метод начинает загрузку WAV-файла из расположения, с помощью нового потока.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer>       Этот метод вызывает <xref:System.Media.SoundPlayer.LoadCompleted>завершения события при загрузке, даже если загрузка не выполнена.</xref:System.Media.SoundPlayer.LoadCompleted>       Если <xref:System.Media.SoundPlayer>настроен для загрузки WAV-файла из локальный путь к файлу, этот метод не выполняет никаких действий, поскольку загрузка откладывается до начала воспроизведения.</xref:System.Media.SoundPlayer>       Дополнительные сведения об асинхронной загрузке см. в разделе [как: звук асинхронной загрузки в Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the LoadAsync method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#3](~/add/codesnippet/visualbasic/m-system.media.soundplay_3_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#3](~/add/codesnippet/cpp/m-system.media.soundplay_3_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#3](~/add/codesnippet/csharp/m-system.media.soundplay_3_1.cs)]"
  syntax:
    content: public void LoadAsync ();
    parameters: []
  overload: System.Media.SoundPlayer.LoadAsync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Время в миллисекундах, <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> превышает время, прошедшее во время загрузки"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не найден.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadCompleted
  id: LoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Происходит при удачной или неудачной загрузке WAV-файла."
  remarks: "Это событие возникает, когда загрузка WAV-файла завершена. Аргументы события указывают, была ли загрузка звукового файла успешное завершение или сбой.       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#8](~/add/codesnippet/visualbasic/e-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#8](~/add/codesnippet/cpp/e-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#8](~/add/codesnippet/csharp/e-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadTimeout
  id: LoadTimeout
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Возвращает или задает время в миллисекундах, в которых должен быть загружен WAV-файла."
  remarks: "Отменяется по прошествии этого времени загрузки и <xref:System.ServiceProcess.TimeoutException>исключения.</xref:System.ServiceProcess.TimeoutException>"
  syntax:
    content: public int LoadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Количество миллисекунд для ожидания. Значение по умолчанию — 10 000 (10 секунд)."
  overload: System.Media.SoundPlayer.LoadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Вызывает <xref href=&quot;System.Media.SoundPlayer.LoadCompleted&quot;> </xref> событий."
  remarks: "Этот метод вызывается, когда загрузка WAV-файла завершена.       При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnLoadCompleted также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "<xref:System.ComponentModel.AsyncCompletedEventArgs>, Содержащий данные события.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Media.SoundPlayer.OnLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  id: OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Вызывает <xref href=&quot;System.Media.SoundPlayer.SoundLocationChanged&quot;> </xref> событий."
  remarks: "Этот метод вызывается при новый звуковой исходный путь для данного <xref:System.Media.SoundPlayer>установил.</xref:System.Media.SoundPlayer>       При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе как: события предоставляют функциональные возможности и [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSoundLocationChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSoundLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnSoundLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  id: OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Вызывает <xref href=&quot;System.Media.SoundPlayer.StreamChanged&quot;> </xref> событий."
  remarks: "Этот метод вызывается при создании нового <xref:System.IO.Stream>источник звука для этого <xref:System.Media.SoundPlayer>установил.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnStreamChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnStreamChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnStreamChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Play
  id: Play
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Воспроизведение WAV-файла, с помощью нового потока и сначала загружает WAV-файла, если он не был загружен."
  remarks: "Метод Play воспроизведение звука, с помощью нового потока. При вызове метода Play перед WAV-файл был загружен в память, перед запуском воспроизведения WAV-файла будут загружены. Можно использовать <xref:System.Media.SoundPlayer.LoadAsync%2A>или <xref:System.Media.SoundPlayer.Load%2A>метод для загрузки WAV-файла в память заранее.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Файл успешно загружена после .wav из <xref:System.IO.Stream>или URL-адрес, при последующих вызовах методов воспроизведения <xref:System.Media.SoundPlayer>не потребуется перезагрузить WAV-файла до путь для звукового изменения.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Если WAV-файл не был указан или его не удастся загрузить, метод Play будет воспроизводиться звуковой сигнал звука."
  example:
  - "The following code example demonstrates the use of the Play method to asynchronously play a .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#5](~/add/codesnippet/visualbasic/m-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#5](~/add/codesnippet/cpp/m-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#5](~/add/codesnippet/csharp/m-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Media.SoundPlayer.Play*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Время в миллисекундах, <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> превышает время, прошедшее во время загрузки"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не найден.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Поврежден заголовок WAV-файла; файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не PCM WAV-файла.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlayLooping
  id: PlayLooping
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Воспроизводит и циклы WAV-файла, используя новый поток сначала загружает WAV-файла, если он не был загружен."
  remarks: "Метод PlayLooping играет и циклы звука с помощью нового потока. Если вызвать PlayLooping перед WAV-файл был загружен в память, перед запуском воспроизведения WAV-файла будут загружены. Можно использовать <xref:System.Media.SoundPlayer.LoadAsync%2A>или <xref:System.Media.SoundPlayer.Load%2A>метод для загрузки WAV-файла в память заранее.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Файл успешно загружена после .wav из <xref:System.IO.Stream>или URL-адрес, при последующих вызовах методов воспроизведения <xref:System.Media.SoundPlayer>не потребуется перезагрузить WAV-файла до путь для звукового изменения.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Если WAV-файл не был указан или его не удастся загрузить, метод PlayLooping будет воспроизводиться звуковой сигнал звука.       Дополнительные сведения о PlayLooping см. в разделе [как: цикл воспроизведение звука в Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the PlayLooping method to repeatedly play a .wav file. The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#6](~/add/codesnippet/visualbasic/m-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#6](~/add/codesnippet/cpp/m-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#6](~/add/codesnippet/csharp/m-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public void PlayLooping ();
    parameters: []
  overload: System.Media.SoundPlayer.PlayLooping*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Время в миллисекундах, <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> превышает время, прошедшее во время загрузки"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не найден.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Поврежден заголовок WAV-файла; файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не PCM WAV-файла.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlaySync
  id: PlaySync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Воспроизведение WAV-файла и сначала загружает WAV-файла, если он не был загружен."
  remarks: "Метод PlaySync использует текущего потока для воспроизведения WAV-файла, поток из обрабатывать другие сообщения до завершения загрузки. Можно использовать <xref:System.Media.SoundPlayer.LoadAsync%2A>или <xref:System.Media.SoundPlayer.Load%2A>метод для загрузки WAV-файла в память заранее.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Файл успешно загружена после .wav из <xref:System.IO.Stream>или URL-адрес, при последующих вызовах методов воспроизведения <xref:System.Media.SoundPlayer>не потребуется перезагрузить WAV-файла до путь для звукового изменения.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Если WAV-файл не был указан или его не удастся загрузить, метод PlaySync будет воспроизводиться звуковой сигнал звука."
  example:
  - "The following code example demonstrates the use of the PlaySync method to synchronously play a .wav file.  \n  \n [!code-cs[System.Windows.Forms.PlaySync#1](~/add/codesnippet/csharp/m-system.media.soundplay_4_1.cs)]\n [!code-cpp[System.Windows.Forms.PlaySync#1](~/add/codesnippet/cpp/m-system.media.soundplay_4_1.cpp)]\n [!code-vb[System.Windows.Forms.PlaySync#1](~/add/codesnippet/visualbasic/m-system.media.soundplay_4_1.vb)]"
  syntax:
    content: public void PlaySync ();
    parameters: []
  overload: System.Media.SoundPlayer.PlaySync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Время в миллисекундах, <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*> превышает время, прошедшее во время загрузки"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не найден.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Поврежден заголовок WAV-файла; файл, заданный параметром <xref:System.Media.SoundPlayer.SoundLocation*>не PCM WAV-файла.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocation
  id: SoundLocation
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Возвращает или задает путь к файлу или URL-адрес WAV-файла для загрузки."
  remarks: "Это свойство имеет значение <xref:System.String?displayProperty=fullName>при <xref:System.Media.SoundPlayer.Stream%2A>свойству <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer.Stream%2A> </xref:System.String?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SoundLocation property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/p-system.media.soundplay_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/p-system.media.soundplay_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/p-system.media.soundplay_1.cs)]"
  syntax:
    content: public string SoundLocation { get; set; }
    return:
      type: System.String
      description: "Путь к файлу или URL-адрес, из которого выполняется загрузка WAV-файла или &lt;xref:System.String?displayProperty=fullName&gt; при наличии не путь к файлу. Значение по умолчанию — &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Media.SoundPlayer.SoundLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocationChanged
  id: SoundLocationChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Происходит, когда новый звуковой исходный путь для данного <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> было установлено."
  remarks: "Это событие возникает при новый звуковой исходный путь для данного <xref:System.Media.SoundPlayer>установил.</xref:System.Media.SoundPlayer>       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#9](~/add/codesnippet/visualbasic/e-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#9](~/add/codesnippet/cpp/e-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#9](~/add/codesnippet/csharp/e-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public event EventHandler SoundLocationChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stop
  id: Stop
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Останавливает воспроизведение звука, если оно выполняется."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the Stop method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#7](~/add/codesnippet/visualbasic/m-system.media.soundplay_5_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#7](~/add/codesnippet/cpp/m-system.media.soundplay_5_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#7](~/add/codesnippet/csharp/m-system.media.soundplay_5_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Media.SoundPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stream
  id: Stream
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Возвращает или задает <xref:System.IO.Stream>загрузки WAV-файла.</xref:System.IO.Stream>"
  remarks: "Это свойство имеет значение `null` при <xref:System.Media.SoundPlayer.SoundLocation%2A>свойству новый и допустимый звукового файла.</xref:System.Media.SoundPlayer.SoundLocation%2A>"
  syntax:
    content: public System.IO.Stream Stream { get; set; }
    return:
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>загрузки WAV-файла, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если поток недоступен.</xref:System.IO.Stream> Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Media.SoundPlayer.Stream*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.StreamChanged
  id: StreamChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Происходит при создании нового <xref:System.IO.Stream>источник звука для данного <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> установил.</xref:System.IO.Stream>"
  remarks: "Это событие возникает при создании нового <xref:System.IO.Stream>источник звука для этого <xref:System.Media.SoundPlayer>установил.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler StreamChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Описание этого члена см. в разделе &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Media.SoundPlayer>экземпляр приводится к <xref:System.Runtime.Serialization.ISerializable>интерфейс.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Media.SoundPlayer>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Требуется заполнить данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Назначение (см. <xref:System.Runtime.Serialization.StreamingContext>) для этой сериализации.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Tag
  id: Tag
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Возвращает или задает <xref:System.Object>, содержащий данные о <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>, Содержащий данные о <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  overload: System.Media.SoundPlayer.Tag*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Media.SoundPlayer.#ctor
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Media.SoundPlayer.#ctor(System.String)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Media.SoundPlayer.IsLoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Media.SoundPlayer.Load
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
- uid: System.Media.SoundPlayer.LoadAsync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
- uid: System.Media.SoundPlayer.LoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Media.SoundPlayer.LoadTimeout
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
- uid: System.Media.SoundPlayer.Play
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
- uid: System.Media.SoundPlayer.PlayLooping
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
- uid: System.Media.SoundPlayer.PlaySync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
- uid: System.Media.SoundPlayer.SoundLocation
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.SoundLocationChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Media.SoundPlayer.Stop
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
- uid: System.Media.SoundPlayer.Stream
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
- uid: System.Media.SoundPlayer.StreamChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Media.SoundPlayer.Tag
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Media.SoundPlayer.#ctor*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer
  nameWithType: SoundPlayer.SoundPlayer
- uid: System.Media.SoundPlayer.IsLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
- uid: System.Media.SoundPlayer.Load*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load
  nameWithType: SoundPlayer.Load
- uid: System.Media.SoundPlayer.LoadAsync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync
  nameWithType: SoundPlayer.LoadAsync
- uid: System.Media.SoundPlayer.LoadTimeout*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
- uid: System.Media.SoundPlayer.OnLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted
  nameWithType: SoundPlayer.OnLoadCompleted
- uid: System.Media.SoundPlayer.OnSoundLocationChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged
  nameWithType: SoundPlayer.OnSoundLocationChanged
- uid: System.Media.SoundPlayer.OnStreamChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged
  nameWithType: SoundPlayer.OnStreamChanged
- uid: System.Media.SoundPlayer.Play*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play
  nameWithType: SoundPlayer.Play
- uid: System.Media.SoundPlayer.PlayLooping*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping
  nameWithType: SoundPlayer.PlayLooping
- uid: System.Media.SoundPlayer.PlaySync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync
  nameWithType: SoundPlayer.PlaySync
- uid: System.Media.SoundPlayer.SoundLocation*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.Stop*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop
  nameWithType: SoundPlayer.Stop
- uid: System.Media.SoundPlayer.Stream*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Media.SoundPlayer.Tag*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
