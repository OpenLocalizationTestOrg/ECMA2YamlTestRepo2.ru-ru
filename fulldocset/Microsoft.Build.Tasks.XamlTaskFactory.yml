### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.XamlTaskFactory
  id: XamlTaskFactory
  children:
  - Microsoft.Build.Tasks.XamlTaskFactory.#ctor
  - Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)
  - Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)
  - Microsoft.Build.Tasks.XamlTaskFactory.FactoryName
  - Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters
  - Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  - Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents
  - Microsoft.Build.Tasks.XamlTaskFactory.TaskName
  - Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace
  - Microsoft.Build.Tasks.XamlTaskFactory.TaskType
  langs:
  - csharp
  name: XamlTaskFactory
  nameWithType: XamlTaskFactory
  fullName: Microsoft.Build.Tasks.XamlTaskFactory
  type: Class
  summary: "Поставщик фабрики задач для задач XAML."
  syntax:
    content: 'public class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory'
  inheritance:
  - System.Object
  implements:
  - Microsoft.Build.Framework.ITaskFactory
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: XamlTaskFactory()
  nameWithType: XamlTaskFactory.XamlTaskFactory()
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Создает фабрику задач для задач XAML."
  syntax:
    content: public XamlTaskFactory ();
    parameters: []
  overload: Microsoft.Build.Tasks.XamlTaskFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)
  id: CleanupTask(Microsoft.Build.Framework.ITask)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: CleanupTask(ITask)
  nameWithType: XamlTaskFactory.CleanupTask(ITask)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(ITask)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Очищает все контекст или состояние, которое может быть встроены для данной задачи."
  remarks: "Некоторые фабрики могут создавать AppDomain как часть отдельного экземпляра задачи. Такие фабрики используют этот метод для завершения работы домена приложения."
  syntax:
    content: public void CleanupTask (Microsoft.Build.Framework.ITask task);
    parameters:
    - id: task
      type: Microsoft.Build.Framework.ITask
      description: "Задача для очистки."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)
  id: CreateTask(Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: CreateTask(IBuildEngine)
  nameWithType: XamlTaskFactory.CreateTask(IBuildEngine)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(IBuildEngine)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Создает экземпляр задачи для использования."
  syntax:
    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);
    parameters:
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "Узел ведения журнала фабрики задач, регистрирует сообщения в контексте задачи."
    return:
      type: Microsoft.Build.Framework.ITask
      description: "Возвращает новый фабрики задач."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName
  id: FactoryName
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: FactoryName
  nameWithType: XamlTaskFactory.FactoryName
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Получает имя этой фабрики задач для использования в сообщениях об ошибках. Например задача «Mytask» не удалось загрузить из фабрики «Имя_фабрики»."
  syntax:
    content: public string FactoryName { get; }
    return:
      type: System.String
      description: "Возвращает имя этой фабрики задач"
  overload: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters
  id: GetTaskParameters
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: GetTaskParameters()
  nameWithType: XamlTaskFactory.GetTaskParameters()
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает сведения о типе для параметров задачи."
  syntax:
    content: public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();
    parameters: []
    return:
      type: Microsoft.Build.Framework.TaskPropertyInfo[]
      description: "Возвращает сведения о типе как массив PropertyInfo."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Инициализирует фабрику."
  syntax:
    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);
    parameters:
    - id: taskName
      type: System.String
      description: "Имя задачи."
    - id: taskParameters
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
      description: "Параметры для передачи в задачу."
    - id: taskElementContents
      type: System.String
      description: "Содержимое элемента."
    - id: taskFactoryLoggingHost
      type: Microsoft.Build.Framework.IBuildEngine
      description: "Узел ведения журнала фабрики задач, регистрирует сообщения в контексте задачи."
    return:
      type: System.Boolean
      description: "Возвращает <xref:System.Boolean>.</xref:System.Boolean>"
  overload: Microsoft.Build.Tasks.XamlTaskFactory.Initialize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents
  id: TaskElementContents
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: TaskElementContents
  nameWithType: XamlTaskFactory.TaskElementContents
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает содержимое тела UsingTask."
  syntax:
    content: public string TaskElementContents { get; }
    return:
      type: System.String
      description: "Возвращает содержимое тела UsingTask."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskName
  id: TaskName
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: TaskName
  nameWithType: XamlTaskFactory.TaskName
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskName
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает имя задачи, извлекаемой из XAML."
  syntax:
    content: public string TaskName { get; }
    return:
      type: System.String
      description: "Возвращает имя задачи."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.TaskName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace
  id: TaskNamespace
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: TaskNamespace
  nameWithType: XamlTaskFactory.TaskNamespace
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает пространство имен для задачи, извлекаемой из XAML."
  syntax:
    content: public string TaskNamespace { get; }
    return:
      type: System.String
      description: "Возвращает пространство имен задачи."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskType
  id: TaskType
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  langs:
  - csharp
  name: TaskType
  nameWithType: XamlTaskFactory.TaskType
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskType
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Возвращает или задает тип задачи, извлекаемой из XAML."
  syntax:
    content: public Type TaskType { get; }
    return:
      type: System.Type
      description: "Возвращает тип задачи."
  overload: Microsoft.Build.Tasks.XamlTaskFactory.TaskType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Tasks.XamlTaskFactory.#ctor
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: XamlTaskFactory()
  nameWithType: XamlTaskFactory.XamlTaskFactory()
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory()
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: CleanupTask(ITask)
  nameWithType: XamlTaskFactory.CleanupTask(ITask)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(ITask)
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: CreateTask(IBuildEngine)
  nameWithType: XamlTaskFactory.CreateTask(IBuildEngine)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(IBuildEngine)
- uid: Microsoft.Build.Framework.IBuildEngine
  parent: Microsoft.Build.Framework
  isExternal: false
  name: IBuildEngine
  nameWithType: IBuildEngine
  fullName: Microsoft.Build.Framework.IBuildEngine
- uid: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: FactoryName
  nameWithType: XamlTaskFactory.FactoryName
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: GetTaskParameters()
  nameWithType: XamlTaskFactory.GetTaskParameters()
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters()
- uid: Microsoft.Build.Framework.TaskPropertyInfo[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: TaskPropertyInfo
  nameWithType: TaskPropertyInfo
  fullName: Microsoft.Build.Framework.TaskPropertyInfo[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.TaskPropertyInfo
    name: TaskPropertyInfo
    nameWithType: TaskPropertyInfo
    fullName: TaskPropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  nameWithType: XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TaskPropertyInfo>
  nameWithType: IDictionary<String,TaskPropertyInfo>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Framework.TaskPropertyInfo
    name: TaskPropertyInfo
    nameWithType: TaskPropertyInfo
    fullName: TaskPropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskElementContents
  nameWithType: XamlTaskFactory.TaskElementContents
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskName
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskName
  nameWithType: XamlTaskFactory.TaskName
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskName
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskNamespace
  nameWithType: XamlTaskFactory.TaskNamespace
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskType
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskType
  nameWithType: XamlTaskFactory.TaskType
  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.Build.Tasks.XamlTaskFactory.#ctor*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: XamlTaskFactory
  nameWithType: XamlTaskFactory.XamlTaskFactory
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: CleanupTask
  nameWithType: XamlTaskFactory.CleanupTask
- uid: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: CreateTask
  nameWithType: XamlTaskFactory.CreateTask
- uid: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: FactoryName
  nameWithType: XamlTaskFactory.FactoryName
- uid: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: GetTaskParameters
  nameWithType: XamlTaskFactory.GetTaskParameters
- uid: Microsoft.Build.Tasks.XamlTaskFactory.Initialize*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: Initialize
  nameWithType: XamlTaskFactory.Initialize
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskElementContents
  nameWithType: XamlTaskFactory.TaskElementContents
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskName*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskName
  nameWithType: XamlTaskFactory.TaskName
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskNamespace
  nameWithType: XamlTaskFactory.TaskNamespace
- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskType*
  parent: Microsoft.Build.Tasks.XamlTaskFactory
  isExternal: false
  name: TaskType
  nameWithType: XamlTaskFactory.TaskType
