### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphicsContext
  id: BufferedGraphicsContext
  children:
  - System.Drawing.BufferedGraphicsContext.#ctor
  - System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  - System.Drawing.BufferedGraphicsContext.Dispose
  - System.Drawing.BufferedGraphicsContext.Finalize
  - System.Drawing.BufferedGraphicsContext.Invalidate
  - System.Drawing.BufferedGraphicsContext.MaximumBuffer
  langs:
  - csharp
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext
  fullName: System.Drawing.BufferedGraphicsContext
  type: Class
  summary: "Предоставляет методы для создания графических буферов, которые могут использоваться для двойной буферизации."
  remarks: "BufferedGraphicsContext-класс позволяет реализовать пользовательские двойной буферизации для изображений. Графика, использующая двойную буферизацию можно сократить или устранить мерцание, вызываемое перерисовкой отображаемой области.      Настроек [!NOTE] настроек — самый простой способ использования двойной буферизации для задания <xref:System.Windows.Forms.ControlStyles>управления флаг стиль для элемента управления с помощью <xref:System.Windows.Forms.Control.SetStyle%2A>метод.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> Параметр <xref:System.Windows.Forms.ControlStyles>флаг стили элемента управления для элемента управления перенаправляет все рисования в элементе управления через графический буфер по умолчанию, не требует никакого дополнительного кода.</xref:System.Windows.Forms.ControlStyles> Этот флаг установлен в `true` по умолчанию.       BufferedGraphicsContext-класс предоставляет методы для создания и настройки графический буфер. <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>Создает метод <xref:System.Drawing.BufferedGraphics>, который является оболочкой для буфера графики, который также предоставляет методы, которые можно использовать для записи в буфер и отображения ее содержимого на устройстве вывода.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>       BufferedGraphicsContext для текущего домена приложения можно получить из статического <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>свойство.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> Графические приложения, такие как анимация, можно создать выделенный BufferedGraphicsContext, используя конструктор, но для большинства приложений <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>свойство будет достаточно.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>       Дополнительные сведения о рисовании буферизованной графики и реализации настраиваемой буферизации см. в разделе [двойная буферизация графики](~/add/includes/ajax-current-ext-md.md) и [как: управление буферизацией графики](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to acquire the BufferedGraphicsContext for the current application domain. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#1](~/add/codesnippet/csharp/t-system.drawing.buffere_2_1.cs)]\n [!code-cpp[BufferingExamples#1](~/add/codesnippet/cpp/t-system.drawing.buffere_2_1.cpp)]\n [!code-vb[BufferingExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_2_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphicsContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  id: '#ctor'
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref> класса."
  remarks: "Для графические приложения, такие как анимация иногда могут увеличить производительность с помощью выделенного <xref:System.Drawing.BufferedGraphicsContext>вместо экземпляра по умолчанию, предоставляемые <xref:System.Drawing.BufferedGraphicsManager>.</xref:System.Drawing.BufferedGraphicsManager> </xref:System.Drawing.BufferedGraphicsContext> Это позволяет создавать и изменять отдельные графические буферы.      Настроек [!NOTE] настроек всегда следует вызывать <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>после завершения работы с выделенной <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>       Дополнительные сведения о буферах выделенной графики см. в разделе [как: управление буферизацией графики](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  id: Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Создает графический буфер заданного размера, используя формат пикселей заданного <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "При вызове метода Allocate прямоугольником, размер которых превышает значение <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>свойство, временный <xref:System.Drawing.BufferedGraphicsContext>создается для выделения буфера, а также предоставляют временный контекст для буфера.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> Новый <xref:System.Drawing.BufferedGraphicsContext>отличается от <xref:System.Drawing.BufferedGraphicsContext>приложения домена и он удаляется автоматически при <xref:System.Drawing.BufferedGraphics>возвращается выделение, был освобожден.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the Allocate method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#3](~/add/codesnippet/csharp/99d851e4-d9e2-4d32-8fa3-_1.cs)]\n [!code-cpp[BufferingExamples#3](~/add/codesnippet/cpp/99d851e4-d9e2-4d32-8fa3-_1.cpp)]\n [!code-vb[BufferingExamples#3](~/add/codesnippet/visualbasic/99d851e4-d9e2-4d32-8fa3-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetGraphics
      type: System.Drawing.Graphics
      description: "<xref href=&quot;System.Drawing.Graphics&quot;> </xref> В соответствии с форматом пикселей для нового буфера."
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , определяющее размер буфера для создания."
    return:
      type: System.Drawing.BufferedGraphics
      description: "Объект <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> , можно использовать для отрисовки в буфер указанного измерения."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  id: Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Создает графический буфер заданного размера, используя формат пикселей заданного <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "При вызове <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>метод прямоугольником, размер которых превышает значение из <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>свойство, временный <xref:System.Drawing.BufferedGraphicsContext>создается для выделения буфера, а также предоставляют временный контекст для буфера.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> Новый <xref:System.Drawing.BufferedGraphicsContext>отличается от <xref:System.Drawing.BufferedGraphicsContext>приложения домена и он удаляется автоматически при <xref:System.Drawing.BufferedGraphics>возвращенных <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>был освобожден.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext>"
  example:
  - "The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#4](~/add/codesnippet/csharp/5334a85f-cb42-4a29-8bd2-_1.cs)]\n [!code-cpp[BufferingExamples#4](~/add/codesnippet/cpp/5334a85f-cb42-4a29-8bd2-_1.cpp)]\n [!code-vb[BufferingExamples#4](~/add/codesnippet/visualbasic/5334a85f-cb42-4a29-8bd2-_1.vb)]"
  syntax:
    content: public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "<xref:System.IntPtr>На контекст устройства для соответствия формату пикселей нового буфера.</xref:System.IntPtr>"
    - id: targetRectangle
      type: System.Drawing.Rectangle
      description: "Объект <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , определяющее размер буфера для создания."
    return:
      type: System.Drawing.BufferedGraphics
      description: "Объект <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> , можно использовать для отрисовки в буфер указанного измерения."
  overload: System.Drawing.BufferedGraphicsContext.Allocate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.Drawing.BufferedGraphicsContext&quot;> </xref>."
  remarks: "После использования <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Drawing.BufferedGraphicsContext>окажется в неработоспособном состоянии.</xref:System.Drawing.BufferedGraphicsContext> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Drawing.BufferedGraphicsContext>, сборщик мусора мог освободить память, <xref:System.Drawing.BufferedGraphicsContext>занимаемую.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет <xref:System.Object.Finalize%2A>метод <xref:System.Drawing.BufferedGraphicsContext>.</xref:System.Drawing.BufferedGraphicsContext> </xref:System.Object.Finalize%2A>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~BufferedGraphicsContext ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  id: Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Удаляет текущий графический буфер, если буфер был выделен и еще не был удален."
  remarks: "Если в графическом буфере, он будет помечен для реализации, как только он будет освобожден. в противном случае он удаляется немедленно."
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Drawing.BufferedGraphicsContext.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  id: MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  langs:
  - csharp
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает максимальный размер буфера."
  remarks: "Это свойство позволяет получить или задать максимальные размеры буфера, должны сохраняться в памяти. Можно выделить буфер любого размера, однако любой буфер с измерениями, больше, чем размер MaximumBuffer будет временно использовать, а затем удаляется при <xref:System.Drawing.BufferedGraphics>объект освобождается.</xref:System.Drawing.BufferedGraphics>"
  example:
  - "The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#2](~/add/codesnippet/csharp/p-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#2](~/add/codesnippet/cpp/p-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public System.Drawing.Size MaximumBuffer { get; set; }
    return:
      type: System.Drawing.Size
      description: "Объект <xref href=&quot;System.Drawing.Size&quot;> </xref> , указывающее максимальный размер буфера измерений."
  overload: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Высота или ширина размера меньше или равно нулю."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.BufferedGraphicsContext.#ctor
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext()
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext()
  fullName: System.Drawing.BufferedGraphicsContext.BufferedGraphicsContext()
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(Graphics,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(Graphics,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(Graphics,Rectangle)
- uid: System.Drawing.BufferedGraphics
  parent: System.Drawing
  isExternal: false
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate(IntPtr,Rectangle)
  nameWithType: BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
  fullName: System.Drawing.BufferedGraphicsContext.Allocate(IntPtr,Rectangle)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphicsContext.Dispose
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphicsContext.Dispose()
  fullName: System.Drawing.BufferedGraphicsContext.Dispose()
- uid: System.Drawing.BufferedGraphicsContext.Finalize
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphicsContext.Finalize()
  fullName: System.Drawing.BufferedGraphicsContext.Finalize()
- uid: System.Drawing.BufferedGraphicsContext.Invalidate
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate()
  nameWithType: BufferedGraphicsContext.Invalidate()
  fullName: System.Drawing.BufferedGraphicsContext.Invalidate()
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
  fullName: System.Drawing.BufferedGraphicsContext.MaximumBuffer
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.BufferedGraphicsContext.#ctor*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: BufferedGraphicsContext
  nameWithType: BufferedGraphicsContext.BufferedGraphicsContext
- uid: System.Drawing.BufferedGraphicsContext.Allocate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Allocate
  nameWithType: BufferedGraphicsContext.Allocate
- uid: System.Drawing.BufferedGraphicsContext.Dispose*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphicsContext.Dispose
- uid: System.Drawing.BufferedGraphicsContext.Finalize*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphicsContext.Finalize
- uid: System.Drawing.BufferedGraphicsContext.Invalidate*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: Invalidate
  nameWithType: BufferedGraphicsContext.Invalidate
- uid: System.Drawing.BufferedGraphicsContext.MaximumBuffer*
  parent: System.Drawing.BufferedGraphicsContext
  isExternal: false
  name: MaximumBuffer
  nameWithType: BufferedGraphicsContext.MaximumBuffer
