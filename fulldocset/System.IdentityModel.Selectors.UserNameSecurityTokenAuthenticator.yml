### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  id: UserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  type: Class
  summary: "Проверяет подлинность <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> маркера безопасности."
  remarks: "Переопределение класса UserNameSecurityTokenAuthenticator для проверки подлинности маркеров безопасности на основе имени пользователя и пароля.       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] Поставляется с следующие классы, которые поддерживают проверку подлинности <xref:System.IdentityModel.Tokens.UserNameSecurityToken>маркеры безопасности.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>      | Тип | Описание |   |----------|-----------------|   | <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>| Позволяет приложению реализовывать пользовательскую схему проверки подлинности для имен пользователей и паролей.</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> Схема проверки подлинности обеспечивается с помощью класса, производного от класса <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>. |   | <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>| Проверяет имя пользователя и пароль из учетной записи Windows. |       Большинство пользовательских схем проверки подлинности можно использовать <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>класс и Реализуйте класс, производный от <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>класса</xref:System.IdentityModel.Selectors.UserNamePasswordValidator> </xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.UserNamePasswordValidator>  Тем не менее, если необходима дополнительная гибкость, можно создать класс, производный от класса UserNameSecurityTokenAuthenticator и переопределить <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>метод.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/csharp/t-system.identitymodel.s_6_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_6_1.vb)]
  syntax:
    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&quot;> </xref> класса."
  syntax:
    content: protected UserNameSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает значение, указывающее, можно ли выполнить проверку заданного маркера безопасности с этой проверки подлинности маркеров безопасности."
  remarks: "Метод CanValidateTokenCore не проверяет подлинность маркера безопасности; выполняемые классом <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Проверяет подлинность заданного маркера безопасности и возвращает набор политик авторизации для маркера безопасности."
  remarks: "Вызовы метода ValidateTokenCore <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>метод проверки подлинности `token` параметра с помощью его имя пользователя и пароль.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для проверки."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Объект &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; типа <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> , содержащая набор политик авторизации, действующих для данного приложения."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "При переопределении в производном классе проверяет подлинность указанного имени пользователя и пароля и возвращает набор политик авторизации для <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> маркеров безопасности."
  remarks: "Переопределите метод ValidateUserNamePasswordCore для проверки подлинности <xref:System.IdentityModel.Tokens.UserNameSecurityToken>маркеры безопасности.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>       При переопределении метода ValidateUserNamePasswordCore, придерживайтесь следующих правил: - маркер безопасности в момент передачи `token` параметр не может быть проверен, throw <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>исключение.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -Если нет политик авторизации, действующих для данного приложения, возвращать пустой <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>тип <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       Когда `null` возвращается этим методом, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] вызывает <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>исключение.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/csharp/2e0e79be-aa35-46e5-a7cb-_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/visualbasic/2e0e79be-aa35-46e5-a7cb-_1.vb)]
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, связанное с маркером безопасности."
    - id: password
      type: System.String
      description: "Пароль, связанный с маркером безопасности."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Объект &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; типа <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> , содержащая набор политик авторизации, действующих для данного приложения."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
