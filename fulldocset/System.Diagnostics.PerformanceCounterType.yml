### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  summary: "Задает формулу для вычисления <xref:System.Diagnostics.PerformanceCounter.NextValue*>метод <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> экземпляра.</xref:System.Diagnostics.PerformanceCounter.NextValue*>"
  remarks: "Некоторые типы счетчиков представляют необработанные данные, а другие представляют расчетные значения, основанные на один или несколько примеров счетчиков. Следующие категории классифицируют доступные типы счетчиков.      -В среднем: измеряют значение со временем и отобразить среднее из двух последних измерений. С каждой счетчик среднего значения связан базовый счетчик, который отслеживает число используемых выборок.      — Разница: вычитание последнего измерения показания от предыдущего и отображается разница, при положительном; Если значение отрицательное, отображается ноль.      -Мгновенно: отображение самое последнее измерение.      -Процент: подсчитанные значения отображаются в процентах.      -Частота: образцы возрастающее число событий со временем и разделить изменение значения числа изменением во времени для отображения частоты активности.       Время выборки данных счетчиков производительности, используя тип счетчика, который представляет среднее может принимать значения необработанных данных может применяться для использования. Например, счетчик необработанных данных `NumberOfItems64` может предоставлять данные, случайными из примера образец. Формула для расчета среднего значения из возвращаемых счетчиком значений будет иметь (X 0 + X 1 +... + X n) / n, где каждый X i является необработанных данных счетчика.       Счетчики частоты аналогичные для вычисления среднего значения счетчиков, но лучше подходит для ситуаций, в которых увеличивается как использовать ресурс. Формула, быстро вычисляет среднее ((X n -X 0) / (T n -T 0)) / частоты, где каждый X i — образец счетчика и каждого T i — это время, которая сделана, соответствующие примеры. Результатом является среднее использование за одну секунду.      Настроек [!NOTE] настроек — Если не указано иное, базовое время секунд.       При инструментировании приложения (Создание и процесс записи счетчиков производительности), вы можете работать с типами счетчиков производительности, которые зависят от сопровождающий их базовый счетчик, используемый в вычислениях. Базовый счетчик должен следовать непосредственно за связанным с ним счетчиком в <xref:System.Diagnostics.CounterCreationDataCollection>коллекции, используемые приложением.</xref:System.Diagnostics.CounterCreationDataCollection> В следующей таблице перечислены основных типов счетчиков с соответствующими им типами счетчиков производительности.      | Базовый тип счетчика | Типы счетчиков производительности |   |-----------------------|-------------------------------|   |`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|   |`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|   |`RawBase`|`RawFraction`|   |`SampleBase`|`SampleFraction`|"
  example:
  - "The following examples demonstrate several of the counter types in the PerformanceCounterType enumeration.  \n  \n `AverageCount64`  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_1.vb)]  \n  \n `AverageTimer32`  \n  \n [!code-vb[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_2.vb)]\n [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_2.cpp)]\n [!code-cs[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_2.cs)]  \n  \n `ElapsedTime`  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_3.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_3.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_3.vb)]  \n  \n `NumberOfItems32`  \n  \n [!code-cs[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_4.cs)]\n [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_4.cpp)]\n [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_4.vb)]  \n  \n `NumberOfItems64`  \n  \n [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_5.cpp)]\n [!code-cs[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_5.cs)]\n [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_5.vb)]  \n  \n `SampleFraction`  \n  \n [!code-vb[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_6.vb)]\n [!code-cs[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_6.cs)]  \n  \n `RateOfCountsPerSecond32`  \n  \n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_7.cs)]\n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_7.vb)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_7.cpp)]  \n  \n `RateOfCountsPerSecond64`  \n  \n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_8.vb)]\n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_8.cs)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_8.cpp)]  \n  \n `RawFraction`  \n  \n [!code-cs[PerformanceCounterType.RawFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_9.cs)]\n [!code-cpp[PerformanceCounterType.RawFraction#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_9.cpp)]\n [!code-vb[PerformanceCounterType.RawFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_9.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))]

      public enum PerformanceCounterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Базовый счетчик, который используется при расчете времени или количества средних значений, таких как <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;> </xref> и <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;> </xref>. Хранит знаменатель для вычисления значения счетчика присутствует «время каждой операции» или «количество на операции»."
  syntax:
    content: AverageBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик среднего значения, который показывает, сколько элементов обработано в среднем за операцию. Счетчики этого типа отображают отношение обработанных число операций, завершенных элементов. Это отношение вычисляется путем сравнения число обработанных элементов в течение последнего интервала на число операций, завершенных в течение последнего интервала."
  remarks: "Formula: (N 1 -N 0)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, and the B 1 and B 0 are their corresponding `AverageBase` values. Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk Bytes/Transfer."
  syntax:
    content: AverageCount64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик среднего значения, который измеряет время, необходимое, в среднем, для завершения процесса или операции. Счетчики этого типа отображают отношение общее затраченное время интервала выборки на число процессов или операций, завершенных в течение этого времени. Этот тип счетчика измеряет время в тактах системных часов."
  remarks: "Formula: ((N 1 -N 0)/F)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, B 1 and B 0 are their corresponding `AverageBase` values, and F is the number of ticks per second. The value of F is factored into the equation so that the result can be displayed in seconds. Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk sec/Transfer."
  syntax:
    content: AverageTimer32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик разницы, показывающий изменение в атрибуте измеряемые между двумя последнего интервала выборки."
  remarks: 'Формула: N 1 -N 0, где N-1 и N 0 — показания счетчика производительности.'
  syntax:
    content: CounterDelta32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик разницы, показывающий изменение в атрибуте измеряемые между двумя последнего интервала выборки. Он совпадает со значением <xref uid=&quot;langword_csharp_CounterDelta32&quot; name=&quot;CounterDelta32&quot; href=&quot;&quot;> </xref> тип счетчика, за тем исключением, что используются большие поля для размещения больших значений."
  remarks: 'Формула: N 1 -N 0, где N-1 и N 0 — показания счетчика производительности.'
  syntax:
    content: CounterDelta64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Базовый счетчик, показывающий число измеренных элементов. Он используется как знаменатель в вычислениях для получения среднего среди измеренных элементов при измерении времени нескольких, но похожие элементы. Used with <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>."
  syntax:
    content: CounterMultiBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, отображающий активное время один или несколько компонентов в процентах от общего времени интервала выборки. Поскольку числитель записывает активное время работающих компонентов одновременно, результат может превышать 100 процентов."
  remarks: "Этот счетчик является мультитаймером. Мультитаймеры более одного экземпляра компонента, например процессора или диска. Этот тип счетчика отличается от `CounterMultiTimer100Ns` в том, что он измеряет время в тактах таймера производительности системы, а не в единицах измерения, равных 100 нс.       Формула: ((N 1 - N 0) / (D 1 - D 0)) x 100 / B, где N-1 и N 0 — показания счетчика производительности, D 1 и D 0 являются их соответствующее время чтения в тактах таймера производительности системы, и переменная B указывает базовый счетчик для отслеживаемых компонентов (используя базовый счетчик типа `CounterMultiBase`). Таким образом числитель представляет часть интервала выборки, во время которого отслеживаемых компонентов были активны, а знаменатель представляет общее затраченное время интервала выборки."
  syntax:
    content: CounterMultiTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, показано активное время один или несколько компонентов, в процентах от общего времени интервала выборки. Время измеряется в единицах измерения, равных 100 нс (ns)."
  remarks: "Этот тип счетчика является мультитаймером. Мультитаймеры предназначены для наблюдения за более одного экземпляра компонента, например процессора или диска.       Формула: ((N 1 - N 0) / (D 1 - D 0)) x 100 / B, где N-1 и N 0 — показания счетчика производительности, D 1 и D 0 являются их соответствующее время чтения в 100 нс, а переменная B указывает базовый счетчик для отслеживаемых компонентов (используя базовый счетчик типа `CounterMultiBase`). Таким образом числитель представляет часть интервала выборки, во время которого отслеживаемых компонентов были активны, а знаменатель представляет общее затраченное время интервала выборки."
  syntax:
    content: CounterMultiTimer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, показано активное время один или несколько компонентов, в процентах от общего времени интервала выборки. Счетчики этого типа измеряют время в 100 нс (ns). Они получают активное время путем измерения времени, в котором компоненты не были активны и вычитания с результатом умножения на число объектов, отслеживаемых 100 процентов."
  remarks: "Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры предназначены для наблюдения за более одного экземпляра компонента, например процессора или диска. Обратные счетчики измеряют время, компонент не активен и таким образом из измерения времени формула: (B - ((N 1 - N 0) / (D 1 - D 0))) x 100, где знаменатель представляет общее затраченное время интервала выборки, числитель представляет время в период отслеживаемых компоненты были неактивны, а B представляет число отслеживаемых компонентов , используя базовый счетчик типа `CounterMultiBase`."
  syntax:
    content: CounterMultiTimer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, показано активное время один или несколько компонентов, в процентах от общего времени интервала выборки. Он получает активное время путем измерения времени, в котором компоненты не были активны и вычитая результат из 100 процентов на число объектов, отслеживаемых."
  remarks: "Этот тип счетчика представляет собой обратный мультитаймер. Мультитаймеры более одного экземпляра компонента, например процессора или диска. Обратные счетчики измеряют время, компонент не активен и таким образом из этого измерения.       Этот счетчик отличается от `CounterMultiTimer100NsInverse` в том, что он измеряет время в тактах таймера производительности системы, а не в единицах измерения, равных 100 нс.       Формула: (B - ((N 1 - N 0) / (D 1 - D 0))) x 100, где знаменатель представляет общее затраченное время интервала выборки, числитель представляет часть времени, в течение интервала отслеживаемых компоненты были неактивны, а B представляет число компонентов контролируется, используя базовый счетчик типа `CounterMultiBase`."
  syntax:
    content: CounterMultiTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, который показывает среднее время, компонент активен в процентах от общего выборки."
  remarks: 'Формула: (N 1 - N 0) / (D 1 - D 0), где N-1 и N 0 — показания счетчика производительности, а D 1 и D 0 — их соответствующее время чтения. Таким образом числитель представляет часть интервала выборки, во время которого отслеживаемых компонентов были активны, а знаменатель представляет общее затраченное время интервала выборки.'
  syntax:
    content: CounterTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, который отражает среднюю измеренного за интервал времени. Значение этих счетчиков вычисляется путем наблюдения за долю времени, в течение которого служба была неактивна и затем вычитанием этого значения из 100%."
  remarks: "Это обратный тип счетчика. Обратные счетчики измеряют время, компонент не был активным и получают значение времени из этого измерения. Этот тип счетчика совпадает со значением `CounterTimer100NsInv` за исключением того, что он измеряет время в тактах таймера производительности системы, а не в единицах измерения, равных 100 нс.       Формула: (1 - ((N 1 - N 0) / (D 1 - D 0))) x 100, где числитель представляет время в течение интервала, отслеживаемых компонентов были неактивны, а знаменатель представляет общее затраченное время интервала выборки."
  syntax:
    content: CounterTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик среднего значения предназначен для отслеживания средней длины очереди к ресурсу со временем. Он показывает разницу между длинами очередей, наблюдаемых в течение последних двух интервалов выборки, деленная на длительность интервала. Этот тип счетчика обычно используется для отслеживания числа элементов, которые находятся в очереди или ожидания."
  remarks: 'Формула: (N 1 - N 0) / (D 1 - D 0), где числитель представляет число элементов в очереди, а знаменатель представляет время, затраченное в течение последнего интервала выборки.'
  syntax:
    content: CountPerTimeInterval32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Среднее счетчика, который отслеживает среднюю длину очереди к ресурсу со временем. Счетчики этого типа отображают разницу между длинами очередей, наблюдаемых в течение последних двух интервалов выборки, деленная на длительность интервала. Этот тип счетчика совпадает со значением <xref uid=&quot;langword_csharp_CountPerTimeInterval32&quot; name=&quot;CountPerTimeInterval32&quot; href=&quot;&quot;> </xref> за исключением того, что используются большие поля для размещения больших значений. Этот тип счетчика обычно используется для отслеживания большого объема или очень большое количество элементов, которые находятся в очереди или ожидания."
  remarks: 'Формула: (N 1 - N 0) / (D 1 - D 0), где числитель представляет число элементов в очереди, а знаменатель представляет время, прошедшее во время интервала выборки.'
  syntax:
    content: CountPerTimeInterval64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Таймер разницы, который показывает полное время между началом работы компонента или процесса и вычислением это значение."
  remarks: "Formula: (D 0 - N 0) / F, where D 0 represents the current time, N 0 represents the time the object was started, and F represents the number of time units that elapse in one second. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ System Up Time."
  syntax:
    content: ElapsedTime
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Мгновенное счетчик, который показывает наиболее недавно наблюдаемое значение. Используется, например, для хранения числа элементов или операций."
  remarks: "Formula: None. Does not display an average, but shows the raw data as it is collected.  \n  \n Counters of this type include Memory\\Available Bytes."
  syntax:
    content: NumberOfItems32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Мгновенное счетчик, который показывает наиболее недавно наблюдаемое значение. Используется, например, для хранения числа большое количество элементов или операций. Он совпадает со значением <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref> за исключением того, что используются большие поля для размещения больших значений."
  remarks: 'Формула: нет. Не отображает среднее значение, но отображаются необработанные данные, как их сбора.'
  syntax:
    content: NumberOfItems64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Мгновенное счетчик, который показывает самые последние значения в шестнадцатеричном формате. Используется, например, для хранения числа элементов или операций."
  remarks: 'Формула: нет. Не отображает среднее значение, но отображаются необработанные данные, как их сбора.'
  syntax:
    content: NumberOfItemsHEX32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Мгновенное счетчик, который показывает наиболее недавно наблюдаемое значение. Используется, например, для хранения числа большое количество элементов или операций. Он совпадает со значением <xref uid=&quot;langword_csharp_NumberOfItemsHEX32&quot; name=&quot;NumberOfItemsHEX32&quot; href=&quot;&quot;> </xref> за исключением того, что используются большие поля для размещения больших значений."
  remarks: 'Формула: нет. Не отображает среднее значение, но показывает необработанные данные, когда они собраны'
  syntax:
    content: NumberOfItemsHEX64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик разницы, показывающий среднее число операций, завершенных в течение каждой секунды интервала выборки. Счетчики этого типа измеряют время в тактах системных часов."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Operations/sec."
  syntax:
    content: RateOfCountsPerSecond32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик разницы, показывающий среднее число операций, завершенных в течение каждой секунды интервала выборки. Счетчики этого типа измеряют время в тактах системных часов. Этот тип счетчика совпадает со значением <xref uid=&quot;langword_csharp_RateOfCountsPerSecond32&quot; name=&quot;RateOfCountsPerSecond32&quot; href=&quot;&quot;> </xref> типа, но использует большие поля для размещения больших значений для хранения больших объемов числа элементов или операций в секунду, например частоты передачи байтов."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Bytes/sec."
  syntax:
    content: RateOfCountsPerSecond64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Базовый счетчик, который хранит знаменатель счетчика, представляющего обычную арифметическую дробь. Убедитесь, что это значение больше нуля перед его использованием в качестве знаменателя <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;> </xref> значение вычисления."
  syntax:
    content: RawBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик мгновенного значения в процентах, показывающий отношение подмножества к множеству в процентах. Например он сравнивает число байтов, используемых на диске, чтобы общее число байтов на диске. Счетчики этого типа отображают только текущий процент, не обеспечивает усреднение по времени."
  remarks: "Formula: (N 0 / D 0) x 100, where D 0 represents a measured attribute (using a base counter of type `RawBase`) and N 0 represents one component of that attribute.  \n  \n Counters of this type include Paging File\\\\% Usage Peak."
  syntax:
    content: RawFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Базовый счетчик, который хранит количество выборки прерывает сделанной и используется в качестве знаменателя за долю выборки. Выборочная доля представляет число выборок, которые были 1 (или <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>) для выборочного прерывания. Убедитесь, что это значение больше нуля перед его использованием в качестве знаменателя при расчете <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: SampleBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик среднего значения, который показывает среднее число операций, завершенных за одну секунду. Когда счетчик этого типа измеряет данные, каждое выборочное прерывание возвращает единицу или ноль. Данные счетчиков — количество измеренных. Он измеряет время в тактах таймера производительности системы."
  remarks: 'Формула: (N 1 – N 0) / ((D 1-D 0) / F), где числитель (N) представляет число завершенных операций, знаменатель (D) представляет время в тактах таймера производительности системы и F представляет количество тактов, в секунду. F добавляется в уравнение для отображения результата в секундах.'
  syntax:
    content: SampleCounter
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, который показывает среднее отношение количества попаданий для всех операций в течение последних двух интервалов выборки."
  remarks: "Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.  \n  \n Counters of this type include Cache\\Pin Read Hits %."
  syntax:
    content: SampleFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, показывающий время активной работы компонента в процентах от общее затраченное время интервала выборки. Время измеряется в единицах 100 нс. Счетчики этого типа предназначены для измерения активности компонента одновременно."
  remarks: "Formula: (N 1 - N 0) / (D 1 - D 0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % User Time."
  syntax:
    content: Timer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Счетчик процентов, который показывает средний процент измеренного за определенный интервал времени."
  remarks: "This is an inverse counter. Counters of this type calculate active time by measuring the time that the service was inactive and then subtracting the percentage of active time from 100 percent.  \n  \n Formula: (1- ((N 1 - N 0) / (D 1 - D 0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % Processor Time."
  syntax:
    content: Timer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
