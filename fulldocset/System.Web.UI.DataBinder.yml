### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataBinder
  id: DataBinder
  children:
  - System.Web.UI.DataBinder.#ctor
  - System.Web.UI.DataBinder.EnableCaching
  - System.Web.UI.DataBinder.Eval(System.Object,System.String)
  - System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetDataItem(System.Object)
  - System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  - System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  - System.Web.UI.DataBinder.IsBindableType(System.Type)
  langs:
  - csharp
  name: DataBinder
  nameWithType: DataBinder
  fullName: System.Web.UI.DataBinder
  type: Class
  summary: "Предоставляет поддержку для быстрой разработки приложений (RAD) конструкторов для создания и анализа синтаксиса выражения привязки данных. Этот класс не наследуется."
  remarks: "Можно использовать перегруженные статический <xref:System.Web.UI.DataBinder.Eval%2A>метод этого класса в синтаксис привязки данных в веб-страницу ASP.NET.</xref:System.Web.UI.DataBinder.Eval%2A> Это обеспечивает более простой синтаксис для работы, чем стандартная привязка данных. Тем не менее поскольку `DataBinder.Eval` обеспечивает автоматическое преобразование типов, это может привести к снижению производительности.       Дополнительные сведения о привязке данных ASP.NET, выражения и синтаксис см. в разделе [привязка к базам данных](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742) и [Общие сведения о выражениях привязки данных](~/add/includes/ajax-current-ext-md.md).       Начиная с .NET Framework 4.5, чтобы упростить некоторые задачи, которые пришлось бы выполнять через привязку данных в более ранних версиях можно использовать привязки модели. Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](http://go.microsoft.com/fwlink/?LinkId=286117)."
  example:
  - "The following example uses the static <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> method to populate the fields of a <xref:System.Web.UI.WebControls.Repeater> control using an <xref:System.Collections.ArrayList> of `Product` objects. The <xref:System.Web.UI.DataBinder.Eval%2A> method could be applied with the same syntax, but it would not perform as quickly.  \n  \n This example uses a custom `Product` class which exposes a string `Model` property and a numeric `UnitPrice` property.  \n  \n [!code-vb[System.Web.UI.DataBinder#1](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_1.aspx)]\n [!code-cs[System.Web.UI.DataBinder#1](~/add/codesnippet/csharp/t-system.web.ui.databinder_1.aspx)]  \n  \n The following code is the custom `Product` class. This code should be included in a separate class file in the App_Code directory, such as Product.cs or Product.vb.  \n  \n [!code-cs[System.Web.UI.DataBinder#2](~/add/codesnippet/csharp/t-system.web.ui.databinder_2.cs)]\n [!code-vb[System.Web.UI.DataBinder#2](~/add/codesnippet/visualbasic/t-system.web.ui.databinder_2.vb)]"
  syntax:
    content: public sealed class DataBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataBinder&quot;></xref> class."
  syntax:
    content: public DataBinder ();
    parameters: []
  overload: System.Web.UI.DataBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Возвращает или задает значение, указывающее, включено ли кэширование данных во время выполнения."
  syntax:
    content: public static bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включено кэширование для <xref href=&quot;System.Web.UI.DataBinder&quot;> </xref> класса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataBinder.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  id: Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Вычисляет выражения привязки данных во время выполнения."
  remarks: "Значение `expression` должны иметь значение открытого свойства.       Этот метод автоматически вызывается при создании привязки данных в конструкторе быстрой разработка приложений (RAD), такой как Visual Studio. Вы также можно использовать декларативно для упрощения приведения в текстовую строку. Чтобы сделать это, используйте `<%#  %>` синтаксис выражения, как в стандартной привязке данных ASP.NET.       Этот метод особенно полезен при привязке данных к элементам управления, шаблонного списка.      Настроек [!NOTE] настроек, так как этот метод выполняет вычисления с поздним связыванием, с помощью отражения во время выполнения, его можно приводить к снижению производительности заметно медленно по сравнению со стандартным синтаксисом привязки данных ASP.NET.       Для любого списка веб-элементы управления, такие как <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, или <xref:System.Web.UI.WebControls.Repeater>, `container` должно быть `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> При привязке к странице `container` должно быть `Page`.       Начиная с .NET Framework 4.5, чтобы упростить некоторые задачи, которые пришлось бы выполнять через привязку данных в более ранних версиях можно использовать привязки модели. Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](http://go.microsoft.com/fwlink/?LinkId=286117)."
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_3_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_3_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_3_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_3_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_3_4.aspx)]"
  syntax:
    content: public static object Eval (object container, string expression);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого вычисляется выражение. Это должен быть действительный идентификатор объекта в указанном языке страницы."
    - id: expression
      type: System.String
      description: "Путь навигации от `container` объект для общедоступного свойства, которое должно быть помещено в свойство привязанного элемента управления. Это должен быть строкой, свойства или поля имен, разделенных точками, например `Tables[0].DefaultView.[0].Price` в C# или `Tables(0).DefaultView.(0).Price` в Visual Basic."
    return:
      type: System.Object
      description: "<xref:System.Object>Экземпляр, полученный в результате вычисления выражения привязки данных.</xref:System.Object>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code>— <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или представляет собой пустую строку после усечения."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  id: Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Вычисляет выражения привязки данных во время выполнения и формирует результат в виде строки."
  remarks: "Значение `expression` должно оцениваться открытого свойства.       Дополнительные сведения о строках форматирования платформы .NET Framework см. в разделе [типы форматирования](~/add/includes/ajax-current-ext-md.md).       Этот метод автоматически вызывается при создании привязки данных в конструкторе быстрой разработка приложений (RAD), такой как Visual Studio. Можно также использовать его декларативно для преобразования, <xref:System.Object>полученный из выражения привязки данных на <xref:System.String>.</xref:System.String> </xref:System.Object>  Использование метода декларативно, используйте `<%#   %>` синтаксис выражения, как в стандартной привязке данных ASP.NET.       Этот метод особенно полезен при привязке данных к элементам управления, шаблонного списка.      Настроек [!NOTE] настроек, так как этот метод выполняет вычисления с поздним связыванием, с помощью отражения во время выполнения, его можно приводить к снижению производительности заметно медленно по сравнению со стандартным синтаксисом привязки данных ASP.NET. Этот метод используйте осторожно, особенно в том случае, если строка форматирования не требуется.       Для любого списка веб-элементы управления, такие как <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, или <xref:System.Web.UI.WebControls.Repeater>, `container` должно быть `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> При привязке к странице `container` должно быть `Page`.       Начиная с .NET Framework 4.5, чтобы упростить некоторые задачи, которые пришлось бы выполнять через привязку данных в более ранних версиях можно использовать привязки модели. Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](http://go.microsoft.com/fwlink/?LinkId=286117)."
  example:
  - "The following examples show how to use the `Eval` method to bind data to <xref:System.Web.UI.WebControls.Repeater> control. It requires a data class named Product.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/csharp/m-system.web.ui.databind_2_1.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#1](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_1.vb)]  \n  \n The code-behind file loads test data and binds that data to a <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/csharp/m-system.web.ui.databind_2_2.cs)]\n [!code-vb[System.Web.UI.DataBinder.Eval#2](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_2.vb)]  \n  \n In the declarative syntax for the <xref:System.Web.UI.WebControls.Repeater> control, you use the Eval method with `Container.DataItem` for the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/csharp/m-system.web.ui.databind_2_3.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#3](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_3.aspx)]  \n  \n Or, you can call `Eval` function and not include the `container` parameter.  \n  \n [!code-cs[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/csharp/m-system.web.ui.databind_2_4.aspx)]\n [!code-vb[System.Web.UI.DataBinder.Eval#4](~/add/codesnippet/visualbasic/m-system.web.ui.databind_2_4.aspx)]"
  syntax:
    content: public static string Eval (object container, string expression, string format);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого вычисляется выражение. Это должен быть действительный идентификатор объекта в указанном языке страницы."
    - id: expression
      type: System.String
      description: "Путь навигации от `container` объект для общедоступного свойства, которое должно быть помещено в свойство привязанного элемента управления. Это должен быть строкой, свойства или поля имен, разделенных точками, например `Tables[0].DefaultView.[0].Price` в C# или `Tables(0).DefaultView.(0).Price` в Visual Basic."
    - id: format
      type: System.String
      description: "Строка формата .NET Framework (как используемых &lt;xref:System.String.Format%2A?displayProperty=fullName&gt;), преобразующий <xref:System.Object>экземпляр, возвращаемый выражение привязки данных для <xref:System.String>объекта.</xref:System.String> </xref:System.Object>"
    return:
      type: System.String
      description: "Объект <xref:System.String>объект, полученный в результате вычисления выражения привязки данных и преобразование ее в строковый тип.</xref:System.String>"
  overload: System.Web.UI.DataBinder.Eval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  id: GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Возвращает объект объявляемый элемент данных."
  remarks: "Этот метод вызывает метод <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>метод, без учета его `foundDataItem` параметра при возвращении результата.</xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>       Элемент данных объекта идентифицируется одним из двух способов. Если объект-контейнер реализует <xref:System.Web.UI.IDataItemContainer>интерфейс, <xref:System.Web.UI.IDataItemContainer.DataItem%2A>свойство идентифицирует элемент данных и возвращается его значение.</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> В противном случае метод пытается разрешить и вернуть свойство контейнера с именем «DataItem»."
  syntax:
    content: public static object GetDataItem (object container);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого вычисляется выражение. Это должен быть действительный идентификатор объекта в указанном языке страницы."
    return:
      type: System.Object
      description: "Объект, представляющий контейнер объявляемый элемент данных. Возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если элемент данных не найден или если контейнер имеет значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  id: GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Возвращает объект объявляемый элемент данных, об успехе или неудаче."
  remarks: "Элемент данных объекта идентифицируется двумя способами. Если объект-контейнер реализует <xref:System.Web.UI.IDataItemContainer>интерфейс, <xref:System.Web.UI.IDataItemContainer.DataItem%2A>свойство идентифицирует элемент данных и возвращается.</xref:System.Web.UI.IDataItemContainer.DataItem%2A> </xref:System.Web.UI.IDataItemContainer> В противном случае метод пытается разрешить и вернуть свойство контейнера с именем «DataItem»."
  syntax:
    content: public static object GetDataItem (object container, out bool foundDataItem);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого вычисляется выражение. Это должен быть действительный идентификатор объекта в указанном языке страницы."
    - id: foundDataItem
      type: System.Boolean
      description: "Логическое значение, указывающее, был ли элемент данных успешно разрешен и возвращен. Этот параметр передается неинициализированным."
    return:
      type: System.Object
      description: "Объект, представляющий контейнер объявляемый элемент данных. Возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если элемент данных не найден или если контейнер имеет значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataBinder.GetDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Возвращает значение свойства указанного контейнера и навигации пути."
  remarks: "Значение `expr` должно оцениваться открытого свойства.       Для любого списка веб-элементы управления, такие как <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, или <xref:System.Web.UI.WebControls.Repeater>, `container` должно быть `Container.DataItem`.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> При привязке к странице `container` должно быть `Page`."
  syntax:
    content: public static object GetIndexedPropertyValue (object container, string expr);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого `expr` вычисляется. Это должен быть действительный идентификатор объекта на указанном языке для страницы."
    - id: expr
      type: System.String
      description: "Путь навигации от `container` значение открытое свойство, чтобы поместить в свойство привязанного элемента управления. Это должен быть строкой, свойства или поля имен, разделенных точками, например `Tables[0].DefaultView.[0].Price` в C# или `Tables(0).DefaultView.(0).Price` в Visual Basic."
    return:
      type: System.Object
      description: "Объект, полученный в результате вычисления выражения привязки данных."
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>expr</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>expr</code> is not a valid indexed expression.  \n  \n \\- or -  \n  \n <code>expr</code> does not allow indexed access."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  id: GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Получает значение указанного свойства для указанного контейнера и форматирует результат."
  remarks: "Вызывает метод GetIndexedPropertyValue <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>метод и затем использует <xref:System.String.Format%2A?displayProperty=fullName>способ форматирования результатов, как указано в `format` параметр.</xref:System.String.Format%2A?displayProperty=fullName> </xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> Строка формата .NET Framework (как используемых <xref:System.String.Format%2A?displayProperty=fullName>) преобразует <xref:System.Object>экземпляр, возвращаемый выражение привязки данных для <xref:System.String>объекта.</xref:System.String> </xref:System.Object> </xref:System.String.Format%2A?displayProperty=fullName>       Исключения, вызванные для <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>метод применяются к методу GetIndexedPropertyValue.</xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>"
  example:
  - "The following code example demonstrates how to use the GetIndexedPropertyValue method declaratively to bind to an indexed value.  \n  \n [!code-vb[Classic DataBinder.Eval Example#2](~/add/codesnippet/visualbasic/38557d34-9d41-4e37-9929-_1.aspx)]\n [!code-cs[Classic DataBinder.Eval Example#2](~/add/codesnippet/csharp/38557d34-9d41-4e37-9929-_1.aspx)]"
  syntax:
    content: public static string GetIndexedPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "Ссылка на объект, для которого вычисляется выражение. Это должен быть действительный идентификатор объекта на указанном языке для страницы."
    - id: propName
      type: System.String
      description: "Имя свойства, содержащего извлекаемое значение."
    - id: format
      type: System.String
      description: "Строка, задающая формат, в котором для отображения результатов."
    return:
      type: System.String
      description: "Значение указанного свойства в формате, заданном параметром <code> format </code>."
  overload: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  id: GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Получает значение указанного свойства заданного объекта."
  remarks: "Метод GetPropertyValue используется для извлечения значения свойства в объекте."
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static object GetPropertyValue (object container, string propName);
    parameters:
    - id: container
      type: System.Object
      description: "Объект, содержащий свойство."
    - id: propName
      type: System.String
      description: "Имя свойства, содержащего извлекаемое значение."
    return:
      type: System.Object
      description: "Значение указанного свойства."
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>propName</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (»»)."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Объект в <code> container </code> не имеет свойства, указанного в <code> propName </code>."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  id: GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Получает значение указанного свойства заданного объекта и форматирует результат."
  remarks: "Эта версия метода GetPropertyValue используется для получения и форматирования значения свойства в объекте."
  example:
  - The example for <xref:System.Web.UI.DataBinder> demonstrates the use of this method.
  syntax:
    content: public static string GetPropertyValue (object container, string propName, string format);
    parameters:
    - id: container
      type: System.Object
      description: "Объект, содержащий свойство."
    - id: propName
      type: System.String
      description: "Имя свойства, содержащего извлекаемое значение."
    - id: format
      type: System.String
      description: "Строка, задающая формат, в котором для отображения результатов."
    return:
      type: System.String
      description: "Значение указанного свойства в формате, заданном параметром <code> format </code>."
  overload: System.Web.UI.DataBinder.GetPropertyValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>container</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>propName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\")."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Объект в <code> container </code> не имеет свойства, указанного в <code> propName </code>."
  platform:
  - net462
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Определяет, могут быть привязаны в указанный тип данных."
  syntax:
    content: public static bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>, Представляющий тип данных для тестирования.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для типов, могут быть автоматически данными, привязанными в элементах управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataBinder.IsBindableType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.DataBinder.#ctor
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder()
  nameWithType: DataBinder.DataBinder()
  fullName: System.Web.UI.DataBinder.DataBinder()
- uid: System.Web.UI.DataBinder.EnableCaching
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
  fullName: System.Web.UI.DataBinder.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String)
  nameWithType: DataBinder.Eval(Object,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval(Object,String,String)
  nameWithType: DataBinder.Eval(Object,String,String)
  fullName: System.Web.UI.DataBinder.Eval(Object,String,String)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object)
  nameWithType: DataBinder.GetDataItem(Object)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object)
- uid: System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem(Object,Boolean)
  nameWithType: DataBinder.GetDataItem(Object,Boolean)
  fullName: System.Web.UI.DataBinder.GetDataItem(Object,Boolean)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetIndexedPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetIndexedPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String)
- uid: System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue(Object,String,String)
  nameWithType: DataBinder.GetPropertyValue(Object,String,String)
  fullName: System.Web.UI.DataBinder.GetPropertyValue(Object,String,String)
- uid: System.Web.UI.DataBinder.IsBindableType(System.Type)
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: DataBinder.IsBindableType(Type)
  fullName: System.Web.UI.DataBinder.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.DataBinder.#ctor*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: DataBinder
  nameWithType: DataBinder.DataBinder
- uid: System.Web.UI.DataBinder.EnableCaching*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: EnableCaching
  nameWithType: DataBinder.EnableCaching
- uid: System.Web.UI.DataBinder.Eval*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: Eval
  nameWithType: DataBinder.Eval
- uid: System.Web.UI.DataBinder.GetDataItem*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetDataItem
  nameWithType: DataBinder.GetDataItem
- uid: System.Web.UI.DataBinder.GetIndexedPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetIndexedPropertyValue
  nameWithType: DataBinder.GetIndexedPropertyValue
- uid: System.Web.UI.DataBinder.GetPropertyValue*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: GetPropertyValue
  nameWithType: DataBinder.GetPropertyValue
- uid: System.Web.UI.DataBinder.IsBindableType*
  parent: System.Web.UI.DataBinder
  isExternal: false
  name: IsBindableType
  nameWithType: DataBinder.IsBindableType
