### YamlMime:ManagedReference
items:
- uid: System.Web.HttpResponse
  id: HttpResponse
  children:
  - System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  - System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  - System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  - System.Web.HttpResponse.AddCacheItemDependency(System.String)
  - System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddFileDependencies(System.String[])
  - System.Web.HttpResponse.AddFileDependency(System.String)
  - System.Web.HttpResponse.AddHeader(System.String,System.String)
  - System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  - System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.AppendHeader(System.String,System.String)
  - System.Web.HttpResponse.AppendToLog(System.String)
  - System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  - System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  - System.Web.HttpResponse.BinaryWrite(System.Byte[])
  - System.Web.HttpResponse.Buffer
  - System.Web.HttpResponse.BufferOutput
  - System.Web.HttpResponse.Cache
  - System.Web.HttpResponse.CacheControl
  - System.Web.HttpResponse.Charset
  - System.Web.HttpResponse.Clear
  - System.Web.HttpResponse.ClearContent
  - System.Web.HttpResponse.ClearHeaders
  - System.Web.HttpResponse.ClientDisconnectedToken
  - System.Web.HttpResponse.Close
  - System.Web.HttpResponse.ContentEncoding
  - System.Web.HttpResponse.ContentType
  - System.Web.HttpResponse.Cookies
  - System.Web.HttpResponse.DisableKernelCache
  - System.Web.HttpResponse.DisableUserCache
  - System.Web.HttpResponse.End
  - System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  - System.Web.HttpResponse.Expires
  - System.Web.HttpResponse.ExpiresAbsolute
  - System.Web.HttpResponse.Filter
  - System.Web.HttpResponse.Flush
  - System.Web.HttpResponse.FlushAsync
  - System.Web.HttpResponse.HeaderEncoding
  - System.Web.HttpResponse.Headers
  - System.Web.HttpResponse.HeadersWritten
  - System.Web.HttpResponse.IsClientConnected
  - System.Web.HttpResponse.IsRequestBeingRedirected
  - System.Web.HttpResponse.Output
  - System.Web.HttpResponse.OutputStream
  - System.Web.HttpResponse.Pics(System.String)
  - System.Web.HttpResponse.PushPromise(System.String)
  - System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpResponse.Redirect(System.String)
  - System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectLocation
  - System.Web.HttpResponse.RedirectPermanent(System.String)
  - System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectToRoute(System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String)
  - System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  - System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.Status
  - System.Web.HttpResponse.StatusCode
  - System.Web.HttpResponse.StatusDescription
  - System.Web.HttpResponse.SubStatusCode
  - System.Web.HttpResponse.SupportsAsyncFlush
  - System.Web.HttpResponse.SuppressContent
  - System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  - System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  - System.Web.HttpResponse.TransmitFile(System.String)
  - System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.TrySkipIisCustomErrors
  - System.Web.HttpResponse.Write(System.Char)
  - System.Web.HttpResponse.Write(System.Object)
  - System.Web.HttpResponse.Write(System.String)
  - System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.HttpResponse.WriteFile(System.String)
  - System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  - System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  langs:
  - csharp
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
  type: Class
  summary: "Инкапсулирует данные HTTP-ответа из операции ASP.NET."
  remarks: "Методы и свойства класса HttpResponse, предоставляются через <xref:System.Web.HttpApplication.Response%2A>свойство <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, и <xref:System.Web.UI.UserControl>классы.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.Response%2A>       Следующие методы класса HttpResponse поддерживаются только в сценариях обратной передачи и не в асинхронном повторном резервное сценариев:- <xref:System.Web.HttpResponse.BinaryWrite%2A>- <xref:System.Web.HttpResponse.Clear%2A>- <xref:System.Web.HttpResponse.ClearContent%2A>- <xref:System.Web.HttpResponse.ClearHeaders%2A>- <xref:System.Web.HttpResponse.Close%2A>- <xref:System.Web.HttpResponse.End%2A>- <xref:System.Web.HttpResponse.Flush%2A>- <xref:System.Web.HttpResponse.TransmitFile%2A>- <xref:System.Web.HttpResponse.Write%2A>- <xref:System.Web.HttpResponse.WriteFile%2A>- <xref:System.Web.HttpResponse.WriteSubstitution%2A>частичные обновления включены, при использовании <xref:System.Web.UI.UpdatePanel>элементы управления для обновления выбранных областей страницы вместо обновления всей страницы с помощью обратной передачи.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.HttpResponse.WriteSubstitution%2A> </xref:System.Web.HttpResponse.WriteFile%2A> </xref:System.Web.HttpResponse.Write%2A> </xref:System.Web.HttpResponse.TransmitFile%2A> </xref:System.Web.HttpResponse.Flush%2A> </xref:System.Web.HttpResponse.End%2A> </xref:System.Web.HttpResponse.Close%2A> </xref:System.Web.HttpResponse.ClearHeaders%2A> </xref:System.Web.HttpResponse.ClearContent%2A> </xref:System.Web.HttpResponse.Clear%2A> </xref:System.Web.HttpResponse.BinaryWrite%2A> Дополнительные сведения см. в разделе [Обзор элемента управления UpdatePanel](~/add/includes/ajax-current-ext-md.md) и [частичной отрисовке](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example draws three overlapping rectangles when the page is requested. The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image. The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response. Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client. Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object. The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.  \n  \n When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG. The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects. Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.  \n  \n> [!NOTE]\n>  In code, the HttpResponse object is referred to by the keyword `Response`. For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=fullName> method. The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of HttpResponse.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/t-system.web.httpresponse_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.httpresponse_1.aspx)]"
  syntax:
    content: public sealed class HttpResponse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.HttpResponse&quot;> </xref> класса."
  remarks: "Этот член поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода.       Методы и свойства <xref:System.Web.HttpResponse>предоставляются через встроенную функцию <xref:System.Web.HttpContext.Response%2A>объекта в ASP.NET.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpResponse>"
  syntax:
    content: public HttpResponse (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Объект <xref:System.IO.TextWriter>объект, разрешающий пользовательский вывод HTTP.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  id: AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Связывает набор зависимостей кэша с ответом, чтобы упростить переход ответа в недействительное состояние, если он хранится в выходном кэше и заданные зависимости изменились."
  remarks: "Метод AddCacheDependency позволяет зависимости между кэшированные ответы и <xref:System.Web.Caching.CacheDependency>объекта.</xref:System.Web.Caching.CacheDependency>"
  example:
  - "The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <xref:System.Web.Caching.CacheDependency> object.  \n  \n [!code-vb[HttpResponse.AddCacheDependency#1](~/add/codesnippet/visualbasic/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\n [!code-cs[HttpResponse.AddCacheDependency#1](~/add/codesnippet/csharp/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]"
  syntax:
    content: public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);
    parameters:
    - id: dependencies
      type: System.Web.Caching.CacheDependency[]
      description: "Файл, ключ кэша или <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref> для добавления в список зависимостей приложения."
  overload: System.Web.HttpResponse.AddCacheDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Этот метод был вызван слишком поздно в конвейере обработки кэша после кэшированный ответ уже был создан."
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  id: AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ставит допустимость кэшированного ответа в зависимость от других элементов кэша."
  remarks: "Если элементы, указанные в `cacheKeys` параметр удаляются из кэша, кэшированный ответ текущего элемента является недопустимым."
  example:
  - "The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object. Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/csharp/m-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> , Содержащий ключи элементов, от которых зависит текущий кэшированный ответ."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  id: AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ставит допустимость кэшированного элемента в зависимость от других элементов кэша."
  remarks: "Если какие-либо `cacheKey`s удаляются из кэша, кэшированный ответ текущего элемента является недопустимым."
  syntax:
    content: public void AddCacheItemDependencies (string[] cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.String[]
      description: "Массив ключей элементов, от которых зависит кэшированный ответ."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  id: AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ставит допустимость кэшированного ответа в зависимость от других элементов кэша."
  remarks: "Если элемент, соответствующий параметру `cacheKey` параметр удаляется из кэша, кэшированный ответ текущего элемента является недопустимым."
  example:
  - "The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter. If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control's response will be added to the output cache.  \n  \n Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result. Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/csharp/m-system.web.httprespons_13_1.ascx)]\n [!code-vb[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/visualbasic/m-system.web.httprespons_13_1.ascx)]"
  syntax:
    content: public void AddCacheItemDependency (string cacheKey);
    parameters:
    - id: cacheKey
      type: System.String
      description: "Ключ элемента, который зависит кэшированный ответ."
  overload: System.Web.HttpResponse.AddCacheItemDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  id: AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет группу имен файлов в коллекцию имен файлов, от которой зависит текущий ответ."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.  \n  \n [!code-vb[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/visualbasic/m-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/csharp/m-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (System.Collections.ArrayList filenames);
    parameters:
    - id: filenames
      type: System.Collections.ArrayList
      description: "Коллекция файлов, добавляемых."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  id: AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет массив имен файлов в коллекцию имен файлов, от которой зависит текущий ответ."
  remarks: ''
  example:
  - "The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  \n  \n [!code-cs[Response.AddFileDependency#1](~/add/codesnippet/csharp/m-system.web.httprespons_0_1.aspx)]\n [!code-vb[Response.AddFileDependency#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_0_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (string[] filenames);
    parameters:
    - id: filenames
      type: System.String[]
      description: "Массив файлов для добавления."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  id: AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет имя файла в коллекцию имен файлов, от которой зависит текущий ответ."
  remarks: 'При использовании метода AddFileDependency добавить зависимость, также необходимо указать выводом программно или декларативно. Например чтобы указать декларативно кэширование выходных данных, используйте директиву. Дополнительные сведения см. в разделе [как: вывода страниц кэша с зависимостями файл](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  \n  \n [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_11_1.vb)]\n [!code-cs[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_11_1.cs)]"
  syntax:
    content: public void AddFileDependency (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла для добавления."
  overload: System.Web.HttpResponse.AddFileDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет заголовок НТТР в поток вывода. AddHeader предоставляется для обеспечения совместимости с предыдущими версиями ASP."
  remarks: "AddHeader совпадает со значением <xref:System.Web.HttpResponse.AppendHeader%2A>и предоставляется только для совместимости с предыдущими версиями ASP.</xref:System.Web.HttpResponse.AppendHeader%2A> С помощью ASP.NET используйте <xref:System.Web.HttpResponse.AppendHeader%2A>.</xref:System.Web.HttpResponse.AppendHeader%2A>"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Имя заголовка HTTP, чтобы добавить `value` для."
    - id: value
      type: System.String
      description: "Строка, добавляемая к заголовку."
  overload: System.Web.HttpResponse.AddHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  id: AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Поддерживается в .NET Framework 4.5.2 и более поздних версиях]       Регистрирует обратный вызов, который среда выполнения ASP.NET будет вызывать непосредственно перед ответа отправки заголовки для данного запроса."
  remarks: "> [!IMPORTANT]Настроек Если модуль в машинном коде сначала записывает ответ AddOnSendingHeaders метод не вызывается.       Псевдособытие псевдо событие отличается от событий конвейера IHttpModule уровня, что подписки по запросу, а не подписку на уровне приложений. Цель, что обратный вызов может изменить код состояния ответа или могут устанавливать куки-файл ответа или заголовок. Другие примечания об использовании и оговорками:-этот метод действует только в том случае, если службы IIS работают в режиме конвейера интегрированного конвейера и только в том случае, если заголовки ответа еще не были отправлены для текущего запроса.      -Среда выполнения ASP.NET не гарантирует ничего о, обратный вызов выполняется в потоке. Например обратный вызов могут вызываться синхронно в фоновом потоке, если выполняется фоновая запись. <xref:System.Web.HttpContext.Current%2A>доступна в такой поток не гарантируется.</xref:System.Web.HttpContext.Current%2A>      -Обратного вызова не должна вызывать любой метод, управляющий текст сущности ответа или, приводит к записи. Например, обратный вызов не должны вызывать <xref:System.Web.HttpResponse.Redirect%2A>, как этот метод может управлять текст сущности ответа.</xref:System.Web.HttpResponse.Redirect%2A>      -Обратного вызова должен содержать только короткие синхронный код. Попытка вызова асинхронной операции или ожидания этой операции может привести к взаимоблокировке.      -Обратного вызова не должна создавать исключения; в противном случае поведение не определено."
  syntax:
    content: public System.Web.ISubscriptionToken AddOnSendingHeaders (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "Метод обратного вызова."
    return:
      type: System.Web.ISubscriptionToken
      description: "<xref href=&quot;System.Web.ISubscriptionToken&quot;> </xref> Объект, который представляет подписку на Псевдособытие onsendingheaders."
  overload: System.Web.HttpResponse.AddOnSendingHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  id: AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет файл cookie HTTP встроенную коллекцию файлов cookie."
  remarks: ''
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_22_1.cs)]\n [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_22_1.vb)]"
  syntax:
    content: public void AppendCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> Для добавления в выходной поток."
  overload: System.Web.HttpResponse.AppendCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Файл cookie добавляется после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет заголовок НТТР в поток вывода."
  remarks: "При использовании метода AppendHeader для отправки заголовков кэша и в то же время использовать объектную модель кэша (<xref:System.Web.HttpResponse.Cache%2A>) для задания политики кэширования, заголовки ответа HTTP, относящиеся к кэшированию (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, и `Vary`) могут быть удалены при использовании объектной модели кэша.</xref:System.Web.HttpResponse.Cache%2A> Такое поведение позволяет ASP.NET сохранять наиболее строгие параметры. Например рассмотрим содержит пользовательские элементы управления. Если эти элементы имеют конфликтующие политики кэширования, будет использоваться наиболее строгие политики кэша. Если один пользовательский элемент управления задает заголовок &quot;`Cache-Control: Public`«и другой пользовательский элемент управления задает более строгий заголовок»`Cache-Control: Private`» путем вызова метода <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, то&quot;`Cache-Control: Private`&quot;заголовок будет отправлен с ответом.</xref:System.Web.HttpCachePolicy.SetCacheability%2A>       Список стандартных заголовков HTTP/1.1, см. в разделе 14, «Определения полей заголовков», в [протокол HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) спецификация на веб-сайте консорциума World Wide Web (W3C)."
  example:
  - "The following example calls the AppendHeader method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.  \n  \n [!code-cs[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_19_1.aspx)]\n [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_19_1.aspx)]"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Имя заголовка HTTP, чтобы добавить в выходной поток."
    - id: value
      type: System.String
      description: "Строка для добавления в заголовок."
  overload: System.Web.HttpResponse.AppendHeader*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Заголовок добавляется после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  id: AppendToLog(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет данные пользовательского журнала в файл журнала службы Internet Information Services (IIS)."
  remarks: "Чтобы разрешить указанную строку для записи в файл журнала, сначала необходимо включить **запрос URI** параметр **расширенные свойства ведения журнала** диалоговое окно для сайта, который вы хотите войти активность в службах IIS.       Чтобы настроить расширенное ведение журнала в IIS 6.0, выполните следующие действия: 1.  В диспетчере IIS разверните узел локального компьютера, разверните папку веб- или FTP-узлов, щелкните правой кнопкой мыши веб- или FTP-сайта и нажмите кнопку **свойства**.      2.  Нажмите кнопку **веб- или FTP-сайта** , а затем выберите **включить ведение журнала** флажок (если он еще не выбрана).      3.  В **формат журнала** щелкните **расширенный формат файла журнала W3C**.      4.  Выберите пункт **Свойства**.      5.  Нажмите кнопку **Дополнительно** выберите свойства, которые вы хотите войти и нажмите кнопку **ОК**."
  example:
  - "The following example shows how to append a string to the log.  \n  \n [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_15_1.vb)]\n [!code-cs[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_15_1.cs)]"
  syntax:
    content: public void AppendToLog (string param);
    parameters:
    - id: param
      type: System.String
      description: "Текст, добавляемый в файл журнала."
  overload: System.Web.HttpResponse.AppendToLog*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  id: ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет идентификатор сеанса в виртуальный путь, если сеанс использует <> </> *настроек состояния сеанса и возвращает объединенный путь. Если <> </> *настроек состояние сеанса не используется, ApplyAppPathModifier возвращает исходный виртуальный путь."
  remarks: "ApplyAppPathModifier используется только с сеансами без поддержки файлов cookie для создания абсолютных элементов href."
  example:
  - "The following example declares a string variable named `urlConverted`, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/csharp/m-system.web.httprespons_4_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_4_1.aspx)]"
  syntax:
    content: public string ApplyAppPathModifier (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь к ресурсу."
    return:
      type: System.String
      description: "<code> virtualPath </code> С сеансом добавленным Идентификатором."
  overload: System.Web.HttpResponse.ApplyAppPathModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  id: BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Отправляет в настоящее время буфер от ответа клиенту."
  remarks: "Если базовый <xref:System.Web.HttpWorkerRequest>объект поддерживает асинхронные операции очистки и этот метод вызывается из события асинхронной модуль или асинхронный обработчик, операцию очистки выполняется асинхронно.</xref:System.Web.HttpWorkerRequest> В противном случае операция записи на диск выполняется синхронно. Асинхронной очистки поддерживается для IIS 6.0 и более поздних версий."
  syntax:
    content: public IAsyncResult BeginFlush (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Объект обратного вызова."
    - id: state
      type: System.Object
      description: "Состояние ответа."
    return:
      type: System.IAsyncResult
      description: "Объект асинхронного результата."
  overload: System.Web.HttpResponse.BeginFlush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ответ уже завершено."
  platform:
  - net462
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  id: BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает строку двоичных символов в поток вывода НТТР."
  remarks: ''
  example:
  - "The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_21_1.cs)]\n [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_21_1.vb)]"
  syntax:
    content: public void BinaryWrite (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Байт, записываемый в поток вывода."
  overload: System.Web.HttpResponse.BinaryWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Buffer
  id: Buffer
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, следует ли буферизировать выходные данные и отправлять их после завершения ответа. завершения обработки."
  remarks: "Свойство буфера рекомендуется для <xref:System.Web.HttpResponse.BufferOutput%2A>Свойства и предоставляется только для совместимости с предыдущими версиями ASP.</xref:System.Web.HttpResponse.BufferOutput%2A> С помощью ASP.NET используйте <xref:System.Web.HttpResponse.BufferOutput%2A>.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выходные данные клиенту, помещаются в буфер; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BufferOutput
  id: BufferOutput
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, следует ли буферизировать выходные данные и отправлять их после страницы завершения обработки."
  remarks: ''
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_3_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_3_1.aspx)]"
  syntax:
    content: public bool BufferOutput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выходные данные клиенту, помещаются в буфер; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.BufferOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Cache
  id: Cache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает политику кэширования (например, срок действия, параметры конфиденциальности и изменяемые предложения) веб-страницы."
  remarks: ''
  example:
  - "The following example writes properties of the current cache policy to the HTTP output stream.  \n  \n [!code-vb[Classic HttpResponse.Cache Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_4_1.vb)]\n [!code-cs[Classic HttpResponse.Cache Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_4_1.cs)]"
  syntax:
    content: public System.Web.HttpCachePolicy Cache { get; }
    return:
      type: System.Web.HttpCachePolicy
      description: "<xref href=&quot;System.Web.HttpCachePolicy&quot;> </xref> , Содержащий сведения о политике кэширования текущего ответа."
  overload: System.Web.HttpResponse.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.CacheControl
  id: CacheControl
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Cache-Control&quot; name=&quot;Cache-Control&quot; href=&quot;&quot;> </xref> заголовка HTTP, соответствующий одному из <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> значений перечисления."
  remarks: "Значения для `Private`, `Public`, и `No-Cache` представляют собой строки и должно быть заключено в кавычки (» «). Если свойство CacheControl присвоено значение, которое не соответствует ни одному из <xref:System.Web.HttpCacheability>значений перечисления, а затем <xref:System.ArgumentException>возникает исключение.</xref:System.ArgumentException> </xref:System.Web.HttpCacheability> Если свойство CacheControl не задано, возможность кэширования ответа присваивается <xref:System.Web.HttpCacheability>.</xref:System.Web.HttpCacheability>       `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, И <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>свойства являются устаревшими.</xref:System.Web.HttpResponse.ExpiresAbsolute%2A> </xref:System.Web.HttpResponse.Expires%2A> Вместо этого методы <xref:System.Web.HttpCachePolicy>класса доступны через <xref:System.Web.HttpResponse.Cache%2A>внутренний объект для управления Internet Information Services (IIS) выводить кэша и клиент кэширует.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy>"
  syntax:
    content: public string CacheControl { get; set; }
    return:
      type: System.String
      description: "Строковое представление <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> значение перечисления."
  overload: System.Web.HttpResponse.CacheControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Заданное значение строки не соответствует ни одному из <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> значений перечисления."
  platform:
  - net462
- uid: System.Web.HttpResponse.Charset
  id: Charset
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает кодировку НТТР для потока вывода."
  remarks: "`Charset` Свойству можно присвоить значение `null` отключение HTTP `Content-Type` заголовок."
  example:
  - "The following example checks whether the character set of the output stream is Central European (ISO).  \n  \n [!code-vb[System.Web.HttpResponse.Charset#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_7_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Charset#1](~/add/codesnippet/csharp/p-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public string Charset { get; set; }
    return:
      type: System.String
      description: "Кодировка НТТР для потока вывода."
  overload: System.Web.HttpResponse.Charset*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_Charset&quot; name=&quot;Charset&quot; href=&quot;&quot;> </xref> Свойство был задан после отправки заголовков."
  platform:
  - net462
- uid: System.Web.HttpResponse.Clear
  id: Clear
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Очищает все содержимое вывода из потока буфера."
  remarks: "Метод Clear удаляет сведения о заголовке."
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/m-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.HttpResponse.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearContent
  id: ClearContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Очищает все содержимое вывода из потока буфера."
  remarks: "Метод ClearContent не очищает данные заголовка."
  example:
  - "The following example clears all content from the buffer stream.  \n  \n [!code-cs[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_17_1.cs)]\n [!code-vb[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_17_1.vb)]"
  syntax:
    content: public void ClearContent ();
    parameters: []
  overload: System.Web.HttpResponse.ClearContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearHeaders
  id: ClearHeaders
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Очищает все заголовки из потока буфера."
  remarks: ''
  example:
  - "The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/csharp/m-system.web.httprespons_14_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_14_1.aspx)]"
  syntax:
    content: public void ClearHeaders ();
    parameters: []
  overload: System.Web.HttpResponse.ClearHeaders*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Заголовки удаляются после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  id: ClientDisconnectedToken
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref:System.Threading.CancellationToken>, задействуемый при отключении клиента.</xref:System.Threading.CancellationToken>"
  remarks: "Этот API является потокобезопасным. Однако существуют некоторые ограничения на использование токена отмены. Неправильное использование может привести к гонки, взаимоблокировки или другие непредвиденные ситуации. Следует учитывать следующие рекомендации:-Убедитесь, не вызывают этот API за пределами одного запроса, поскольку ASP.NET будет удалить токен отмены в конце запроса. Нет никакой гарантии, что маркер никогда не перейдет в отмененном состоянии до его удаления. Например если запрос завершается без отключения клиента, маркер будет удален без сначала было отменено.      -Не ожидаете <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, как это согласуется со асинхронное уведомление и может приводить к взаимоблокировкам.</xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>      -Не вызывайте <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>перегрузки, которые обратный вызов на исходный <xref:System.Threading.SynchronizationContext>объекта.</xref:System.Threading.SynchronizationContext> </xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>      -Не используйте <xref:System.Web.HttpContext>объекта или другие не многопоточное внутренним объектам ASP.NET из в обратный вызов, предоставленный <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>метод.</xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> </xref:System.Web.HttpContext> Обратный вызов может выполняться параллельно с другими ASP.NET и кода приложения.      -Сохраните методы обратного вызова краткосрочных и без блокировки.      -Приложите усилия, чтобы избежать возникновения исключения в методы обратного вызова.       Это свойство применимо только для Internet Information Service (IIS) 7.5 в интегрированном режиме. Если вызвать без правильного IIS версии или конвейера режима, <xref:System.PlatformNotSupportedException>возникает исключение.</xref:System.PlatformNotSupportedException> Чтобы определить версию служб IIS, используйте <xref:System.Web.HttpRuntime.IISVersion%2A>.</xref:System.Web.HttpRuntime.IISVersion%2A> Чтобы определить режим конвейера, используйте <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public System.Threading.CancellationToken ClientDisconnectedToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "Токен отмены."
  overload: System.Web.HttpResponse.ClientDisconnectedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Close
  id: Close
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Закрывает подключение к сокету клиенту."
  remarks: "Этот метод завершает подключение к клиенту внезапные способом и не предназначен для обычной обработки HTTP-запроса. Метод отправляет пакет Сброс клиента, которая может привести к данные ответа, которые заносятся на сервере, клиенте или где-то между ними, который нужно удалить.       Тем не менее, обычно следует вызывать <xref:System.Web.HttpApplication.CompleteRequest%2A>вместо этого, если вы хотите перейти вперед к <xref:System.Web.HttpApplication.EndRequest>событий и отправки ответа клиенту.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.HttpResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает кодировку НТТР для потока вывода."
  remarks: "По умолчанию `ContentEncoding` можно указать в файле конфигурации ASP.NET в [глобализации элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) раздела. Если указано ContentEncoding клиентом, переопределяются параметры конфигурации по умолчанию."
  example:
  - "The following example writes a human-readable description of the character set encoding to the output stream.  \n  \n [!code-cs[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_0_1.cs)]\n [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_0_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Объект <xref:System.Text.Encoding>, содержащий сведения о кодировке текущего ответа.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.ContentEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Попытка задать ContentEncoding <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentType
  id: ContentType
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает MIME-тип HTTP выходного потока."
  remarks: ''
  example:
  - "The following example sets the ContentType property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Тип HTTP MIME в поток вывода. Значение по умолчанию — &quot;<xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;></xref>»."
  overload: System.Web.HttpResponse.ContentType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "ContentType является свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.Cookies
  id: Cookies
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает коллекцию файлов Сookie ответов."
  remarks: "ASP.NET содержит две коллекции встроенный файл cookie. Коллекции, доступной через <xref:System.Web.HttpRequest.Cookies%2A>коллекцию <xref:System.Web.HttpRequest>содержит файлы cookie, отправленных клиентом на сервер в `Cookie` заголовок.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Cookies%2A> Доступ к коллекции осуществляется через коллекцию файлов cookie <xref:System.Web.HttpResponse>содержатся новые объекты cookie, созданные на сервере и передаются клиенту в `Set-Cookie` заголовок.</xref:System.Web.HttpResponse>       После добавления файла cookie с помощью коллекции файлов cookie, файл cookie немедленно становится доступной в <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>коллекции, даже если не было отправлено ответ клиенту.</xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_12_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_12_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "Коллекция файлов cookie ответов."
  overload: System.Web.HttpResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableKernelCache
  id: DisableKernelCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Запрещает кэширование ядра для текущего ответа."
  remarks: "Если кэширование ядра не поддерживается, этот метод не оказывает влияния."
  syntax:
    content: public void DisableKernelCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableKernelCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableUserCache
  id: DisableUserCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Отключает кэширование IIS в пользовательском режиме для этого ответа."
  remarks: "Если кэширование IIS в пользовательском режиме не поддерживается, этот метод возвращает не выполняя никаких действий."
  syntax:
    content: public void DisableUserCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableUserCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.End
  id: End
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Отправляет клиенту все выходные данные, находящиеся в буфере, прекращает выполнение страницы и вызывает <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> событий."
  remarks: "Этот метод предоставляется только для совместимости с ASP — то есть, для совместимости с технологией веб программирование на основе COM, предшествующей ASP.NET. Если вы хотите перейти вперед к <xref:System.Web.HttpApplication.EndRequest>событий и отправки ответа клиенту, обычно предпочтительнее вызовите <xref:System.Web.HttpApplication.CompleteRequest%2A>вместо.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.EndRequest>       Для имитации поведения `End` метод в ASP, этот метод пытается вызвать <xref:System.Threading.ThreadAbortException>исключение.</xref:System.Threading.ThreadAbortException> Если эта попытка окажется успешной, вызывающий поток будет прервана, что к падению производительности веб-узла. В этом случае код после вызова метода End не выполняется.       Если метод завершения не может сформировать <xref:System.Threading.ThreadAbortException>, вместо записывает байты ответа клиенту.</xref:System.Threading.ThreadAbortException> Это выполняется синхронно, который также может быть к падению производительности веб-узла.       В любом случае (ли <xref:System.Threading.ThreadAbortException>возникает исключение), ответ конвейера происходит переключение <xref:System.Web.HttpApplication.EndRequest>событий.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Threading.ThreadAbortException>       <xref:System.Web.HttpApplication.CompleteRequest%2A>Метод не вызывают исключение и код после вызова метода <xref:System.Web.HttpApplication.CompleteRequest%2A>метод может быть выполнен.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.CompleteRequest%2A> Если нужно избежать выполнения последующих кода и снижения производительности окончания приемлемо, можно вызвать End вместо <xref:System.Web.HttpApplication.CompleteRequest%2A>.</xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void End ();
    parameters: []
  overload: System.Web.HttpResponse.End*
  exceptions:
  - type: System.Threading.ThreadAbortException
    commentId: T:System.Threading.ThreadAbortException
    description: "Вызов метода End после завершения текущего запроса."
  platform:
  - net462
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Завершает асинхронную операцию очистки."
  syntax:
    content: public void EndFlush (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Объект асинхронного результата."
  overload: System.Web.HttpResponse.EndFlush*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Не поддерживается асинхронной очистки и <code> asyncResult </code> параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Не поддерживается асинхронной очистки и <code> asyncResult </code> параметра не может быть приведен к `FlushAsyncResult` объекта."
  platform:
  - net462
- uid: System.Web.HttpResponse.Expires
  id: Expires
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает количество минут до истечения срока действия страницы, сохраненной в кэше в браузере. Если пользователь возвращается к той же странице до истечения срока его действия, будет отображена кэшированная версия. Срок действия истекает предоставляется для обеспечения совместимости с предыдущими версиями ASP."
  remarks: "`Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>И <xref:System.Web.HttpResponse.CacheControl%2A>Свойства стали нерекомендуемыми в пользу методы <xref:System.Web.HttpCachePolicy>доступного через <xref:System.Web.HttpResponse.Cache%2A>внутренний объект для управления Internet Information Services (IIS) выводить кэша и клиент кэширует.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.ExpiresAbsolute%2A>"
  syntax:
    content: public int Expires { get; set; }
    return:
      type: System.Int32
      description: "Количество минут до истечения срока действия страницы."
  overload: System.Web.HttpResponse.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ExpiresAbsolute
  id: ExpiresAbsolute
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает абсолютную дату и время удаления кэшированных сведений из кэша. ExpiresAbsolute обеспечивает совместимость с предыдущими версиями ASP."
  remarks: "`ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, И <xref:System.Web.HttpResponse.CacheControl%2A>Свойства стали нерекомендуемыми в пользу методы <xref:System.Web.HttpCachePolicy>доступного через <xref:System.Web.HttpResponse.Cache%2A>внутренний объект для управления Internet Information Services (IIS) выводить кэша и клиент кэширует.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.Expires%2A>"
  syntax:
    content: public DateTime ExpiresAbsolute { get; set; }
    return:
      type: System.DateTime
      description: "Дата и время истечения срока действия страницы."
  overload: System.Web.HttpResponse.ExpiresAbsolute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Filter
  id: Filter
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает или задает объект фильтра оболочки, используемый для изменения тела сущности НТТР перед передачей."
  remarks: "При создании `Stream` и задайте свойства фильтра `Stream` объекта HTTP все выходные данные, отправляемые <xref:System.Web.HttpResponse.Write%2A>проходит через фильтр.</xref:System.Web.HttpResponse.Write%2A>"
  example:
  - "The following example is an ASP.NET page that sets the Filter property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response. The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_8_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/p-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Объект, действующий как фильтр вывода.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Фильтрация не разрешена с сущностью."
  platform:
  - net462
- uid: System.Web.HttpResponse.Flush
  id: Flush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Отправляет клиенту все выходные данные, находящиеся в буфере"
  remarks: "Заставляет все текущие буфер выходных данных, отправляемых клиенту. Метод Flush может вызываться несколько раз во время обработки запроса."
  example:
  - "The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format. The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/m-system.web.httprespons_24_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_24_1.aspx)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Web.HttpResponse.Flush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Кэш очищается после отправки ответа."
  platform:
  - net462
- uid: System.Web.HttpResponse.FlushAsync
  id: FlushAsync
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Асинхронно отправляет все выходные данные, находящиеся в буфере клиенту."
  syntax:
    content: public System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "Объект <xref:System.Threading.Tasks.Task>, представляющий асинхронную операцию.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.HttpResponse.FlushAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.HeaderEncoding
  id: HeaderEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref:System.Text.Encoding>поток выходных данных объекта, который представляет кодирование для текущего заголовка.</xref:System.Text.Encoding>"
  remarks: "Свойство HeaderEncoding предоставляет возможность отключить или изменение <xref:System.Text.Encoding>объекта в заголовке ответа с помощью <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, или <xref:System.Text.UTF8Encoding>объекта.</xref:System.Text.UTF8Encoding> </xref:System.Text.UTF7Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.ASCIIEncoding> </xref:System.Text.Encoding> Значение по умолчанию значение кодировки — <xref:System.Text.UTF8Encoding>класса.</xref:System.Text.UTF8Encoding>       Можно изменить тип свойства HeaderEncoding, потенциально можно повысить риск определенных вредоносных атак или привести конфиденциальных данных, отправляемых в заголовке ответа. Частично заголовок атак путем внедрения кода можно избежать, если оставить свойство HeaderEncoding ответа по умолчанию. Атаки для уязвимых приложений могут отправляться обратно небезопасные данные как часть заголовка ответа. Если HeaderEncoding отключен из-за требования продолжения строки в заголовке или любой заголовок создается на основе результатов непроверенных данных, данные заголовка должны проверяться перед отправкой в поток ответа."
  syntax:
    content: public System.Text.Encoding HeaderEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, Содержащий сведения о кодировке текущего заголовка.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.HeaderEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение кодировки — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The encoding value is <xref:System.Text.Encoding.Unicode*>.  \n  \n \\- or -  \n  \n The headers have already been sent."
  platform:
  - net462
- uid: System.Web.HttpResponse.Headers
  id: Headers
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает коллекцию заголовков ответа."
  remarks: "Свойство заголовков поддерживается только с [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] режим интегрированного конвейера и по крайней мере .NET Framework 3.0. При попытке доступа к свойству заголовки и одно из этих двух условий не соблюдается, <xref:System.PlatformNotSupportedException>возникает исключение.</xref:System.PlatformNotSupportedException>"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> заголовков ответа."
  overload: System.Web.HttpResponse.Headers*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Этой операции требуется режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework версии 3.0."
  platform:
  - net462
- uid: System.Web.HttpResponse.HeadersWritten
  id: HeadersWritten
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Поддерживается в .NET Framework 4.5.2 и более поздних версиях]       Возвращает значение, указывающее, были ли записаны заголовки ответа."
  syntax:
    content: public bool HeadersWritten { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если заголовки ответа были записаны; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.HeadersWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsClientConnected
  id: IsClientConnected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, указывающее, подключен ли клиент к серверу."
  remarks: "Это свойство возвращает IsClientConnected `false` если выполняются следующие условия:-подключение к клиенту было прервано. Это может произойти, если <xref:System.Web.HttpResponse.Close%2A>был вызван метод, или если клиент остановил выполнение веб-страницы или перешел к другой странице.</xref:System.Web.HttpResponse.Close%2A>      - <xref:System.Web.HttpWorkerRequest>Объект, обрабатывающий запрос является `null` или <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>возвращает `false`.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Если в настраиваемом <xref:System.Web.HttpWorkerRequest>объект обрабатывает запрос, то <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>метод может задаваться на основании пользовательских критериев.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Например пользовательский рабочий запрос может инициировать тайм-аут после определенного периода времени."
  example:
  - "The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page. If IsClientConnected is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/p-system.web.httprespons_1_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_1_1.aspx)]"
  syntax:
    content: public bool IsClientConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если клиент подключен в данный момент; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsClientConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  id: IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает логическое значение, указывающее, передаются ли клиент в новое расположение."
  remarks: "Используйте свойство IsRequestBeingRedirected с <xref:System.Web.HttpResponse.RedirectLocation%2A>Свойства для тестирования и определить ли абсолютный URI, переданный клиенту в HTTP `Location` заголовок отличается от текущего URI и каким будет новое предполагаемого URI, который переносится на.</xref:System.Web.HttpResponse.RedirectLocation%2A>"
  syntax:
    content: public bool IsRequestBeingRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение заголовка ответа расположения отличается от текущего расположения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsRequestBeingRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Output
  id: Output
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Разрешает выводить текст в исходящем потоке ответа НТТР."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode>. The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the Output property to display the encoded string to the page.  \n  \n [!code-vb[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_5_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/csharp/p-system.web.httprespons_5_1.aspx)]"
  syntax:
    content: public System.IO.TextWriter Output { get; set; }
    return:
      type: System.IO.TextWriter
      description: "Объект <xref:System.IO.TextWriter>объект, направляющий клиенту пользовательский вывод.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.Output*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.OutputStream
  id: OutputStream
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Обеспечивает вывод двоичных данных в теле исходящего содержимого НТТР."
  remarks: "Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=True&autoUpgrade=False) method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  \n  \n-   <xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.  \n  \n-   <xref:System.ArgumentNullException>, if the `buffer` parameter is `null`."
  example:
  - "The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/p-system.web.httprespons_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_13_1.aspx)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "Операции ввода-ВЫВОДА <xref:System.IO.Stream>представляющий начальное содержимое тела исходящего содержимого НТТР.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.OutputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>OutputStream</code>недоступен."
  platform:
  - net462
- uid: System.Web.HttpResponse.Pics(System.String)
  id: Pics(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет HTTP <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> заголовок в исходящий поток."
  remarks: "Платформа для выбора содержимого Интернета (РИСУНКИ) — это стандарт консорциума World Wide Web (W3C) для содержимого пометки. РИСУНКИ — по существу это язык для создания систем оценок.       Любое значение может быть метка РИСУНКИ; ASP.NET не проверяет метку. Максимальная длина строки составляет 255 символов. Дополнительные сведения о стандартах РИСУНКИ и синтаксисе см. в разделе [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) веб-сайта."
  example:
  - "The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP `PICS-Label` header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/csharp/m-system.web.httprespons_8_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public void Pics (string value);
    parameters:
    - id: value
      type: System.String
      description: "Строка, добавляемая к <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> заголовок."
  overload: System.Web.HttpResponse.Pics*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String)
  id: PushPromise(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Этот API предназначен для поддержки приложений, принудительно отправляющих обещания клиентам HTTP 2.0. Подробную информацию можно найти в отношении сервера http2 в [разделе спецификации HTTP/2 8.2: сервер принудительной](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise не является детерминированным и приложения не должен содержать логику, которая зависит от него. Он предназначен только преимущество в производительности в некоторых случаях. Существует много условий (протокол и реализация), которые могут вызвать полностью игнорировать запросы принудительной. Ожидаемый результат основан на выстрелил и забыл."
  syntax:
    content: public void PushPromise (string path);
    parameters:
    - id: path
      type: System.String
      description: "URL-адрес push-запросе. Он должен быть виртуальный путь относительного ресурса, который сервер должен принудительно отправить клиенту."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  id: PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Этот API предназначен для поддержки приложений, принудительно отправляющих обещания клиентам HTTP 2.0. Подробную информацию можно найти в отношении сервера http2 в [разделе спецификации HTTP/2 8.2: сервер принудительной](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise не является детерминированным и приложения не должен содержать логику, которая зависит от него. Он предназначен только преимущество в производительности в некоторых случаях. Существует много условий (протокол и реализация), которые могут вызвать полностью игнорировать запросы принудительной. Ожидаемый результат основан на выстрелил и забыл."
  syntax:
    content: public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "URL-адрес push-запросе. Он должен быть виртуальный путь относительного ресурса, который сервер должен принудительно отправить клиенту."
    - id: method
      type: System.String
      description: "Метод HTTP-запроса, который будет использоваться в push-запросе."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Заголовок HTTP-запроса, который будет использоваться в push-запросе."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес и задает новый URL-адрес."
  remarks: "Вызов перенаправления, аналогичен вызову <xref:System.Web.HttpResponse.Redirect%2A>со вторым параметром равным `true`.</xref:System.Web.HttpResponse.Redirect%2A>       Перенаправления вызовов <xref:System.Web.HttpResponse.End%2A>какие вызывает <xref:System.Threading.ThreadAbortException>исключение после завершения.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Это исключение оказывает отрицательное влияние на производительность веб-приложения. Таким образом, рекомендуется вместо этой перегрузки использовать <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName>перегружать и передать `false` для `endResponse` параметра, а затем вызовите <xref:System.Web.HttpApplication.CompleteRequest%2A>метод.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> Дополнительные сведения см. в разделе <xref:System.Web.HttpResponse.End%2A>метод.</xref:System.Web.HttpResponse.End%2A>      Настроек [!NOTE] настроек только для мобильных страниц, если приложение зависит от сеансов без поддержки файлов cookie, или может получать запросы от мобильных устройств, которые требуют без поддержки файлов cookie, использование тильды (~) в пути может привести к созданию нового сеанса и потере данных сеанса. Для задания свойства на мобильный элемент управления с использованием пути, такие как «~ / путь», разрешить пути с помощью <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>«~ / пути» перед их занесением в свойство.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302. Другой способ передачи управления на другую страницу — <xref:System.Web.HttpServerUtility.Transfer%2A>метод.</xref:System.Web.HttpServerUtility.Transfer%2A> <xref:System.Web.HttpServerUtility.Transfer%2A>Метод обычно более эффективны, так как это не вызывает кругового пути к клиенту.</xref:System.Web.HttpServerUtility.Transfer%2A> Дополнительные сведения см. в разделе [как: перенаправление пользователей на другую страницу](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example forces an unconditional redirection to another Web site.  \n  \n [!code-cs[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_9_1.cs)]\n [!code-vb[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "Конечное расположение."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Перенаправление выполняется после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  id: Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет клиента на новый URL-адрес. Задает новый URL-адрес и ли быть прекращено выполнение текущей страницы."
  remarks: "Абсолютный URL-адрес (например, http://www.contoso.com/default.aspx) или относительный URL-адрес (например, Default.aspx) могут быть заданы для целевое расположение, но некоторые браузеры могут отклонить относительный URL-адрес.       При использовании этого метода в обработчике страницы для завершения запроса для одной страницы и начала новый запрос для другой страницы задайте `endResponse` для `false` и затем вызвать <xref:System.Web.HttpApplication.CompleteRequest%2A>метод.</xref:System.Web.HttpApplication.CompleteRequest%2A> При указании `true` для `endResponse` параметра, этот метод вызывает метод <xref:System.Web.HttpResponse.End%2A>первоначальный запрос, который вызывает метод <xref:System.Threading.ThreadAbortException>исключение после ее завершения.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Это исключение оказывает отрицательное влияние на производительность веб-приложения, поэтому передача `false` для `endResponse` рекомендуется использовать параметр. Дополнительные сведения см. в разделе <xref:System.Web.HttpResponse.End%2A>метод.</xref:System.Web.HttpResponse.End%2A>      Настроек [!NOTE] настроек для мобильных страниц, если приложение зависит от сеансов без поддержки файлов cookie, или может получать запросы от мобильных устройств, которые требуют без поддержки файлов cookie, использование тильды (~) в пути можно создать новый сеанс и потерять данные сеанса. Для задания свойства на мобильный элемент управления с использованием пути, такие как «~ / путь», разрешить пути с помощью <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>«~ / пути» перед их занесением в свойство.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302. Другой способ передачи управления на другую страницу — <xref:System.Web.HttpServerUtility.Transfer%2A>метод.</xref:System.Web.HttpServerUtility.Transfer%2A> <xref:System.Web.HttpServerUtility.Transfer%2A>Метод обычно более эффективны, так как это не вызывает кругового пути к клиенту.</xref:System.Web.HttpServerUtility.Transfer%2A> Дополнительные сведения см. в разделе [как: перенаправление пользователей на другую страницу](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the Redirect method, and the client will view another page. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/m-system.web.httprespons_16_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_16_1.aspx)]"
  syntax:
    content: public void Redirect (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Расположение целевого объекта."
    - id: endResponse
      type: System.Boolean
      description: "Указывает, должно ли быть прекращено выполнение текущей страницы."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>содержит символ перевода строки."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Перенаправление выполняется после отправки заголовков HTTP."
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Запрос страницы является результатом обратного вызова."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение HTTP- <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> заголовок."
  remarks: ''
  example:
  - "The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  \n  \n```c#  \nResponse.StatusCode = 301;  \nResponse.Status = \"301 Moved Permanently\";  \nResponse.RedirectLocation = \"http://www.newurl.com \";  \nResponse.End();  \n```"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "Абсолютный URI, переданный клиенту в HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> заголовок."
  overload: System.Web.HttpResponse.RedirectLocation*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Заголовки HTTP уже записаны."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  id: RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на указанный URL-адрес."
  remarks: "Эта перегрузка метода RedirectPermanent содержит код состояния HTTP 301 в ответе и URL-адрес, чтобы перенаправить запрос. Код состояния HTTP 301 — это стандартный код HTTP-ответа. Указывает, что существует постоянное перенаправление, и он обеспечивает место перенаправления.       Вызов перегрузки метода RedirectPermanent завершает ответ."
  syntax:
    content: public void RedirectPermanent (string url);
    parameters:
    - id: url
      type: System.String
      description: "Расположение, чтобы перенаправить запрос."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>включает символ перевода строки (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  id: RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на указанный URL-адрес и предоставляет возможность завершить ответ."
  remarks: "Эта перегрузка метода RedirectPermanent содержит код состояния HTTP 301 в ответе и URL-адрес, чтобы перенаправить запрос. Эта перегрузка метода также предоставляет возможность указать, следует ли прервать или завершить ответ после выполнения перенаправления. Код состояния HTTP 301 — это стандартный код HTTP-ответа. Указывает, что существует постоянное перенаправление, и он обеспечивает место перенаправления."
  syntax:
    content: public void RedirectPermanent (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Расположение, чтобы перенаправить запрос."
    - id: endResponse
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для прерывания ответа; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>включает символ перевода строки (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  id: RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес, используя значения параметров маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод преобразует объект, который передается в `routeValues` для <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>объектов с помощью <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>конструктор.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Затем вызывается метод для определения URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  id: RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес, используя имя маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод преобразует имя маршрута, который передается в `routeName` на URL-адрес с помощью <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>метод.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес, используя значения параметров маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод вызывает метод <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>метод, чтобы определить URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес, используя значения параметров маршрута и имя маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод преобразует объект, который передается в `routeValues` для <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>объектов с помощью <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>конструктор.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Затем вызывается метод для определения URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
    - id: routeValues
      type: System.Object
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перенаправляет запрос на новый URL-адрес, используя значения параметров маршрута и имя маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Метод вызывается для определения URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  id: RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на новый URL-адрес, используя значения параметров маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Этот метод преобразует объект, который передается в `routeValues` для <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>объектов с помощью <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>конструктор.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Затем вызывается метод для определения URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  id: RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на новый URL-адрес, используя имя маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Этот метод преобразует имя маршрута, который передается в `routeName` на URL-адрес с помощью <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>метод.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на новый URL-адрес, используя значения параметров маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод вызывает метод <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>метод, чтобы определить URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  id: RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на новый URL-адрес, используя значения параметров маршрута и имя маршрута, соответствующее новому URL-АДРЕСУ."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.RedirectPermanent%2A>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.RedirectPermanent%2A>       Этот метод преобразует объект, который передается в `routeValues` для <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>объектов с помощью <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>конструктор.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Затем вызывается метод для определения URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
    - id: routeValues
      type: System.Object
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Выполняет постоянное перенаправление с запрошенного URL-адреса на новый URL-адрес, используя значения параметров маршрута и имя маршрута."
  remarks: "Этот метод предоставляется для удобства написания кода. Это эквивалентно вызову метода <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>метод со вторым параметром равным `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Этот метод вызывает метод <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>метод, чтобы определить URL-адрес.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET выполняет перенаправление, возвращая код состояния HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Имя маршрута."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Значения параметров маршрута."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ни один маршрут не соответствует указанным параметрам маршрута."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Предпринята попытка перенаправления после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  id: RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет из кэша все элементы, связанные с поставщиком кэша вывода по умолчанию. Этот метод является статическим."
  remarks: "Этот метод используется для удаления элементов кэша вывода, связанные с поставщиком кэша вывода по умолчанию. Вызовите <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>метод для удаления элементов кэша вывода, которые связаны с пользовательскими поставщиками кэша вывода, которые указаны в файле конфигурации веб-сайта.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path);
    parameters:
    - id: path
      type: System.String
      description: "Виртуальный абсолютный путь к элементам, удаляемым из кэша."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>не является абсолютным виртуальным путем."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  id: RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "С помощью указанного поставщика кэша вывода удаляет все элементы из кэша вывода, связанные с указанным путем."
  remarks: "Этот метод используется для удаления элементов кэша вывода, связанные с пользовательскими поставщиками кэша вывода, которые указаны в файле конфигурации веб-сайта. Чтобы удалить элементы кэша вывода, связанные с поставщиком кэша вывода по умолчанию, вызовите <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>перегрузку.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path, string providerName);
    parameters:
    - id: path
      type: System.String
      description: "Виртуальный абсолютный путь элементам, удаляемым из кэша."
    - id: providerName
      type: System.String
      description: "Поставщик, используемый для удаления артефактов из кэша вывода, связанные с указанным путем."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>имеет значение null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>не является допустимым путем."
  platform:
  - net462
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  id: SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Обновляет существующий файл cookie из коллекции."
  remarks: ''
  example:
  - "The following example updates the value of an existing cookie.  \n  \n [!code-cs[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_23_1.cs)]\n [!code-vb[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_23_1.vb)]"
  syntax:
    content: public void SetCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "Файл cookie в коллекции для обновления."
  overload: System.Web.HttpResponse.SetCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Попытка установить файл cookie после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.Status
  id: Status
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Наборы <xref uid=&quot;langword_csharp_Status&quot; name=&quot;Status&quot; href=&quot;&quot;> </xref> строку, которая возвращается клиенту."
  remarks: "Состояние рекомендуется к использованию для <xref:System.Web.HttpResponse.StatusDescription%2A>и предоставляется только для совместимости с предыдущими версиями ASP.</xref:System.Web.HttpResponse.StatusDescription%2A> С помощью ASP.NET, используйте <xref:System.Web.HttpResponse.StatusDescription%2A>вместо.</xref:System.Web.HttpResponse.StatusDescription%2A>"
  syntax:
    content: public string Status { get; set; }
    return:
      type: System.String
      description: "При задании кода состояния Строка, описывающая состояние вывода НТТР, возвращаемый клиенту. Значение по умолчанию — 200 (ОК)."
  overload: System.Web.HttpResponse.Status*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Недопустимый код статуса присвоено состояние."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusCode
  id: StatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает код состояния HTTP возвращаемого клиенту вывода."
  remarks: ''
  example:
  - "The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_11_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_11_1.aspx)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Целое число, представляющее состояние НТТР вывода, возвращаемого клиенту. Значение по умолчанию — 200 (ОК). Список допустимых кодах состояния см. в разделе [коды состояния Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusCode*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "StatusCode задается после отправки заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusDescription
  id: StatusDescription
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает строку состояния НТТР вывода, возвращаемого клиенту."
  remarks: ''
  example:
  - "The following example checks the status string of the output stream. If the status is not equal to \"OK\", additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/csharp/p-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Строка, описывающая состояние НТТР вывода, возвращаемого клиенту. Значение по умолчанию — «ОК». Список допустимых кодах состояния см. в разделе [коды состояния Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusDescription*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>StatusDescription</code>задается после отправки заголовков HTTP."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Выбранное значение имеет длину более 512."
  platform:
  - net462
- uid: System.Web.HttpResponse.SubStatusCode
  id: SubStatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, определяющее код состояния ответа."
  remarks: "Свойство SubStatusCode поддерживается только режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework версии 3.0. При установке свойства SubStatusCode, состояние входа [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] Если настроена трассировка неудачных запросов. Независимо от настройки трассировки, код никогда не отправляется в составе окончательного ответа на запрос. Дополнительные сведения см. в разделе [Устранение неполадок сбой запросов с помощью сбойных запросов в IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)."
  example:
  - "The following example sets the SubStatusCode property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_9_1.cs)]\n [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public int SubStatusCode { get; set; }
    return:
      type: System.Int32
      description: "Целочисленное значение, представляющее [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] код подсостояния."
  overload: System.Web.HttpResponse.SubStatusCode*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Этой операции требуется режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework версии 3.0."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Код состояния задается после отправки всех заголовков HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  id: SupportsAsyncFlush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, указывающее, поддерживает ли подключение асинхронные операции очистки."
  remarks: "Это свойство возвращает значение <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>Свойства.</xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>"
  syntax:
    content: public bool SupportsAsyncFlush { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если подключение поддерживает асинхронные операции очистки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SupportsAsyncFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressContent
  id: SuppressContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, следует ли отправить содержимое НТТР клиенту."
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public bool SuppressContent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для подавления вывода; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  id: SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Поддерживается в .NET Framework 4.5.2 и более поздних версиях]       Возвращает или задает значение, указывающее, следует ли подавлять по умолчанию `Cache Control: private` заголовок для текущего HTTP-ответа."
  remarks: "По умолчанию, ASP.NET отправляет `Cache-Control: private` заголовок ответа, если не был указан кэш явных политики для этого ответа. Это свойство позволяет подавление этот заголовок ответа по умолчанию для каждого запроса. Заголовок можно по-прежнему подавить для всего приложения, задав <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>в [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) или [outputCache элемент для кэширования (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).</xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>       Соблюдайте осторожность при подавлении значение по умолчанию `Cache-Control: private` заголовок, как прокси-серверы и другие посредники могут считать ответы без этого заголовка может быть кэширован по умолчанию. Это обработки может привести к ненамеренное кэширование конфиденциальные сведения. В разделе [RFC 2616, 13.4 секунду](http://tools.ietf.org/html/rfc2616) для получения дополнительной информации."
  syntax:
    content: public bool SuppressDefaultCacheControlHeader { get; set; }
    return:
      type: System.Boolean
      description: '<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для подавления по умолчанию `Cache Control: private` заголовок для текущего HTTP-ответа; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  id: SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, следует ли отключить перенаправление аутентификации на основе форм на страницу входа."
  remarks: "По умолчанию проверка подлинности форм преобразует коды состояния HTTP 401 на 302 для перенаправления на страницу входа. Это нецелесообразно, для некоторых типов ошибок, например при успешном завершении проверки подлинности, но авторизации завершается ошибкой, или в случае текущий запрос запрос AJAX или веб-службы. Это свойство позволяет отключить поведение перенаправления и отправки исходного кода состояния клиенту."
  syntax:
    content: public bool SuppressFormsAuthenticationRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если следует отключить перенаправление аутентификации на основе форм; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  id: TransmitFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает указанный файл непосредственно в поток вывода ответа HTTP, не используя буфер в памяти."
  syntax:
    content: public void TransmitFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла, который записывается в выходные данные НТТР."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> filename </code> Параметр<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  id: TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает указанную часть файла непосредственно в поток вывода ответа HTTP, не используя буфер в памяти."
  remarks: "При указании 0 как `offset` параметр и -1, поскольку `length` отправляется параметр, весь файл."
  syntax:
    content: public void TransmitFile (string filename, long offset, long length);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла, который записывается в выходные данные НТТР."
    - id: offset
      type: System.Int64
      description: "Позиция в файле, с которой начинается запись в выходные данные НТТР."
    - id: length
      type: System.Int64
      description: "Количество передаваемых байтов."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>offset</code> parameter is less than zero.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1.  \n  \n \\- or -  \n  \n The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The out-of-process worker request is not supported.  \n  \n \\- or -  \n  \n The response is not using an <xref href=\"System.Web.HttpWriter\"></xref> object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>offset</code> parameter is less than zero or greater than the file size.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size."
  platform:
  - net462
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  id: TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, является ли [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] пользовательские сообщения об ошибках отключены."
  remarks: "Свойство TrySkipIisCustomErrors используется только в том случае, если приложение размещено в службах IIS 7.0. При запуске в классическом режиме в IIS 7.0 по умолчанию значение свойства TrySkipIisCustomErrors `true`. При работе в режиме интеграции с TrySkipIisCustomErrors свойства по умолчанию равно `false`."
  syntax:
    content: public bool TrySkipIisCustomErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы запретить пользовательские ошибки IIS; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.TrySkipIisCustomErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает символ в поток вывода ответа HTTP."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_7_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public void Write (char ch);
    parameters:
    - id: ch
      type: System.Char
      description: "Символ, записываемый в HTTP-поток вывода."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает <xref:System.Object>в поток ответа HTTP.</xref:System.Object>"
  syntax:
    content: public void Write (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Для записи в поток вывода НТТР.</xref:System.Object>"
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.String)
  id: Write(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает строку в поток вывода ответа HTTP."
  remarks: "Динамически создаваемые страницы HTML могут создавать угрозу безопасности, если входные данные, полученные от веб-клиентов, не проверяется при получении от клиента или при передаче обратно клиенту. Вредоносный скрипт, внедренный в входных данных, передаваемых веб-узел, а затем обратно к клиенту может появиться исходить из надежного источника. Риск безопасности называется атакой по сценариев. Всегда проверяйте данные, полученные от клиента, при передаче с веб-узла в клиентских браузерах.       Кроме того, каждый раз, когда записи как HTML любых данных, полученных в качестве входных данных, необходимо кодировать их с помощью техники, например <xref:System.Web.HttpServerUtility.HtmlEncode%2A>или <xref:System.Web.HttpServerUtility.UrlEncode%2A>Чтобы предотвратить выполнение вредоносных скриптов.</xref:System.Web.HttpServerUtility.UrlEncode%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A> Этот метод полезен для данных, который не был проверен, если он был получен.       При кодировании или фильтрации данных, необходимо указать набор знаков для веб-страниц, чтобы фильтр можно определить и удалить любую последовательность байтов, не принадлежащих значение (например, последовательности не алфавитно-цифровым) и может содержать вредоносный скрипт.       Дополнительные сведения о межсайтовых атак с использованием сценариев см. в статье Q252985, «Как избежать межсайтовых сценариев проблем с безопасностью» на [базы знаний Майкрософт](http://go.microsoft.com/fwlink/?LinkID=37115) веб-сайта."
  example:
  - "The following example echoes the client's name back to the client's browser. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.  \n  \n [!code-vb[System.Web.HttpResponse.Write#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_1_1.vb)]\n [!code-cs[System.Web.HttpResponse.Write#1](~/add/codesnippet/csharp/m-system.web.httprespons_1_1.cs)]"
  syntax:
    content: public void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "Строка для записи HTTP-поток вывода."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает массив символов в поток вывода ответа НТТР."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_20_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_20_1.aspx)]"
  syntax:
    content: public void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Записываемый массив символов."
    - id: index
      type: System.Int32
      description: "Позиция в массиве знаков, с которой начинается запись."
    - id: count
      type: System.Int32
      description: "Число записываемых символов начиная с `index`."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String)
  id: WriteFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает содержимое указанного файла непосредственно в поток вывода ответа HTTP в виде блока файла."
  remarks: 'При использовании этого метода с большими файлами вызова метода может вызывать исключение. Размер файла, который может использоваться с помощью этого метода зависит от конфигурации оборудования веб-сервера. Дополнительные сведения см. в статье 812406, «PRB: Response.WriteFile невозможно загрузить больших файлов» на [базы знаний Майкрософт](http://go.microsoft.com/fwlink/?linkid=149903) веб-сайта.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_18_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_18_1.cs)]"
  syntax:
    content: public void WriteFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла, который записывается в выходные данные НТТР."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  id: WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает содержимое указанного файла непосредственно в поток вывода ответа HTTP в виде блока памяти."
  remarks: 'При использовании этого метода с большими файлами вызова метода может вызывать исключение. Размер файла, который может использоваться с помощью этого метода зависит от конфигурации оборудования веб-сервера. Дополнительные сведения см. в статье 812406, «PRB: Response.WriteFile невозможно загрузить больших файлов» на [базы знаний Майкрософт](http://go.microsoft.com/fwlink/?linkid=149903) веб-сайта.'
  example:
  - "The following example writes a file to memory.  \n  \n [!code-cs[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_3_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_3_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, bool readIntoMemory);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла, записываемого в блок памяти."
    - id: readIntoMemory
      type: System.Boolean
      description: "Указывает, является ли файл будет записан в блок памяти."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  id: WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает указанный файл непосредственно в поток вывода ответа НТТР."
  remarks: 'При использовании этого метода с большими файлами вызова метода может вызывать исключение. Размер файла, который может использоваться с помощью этого метода зависит от конфигурации оборудования веб-сервера. Дополнительные сведения см. в статье 812406, «PRB: Response.WriteFile невозможно загрузить больших файлов» на [базы знаний Майкрософт](http://go.microsoft.com/fwlink/?linkid=149903) веб-сайта.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_12_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_12_1.cs)]"
  syntax:
    content: public void WriteFile (IntPtr fileHandle, long offset, long size);
    parameters:
    - id: fileHandle
      type: System.IntPtr
      description: "Дескриптор файла для записи в поток вывода НТТР."
    - id: offset
      type: System.Int64
      description: "Позиция байта в файле, с которой начинается запись."
    - id: size
      type: System.Int64
      description: "Число байтов для записи в поток вывода."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileHandler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  id: WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Записывает указанный файл непосредственно в поток вывода ответа НТТР."
  remarks: 'При использовании этого метода с большими файлами вызова метода может вызывать исключение. Размер файла, который может использоваться с помощью этого метода зависит от конфигурации оборудования веб-сервера. Дополнительные сведения см. в статье 812406, «PRB: Response.WriteFile невозможно загрузить больших файлов» на [базы знаний Майкрософт](http://go.microsoft.com/fwlink/?linkid=149903) веб-сайта.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.  \n  \n [!code-cs[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_5_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_5_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, long offset, long size);
    parameters:
    - id: filename
      type: System.String
      description: "Имя файла для записи HTTP-поток вывода."
    - id: offset
      type: System.Int64
      description: "Позиция байта в файле, с которой начинается запись."
    - id: size
      type: System.Int64
      description: "Число байтов для записи в поток вывода."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  id: WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Позволяет выполнять вставку блоков замены ответа в ответ, который позволяет динамического формирования указанных областей ответа для выходных кэшируемых ответов."
  remarks: "Метод WriteSubstitution для подстановки после кэширования на страницах с кэшируемым выводом. Путем передачи <xref:System.Web.HttpContext>в метод обратного вызова с предписанных <xref:System.Web.HttpResponseSubstitutionCallback>подпись, можно заменить кэширования вывода содержимого в любом месте, заданного в кэше страницы.</xref:System.Web.HttpResponseSubstitutionCallback> </xref:System.Web.HttpContext> Чтобы инициировать замены, вызовите метод WriteSubstitution, передав его в метод обратного вызова, который должен быть потокобезопасным и может принимать одно из следующих:-статический метод для контейнера или элементов управления.      — Статический или метод экземпляра для других произвольных объектов.       При первом запросе к странице, вызывает WriteSubstitution <xref:System.Web.HttpResponseSubstitutionCallback>делегат, выходные данные.</xref:System.Web.HttpResponseSubstitutionCallback> Затем он добавляет буфер замены в ответ, в котором хранится делегат для вызова при последующих запросах. Наконец значительно снижает клиентские возможности кэширования с общедоступной только для сервера, для обеспечения будущие запросы для повторного вызова страницы делегат не кэширование на стороне клиента.      Настроек [!NOTE] настроек подстановки после кэширования не поддерживается для кэшированного пользовательского элемента управления, где кэширование вывода применяется на уровне пользовательского элемента управления. Это также называется фрагментарное кэширование. Дополнительные сведения см. в разделе [кэширование частей страницы ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);
    parameters:
    - id: callback
      type: System.Web.HttpResponseSubstitutionCallback
      description: "Метод, пользовательский элемент управления или объект для замены."
  overload: System.Web.HttpResponse.WriteSubstitution*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Целью <code> callback </code> параметр имеет тип <xref href=&quot;System.Web.UI.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.ThreadAbortException
  parent: System.Threading
  isExternal: false
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
- uid: System.Web.Caching.CacheDependency[]
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency[]
  spec.csharp:
  - uid: System.Web.Caching.CacheDependency
    name: CacheDependency
    nameWithType: CacheDependency
    fullName: CacheDependency[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.Buffer
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpResponse.BufferOutput
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
- uid: System.Web.HttpCachePolicy
  parent: System.Web
  isExternal: false
  name: HttpCachePolicy
  nameWithType: HttpCachePolicy
  fullName: System.Web.HttpCachePolicy
- uid: System.Web.HttpResponse.CacheControl
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
- uid: System.Web.HttpResponse.ClearContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
- uid: System.Web.HttpResponse.ClearHeaders
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpResponse.Close
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
- uid: System.Web.HttpResponse.ContentEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpResponse.ContentType
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpResponse.DisableKernelCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
- uid: System.Web.HttpResponse.DisableUserCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
- uid: System.Web.HttpResponse.End
  parent: System.Web.HttpResponse
  isExternal: false
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
- uid: System.Web.HttpResponse.Expires
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpResponse.ExpiresAbsolute
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpResponse.Filter
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpResponse.Flush
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
- uid: System.Web.HttpResponse.FlushAsync
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.HttpResponse.HeaderEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpResponse.HeadersWritten
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
- uid: System.Web.HttpResponse.PushPromise(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
- uid: System.Web.HttpResponse.Redirect(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
- uid: System.Web.HttpResponse.RedirectLocation
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
- uid: System.Web.HttpResponse.Status
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write(System.Char)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.HttpResponse.Write(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
- uid: System.Web.HttpResponse.Write(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.WriteFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
- uid: System.Web.HttpResponseSubstitutionCallback
  parent: System.Web
  isExternal: false
  name: HttpResponseSubstitutionCallback
  nameWithType: HttpResponseSubstitutionCallback
  fullName: System.Web.HttpResponseSubstitutionCallback
- uid: System.Web.HttpResponse.#ctor*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
- uid: System.Web.HttpResponse.AddCacheDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency
  nameWithType: HttpResponse.AddCacheDependency
- uid: System.Web.HttpResponse.AddCacheItemDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies
  nameWithType: HttpResponse.AddCacheItemDependencies
- uid: System.Web.HttpResponse.AddCacheItemDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency
  nameWithType: HttpResponse.AddCacheItemDependency
- uid: System.Web.HttpResponse.AddFileDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies
  nameWithType: HttpResponse.AddFileDependencies
- uid: System.Web.HttpResponse.AddFileDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency
  nameWithType: HttpResponse.AddFileDependency
- uid: System.Web.HttpResponse.AddHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpResponse.AddHeader
- uid: System.Web.HttpResponse.AddOnSendingHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders
  nameWithType: HttpResponse.AddOnSendingHeaders
- uid: System.Web.HttpResponse.AppendCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpResponse.AppendCookie
- uid: System.Web.HttpResponse.AppendHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpResponse.AppendHeader
- uid: System.Web.HttpResponse.AppendToLog*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog
  nameWithType: HttpResponse.AppendToLog
- uid: System.Web.HttpResponse.ApplyAppPathModifier*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier
  nameWithType: HttpResponse.ApplyAppPathModifier
- uid: System.Web.HttpResponse.BeginFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush
  nameWithType: HttpResponse.BeginFlush
- uid: System.Web.HttpResponse.BinaryWrite*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite
  nameWithType: HttpResponse.BinaryWrite
- uid: System.Web.HttpResponse.Buffer*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
- uid: System.Web.HttpResponse.BufferOutput*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
- uid: System.Web.HttpResponse.CacheControl*
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear
  nameWithType: HttpResponse.Clear
- uid: System.Web.HttpResponse.ClearContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent
  nameWithType: HttpResponse.ClearContent
- uid: System.Web.HttpResponse.ClearHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders
  nameWithType: HttpResponse.ClearHeaders
- uid: System.Web.HttpResponse.ClientDisconnectedToken*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
- uid: System.Web.HttpResponse.Close*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close
  nameWithType: HttpResponse.Close
- uid: System.Web.HttpResponse.ContentEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
- uid: System.Web.HttpResponse.ContentType*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
- uid: System.Web.HttpResponse.DisableKernelCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache
  nameWithType: HttpResponse.DisableKernelCache
- uid: System.Web.HttpResponse.DisableUserCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache
  nameWithType: HttpResponse.DisableUserCache
- uid: System.Web.HttpResponse.End*
  parent: System.Web.HttpResponse
  isExternal: false
  name: End
  nameWithType: HttpResponse.End
- uid: System.Web.HttpResponse.EndFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush
  nameWithType: HttpResponse.EndFlush
- uid: System.Web.HttpResponse.Expires*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
- uid: System.Web.HttpResponse.ExpiresAbsolute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
- uid: System.Web.HttpResponse.Filter*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
- uid: System.Web.HttpResponse.Flush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush
  nameWithType: HttpResponse.Flush
- uid: System.Web.HttpResponse.FlushAsync*
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync
  nameWithType: HttpResponse.FlushAsync
- uid: System.Web.HttpResponse.HeaderEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
- uid: System.Web.HttpResponse.HeadersWritten*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream*
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics
  nameWithType: HttpResponse.Pics
- uid: System.Web.HttpResponse.PushPromise*
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise
  nameWithType: HttpResponse.PushPromise
- uid: System.Web.HttpResponse.Redirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpResponse.Redirect
- uid: System.Web.HttpResponse.RedirectLocation*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent
  nameWithType: HttpResponse.RedirectPermanent
- uid: System.Web.HttpResponse.RedirectToRoute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute
  nameWithType: HttpResponse.RedirectToRoute
- uid: System.Web.HttpResponse.RedirectToRoutePermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent
  nameWithType: HttpResponse.RedirectToRoutePermanent
- uid: System.Web.HttpResponse.RemoveOutputCacheItem*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem
  nameWithType: HttpResponse.RemoveOutputCacheItem
- uid: System.Web.HttpResponse.SetCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpResponse.SetCookie
- uid: System.Web.HttpResponse.Status*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile
  nameWithType: HttpResponse.TransmitFile
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write
  nameWithType: HttpResponse.Write
- uid: System.Web.HttpResponse.WriteFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile
  nameWithType: HttpResponse.WriteFile
- uid: System.Web.HttpResponse.WriteSubstitution*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution
  nameWithType: HttpResponse.WriteSubstitution
