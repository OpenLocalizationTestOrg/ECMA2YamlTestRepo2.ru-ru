### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbGroupByExpression
  id: DbGroupByExpression
  children:
  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  - System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates
  - System.Data.Common.CommandTrees.DbGroupByExpression.Input
  - System.Data.Common.CommandTrees.DbGroupByExpression.Keys
  langs:
  - csharp
  name: DbGroupByExpression
  nameWithType: DbGroupByExpression
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression
  type: Class
  summary: "Представляет группу операцией. Операция — это группа элементов в наборе входных данных, в зависимости от заданных ключевых выражений, а затем применяет указанные статистические функции. Этот класс не наследуется."
  syntax:
    content: 'public sealed class DbGroupByExpression : System.Data.Common.CommandTrees.DbExpression'
  inheritance:
  - System.Object
  - System.Data.Common.CommandTrees.DbExpression
  implements: []
  inheritedMembers:
  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)
  - System.Data.Common.CommandTrees.DbExpression.GetHashCode
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})
  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)
  - System.Data.Common.CommandTrees.DbExpression.ResultType
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor)
  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Реализует шаблон «Посетитель» для выражений, не возвращающих результирующее значение."
  syntax:
    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor
      description: "Экземпляр <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionVisitor&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Accept*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>visitor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  syntax:
    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1
      description: "Для добавления."
    return:
      type: TResultType
      description: "Для добавления."
  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Accept<TResultType>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates
  id: Aggregates
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  langs:
  - csharp
  name: Aggregates
  nameWithType: DbGroupByExpression.Aggregates
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Возвращает <xref href=&quot;System.Data.Common.CommandTrees.DbAggregate&quot;> </xref> список, который предоставляет статистические функции для применения."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate> Aggregates { get; }
    return:
      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}
      description: "Объект <xref href=&quot;System.Data.Common.CommandTrees.DbAggregate&quot;> </xref> список, который предоставляет статистические функции для применения."
  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input
  id: Input
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  langs:
  - csharp
  name: Input
  nameWithType: DbGroupByExpression.Input
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Input
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Возвращает <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> , задающее входной набор и предоставляющий доступ к переменным элементов набора и группы."
  syntax:
    content: public System.Data.Common.CommandTrees.DbGroupExpressionBinding Input { get; }
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "<xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> , Задающее входной набор и предоставляющий доступ к переменным элементов набора и группы."
  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Input*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys
  id: Keys
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  langs:
  - csharp
  name: Keys
  nameWithType: DbGroupByExpression.Keys
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Keys
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Возвращает <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> список, содержащий ключи группирования."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> Keys { get; }
    return:
      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}
      description: "Объект <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> список, содержащий ключи группирования."
  overload: System.Data.Common.CommandTrees.DbGroupByExpression.Keys*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: System.Data.Common.CommandTrees.DbExpression
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Accept(DbExpressionVisitor)
  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor)
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor
  nameWithType: DbExpressionVisitor
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)
- uid: TResultType
  isExternal: true
  name: TResultType
  nameWithType: TResultType
  fullName: TResultType
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor<TResultType>
  nameWithType: DbExpressionVisitor<TResultType>
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Aggregates
  nameWithType: DbGroupByExpression.Aggregates
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates
- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<DbAggregate>
  nameWithType: IList<DbAggregate>
  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Input
  nameWithType: DbGroupByExpression.Input
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Input
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Keys
  nameWithType: DbGroupByExpression.Keys
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Keys
- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<DbExpression>
  nameWithType: IList<DbExpression>
  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept*
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Accept
  nameWithType: DbGroupByExpression.Accept
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept<TResultType>*
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Accept<TResultType>
  nameWithType: DbGroupByExpression.Accept<TResultType>
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates*
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Aggregates
  nameWithType: DbGroupByExpression.Aggregates
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input*
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Input
  nameWithType: DbGroupByExpression.Input
- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys*
  parent: System.Data.Common.CommandTrees.DbGroupByExpression
  isExternal: false
  name: Keys
  nameWithType: DbGroupByExpression.Keys
