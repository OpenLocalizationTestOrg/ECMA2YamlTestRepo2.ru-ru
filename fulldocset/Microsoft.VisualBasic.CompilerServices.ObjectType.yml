### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType
  id: ObjectType
  children:
  - Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  - Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  langs:
  - csharp
  name: ObjectType
  nameWithType: ObjectType
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType
  type: Class
  summary: "Этот класс является устаревшим, начиная с Visual Basic 2005."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public sealed class ObjectType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ObjectType()
  nameWithType: ObjectType.ObjectType()
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjectType()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.CompilerServices.ObjectType&quot;> </xref> класса."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public ObjectType ();
    parameters: []
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  id: AddObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: AddObj(Object,Object)
  nameWithType: ObjectType.AddObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию сложения (+)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object AddObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "The sum of <code>o1</code> and <code>o2</code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  id: BitAndObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitAndObj(Object,Object)
  nameWithType: ObjectType.BitAndObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет побитовую операцию <xref uid=&quot;langword_csharp_And&quot; name=&quot;And&quot; href=&quot;&quot;> </xref> операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object BitAndObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    - id: obj2
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    return:
      type: System.Object
      description: "1, если оба <code> obj1 </code> и <code> obj2 </code> равны 1; в противном случае — 0."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  id: BitOrObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitOrObj(Object,Object)
  nameWithType: ObjectType.BitOrObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет побитовую операцию <xref uid=&quot;langword_csharp_Or&quot; name=&quot;Or&quot; href=&quot;&quot;> </xref> операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object BitOrObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    - id: obj2
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    return:
      type: System.Object
      description: "0, если оба <code> obj1 </code> и <code> obj2 </code> равен 0; в противном случае — 1."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  id: BitXorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitXorObj(Object,Object)
  nameWithType: ObjectType.BitXorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет <xref uid=&quot;langword_csharp_Xor&quot; name=&quot;Xor&quot; href=&quot;&quot;> </xref> операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object BitXorObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    - id: obj2
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    return:
      type: System.Object
      description: "Числовое значение, представляющее побитовое исключение (исключающая Побитовая дизъюнкция) из двух числовых битовых шаблонов. Дополнительные сведения см. в разделе [оператор Xor](~/add/includes/ajax-current-ext-md.md)."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  id: DivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: DivObj(Object,Object)
  nameWithType: ObjectType.DivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию деления (/)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object DivObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "Полное частное от деления <code> o1 </code> деленная <code> o2 </code>, включая остаток."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  id: GetObjectValuePrimitive(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: GetObjectValuePrimitive(Object)
  nameWithType: ObjectType.GetObjectValuePrimitive(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Возвращает упакованное примитивное значение. Этот метод используется для предотвращения многократного копирования структур."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object GetObjectValuePrimitive (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    return:
      type: System.Object
      description: "Примитивное значение <code> o </code> тип object."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  id: IDivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: IDivObj(Object,Object)
  nameWithType: ObjectType.IDivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет целочисленное деление (\\\\) операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object IDivObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "Целочисленное частное <code> o1 </code> деленная <code> o2 </code>, что остальная часть отбрасывается и возвращается только целая часть числа."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  id: LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: LikeObj(Object,Object,CompareMethod)
  nameWithType: ObjectType.LikeObj(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(Object,Object,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;> </xref> сравнения."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: vLeft
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    - id: vRight
      type: System.Object
      description: "Обязательный параметр. Любое строковое выражение, согласующееся с правилами соответствия шаблону описано в оператор Like."
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: "Обязательный параметр. Объект <xref href=&quot;Microsoft.VisualBasic.CompareMethod&quot;> </xref> значение, которое указывает, что операция использовать текстовое или двоичное сравнение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если строковое представление значения в <code> vLeft </code> соответствует шаблону, содержащихся в <code> vRight </code>; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if both <code>vLeft</code> and <code>vRight</code> are <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  id: ModObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ModObj(Object,Object)
  nameWithType: ObjectType.ModObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет модуль (<xref uid=&quot;langword_csharp_Mod&quot; name=&quot;Mod&quot; href=&quot;&quot;></xref>) операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object ModObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "Остаток после <code> o1 </code> делится на <code> o2 </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  id: MulObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: MulObj(Object,Object)
  nameWithType: ObjectType.MulObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию умножения (*)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object MulObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "The product of <code>o1</code> and <code>o2</code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  id: NegObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: NegObj(Object)
  nameWithType: ObjectType.NegObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операции унарного минуса (-)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object NegObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "Отрицательное значение <code> obj </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  id: NotObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: NotObj(Object)
  nameWithType: ObjectType.NotObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет <xref uid=&quot;langword_csharp_Not&quot; name=&quot;Not&quot; href=&quot;&quot;> </xref> операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object NotObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    return:
      type: System.Object
      description: "For <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> operations, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref> if <code>obj</code> is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. Для битовых операций: 1, если <code> obj </code> равно 0; в противном случае — 0."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  id: ObjTst(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ObjTst(Object,Object,Boolean)
  nameWithType: ObjectType.ObjTst(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет двоичное или текстовое сравнение строк для двух заданных объектов."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static int ObjTst (object o1, object o2, bool TextCompare);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    - id: TextCompare
      type: System.Boolean
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>для выполнения сравнения строк без учета регистра; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Значение       </th><th> Условие       </th></tr></thead><tbody><tr><td> -1       </td><td>           <code>o1</code>— меньше, чем <code>o2</code>.       </td></tr><tr><td> 0       </td><td>           <code>o1</code>равен <code>o2</code>.       </td></tr><tr><td> 1       </td><td>           <code>o1</code>больше, чем <code>o2</code>.       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  id: PlusObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: PlusObj(Object)
  nameWithType: ObjectType.PlusObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию унарный плюс (+)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object PlusObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "The value of <code>obj</code>. (Знак <code> obj </code> не изменяется.)"
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  id: PowObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: PowObj(Object,Object)
  nameWithType: ObjectType.PowObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию возведения в степень (^)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object PowObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: obj2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "Результат <code> obj1 </code> степени <code> obj2 </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  id: ShiftLeftObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ShiftLeftObj(Object,Int32)
  nameWithType: ObjectType.ShiftLeftObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(Object,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет арифметический сдвиг влево (&lt;&lt;) операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object ShiftLeftObj (object o1, int amount);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Целое числовое выражение. Сдвиг битового шаблона. The data type must be an integral type (<xref uid=&quot;langword_csharp_SByte&quot; name=&quot;SByte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UShort&quot; name=&quot;UShort&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UInteger&quot; name=&quot;UInteger&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;></xref>)."
    - id: amount
      type: System.Int32
      description: "Обязательный параметр. Числовое выражение. Число битов, на которое производится Сдвиг битового шаблона. Тип данных должен быть <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> или расширить до <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Целое числовое значение. Результат сдвига разряда. Тип данных является так же, как <code> o1 </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  id: ShiftRightObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ShiftRightObj(Object,Int32)
  nameWithType: ObjectType.ShiftRightObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(Object,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет арифметический сдвиг вправо (&gt;&gt;) операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object ShiftRightObj (object o1, int amount);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Целое числовое выражение. Сдвиг битового шаблона. The data type must be an integral type (<xref uid=&quot;langword_csharp_SByte&quot; name=&quot;SByte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UShort&quot; name=&quot;UShort&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UInteger&quot; name=&quot;UInteger&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;></xref>)."
    - id: amount
      type: System.Int32
      description: "Обязательный параметр. Числовое выражение. Число битов, на которое производится Сдвиг битового шаблона. Тип данных должен быть <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> или расширить до <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Целое числовое значение. Результат сдвига разряда. Тип данных является так же, как <code> o1 </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  id: StrCatObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: StrCatObj(Object,Object)
  nameWithType: ObjectType.StrCatObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет конкатенацию строк (&amp;) операции."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object StrCatObj (object vLeft, object vRight);
    parameters:
    - id: vLeft
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    - id: vRight
      type: System.Object
      description: "Обязательный параметр. Любое выражение."
    return:
      type: System.Object
      description: "Строка, представляющая результат объединения <code> vLeft </code> и <code> vRight </code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  id: SubObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: SubObj(Object,Object)
  nameWithType: ObjectType.SubObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет операцию вычитания (-)."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object SubObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    - id: o2
      type: System.Object
      description: "Обязательный параметр. Произвольное числовое выражение."
    return:
      type: System.Object
      description: "The difference between <code>o1</code> and <code>o2</code>."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  id: XorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: XorObj(Object,Object)
  nameWithType: ObjectType.XorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Выполняет <xref uid=&quot;langword_csharp_Xor&quot; name=&quot;Xor&quot; href=&quot;&quot;> </xref> сравнения."
  remarks: "Этот класс поддерживает компилятор Visual Basic и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static object XorObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    - id: obj2
      type: System.Object
      description: "Обязательный параметр. Любой <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое выражение."
    return:
      type: System.Object
      description: "Объект <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> или числовое значение. Для <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> сравнение, возвращаемое значение имеет логического исключения (исключающая логическая дизъюнкция) из двух <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> значения. Для битовых операций (числовой) возвращаемое значение является числом, представляющим побитовое исключение (исключающая Побитовая дизъюнкция) из двух числовых битовых шаблонов. Дополнительные сведения см. в разделе [оператор Xor](~/add/includes/ajax-current-ext-md.md)."
  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjectType()
  nameWithType: ObjectType.ObjectType()
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjectType()
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: AddObj(Object,Object)
  nameWithType: ObjectType.AddObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitAndObj(Object,Object)
  nameWithType: ObjectType.BitAndObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitOrObj(Object,Object)
  nameWithType: ObjectType.BitOrObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitXorObj(Object,Object)
  nameWithType: ObjectType.BitXorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: DivObj(Object,Object)
  nameWithType: ObjectType.DivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: GetObjectValuePrimitive(Object)
  nameWithType: ObjectType.GetObjectValuePrimitive(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: IDivObj(Object,Object)
  nameWithType: ObjectType.IDivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: LikeObj(Object,Object,CompareMethod)
  nameWithType: ObjectType.LikeObj(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(Object,Object,CompareMethod)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ModObj(Object,Object)
  nameWithType: ObjectType.ModObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: MulObj(Object,Object)
  nameWithType: ObjectType.MulObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NegObj(Object)
  nameWithType: ObjectType.NegObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NotObj(Object)
  nameWithType: ObjectType.NotObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjTst(Object,Object,Boolean)
  nameWithType: ObjectType.ObjTst(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(Object,Object,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PlusObj(Object)
  nameWithType: ObjectType.PlusObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PowObj(Object,Object)
  nameWithType: ObjectType.PowObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftLeftObj(Object,Int32)
  nameWithType: ObjectType.ShiftLeftObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(Object,Int32)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftRightObj(Object,Int32)
  nameWithType: ObjectType.ShiftRightObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(Object,Int32)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: StrCatObj(Object,Object)
  nameWithType: ObjectType.StrCatObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: SubObj(Object,Object)
  nameWithType: ObjectType.SubObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: XorObj(Object,Object)
  nameWithType: ObjectType.XorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjectType
  nameWithType: ObjectType.ObjectType
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: AddObj
  nameWithType: ObjectType.AddObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitAndObj
  nameWithType: ObjectType.BitAndObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitOrObj
  nameWithType: ObjectType.BitOrObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitXorObj
  nameWithType: ObjectType.BitXorObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: DivObj
  nameWithType: ObjectType.DivObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: GetObjectValuePrimitive
  nameWithType: ObjectType.GetObjectValuePrimitive
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: IDivObj
  nameWithType: ObjectType.IDivObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: LikeObj
  nameWithType: ObjectType.LikeObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ModObj
  nameWithType: ObjectType.ModObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: MulObj
  nameWithType: ObjectType.MulObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NegObj
  nameWithType: ObjectType.NegObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NotObj
  nameWithType: ObjectType.NotObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjTst
  nameWithType: ObjectType.ObjTst
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PlusObj
  nameWithType: ObjectType.PlusObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PowObj
  nameWithType: ObjectType.PowObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftLeftObj
  nameWithType: ObjectType.ShiftLeftObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftRightObj
  nameWithType: ObjectType.ShiftRightObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: StrCatObj
  nameWithType: ObjectType.StrCatObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: SubObj
  nameWithType: ObjectType.SubObj
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj*
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: XorObj
  nameWithType: ObjectType.XorObj
