### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RC2
  id: RC2
  children:
  - System.Security.Cryptography.RC2.#ctor
  - System.Security.Cryptography.RC2.Create
  - System.Security.Cryptography.RC2.Create(System.String)
  - System.Security.Cryptography.RC2.EffectiveKeySize
  - System.Security.Cryptography.RC2.EffectiveKeySizeValue
  - System.Security.Cryptography.RC2.KeySize
  langs:
  - csharp
  name: RC2
  nameWithType: RC2
  fullName: System.Security.Cryptography.RC2
  type: Class
  summary: "Представляет базовый класс, из которого создаются все реализации RC2 алгоритма."
  remarks: >-
    > [!NOTE]

    >  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the RC2 class. Use RC2 only for compatibility with legacy applications and data.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RC2 : System.Security.Cryptography.SymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: RC2()
  nameWithType: RC2.RC2()
  fullName: System.Security.Cryptography.RC2.RC2()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref>."
  remarks: "Невозможно создать экземпляр абстрактного класса. Код приложения создаст новый экземпляр производного класса.       Этот алгоритм поддерживает ключи длиной от 40 до 1024 бит с приращениями по 8 бит, но <xref:System.Security.Cryptography.RC2CryptoServiceProvider>реализация поддерживает только ключи длиной от 40 до 128 бит с приращениями по 8 бит.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>       Этот метод инициализирует защищенные поля <xref:System.Security.Cryptography.SymmetricAlgorithm>значения по умолчанию, перечисленные в следующей таблице.</xref:System.Security.Cryptography.SymmetricAlgorithm>      | Поле | Значение по умолчанию |   |-----------|-------------------|   | <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|&128; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|&64; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>"
  syntax:
    content: protected RC2 ();
    parameters: []
  overload: System.Security.Cryptography.RC2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.Create
  id: Create
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: Create()
  nameWithType: RC2.Create()
  fullName: System.Security.Cryptography.RC2.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Создает экземпляр криптографического объекта для выполнения <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритма."
  remarks: "Используйте этот метод для создания экземпляра класса RC2, который можно использовать для шифрования и расшифровки данных."
  example:
  - "The following example shows how to create and use an RC2 object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.RC2.Create.File#1](~/add/codesnippet/cpp/m-system.security.crypto_46_1.cpp)]\n [!code-cs[Cryptography.RC2.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_46_1.cs)]\n [!code-vb[Cryptography.RC2.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_46_1.vb)]  \n  \n The following example shows how to create and use an RC2 object to encrypt and decrypt data in memory.  \n  \n [!code-cpp[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_46_2.cpp)]\n [!code-cs[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_46_2.cs)]\n [!code-vb[Cryptography.RC2.Create.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_46_2.vb)]"
  syntax:
    content: public static System.Security.Cryptography.RC2 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RC2
      description: "Экземпляр криптографического объекта."
  overload: System.Security.Cryptography.RC2.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Алгоритм использовался с включенным режимом федеральным стандартам обработки информации (FIPS), но не является FIPS-совместимым."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: Create(String)
  nameWithType: RC2.Create(String)
  fullName: System.Security.Cryptography.RC2.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Создает экземпляр криптографического объекта для выполнения заданной реализации <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритма."
  remarks: "Используйте этот метод для создания экземпляра класса RC2, который можно использовать для шифрования и расшифровки данных."
  example:
  - "The following example shows how to create and use an RC2 object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/cpp/m-system.security.crypto_6_1.cpp)]\n [!code-cs[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/csharp/m-system.security.crypto_6_1.cs)]\n [!code-vb[Cryptography.RC2.Createstring.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_6_1.vb)]  \n  \n The following example shows how to create and use an RC2 object to encrypt and decrypt data in memory.  \n  \n [!code-cs[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_6_2.cs)]\n [!code-cpp[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_6_2.cpp)]\n [!code-vb[Cryptography.RC2.Createstring.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_6_2.vb)]"
  syntax:
    content: public static System.Security.Cryptography.RC2 Create (string AlgName);
    parameters:
    - id: AlgName
      type: System.String
      description: "Имя конкретной реализации <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> для использования."
    return:
      type: System.Security.Cryptography.RC2
      description: "Экземпляр криптографического объекта."
  overload: System.Security.Cryptography.RC2.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Алгоритм, описание которого <code> algName </code> параметр был использован с включенным режимом федеральным стандартам обработки информации (FIPS), но не является FIPS-совместимым."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.EffectiveKeySize
  id: EffectiveKeySize
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: EffectiveKeySize
  nameWithType: RC2.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2.EffectiveKeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает эффективный размер секретного ключа, используемого <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритмом, в битах."
  syntax:
    content: public virtual int EffectiveKeySize { get; set; }
    return:
      type: System.Int32
      description: "Эффективный размер ключа, используемого <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритма."
  overload: System.Security.Cryptography.RC2.EffectiveKeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Недопустимый эффективный размер ключа."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.EffectiveKeySizeValue
  id: EffectiveKeySizeValue
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: EffectiveKeySizeValue
  nameWithType: RC2.EffectiveKeySizeValue
  fullName: System.Security.Cryptography.RC2.EffectiveKeySizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Представляет эффективный размер секретного ключа, используемого <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритмом, в битах."
  remarks: "Это поле можно получить с помощью <xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A>свойство.</xref:System.Security.Cryptography.RC2.EffectiveKeySize%2A>"
  syntax:
    content: protected int EffectiveKeySizeValue;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RC2
  langs:
  - csharp
  name: KeySize
  nameWithType: RC2.KeySize
  fullName: System.Security.Cryptography.RC2.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает размер секретного ключа, используемого <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритмом, в битах."
  remarks: "Этот алгоритм поддерживает ключи длиной от 40 до 1024 бит с приращениями по 8 бит, но реализация RC2CryptoServiceProvider поддерживает только ключи длиной от 40 до 128 бит с приращениями по 8 бит."
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: "Размер секретного ключа, используемого <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> алгоритма."
  overload: System.Security.Cryptography.RC2.KeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Значение для размера ключа RC2 меньше значения эффективного размера ключа."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RC2.#ctor
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: RC2()
  nameWithType: RC2.RC2()
  fullName: System.Security.Cryptography.RC2.RC2()
- uid: System.Security.Cryptography.RC2.Create
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: Create()
  nameWithType: RC2.Create()
  fullName: System.Security.Cryptography.RC2.Create()
- uid: System.Security.Cryptography.RC2
  parent: System.Security.Cryptography
  isExternal: false
  name: RC2
  nameWithType: RC2
  fullName: System.Security.Cryptography.RC2
- uid: System.Security.Cryptography.RC2.Create(System.String)
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: Create(String)
  nameWithType: RC2.Create(String)
  fullName: System.Security.Cryptography.RC2.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RC2.EffectiveKeySize
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2.EffectiveKeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RC2.EffectiveKeySizeValue
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: EffectiveKeySizeValue
  nameWithType: RC2.EffectiveKeySizeValue
  fullName: System.Security.Cryptography.RC2.EffectiveKeySizeValue
- uid: System.Security.Cryptography.RC2.KeySize
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: KeySize
  nameWithType: RC2.KeySize
  fullName: System.Security.Cryptography.RC2.KeySize
- uid: System.Security.Cryptography.RC2.#ctor*
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: RC2
  nameWithType: RC2.RC2
- uid: System.Security.Cryptography.RC2.Create*
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: Create
  nameWithType: RC2.Create
- uid: System.Security.Cryptography.RC2.EffectiveKeySize*
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2.EffectiveKeySize
- uid: System.Security.Cryptography.RC2.KeySize*
  parent: System.Security.Cryptography.RC2
  isExternal: false
  name: KeySize
  nameWithType: RC2.KeySize
