### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  id: ITextRangeProvider
  children:
  - System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.Clone
  - System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  - System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  - System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  - System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  - System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  - System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  - System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  - System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  - System.Windows.Automation.Provider.ITextRangeProvider.Select
  langs:
  - csharp
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
  type: Interface
  summary: "Предоставляет методы и свойства для поддержки доступа клиента автоматизации пользовательского интерфейса к диапазону непрерывного текста в текстовом контейнере, который реализует <xref href=&quot;System.Windows.Automation.Provider.ITextProvider&quot;> </xref>."
  remarks: "Реализация поставщика автоматизации пользовательского интерфейса, в который должна поддерживать <xref:System.Windows.Automation.TextPattern>шаблон элемента управления.</xref:System.Windows.Automation.TextPattern>       Объект <xref:System.Windows.Automation.Text.TextPatternRange>может представлять точку вставки, часть или весь текст в <xref:System.Windows.Automation.TextPattern>контейнера.</xref:System.Windows.Automation.TextPattern> </xref:System.Windows.Automation.Text.TextPatternRange>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ITextRangeProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  id: AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Добавляет в коллекцию выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение."
  remarks: "Точка вставки текста перемещается в область новое выделение.       Предоставление вырожденный диапазон перемещает курсор."
  syntax:
    content: public void AddToSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Если поставщик текста не поддерживает несколько раздельное множественное выделение (то есть <xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>должно иметь значение <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  id: Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает новый <xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;> </xref> совпадают с исходными <xref href=&quot;System.Windows.Automation.Provider.ITextRangeProvider&quot;> </xref> и наследующий все его свойства."
  remarks: "Новый диапазон можно управлять независимо от исходных."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Новый текстовый диапазон. Пустая ссылка (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]) никогда не возвращается."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  id: Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает значение, указывающее, является ли диапазон ( <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> в конечной точке <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> конечной точки) текстового диапазона совпадает со значением другого текстового диапазона."
  syntax:
    content: public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);
    parameters:
    - id: range
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Текстовый диапазон для сравнения"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если расположение текстовых диапазонов идентично; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если сравниваемый диапазон поступающих не из того же поставщика текста."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает значение, указывающее, имеют ли два текстовых диапазона одинаковые конечные точки."
  syntax:
    content: public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> Или <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> конечная точка вызывающего объекта."
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Целевой диапазон для сравнения."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "<xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> Или <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> конечной точки целевого объекта."
    return:
      type: System.Int32
      description: "Возвращает отрицательное значение, если конечная точка вызывающего ближе к началу, чем целевая конечная точка.       Возвращает нуль, если конечная точка вызывающего находится там же, где целевой конечной точки.       Возвращает положительное значение, если конечная точка вызывающего объекта размещена дальше конечной точки целевого."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если <code> targetRange </code> из поставщика другим текстом."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  id: ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Расширяет текстовый диапазон для заданной единицы текста."
  remarks: "Если диапазон уже точное количество заданных единицах измерения, он остается неизменным.       Имеется ряд шагов, участвующих в фоновом в порядке для <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>для успешного выполнения метода.</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  Текстовый диапазон нормализован; то есть, диапазон текста он свернут до вырожденного диапазона в <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечную точку, которая делает <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>лишний конечной точки.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает `unit` границы; например,» {U} RL [http://www.microsoft.com](http://www.microsoft.com) внедряется в текст» где «{» и «}», конечные точки диапазона текста.      2.  Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>в начало запрошенной `unit` границ.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  Диапазон перемещается вперед или назад в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>запрошенное число `unit` границы.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  Затем диапазон расширяется из вырожденного состояния путем перемещения <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечной точки на одну запрошенную `unit` границ.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Настройка диапазона перемещения & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;диапазона перемещения & ExpandToEnclosingUnit&quot;) примеры способ корректировки текстового диапазона для Move() и ExpandToEnclosingUnit() настроек [!NOTE] настроек эти шаги необходимы, так как часто для чтения с экрана считывают полного слова, предложение или абзац в точке вставки или другой виртуальной позиции курсора.       ExpandToEnclosingUnit уважает скрытым и видимым текстом.       Откладывает ExpandToEnclosingUnit до следующего наибольшего <xref:System.Windows.Automation.Text.TextUnit>поддерживаемого Если данного <xref:System.Windows.Automation.Text.TextUnit>не поддерживается элементом управления.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       Порядок от наименьшей единицы к максимальному, указанных ниже.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Единица текста."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  id: FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает подмножество текстового диапазона, имеющее значение указанного атрибута."
  remarks: "Нет никакой разницы между скрытым и видимым текстом."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);
    parameters:
    - id: attribute
      type: System.Int32
      description: "Искомый атрибут."
    - id: value
      type: System.Object
      description: "Значение атрибута для поиска. Это значение должно соответствовать заданному для атрибута типу."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если последнее вхождение текстового диапазона должны быть возвращены вместо первого; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Текстовый диапазон, имеющий соответствующий атрибут и значение атрибута; в противном случае — значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  id: FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает подмножество текстового диапазона, содержащее заданный текст."
  remarks: "Нет никакой разницы между скрытым и видимым текстом."
  syntax:
    content: public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);
    parameters:
    - id: text
      type: System.String
      description: "Текстовая строка для поиска."
    - id: backward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если последнее вхождение текстового диапазона должны быть возвращены вместо первого; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если регистр следует игнорировать; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Текстовый диапазон, соответствующий заданному тексту; в противном случае — значение null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  id: GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Извлекает значение заданного атрибута для текстового диапазона."
  remarks: "Нет никакой разницы между скрытым и видимым текстом."
  syntax:
    content: public object GetAttributeValue (int attribute);
    parameters:
    - id: attribute
      type: System.Int32
      description: "Атрибут текста."
    return:
      type: System.Object
      description: "Извлекает объект, представляющий значение заданного атрибута. Например `GetAttributeValue(TextPattern.FontNameAttribute)` возвращает строку, представляющую имя шрифта текстового диапазона, а `GetAttributeValue(TextPattern.IsItalicAttribute)` возвращала значение типа <xref:System.Boolean>.</xref:System.Boolean>       Возвращает <xref href=&quot;System.Windows.Automation.TextPattern.MixedAttributeValue&quot;> </xref> Если значение заданного атрибута различается в пределах текстового диапазона.       Возвращает <xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;> </xref> Если указанный атрибут не поддерживается поставщиком или элементом управления."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если указанный атрибут не является допустимым."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  id: GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает коллекцию ограничивающих прямоугольников для каждой полностью или частично видимой строки текста в текстовом диапазоне."
  syntax:
    content: public double[] GetBoundingRectangles ();
    parameters: []
    return:
      type: System.Double[]
      description: "Массив ограничивающих прямоугольников для каждой полной или частичной строки текста в текстовом диапазоне.       Для вырожденного диапазона — пустой массив.       Пустой массив с полностью находятся экранные координаты текстового диапазона результате прокрутки или заслонен другим окном."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  id: GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Извлекает коллекцию всех внедренных объектов, попадающих в текстовый диапазон."
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]
      description: "Коллекция дочерних объектов, попадающих в диапазон. Дочерние элементы, которые перекрываются с текстовым диапазоном, но не полностью в нем будут также включены в коллекции.       Возвращает пустую коллекцию, если нет ни одного дочернего объекта."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  id: GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Возвращает самый внутренний элемент управления, который охватывает диапазон текста."
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "Охватывающий элемент управления, обычно поставщик текста, предоставляющий текстовый диапазон. Тем не менее если поставщик текста содержит дочерние элементы, такие как таблицы или гиперссылки, охватывающий элемент должен быть наследником поставщика текста."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  id: GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Извлекает текстового диапазона."
  remarks: "GetText уважает скрытым и видимым текстом.       Если `maxLength` больше, чем длина диапазона текста вызывающего объекта, возвращаемая строка будет текстового диапазона в виде обычного текста.       GetText не будут затронуты порядком конечных точек в размещение текста; он всегда возвращает текст между конечными точками начала и окончания текстового диапазона в логическом порядке текстового потока."
  syntax:
    content: public string GetText (int maxLength);
    parameters:
    - id: maxLength
      type: System.Int32
      description: "Максимальная длина возвращаемой строки. Используйте `-1` , если не ограничена."
    return:
      type: System.String
      description: "Обычный текст текстового диапазона, возможно, обрезанное до заданной в параметре <code> maxLength </code>."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Если <code> maxLength </code> меньше-1."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  id: Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Перемещает текстовый диапазон заданное количество единиц текста."
  remarks: "При необходимости для обхода содержимого текстового диапазона, ряд шагов, участвующих в фоновом в порядке, для успешного выполнения метода Move.      1.  Текстовый диапазон нормализован; то есть, диапазон текста он свернут до вырожденного диапазона в <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечную точку, которая делает <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>лишний конечной точки.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает `unit` границы; например,» {U} RL [http://www.microsoft.com](http://www.microsoft.com) внедряется в текст» где «{» и «}», конечные точки диапазона текста.      2.  Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>в начало запрошенной `unit` границ.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  Диапазон перемещается вперед или назад в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>запрошенное число `unit` границы.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      4.  Затем диапазон расширяется из вырожденного состояния путем перемещения <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечной точки на одну запрошенную `unit` границ.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Настройка диапазона перемещения & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;диапазона перемещения & ExpandToEnclosingUnit&quot;) примеры способ корректировки текстового диапазона для Move() и ExpandToEnclosingUnit() текстовое содержимое (или внутренний текст) контейнера текста и внедренного объекта, например гиперссылки или ячейки таблицы, представляется как один непрерывный текстовый поток в представлении элемента управления и представление содержимого [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] дерева; границы объекта игнорируются.       ![Текст, разделенный вставленными объектами. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png &quot;Текст, разделенный вставленными объектами.&quot;)   Пример текстового потока с внедренными объектами и их диапазон охватывает перемещения отношениях как скрытые и отображается текст.       Откладывает перемещение к следующему наибольшее <xref:System.Windows.Automation.Text.TextUnit>поддерживаемого Если данного <xref:System.Windows.Automation.Text.TextUnit>не поддерживается элементом управления.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       Порядок от наименьшей единицы к максимальному, указанных ниже.      - <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>- <xref:System.Windows.Automation.Text.TextUnit>Текст никоим образом не изменяется, текстовый диапазон просто распространяется в другую часть текста.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int Move (System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Граница единицы текста."
    - id: count
      type: System.Int32
      description: "Количество единиц текста для перемещения.       Положительное значение перемещению текстового диапазона вперед, отрицательное значение соответствует перемещению текстового диапазона обратной и 0 не оказывает влияния."
    return:
      type: System.Int32
      description: "Число единиц, на которое выполнено перемещение. Это может быть меньше запрошенного количества, если любой из конечных точек текстового диапазона больше или меньше чем <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>конечных точек.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*>"
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  id: MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Перемещает конечную точку текстового диапазона в заданную конечную точку второго текстового диапазона."
  remarks: "Если другой конечной точке же текстовый диапазон пересекает перемещения конечной точки, а затем этой конечной точки перемещаются также приведет к вырожденный диапазон и убедившись в правильный порядок конечных точек (то есть <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>, всегда меньше или равно <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>).</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Перемещаемая конечная точка."
    - id: targetRange
      type: System.Windows.Automation.Provider.ITextRangeProvider
      description: "Второй диапазон от того же поставщика текста."
    - id: targetEndpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Конечная точка второго диапазона."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  id: MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Перемещает конечную точку текстового диапазона, заданное количество единиц текста в диапазоне всего документа."
  remarks: "При необходимости для обхода содержимого текстового диапазона, ряд шагов, участвующих в фоновом в порядке для <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>для успешного выполнения метода.</xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>      1.  Текстовый диапазон нормализован; то есть, диапазон текста он свернут до вырожденного диапазона в <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечную точку, которая делает <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>лишний конечной точки.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> </xref:System.Windows.Automation.Text.TextPatternRangeEndpoint> Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает `unit` границы; например,» {U} RL [http://www.microsoft.com](http://www.microsoft.com) внедряется в текст» где «{» и «}», конечные точки диапазона текста.      2.  Результирующий диапазон перемещается в <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>в начало запрошенной `unit` границ.</xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A>      3.  Затем диапазон расширяется из вырожденного состояния путем перемещения <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечной точки на одну запрошенную `unit` границ.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>       ![Настройка диапазона перемещения ExpandToEnclosingUnit &](~/add/media/uia-textpattern-moveandexpand-examples.png &quot;диапазона перемещения & ExpandToEnclosingUnit&quot;) примеры способ корректировки текстового диапазона для Move() и ExpandToEnclosingUnit() MoveEndpointByUnit откладывает к следующему наибольшее <xref:System.Windows.Automation.Text.TextUnit>поддерживаемого Если данного <xref:System.Windows.Automation.Text.TextUnit>не поддерживается элементом управления.</xref:System.Windows.Automation.Text.TextUnit> </xref:System.Windows.Automation.Text.TextUnit>       Порядок от наименьшей единицы к максимальному, указанных ниже.      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit>      -   <xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit></xref:System.Windows.Automation.Text.TextUnit>"
  syntax:
    content: public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);
    parameters:
    - id: endpoint
      type: System.Windows.Automation.Text.TextPatternRangeEndpoint
      description: "Перемещаемая конечная точка."
    - id: unit
      type: System.Windows.Automation.Text.TextUnit
      description: "Перемещаемая единица текста."
    - id: count
      type: System.Int32
      description: "Число единиц для перемещения. Положительном значении выполняется перемещение вперед. Перемещение назад отрицательное значение. Значение 0 не оказывает влияния."
    return:
      type: System.Int32
      description: "Число единиц, на которое выполнено перемещение, оно может быть меньше, чем значение запрошенного, если при перемещении конечная точка достигает начала или конца документа."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  id: RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Удаляет выделенный текст, соответствующий вызывающего <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> и <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> конечных точек из коллекции выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение."
  remarks: "Точка вставки текста будет перемещаются в область удаленного выделения.       Предоставление вырожденный диапазон переместит курсор."
  syntax:
    content: public void RemoveFromSelection ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Если поставщик текста не поддерживает несколько раздельное множественное выделение (например, <xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>должно иметь значение <xref uid=&quot;langword_csharp_Multiple&quot; name=&quot;Multiple&quot; href=&quot;&quot;> </xref>).</xref:System.Windows.Automation.TextPattern.SupportedTextSelection*>"
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Заставляет текстовый элемент управления выполнять вертикальную прокрутку, пока текстовый диапазон не появится в окне просмотра."
  remarks: "ScrollIntoView уважает скрытым и видимым текстом.       Если текстовый диапазон является скрытым, текстовый элемент управления будет прокручиваться только в том случае, если скрытый текст имеет привязку в окне просмотра."
  syntax:
    content: public void ScrollIntoView (bool alignToTop);
    parameters:
    - id: alignToTop
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текстовый элемент управления должен выполнить прокрутку так текстовый диапазон отобразился у верхней границы окна просмотра; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если диапазон должен отобразиться у верхней границы окна просмотра."
  overload: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  id: Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  langs:
  - csharp
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Выделяет текст в элементе управления текст, соответствующий диапазону текста <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> и <xref href=&quot;System.Windows.Automation.Text.TextPatternRangeEndpoint&quot;> </xref> конечных точек."
  remarks: "Если указано вырожденного диапазона точка вставки текста перейдет <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>конечную точку текстового диапазона.</xref:System.Windows.Automation.Text.TextPatternRangeEndpoint>"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Происходит, когда выделение текста не поддерживается в текстовом элементе управления."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection()
  nameWithType: ITextRangeProvider.AddToSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone()
  nameWithType: ITextRangeProvider.Clone()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Clone()
- uid: System.Windows.Automation.Provider.ITextRangeProvider
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: ITextRangeProvider
  nameWithType: ITextRangeProvider
  fullName: System.Windows.Automation.Provider.ITextRangeProvider
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare(ITextRangeProvider)
  nameWithType: ITextRangeProvider.Compare(ITextRangeProvider)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Compare(ITextRangeProvider)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.Text.TextPatternRangeEndpoint
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextPatternRangeEndpoint
  nameWithType: TextPatternRangeEndpoint
  fullName: System.Windows.Automation.Text.TextPatternRangeEndpoint
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit(TextUnit)
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(TextUnit)
- uid: System.Windows.Automation.Text.TextUnit
  parent: System.Windows.Automation.Text
  isExternal: false
  name: TextUnit
  nameWithType: TextUnit
  fullName: System.Windows.Automation.Text.TextUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute(Int32,Object,Boolean)
  nameWithType: ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(Int32,Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText(String,Boolean,Boolean)
  nameWithType: ITextRangeProvider.FindText(String,Boolean,Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.FindText(String,Boolean,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue(Int32)
  nameWithType: ITextRangeProvider.GetAttributeValue(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles()
  nameWithType: ITextRangeProvider.GetBoundingRectangles()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles()
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren()
  nameWithType: ITextRangeProvider.GetChildren()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  spec.csharp:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: IRawElementProviderSimple[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement()
  nameWithType: ITextRangeProvider.GetEnclosingElement()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText(Int32)
  nameWithType: ITextRangeProvider.GetText(Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.GetText(Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move(TextUnit,Int32)
  nameWithType: ITextRangeProvider.Move(TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Move(TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  nameWithType: ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(TextPatternRangeEndpoint,ITextRangeProvider,TextPatternRangeEndpoint)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  nameWithType: ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection()
  nameWithType: ITextRangeProvider.RemoveFromSelection()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: ITextRangeProvider.ScrollIntoView(Boolean)
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(Boolean)
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select()
  nameWithType: ITextRangeProvider.Select()
  fullName: System.Windows.Automation.Provider.ITextRangeProvider.Select()
- uid: System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: AddToSelection
  nameWithType: ITextRangeProvider.AddToSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Clone*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Clone
  nameWithType: ITextRangeProvider.Clone
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Compare*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Compare
  nameWithType: ITextRangeProvider.Compare
- uid: System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: CompareEndpoints
  nameWithType: ITextRangeProvider.CompareEndpoints
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ExpandToEnclosingUnit
  nameWithType: ITextRangeProvider.ExpandToEnclosingUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindAttribute
  nameWithType: ITextRangeProvider.FindAttribute
- uid: System.Windows.Automation.Provider.ITextRangeProvider.FindText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: FindText
  nameWithType: ITextRangeProvider.FindText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetAttributeValue
  nameWithType: ITextRangeProvider.GetAttributeValue
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetBoundingRectangles
  nameWithType: ITextRangeProvider.GetBoundingRectangles
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetChildren*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetChildren
  nameWithType: ITextRangeProvider.GetChildren
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetEnclosingElement
  nameWithType: ITextRangeProvider.GetEnclosingElement
- uid: System.Windows.Automation.Provider.ITextRangeProvider.GetText*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: GetText
  nameWithType: ITextRangeProvider.GetText
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Move*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Move
  nameWithType: ITextRangeProvider.Move
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByRange
  nameWithType: ITextRangeProvider.MoveEndpointByRange
- uid: System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: MoveEndpointByUnit
  nameWithType: ITextRangeProvider.MoveEndpointByUnit
- uid: System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: RemoveFromSelection
  nameWithType: ITextRangeProvider.RemoveFromSelection
- uid: System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: ScrollIntoView
  nameWithType: ITextRangeProvider.ScrollIntoView
- uid: System.Windows.Automation.Provider.ITextRangeProvider.Select*
  parent: System.Windows.Automation.Provider.ITextRangeProvider
  isExternal: false
  name: Select
  nameWithType: ITextRangeProvider.Select
