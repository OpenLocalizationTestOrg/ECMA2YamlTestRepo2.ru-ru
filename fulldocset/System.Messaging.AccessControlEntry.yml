### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntry
  id: AccessControlEntry
  children:
  - System.Messaging.AccessControlEntry.#ctor
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  langs:
  - csharp
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
  type: Class
  summary: "Задает права доступа для доверенного лица (пользователя, группы или компьютера) для выполнения конкретного приложения реализаций общих задач."
  remarks: "Многие приложения имеют похожие операции, которые доверенного лица могут быть назначены права, например, чтение, запись и удаление объектов. При назначении прав для этих основных операций приложение интерпретирует их в виде определенного для этого приложения. Например служба Message Queuing интерпретирует операцию чтения как получение или считывание сообщений из очереди. Класс AccessControlEntry предоставляет доступ к этим общим правам.       При работе с записями управления доступом, необходимо указать доверенное лицо, к которому присваиваются права. Необходимо задать хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>свойств можно указать, какие права, назначаемые для доверенного лица.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> Можно задать <xref:System.Messaging.AccessControlEntry.EntryType%2A>для указания прав, можно указать, должно быть предоставлено ли.</xref:System.Messaging.AccessControlEntry.EntryType%2A> Тип записи по умолчанию является предоставление прав."
  syntax:
    content: public class AccessControlEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> класс, который определяет набор прав, чтобы применить ни доверенное лицо."
  remarks: "Задать <xref:System.Messaging.AccessControlEntry.Trustee%2A>Свойства и хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>свойства перед использованием этого <xref:System.Messaging.AccessControlEntry>экземпляр, чтобы задать права доступа для доверенного лица.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.Trustee%2A>       При необходимости можно задать <xref:System.Messaging.AccessControlEntry.EntryType%2A>Свойства, его значением по умолчанию для `Allow` при выборе не для выполнения этого действия</xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry ();
    parameters: []
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  id: '#ctor(System.Messaging.Trustee)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> класса, определяющего доверенное лицо, к которому права предоставлены или запрещены."
  remarks: "Задать <xref:System.Messaging.AccessControlEntry.EntryType%2A>Свойства и хотя бы один из <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, или <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>свойства перед использованием этого <xref:System.Messaging.AccessControlEntry>экземпляр, чтобы задать права доступа для доверенного лица.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Объект <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , указывающий пользователя, группы, компьютера, домена или псевдоним."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> класс, который указывает доверенное лицо, права, назначаемые и следует ли предоставить или запретить эти права."
  remarks: "Эта перегрузка конструктора задает <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Свойства побитовое сочетание `genericAccessRights` и `standardAccessRights` заданных параметров.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Объект <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , указывающий пользователя, группы, компьютера, домена или псевдоним."
    - id: genericAccessRights
      type: System.Messaging.GenericAccessRights
      description: "Побитовое сочетание <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> значения."
    - id: standardAccessRights
      type: System.Messaging.StandardAccessRights
      description: "Побитовое сочетание <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> значения."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Один из <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> значения, которые указывает, следует ли разрешить, запретить, установить или отозвать заданные права."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code> genericAccessRights </code>, <code> standardAccessRights </code>, Или <code> entryType </code> параметры не являются допустимыми значениями перечисления."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  id: CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Возвращает или задает пользовательские права доступа."
  syntax:
    content: protected int CustomAccessRights { get; set; }
    return:
      type: System.Int32
      description: "Права доступа к конкретному приложению, обычно определяемый как битов флагов."
  overload: System.Messaging.AccessControlEntry.CustomAccessRights*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.EntryType
  id: EntryType
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Возвращает или задает значение, указывающее, каким образом права доступа применяются к доверенному лицу."
  syntax:
    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }
    return:
      type: System.Messaging.AccessControlEntryType
      description: "Один из <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> значения, которые указывает, следует ли разрешить, запретить, установить или отозвать заданные права. Значение по умолчанию — <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlEntry.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Тип записи не является допустимым <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> значение перечисления."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  id: GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Возвращает или задает набор общих прав доступа, которые отображаются как стандартные и зависящие от объекта права доступа для чтения, записи и выполнения."
  remarks: "Защищаемые объекты позволяет указать общие права доступа для четырех старших битов формата маски доступа Windows 2000 и Windows NT. Каждый тип защищаемого объекта отображает эти биты ряд ее стандартных и зависящие от объекта права доступа. Приложения, описывающие закрытый защищаемых объектов также можно использовать общие права доступа."
  syntax:
    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }
    return:
      type: System.Messaging.GenericAccessRights
      description: "Побитовое сочетание <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> значения."
  overload: System.Messaging.AccessControlEntry.GenericAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Заданное значение не является допустимым сочетанием <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> битовой маской."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  id: StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Возвращает или задает набор стандартных прав доступа, соответствующие операциям общими для большинства типов защищаемых объектов."
  remarks: "Формат маски доступа Windows 2000 и Windows NT включает набор битов для стандартных прав доступа. Каждый тип защищаемый объект имеет набор прав доступа, которые соответствуют операций, связанных с этим типом объекта. Помимо эти права доступа к конкретным объектом есть набор стандартных прав доступа, соответствующих операциям, общим для большинства типов защищаемых объектов."
  syntax:
    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }
    return:
      type: System.Messaging.StandardAccessRights
      description: "Побитовое сочетание <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> значения."
  overload: System.Messaging.AccessControlEntry.StandardAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Заданное значение не является допустимым сочетанием <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> битовой маской."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.Trustee
  id: Trustee
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Возвращает или задает пользователя, группы, домена или псевдонима, к которому присваиваются права доступа."
  remarks: "Пользователи и программы, такие как службы Win32, используйте учетные записи пользователей для входа на локальном компьютере. Учетные записи групп нельзя использовать для входа компьютер, но они полезны в <xref:System.Messaging.AccessControlEntry>экземпляров, чтобы разрешить или запретить набор права доступа на один или несколько учетных записей.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: public System.Messaging.Trustee Trustee { get; set; }
    return:
      type: System.Messaging.Trustee
      description: "Объект <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , указывающий учетную запись пользователя, учетная запись группы или сеанс входа в систему, к которому <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> применяется."
  overload: System.Messaging.AccessControlEntry.Trustee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Свойство Trustee — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.AccessControlEntry.#ctor
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
- uid: System.Messaging.GenericAccessRights
  parent: System.Messaging
  isExternal: false
  name: GenericAccessRights
  nameWithType: GenericAccessRights
  fullName: System.Messaging.GenericAccessRights
- uid: System.Messaging.StandardAccessRights
  parent: System.Messaging
  isExternal: false
  name: StandardAccessRights
  nameWithType: StandardAccessRights
  fullName: System.Messaging.StandardAccessRights
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry.EntryType
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry.AccessControlEntry
- uid: System.Messaging.AccessControlEntry.CustomAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
- uid: System.Messaging.AccessControlEntry.EntryType*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
