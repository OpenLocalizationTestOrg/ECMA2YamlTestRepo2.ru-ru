### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "Включает поставщик данных .NET Framework для SQL Server, чтобы убедиться, что пользователь имеет уровень безопасности, достаточный для доступа к источнику данных."
  remarks: "<xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>Имеет приоритет над <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>свойство.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Таким образом Если задать <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>для `false`, необходимо также задать <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>для `false` для предотвращения подключения с пустым паролем пользователя.</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>      Настроек [!NOTE] настроек при использовании разрешений CAS для ADO.NET, рекомендуется начинать с наиболее жестких ограничений (нет разрешений), а затем добавлять определенные права доступа, необходимые конкретной задаче, которую требуется выполнить коду. Противоположный подход, начиная со всех разрешений, а затем удаляют определенные права, не является безопасным, поскольку существует много способов выражения одинаковой строки соединения. Например, если сначала все разрешения, а затем попытаться запретить использование строки подключения «server = someserver», строка «server=someserver.mycompany.com» по-прежнему допускается. Начиная с отсутствия разрешений на всех, можно сократить вероятность появления уязвимостей в системе в набор разрешений."
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> класса."
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> класса."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> класса."
  remarks: "<xref:System.Security.Permissions.PermissionState>Перечисления имеет приоритет над <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>свойство.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> Таким образом Если задать <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>для `false`, необходимо также задать <xref:System.Security.Permissions.PermissionState>для `None` для предотвращения подключения с пустым паролем пользователя.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Пример, демонстрирующий использование требования безопасности см. в разделе [управления доступом для кода и ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Указывает, разрешено ли пустой пароль."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Добавляет новую строку подключения, а также ряд служебные ключевые слова для <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> объекта."
  remarks: "Используйте этот метод для настройки того, какие строки подключения разрешены определенным объектом разрешений. Например, использовать следующий фрагмент кода, если вы хотите разрешить только конкретную строку соединения и ничего более: `permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)` в следующем примере пользователь строки соединения, использующие любую базу данных, но только на сервере с именем MyServer, с любого сочетания пользователя и пароль, содержащий нет других ключевых слов строки подключения: `permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)` следующий пример использует одного сценария, как описано выше, но позволяет участнику отработки отказа, который может использоваться при подключении к серверам настроена для зеркального отображения : `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] Настроек при использовании разрешений CAS для ADO.NET, рекомендуется начинать с наиболее жестких ограничений (нет разрешений), а затем добавлять определенные права доступа, необходимые конкретной задаче, которую требуется выполнить коду. Противоположный подход, начиная со всех разрешений и затем запрещать определенные разрешения, не является безопасным, поскольку существует много способов выражения одинаковой строки соединения. Например, если сначала все разрешения, а затем попытаться запретить использование строки подключения «server = someserver», строка «server=someserver.mycompany.com» по-прежнему допускается. Начиная с отсутствия разрешений на всех, можно сократить вероятность появления уязвимостей в системе в набор разрешений."
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения."
    - id: restrictions
      type: System.String
      description: "Ключевые ограничения."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "Один из <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> перечисления."
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего объекта разрешения."
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
