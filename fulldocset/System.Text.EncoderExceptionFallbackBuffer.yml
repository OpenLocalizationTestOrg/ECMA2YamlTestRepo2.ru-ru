### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Вызывает <xref:System.Text.EncoderFallbackException>при входной символ не может быть преобразован в закодированную выходную последовательность байтов.</xref:System.Text.EncoderFallbackException> Этот класс не наследуется."
  remarks: "Обычная причина для операции кодирования или декодирования сбой — Если базовый класс кодирования не предоставляет сопоставление между символом и соответствующей последовательности байтов. Если входной символ не преобразован в выходную последовательность байтов, операции кодирования вызывает <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>метод, который вызывает <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> </xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>       <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>Класс, который представляет буфера данных, который используется в операции кодирования является базовым классом для класса EncoderExceptionFallbackBuffer.</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> Однако вместо буфера данных, класс EncoderExceptionFallbackBuffer представляет стандартное поведение, при котором создается исключение при сбое операции кодирования. Не существует фактического буфера данных, а элементы, разработанные для использования такого буфера не выполняют значительной работы."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> класса."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Создает исключение, так как не удается закодировать входной символ. Параметры указывают значение и позицию индекса символа, который не может быть преобразован."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>И <xref:System.Text.Encoder.Convert%2A>методы вызывают Fallback при обнаружении неизвестный символ во входные данные.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> В результате резервный механизм выдает всегда <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "Входной символ."
    - id: index
      type: System.Int32
      description: "Позиция индекса символа во входном буфере."
    return:
      type: System.Boolean
      description: "Отсутствует. Возвращаемое значение отсутствует, так как метод резервной стратегии всегда создает исключение."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>не может быть закодирован. Этот метод всегда создает исключение, сообщающее значение <code>charUnknown</code> и <code>index</code> параметров."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Создает исключение, так как не удается закодировать входной символ. Параметры задают значение и позицию индекса суррогатной пары во входных данных, и Номинальное возвращаемое значение не используется."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>И <xref:System.Text.Encoder.Convert%2A>методы вызывают Fallback при обнаружении суррогатной пары во входные данные.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> В результате резервирование всегда создает исключение."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "Старший символ-заместитель входной пары."
    - id: charUnknownLow
      type: System.Char
      description: "Младший символ-заместитель входной пары."
    - id: index
      type: System.Int32
      description: "Позиция индекса суррогатной пары во входном буфере."
    return:
      type: System.Boolean
      description: "Отсутствует. Возвращаемое значение отсутствует, так как метод резервной стратегии всегда создает исключение."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "Символ, представленный <code> charUnknownHigh </code> и <code> charUnknownLow </code> не может быть закодирован."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>не в диапазоне от U + D800 до U + DBFF включительно, или <code> charUnknownLow </code> не от U + DC00 до U + DFFF включительно."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Извлекает следующий символ в резервном буфере исключения."
  remarks: "Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer>имеет буфера данных нет действительное исключение, метод GetNextChar всегда возвращает символ Юникода NULL.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "Возвращаемое значение всегда равно NULL, символ Юникода (U +&0000;).       Возвращаемое значение определяется, несмотря на то, что оно не изменяется, так как этот метод реализует абстрактный метод."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "При следующем вызове вызывает <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>метод для доступа к позиции символа исключение данных буфера, предшествующей текущей позиции.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer>имеет буфера данных нет действительное исключение, метод MovePrevious всегда возвращает `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "Возвращаемое значение всегда равно <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Возвращаемое значение определяется, несмотря на то, что оно не изменяется, так как этот метод реализует абстрактный метод."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Возвращает число символов в текущем <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> объекта, остаются для обработки."
  remarks: "Поскольку <xref:System.Text.EncoderExceptionFallbackBuffer>имеет буфера данных без фактического исключения, осталось свойство всегда возвращает ноль.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "Возвращаемое значение всегда равно нулю.       Возвращаемое значение определяется, несмотря на то, что оно не изменяется, так как этот метод реализует абстрактный метод."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
