### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Transform
  id: Transform
  children:
  - System.Security.Cryptography.Xml.Transform.#ctor
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetInnerXml
  - System.Security.Cryptography.Xml.Transform.GetOutput
  - System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.InputTypes
  - System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.Transform.OutputTypes
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  langs:
  - csharp
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
  type: Class
  summary: "Представляет абстрактный базовый класс, от которого все <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> производных элементов, которые могут использоваться в цифровой подписи XML."
  remarks: "При выполнении XML-подпись и проверка, `Transform`настроек элемент описывает, как подписавшего преобразование данных, который был подписан.  Средство проверки документа использует `Transform`настроек элемента, который требуется преобразовать подписанные данные таким же образом.  Если средство проверки не удается преобразовать подписанные данные таким же образом, не удается проверить документ.       Используйте класс, производный от класса преобразования всякий раз, когда необходимо добавить один или несколько объектов преобразования в зашифрованный XML-документ или подписанный XML-документ.       Дополнительные сведения о `<Transform>` элемента, см. в спецификации XMLDSIG, доступном из консорциума World Wide Web (W3C): www.w3.org/TR/xmldsig-core/, или спецификации шифрования XML, которое доступно из W3C в www.w3.org/TR/xmlenc-core/."
  syntax:
    content: public abstract class Transform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> класса."
  syntax:
    content: protected Transform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает универсальный код ресурса (URI), определяет алгоритм, выполняемый текущим преобразованием."
  remarks: "Это свойство соответствует атрибуту алгоритм `<Transform>` элемент в подписи XMLDSIG. Например алгоритм URI для декодирования Base64 преобразования определяется как http://www.w3.org/2000/09/xmldsig#base64 в соответствии со спецификацией XMLDSIG (раздел 6.6.2).       Простым способом, можно задать это значение с помощью одного из статических полей, связанных с <xref:System.Security.Cryptography.Xml.SignedXml>классом.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public string Algorithm { get; set; }
    return:
      type: System.String
      description: "URI, который определяет алгоритм, выполняемый текущим <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Context
  id: Context
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref href=&quot;System.Xml.XmlElement&quot;> </xref> , представляющий контекст документа, в котором текущий <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объект выполняется."
  remarks: "При подписании документа, свойство контекста представляет значение, передаваемое <xref:System.Security.Cryptography.Xml.SignedXml>конструктор.</xref:System.Security.Cryptography.Xml.SignedXml>  При проверке документа, свойство контекста представляет <xref:System.Security.Cryptography.Xml.Signature>объекта.</xref:System.Security.Cryptography.Xml.Signature>       Во время вычисления подписи и проверки, но до преобразования, вызываются контекстное свойство задается автоматически."
  syntax:
    content: public System.Xml.XmlElement Context { get; set; }
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> , Представляющий контекст документа, в котором текущий <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объект выполняется."
  overload: System.Security.Cryptography.Xml.Transform.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  id: GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе Возвращает хэш-кода, связанные с <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  syntax:
    content: public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> Объект, используемый для создания хэш-кода."
    return:
      type: System.Byte[]
      description: "Хэш-кода, связанные с <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе возвращает XML-представление параметров <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объектов, которые подходят для включения в качестве подэлементов элемента XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: ''
  example:
  - "If a <xref:System.Security.Cryptography.Xml.Transform> object represents an XPath transform using the XPath expression `self::text()`,a call to GetInnerXml results in an <xref:System.Xml.XmlNodeList> object that represents the following XML element:  \n  \n```  \n<XPath>   \n  self::text()   \n</XPath>  \n```  \n  \n This element corresponds to the transform-specific content of the `<Transform>` element as defined in Section 4.3.3.4 of the XMLDSIG specification. For the above XPath transform, the entire `<Transform>` element is as follows:  \n  \n```  \n<Transform Algorithm=\"http://www.w3.org/TR/1999/REC-xpath-19991116\">   \n  <XPath>   \n    self::text()   \n  </XPath>   \n</Transform>  \n```"
  syntax:
    content: protected abstract System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "Список узлов XML, которая представляет содержимое определенного преобразования, необходимые для описания текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта в XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе, возвращает выходные данные текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  syntax:
    content: public abstract object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "Выходные данные текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе, возвращает выходные данные текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта указанного типа."
  remarks: "Метод GetOutput возвращает выходные данные текущего преобразования после его запуска на значения, заданные ранее с помощью вызова <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>метод.</xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>       Тип возвращаемого объекта должен быть одним из объектов типа в <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>свойство.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>"
  syntax:
    content: public abstract object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип возвращаемых выходных данных. Это должен быть один из типов в <xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>свойство.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>"
    return:
      type: System.Object
      description: "Выходные данные текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объект как объект указанного типа."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает XML-представление текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  remarks: "<xref:System.Xml.XmlElement>Объект, возвращаемый этим методом соответствует схеме XML для `<Transform>` элемента, определенного в разделе 4.3.3.4 спецификации XMLDSIG.</xref:System.Xml.XmlElement>"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML-представление текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе получает массив типов, которые являются допустимыми входными данными для <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>метод текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  remarks: "Массив, возвращаемый этим свойством InputTypes должны содержать по крайней мере один элемент, так как каждый <xref:System.Security.Cryptography.Xml.Transform>объект необходимо принять по крайней мере один тип в качестве допустимых входных данных.</xref:System.Security.Cryptography.Xml.Transform>       Объект <xref:System.Security.Cryptography.Xml.Transform>объект обычно принимает один или несколько из следующих типов в качестве входного: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, или <xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.Transform>"
  syntax:
    content: public abstract Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "Массив допустимых типов входных данных для текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекту можно передать только объекты одного из этих типов для <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>метод текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.Transform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе выполняет синтаксический анализ указанного <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> объект как содержимое преобразованием <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> элемент и настраивает внутреннее состояние текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта для сопоставления <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Этот метод используется для обработки вложенных элементов `<Transform>` элемент."
  syntax:
    content: public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> Объект, который указывает содержимое преобразованием для текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе загружает заданные входные данные в текущее <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  remarks: "Тип входного объекта должен быть одним из типов в <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>свойство.</xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>"
  syntax:
    content: public abstract void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Входные данные для загрузки в текущее <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.LoadInput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "При переопределении в производном классе получает массив типов, которые являются возможными выходными данными из <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>методы текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  remarks: "Массив, возвращаемый этим свойством OutputTypes должен содержать хотя бы один элемент, поскольку каждое преобразование должно создавать по крайней мере один тип в качестве выходных данных."
  syntax:
    content: public abstract Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "Массив допустимых типов выходных данных для текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объект; только объекты одного из этих типов возвращаются из <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>методы текущего <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> объекта.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.Transform.OutputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  id: PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref href=&quot;System.Collections.Hashtable&quot;> </xref> объект, который содержит пространства имен, которые распространяются в сигнатуре."
  remarks: "Пространства имен XML, используются для различения различные элементы в документе, которые имеют одинаковое имя.       <xref:System.Collections.Hashtable>Префиксы пространства имен, ключи свойства PropagatedNamespaces и <xref:System.Collections.Hashtable>значениями являются универсальные коды ресурсов (URI) пространства имен.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       Свойство PropagatedNamespaces устанавливается автоматически во время вычисления подписи и проверки, но до преобразования, вызываются."
  syntax:
    content: public System.Collections.Hashtable PropagatedNamespaces { get; }
    return:
      type: System.Collections.Hashtable
      description: "Объект <xref href=&quot;System.Collections.Hashtable&quot;> </xref> объект, который содержит пространства имен, которые распространяются в сигнатуре."
  overload: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Свойство PropagatedNamespaces установлено в <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Задает текущий <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> объекта."
  remarks: "<xref:System.Xml.XmlResolver>Класс разрешает внешние ресурсы XML, с именем универсальный код ресурса (URI).</xref:System.Xml.XmlResolver> Если вы не доверяете источнику XML-файла, не может потребоваться разрешить доступ к ресурсам компьютера, названным URI XML-файла. Свойство сопоставителя позволяет управлять уровнем доступа, XML-файлов для ресурсов компьютера, указав другой <xref:System.Xml.XmlResolver>объектов.</xref:System.Xml.XmlResolver> Если вы не хотите разрешить доступ, можно установить это свойство в `null` (`Nothing` в Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Текущий <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> объекта. Данное свойство принимает значение <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> объекта."
  overload: System.Security.Cryptography.Xml.Transform.Resolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Transform.Context
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.Transform.#ctor*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform
  nameWithType: Transform.Transform
- uid: System.Security.Cryptography.Xml.Transform.Algorithm*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
- uid: System.Security.Cryptography.Xml.Transform.Context*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput
  nameWithType: Transform.GetDigestedOutput
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml
  nameWithType: Transform.GetInnerXml
- uid: System.Security.Cryptography.Xml.Transform.GetOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput
  nameWithType: Transform.GetOutput
- uid: System.Security.Cryptography.Xml.Transform.GetXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml
  nameWithType: Transform.GetXml
- uid: System.Security.Cryptography.Xml.Transform.InputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml
  nameWithType: Transform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.Transform.LoadInput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput
  nameWithType: Transform.LoadInput
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
- uid: System.Security.Cryptography.Xml.Transform.Resolver*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
