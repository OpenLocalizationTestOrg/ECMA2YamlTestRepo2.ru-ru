### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMACSHA384
  id: HMACSHA384
  children:
  - System.Security.Cryptography.HMACSHA384.#ctor
  - System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  langs:
  - csharp
  name: HMACSHA384
  nameWithType: HMACSHA384
  fullName: System.Security.Cryptography.HMACSHA384
  type: Class
  summary: "На основе хэша вычисляет код проверки подлинности сообщения (HMAC) с помощью <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> хеш-функции."
  remarks: "HMACSHA384 — это тип хэш-алгоритма, который создается из хэш-функцию SHA-384 и используется как хэш-проверки подлинности сообщения код (HMAC). Процесс HMAC смешивании секретного ключа с данными сообщения и вычислении результата. Хэш-значение снабжено секретный ключ и хэшируется еще раз. Выходного хэша составляет 384 бита.       Код HMAC может использоваться для определения факта подделки сообщения, передаваемого по незащищенному каналу, при условии, что отправитель и получатель общий секретный ключ. Отправитель вычисляет хэш-значение для исходных данных и передает исходные данные и хэш-значения в одном сообщении. Получатель повторно вычисляет хэш-значение для полученного сообщения и проверяет, что совпадает передаваемых HMAC.       Если исходные и вычисляемый хэш-коды совпадают, сообщение проходит проверку подлинности. Если они не совпадают, данных или хэш-значения, был изменен. Код HMAC обеспечивает защиту от подделки, поскольку для изменения сообщения и повторного создания правильного кода HMAC требуется знание секретного ключа.       HMACSHA384 принимает все размеры ключа и создает хэш последовательность, которая составляет 384 бита."
  example:
  - "The following example shows how to sign a file by using the HMACSHA384 object, and then how to verify the file.  \n  \n [!code-cs[HMACSHA384#1](~/add/codesnippet/csharp/t-system.security.crypto_31_1.cs)]\n [!code-vb[HMACSHA384#1](~/add/codesnippet/visualbasic/t-system.security.crypto_31_1.vb)]\n [!code-cpp[HMACSHA384#1](~/add/codesnippet/cpp/t-system.security.crypto_31_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HMACSHA384 : System.Security.Cryptography.HMAC
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  - System.Security.Cryptography.HMAC
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: HMACSHA384()
  nameWithType: HMACSHA384.HMACSHA384()
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> , используя случайный ключ."
  remarks: "Этот конструктор использует 64-байтовый случайный ключ."
  syntax:
    content: public HMACSHA384 ();
    parameters: []
  overload: System.Security.Cryptography.HMACSHA384.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: HMACSHA384(Byte[])
  nameWithType: HMACSHA384.HMACSHA384(Byte[])
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> , используя указанные данные ключа."
  remarks: ''
  example:
  - For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACSHA384> class.
  syntax:
    content: public HMACSHA384 (byte[] key);
    parameters:
    - id: key
      type: System.Byte[]
      description: "Секретный ключ для <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> шифрования. Значением ключа может быть любой длины. Тем не менее рекомендуемый размер — 128 байт. Если ключ длиной более чем 128 байт, он хэшируется (с использованием SHA-384) для получения ключа 128 байт. Если это длиной менее 128 байт, он дополняется до 128 байт."
  overload: System.Security.Cryptography.HMACSHA384.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  id: ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA384
  langs:
  - csharp
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Предоставляет решение для [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)] реализация <xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;> </xref> алгоритм, который не соответствует [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] реализации этого алгоритма."
  remarks: "Свойства типа ProduceLegacyHmacValues Boolean предназначена для включения [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] приложениям взаимодействовать с [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] приложений. Если задано это свойство `true`, <xref:System.Security.Cryptography.HMACSHA384>объекта выводятся значения, соответствующие значения, созданные [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].</xref:System.Security.Cryptography.HMACSHA384> Это свойство необходимо задать только один раз после создания объекта HMAC. Необходимо будет сбросить ключ позже, как показано в следующем примере.      ```   public static void Test()       {       HMACSHA384 hmac = new HMACSHA384();       hmac.ProduceLegacyHmacValues = true;       hmac.Key = // ...Get the HMAC key.       // ...       // Use the HMAC algorithm.       // ...       }   ```"
  syntax:
    content: public bool ProduceLegacyHmacValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] приложениям взаимодействовать с [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] приложений; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HMAC
  isExternal: false
  name: System.Security.Cryptography.HMAC
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.HMACSHA384.#ctor
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384()
  nameWithType: HMACSHA384.HMACSHA384()
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384()
- uid: System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384(Byte[])
  nameWithType: HMACSHA384.HMACSHA384(Byte[])
  fullName: System.Security.Cryptography.HMACSHA384.HMACSHA384(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
  fullName: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMACSHA384.#ctor*
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: HMACSHA384
  nameWithType: HMACSHA384.HMACSHA384
- uid: System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues*
  parent: System.Security.Cryptography.HMACSHA384
  isExternal: false
  name: ProduceLegacyHmacValues
  nameWithType: HMACSHA384.ProduceLegacyHmacValues
