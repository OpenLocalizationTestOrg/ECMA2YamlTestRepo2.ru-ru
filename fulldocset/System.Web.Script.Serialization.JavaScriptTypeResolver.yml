### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  id: JavaScriptTypeResolver
  children:
  - System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
  type: Class
  summary: "Предоставляет абстрактный базовый класс для реализации распознавателя пользовательских типов."
  remarks: "Класс JavaScriptTypeResolver предоставляет службы для:-преобразования управляемых сведения о типе для строковое значение через <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>метод.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>      -Для разрешения строковое значение обратно в соответствующий управляемый тип с помощью <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>метод.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>       Если <xref:System.Web.Script.Serialization.JavaScriptSerializer>объект сериализует пользовательских типов, он может также включать в сериализованной строки JavaScript Object Notation (JSON) значение, содержащее сведения о типе.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Во время десериализации <xref:System.Web.Script.Serialization.JavaScriptSerializer>это строковое значение для определения подходящих управляемые ссылки затем можно ввести на который будет преобразован в строку JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer>       При указании распознаватель для <xref:System.Web.Script.Serialization.JavaScriptSerializer>будет использовать экземпляр, сериализатор <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>и <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>методы для сопоставления управляемый тип и значение строки в процессе сериализации и десериализации соответственно.</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> </xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>       Класс JavaScriptTypeResolver является базовым классом для <xref:System.Web.Script.Serialization.SimpleTypeResolver>класс, предоставляющий реализацию сопоставителя типов, который использует имя управляемого типа с указанием сборки.</xref:System.Web.Script.Serialization.SimpleTypeResolver>"
  example:
  - "The following example demonstrates how to create a custom type resolver.  \n  \n [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_0_1.vb)]\n [!code-cs[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/csharp/t-system.web.script.seri_0_1.cs)]"
  syntax:
    content: public abstract class JavaScriptTypeResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Script.Serialization.JavaScriptTypeResolver&quot;> </xref> класса."
  syntax:
    content: protected JavaScriptTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "При переопределении в производном классе возвращает <xref:System.Type>объект, связанный с указанным именем типа.</xref:System.Type>"
  remarks: "Если Сопоставитель типов, связанные с <xref:System.Web.Script.Serialization.JavaScriptSerializer>экземпляр, сериализатор использует метод ResolveType, когда он проходит по строку JSON для определения конкретный управляемый тип, к которому должны быть преобразованы в тип JSON.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  syntax:
    content: public abstract Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "Имя управляемого типа."
    return:
      type: System.Type
      description: "<xref:System.Type>Объект, связанный с указанным именем типа.</xref:System.Type>"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "При переопределении в производном классе возвращает имя типа для указанного <xref:System.Type>объекта.</xref:System.Type>"
  remarks: "Если метод ResolveTypeId возвращает либо `null` или <xref:System.String>, а затем Сопоставитель типов не поддерживает тип.</xref:System.String>"
  syntax:
    content: public abstract string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Разрешить управляемым типом."
    return:
      type: System.String
      description: "Имя указанного управляемого типа."
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: JavaScriptTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: JavaScriptTypeResolver.ResolveTypeId
