### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  summary: "Предоставляет <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> базовый класс для всех лицензий. Лицензия предоставляется для конкретного экземпляра компонента."
  remarks: "Все компоненты должны вызывать метод <xref:System.ComponentModel.License.Dispose%2A>лицензий, которые они предоставляют, когда компонент уничтожается или завершает работу.</xref:System.ComponentModel.License.Dispose%2A>"
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.License&quot;> </xref> класса."
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "При переопределении в производном классе, освобождает все ресурсы, используемые лицензией."
  remarks: "Все компоненты должны вызывать метод Dispose для лицензий, которые они предоставляют, когда компонент уничтожается или завершает работу.       Объект <xref:System.ComponentModel.LicenseProvider>можно использовать лицензии, которые он предоставляет, для отслеживания их использования.</xref:System.ComponentModel.LicenseProvider>       После использования <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.ComponentModel.License>окажется в неработоспособном состоянии.</xref:System.ComponentModel.License> После вызова Dispose, необходимо освободить все ссылки на <xref:System.ComponentModel.License>, занимаемая ими память можно удалять его сборщику мусора.</xref:System.ComponentModel.License>      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> В противном случае ресурсы <xref:System.ComponentModel.License>— не будут освобождены до сборки мусора не будет <xref:System.ComponentModel.License>деструктор объекта.</xref:System.ComponentModel.License> </xref:System.ComponentModel.License>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "При переопределении в производном классе, возвращает лицензионный ключ, предоставленной для этого компонента."
  remarks: "Объект <xref:System.ComponentModel.LicenseProvider>можно использовать любую строку символов Юникода в качестве ключа лицензии.</xref:System.ComponentModel.LicenseProvider> Ключ лицензии должны рассматриваться как непрозрачный пароль, то есть файл cookie, намеренно скрытые внутренней структуры."
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: "Ключ лицензии, предоставленной для этого компонента."
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
