### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.StandardEndpointElement
  id: StandardEndpointElement
  children:
  - System.ServiceModel.Configuration.StandardEndpointElement.#ctor
  - System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)
  - System.ServiceModel.Configuration.StandardEndpointElement.EndpointType
  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.Configuration.StandardEndpointElement.Name
  - System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  - System.ServiceModel.Configuration.StandardEndpointElement.Properties
  - System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)
  langs:
  - csharp
  name: StandardEndpointElement
  nameWithType: StandardEndpointElement
  fullName: System.ServiceModel.Configuration.StandardEndpointElement
  type: Class
  summary: "Управляет элементом стандартной конечной точки для файла конфигурации приложения службы."
  syntax:
    content: 'public abstract class StandardEndpointElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: StandardEndpointElement()
  nameWithType: StandardEndpointElement.StandardEndpointElement()
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.StandardEndpointElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Создает новый экземпляр <xref href=&quot;System.ServiceModel.Configuration.StandardEndpointElement&quot;> </xref> класса."
  syntax:
    content: protected StandardEndpointElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.StandardEndpointElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  id: ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Применяет содержимое конкретной конечной точки службы к текущему элементу конечной точки канала."
  syntax:
    content: public void ApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечную точку, которая позволяет клиентам выполнять поиск и обмен данными со службой."
    - id: channelEndpointElement
      type: System.ServiceModel.Configuration.ChannelEndpointElement
      description: "Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  id: ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Применяет содержимое конкретной конечной точки службы к текущему элементу конечной точки службы."
  syntax:
    content: public void ApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечную точку, которая позволяет клиентам выполнять поиск и обмен данными со службой."
    - id: serviceEndpointElement
      type: System.ServiceModel.Configuration.ServiceEndpointElement
      description: "Элемент конечной точки, который определяет клиентам способы поиска и взаимодействия со службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)
  id: CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: CreateServiceEndpoint(ContractDescription)
  nameWithType: StandardEndpointElement.CreateServiceEndpoint(ContractDescription)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(ContractDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "При реализации в производном классе, создает конечную точку службы в сообщение сведения, содержащиеся в указанном описании контракта."
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint (System.ServiceModel.Description.ContractDescription contractDescription);
    parameters:
    - id: contractDescription
      type: System.ServiceModel.Description.ContractDescription
      description: "Сведения о том, что содержится в сообщениях, отправляемых из конечной точки."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечная точка службы."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType
  id: EndpointType
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: EndpointType
  nameWithType: StandardEndpointElement.EndpointType
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Не реализовано."
  syntax:
    content: protected abstract Type EndpointType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>.</xref:System.Type>"
  overload: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  id: InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: InitializeAndValidate(ChannelEndpointElement)
  nameWithType: StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует и проверяет формат указанной конечной точки канала в файле конфигурации приложения службы."
  syntax:
    content: public void InitializeAndValidate (System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);
    parameters:
    - id: channelEndpointElement
      type: System.ServiceModel.Configuration.ChannelEndpointElement
      description: "Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  id: InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: InitializeAndValidate(ServiceEndpointElement)
  nameWithType: StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации приложения службы."
  syntax:
    content: public void InitializeAndValidate (System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);
    parameters:
    - id: serviceEndpointElement
      type: System.ServiceModel.Configuration.ServiceEndpointElement
      description: "Элемент конечной точки, которая позволяет клиентам выполнять поиск и обмен данными со службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)
  id: InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: InitializeFrom(ServiceEndpoint)
  nameWithType: StandardEndpointElement.InitializeFrom(ServiceEndpoint)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Гарантирует, что указанной конечной точки службы не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и что его тип совпадает с текущим типом конечной точки."
  syntax:
    content: protected virtual void InitializeFrom (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечную точку, которая позволяет клиентам выполнять поиск и обмен данными со службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name
  id: Name
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: Name
  nameWithType: StandardEndpointElement.Name
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает имя текущего элемента конечной точки из списка строк конфигурации для этого элемента."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя элемента конечной точки."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  id: OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "При вызове из производного класса загружает описание службы из файла конфигурации и применяет его к среде выполнения."
  syntax:
    content: protected abstract void OnApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечную точку, которая позволяет клиентам выполнять поиск и обмен данными со службой."
    - id: channelEndpointElement
      type: System.ServiceModel.Configuration.ChannelEndpointElement
      description: "Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  id: OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "При вызове из производного класса загружает описание службы из файла конфигурации и применяет его к среде выполнения."
  syntax:
    content: protected abstract void OnApplyConfiguration (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "Конечную точку, которая позволяет клиентам выполнять поиск и обмен данными со службой."
    - id: serviceEndpointElement
      type: System.ServiceModel.Configuration.ServiceEndpointElement
      description: "Элемент конечной точки службы, приложения службы."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  id: OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: OnInitializeAndValidate(ChannelEndpointElement)
  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "При вызове из производного класса инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации приложения службы."
  syntax:
    content: protected abstract void OnInitializeAndValidate (System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement);
    parameters:
    - id: channelEndpointElement
      type: System.ServiceModel.Configuration.ChannelEndpointElement
      description: "Элемент конечной точки, определяющий физическую передачу сообщений между клиентом и службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  id: OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: OnInitializeAndValidate(ServiceEndpointElement)
  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "При вызове из производного класса инициализирует и проверяет формат указанной конечной точки службы в файле конфигурации приложения службы."
  syntax:
    content: protected abstract void OnInitializeAndValidate (System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement);
    parameters:
    - id: serviceEndpointElement
      type: System.ServiceModel.Configuration.ServiceEndpointElement
      description: "Элемент конечной точки службы, которая позволяет клиентам выполнять поиск и обмен данными со службой."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: Properties
  nameWithType: StandardEndpointElement.Properties
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает коллекцию свойств текущего элемента конечной точки."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Коллекция свойств элемента конфигурации."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: StandardEndpointElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Восстанавливает внутреннее состояние объекта <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> объекта, включая блокировки и коллекции свойств."
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "Верхний уровень элемента конфигурации, в котором имеются вложенные элементы."
  overload: System.ServiceModel.Configuration.StandardEndpointElement.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: StandardEndpointElement()
  nameWithType: StandardEndpointElement.StandardEndpointElement()
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.StandardEndpointElement()
- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Configuration.ChannelEndpointElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ChannelEndpointElement
  nameWithType: ChannelEndpointElement
  fullName: System.ServiceModel.Configuration.ChannelEndpointElement
- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  nameWithType: StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
- uid: System.ServiceModel.Configuration.ServiceEndpointElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceEndpointElement
  nameWithType: ServiceEndpointElement
  fullName: System.ServiceModel.Configuration.ServiceEndpointElement
- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: CreateServiceEndpoint(ContractDescription)
  nameWithType: StandardEndpointElement.CreateServiceEndpoint(ContractDescription)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(ContractDescription)
- uid: System.ServiceModel.Description.ContractDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: ContractDescription
  nameWithType: ContractDescription
  fullName: System.ServiceModel.Description.ContractDescription
- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: EndpointType
  nameWithType: StandardEndpointElement.EndpointType
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: InitializeAndValidate(ChannelEndpointElement)
  nameWithType: StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ChannelEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: InitializeAndValidate(ServiceEndpointElement)
  nameWithType: StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(ServiceEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: InitializeFrom(ServiceEndpoint)
  nameWithType: StandardEndpointElement.InitializeFrom(ServiceEndpoint)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(ServiceEndpoint)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Name
  nameWithType: StandardEndpointElement.Name
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ChannelEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  nameWithType: StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(ServiceEndpoint,ServiceEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnInitializeAndValidate(ChannelEndpointElement)
  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ChannelEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnInitializeAndValidate(ServiceEndpointElement)
  nameWithType: StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(ServiceEndpointElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Properties
  nameWithType: StandardEndpointElement.Properties
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: StandardEndpointElement.Reset(ConfigurationElement)
  fullName: System.ServiceModel.Configuration.StandardEndpointElement.Reset(ConfigurationElement)
- uid: System.ServiceModel.Configuration.StandardEndpointElement.#ctor*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: StandardEndpointElement
  nameWithType: StandardEndpointElement.StandardEndpointElement
- uid: System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: StandardEndpointElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: CreateServiceEndpoint
  nameWithType: StandardEndpointElement.CreateServiceEndpoint
- uid: System.ServiceModel.Configuration.StandardEndpointElement.EndpointType*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: EndpointType
  nameWithType: StandardEndpointElement.EndpointType
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: InitializeAndValidate
  nameWithType: StandardEndpointElement.InitializeAndValidate
- uid: System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: InitializeFrom
  nameWithType: StandardEndpointElement.InitializeFrom
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Name*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Name
  nameWithType: StandardEndpointElement.Name
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: StandardEndpointElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: OnInitializeAndValidate
  nameWithType: StandardEndpointElement.OnInitializeAndValidate
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Properties*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Properties
  nameWithType: StandardEndpointElement.Properties
- uid: System.ServiceModel.Configuration.StandardEndpointElement.Reset*
  parent: System.ServiceModel.Configuration.StandardEndpointElement
  isExternal: false
  name: Reset
  nameWithType: StandardEndpointElement.Reset
