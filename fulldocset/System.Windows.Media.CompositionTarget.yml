### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.CompositionTarget
  id: CompositionTarget
  children:
  - System.Windows.Media.CompositionTarget.Dispose
  - System.Windows.Media.CompositionTarget.Rendering
  - System.Windows.Media.CompositionTarget.RootVisual
  - System.Windows.Media.CompositionTarget.TransformFromDevice
  - System.Windows.Media.CompositionTarget.TransformToDevice
  langs:
  - csharp
  name: CompositionTarget
  nameWithType: CompositionTarget
  fullName: System.Windows.Media.CompositionTarget
  type: Class
  summary: "Представляет область отображения приложения."
  remarks: "Элементу CompositionTarget является класс, представляющий поверхность отображения, на котором рисуется приложения. [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Анимации подсистема предоставляет множество возможностей для создания основанных на кадре анимации. Однако существуют сценарии приложений, в которых необходим контроль отрисовки каждого кадра. Объект элементу CompositionTarget предоставляет возможность создания пользовательской анимации на основе покадрового обратного вызова.      Настроек [!NOTE] настроек полный образец кода с помощью элементу CompositionTarget, в разделе [использование образца элементу CompositionTarget](http://go.microsoft.com/fwlink/?LinkID=160045)."
  syntax:
    content: 'public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.Dispose
  id: Dispose
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionTarget.Dispose()
  fullName: System.Windows.Media.CompositionTarget.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Удаляет <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>."
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Windows.Media.CompositionTarget.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.Rendering
  id: Rendering
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: Rendering
  nameWithType: CompositionTarget.Rendering
  fullName: System.Windows.Media.CompositionTarget.Rendering
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Происходит непосредственно перед отрисовкой объектов в дереве композиции."
  remarks: "Событие отрисовки направляется в указанный обработчик события, после применения анимации и макета в дереве композиции."
  example:
  - "The Rendering event is raised during the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] rendering process. The following example shows how you register an <xref:System.EventHandler> delegate to the static Rendering method on <xref:System.Windows.Media.CompositionTarget>.  \n  \n [!code-cs[CompositionTargetSample#CompositionTarget1](~/add/codesnippet/csharp/CompositionTargetSample/Window1.xaml.cs#compositiontarget1)]\n [!code-vb[CompositionTargetSample#CompositionTarget1](~/add/codesnippet/visualbasic/compositiontargetsample/window1.xaml.vb#compositiontarget1)]  \n  \n You can use your rendering event handler to create custom drawing content. This event handler gets called once per frame. Each time that [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] marshals the persisted rendering data in the visual tree across to the composition tree, your event handler is called. In addition, if changes to the visual tree force updates to the composition tree, your event handler is also called. Note that your event handler is called after layout has been computed. However, you can modify layout in your event handler, which means that layout will be computed once more before rendering."
  syntax:
    content: public static event EventHandler Rendering;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.RootVisual
  id: RootVisual
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
  fullName: System.Windows.Media.CompositionTarget.RootVisual
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает или задает корневой визуальный <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>."
  syntax:
    content: public virtual System.Windows.Media.Visual RootVisual { get; set; }
    return:
      type: System.Windows.Media.Visual
      description: "Визуальный корневой <xref href=&quot;System.Windows.Media.CompositionTarget&quot;> </xref>."
  overload: System.Windows.Media.CompositionTarget.RootVisual*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice
  id: TransformFromDevice
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
  fullName: System.Windows.Media.CompositionTarget.TransformFromDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает матрицу, которая может использоваться для преобразования координат из устройства назначения отрисовки данного целевого объекта."
  syntax:
    content: public abstract System.Windows.Media.Matrix TransformFromDevice { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "Матрица преобразования."
  overload: System.Windows.Media.CompositionTarget.TransformFromDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.CompositionTarget.TransformToDevice
  id: TransformToDevice
  parent: System.Windows.Media.CompositionTarget
  langs:
  - csharp
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
  fullName: System.Windows.Media.CompositionTarget.TransformToDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Возвращает матрицу, которая может использоваться для преобразования координат из этого целевого объекта к целевому устройству отрисовки."
  syntax:
    content: public abstract System.Windows.Media.Matrix TransformToDevice { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "Матрица преобразования."
  overload: System.Windows.Media.CompositionTarget.TransformToDevice*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.CompositionTarget.Dispose
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Dispose()
  nameWithType: CompositionTarget.Dispose()
  fullName: System.Windows.Media.CompositionTarget.Dispose()
- uid: System.Windows.Media.CompositionTarget.Rendering
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Rendering
  nameWithType: CompositionTarget.Rendering
  fullName: System.Windows.Media.CompositionTarget.Rendering
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.CompositionTarget.RootVisual
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
  fullName: System.Windows.Media.CompositionTarget.RootVisual
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
  fullName: System.Windows.Media.CompositionTarget.TransformFromDevice
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.CompositionTarget.TransformToDevice
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
  fullName: System.Windows.Media.CompositionTarget.TransformToDevice
- uid: System.Windows.Media.CompositionTarget.Dispose*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: Dispose
  nameWithType: CompositionTarget.Dispose
- uid: System.Windows.Media.CompositionTarget.RootVisual*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: RootVisual
  nameWithType: CompositionTarget.RootVisual
- uid: System.Windows.Media.CompositionTarget.TransformFromDevice*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformFromDevice
  nameWithType: CompositionTarget.TransformFromDevice
- uid: System.Windows.Media.CompositionTarget.TransformToDevice*
  parent: System.Windows.Media.CompositionTarget
  isExternal: false
  name: TransformToDevice
  nameWithType: CompositionTarget.TransformToDevice
