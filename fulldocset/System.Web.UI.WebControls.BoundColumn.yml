### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundColumn
  id: BoundColumn
  children:
  - System.Web.UI.WebControls.BoundColumn.#ctor
  - System.Web.UI.WebControls.BoundColumn.DataField
  - System.Web.UI.WebControls.BoundColumn.DataFormatString
  - System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  - System.Web.UI.WebControls.BoundColumn.Initialize
  - System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.BoundColumn.ReadOnly
  - System.Web.UI.WebControls.BoundColumn.thisExpr
  langs:
  - csharp
  name: BoundColumn
  nameWithType: BoundColumn
  fullName: System.Web.UI.WebControls.BoundColumn
  type: Class
  summary: "Тип столбца для <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref> управления, который привязан к полю в источнике данных."
  remarks: "Используйте тип столбца присоединенного столбца в <xref:System.Web.UI.WebControls.DataGrid>элемента управления для отображения значения поля в источнике данных.</xref:System.Web.UI.WebControls.DataGrid> Значения перечислены в одном столбце. Поле привязывается к присоединенного столбца, поэтому все обновления в источнике данных будут отражены в соответствующих ячейках элемента <xref:System.Web.UI.WebControls.DataGrid>управления.</xref:System.Web.UI.WebControls.DataGrid>      Настроек [!NOTE] настроек этот столбец имеет тип по умолчанию для <xref:System.Web.UI.WebControls.DataGrid>управления.</xref:System.Web.UI.WebControls.DataGrid>       Для управления внешним видом данного столбца используйте свойства стиля для <xref:System.Web.UI.WebControls.DataGrid>управления.</xref:System.Web.UI.WebControls.DataGrid>      Настроек [!CAUTION] настроек текст не закодированы, прежде чем он появится в BoundColumn HTML. Это дает возможность внедрения скрипта в теги HTML в тексте. Если значения для этого столбца вводятся пользователем, не забудьте проверить значения для уменьшения уязвимости системы безопасности."
  example:
  - "The following example demonstrates how to use a BoundColumn column type in the <xref:System.Web.UI.WebControls.DataGrid> control to display the fields in a data source.  \n  \n [!code-vb[Classic BoundColumn Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_358_1.aspx)]\n [!code-cs[Classic BoundColumn Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_358_1.aspx)]"
  syntax:
    content: 'public class BoundColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: BoundColumn()
  nameWithType: BoundColumn.BoundColumn()
  fullName: System.Web.UI.WebControls.BoundColumn.BoundColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;></xref> class."
  remarks: "Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.WebControls.BoundColumn>класса.</xref:System.Web.UI.WebControls.BoundColumn>"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.BoundColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[DataGridCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_158_1.aspx)]\n [!code-vb[DataGridCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public BoundColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: DataField
  nameWithType: BoundColumn.DataField
  fullName: System.Web.UI.WebControls.BoundColumn.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает имя поля из источника данных для привязки к <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref>."
  remarks: "Позволяет указать поле, связанное с <xref:System.Web.UI.WebControls.BoundColumn>.</xref:System.Web.UI.WebControls.BoundColumn> свойство DataField"
  example:
  - "The following example demonstrates how to use the DataField property to specify the name of the field in the data source to bind to the <xref:System.Web.UI.WebControls.BoundColumn>.  \n  \n [!code-vb[Classic BoundColumn Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_147_1.aspx)]\n [!code-cs[Classic BoundColumn Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_147_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Имя поля для привязки к <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref>. Значение по умолчанию — &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.BoundColumn.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
  fullName: System.Web.UI.WebControls.BoundColumn.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает строку, определяющую формат отображения элементов в столбце."
  remarks: "Свойство DataFormatString используется для предоставления пользовательского формата для элементов столбца.       Строка формата данных состоит из двух частей, разделенных двоеточием, { `A` : `Bxx` }. Например строка форматирования {0: F2} отображает число с фиксированной запятой с двумя десятичными разрядами.      Настроек [!NOTE] настроек всю строку необходимо заключать в фигурные скобки, чтобы указать, что он является строка формата, а не строковый литерал. Текст вне фигурных скобок отображается как обычный текст.       Значение перед двоеточием (`A` в примере) задает индекс параметра в список параметров (с нуля).      Настроек [!NOTE] настроек этот может принимать только значение 0, поскольку имеется только одно значение в каждой ячейке.       Символ после двоеточия (`B` в примере) задает формат отображения значения. В следующей таблице перечислены распространенные форматы.      | Форматирование знаков | Описание |   |----------------------|-----------------|   | `C`| Отображает числовые значения в формате валюты. |   | `D`| Отображает числовые значения в десятичном формате. |   | `E`| Отображает числовые значения в экспоненциальном формате (экспоненциальное). |   | `F`| Отображает числовые значения в фиксированном формате. |   | `G`| Отображает числовые значения в общем формате. |   | `N`| Отображает числовые значения в числовой формат. |   | `X`| Отображает числовые значения в шестнадцатеричном формате. |      Настроек [!NOTE] настроек символы форматирования не учитывают регистр, кроме `X`, отображающий шестнадцатеричные символы заданным регистром.       Значение, следующее за символом форматирования (`xx` в примере) указывает количество значащих цифр или десятичных разрядов.       Дополнительные сведения о строках форматирования см. в разделе [типы форматирования](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the DataFormatString property to specify various formats for the columns in the <xref:System.Web.UI.WebControls.DataGrid> control. The `Qty` column is formatted as an integer, the `Price` column is formatted as currency, the `Weight` column is formatted as a decimal number, and the `Expires` column is formatted as a short date and time string.  \n  \n [!code-vb[BoundColumnDataFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_840_1.aspx)]\n [!code-cs[BoundColumnDataFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_840_1.aspx)]"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Строка форматирования, определяющая формат отображения элементов в столбце. Значение по умолчанию — &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.BoundColumn.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  id: FormatDataValue(System.Object)
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: FormatDataValue(Object)
  nameWithType: BoundColumn.FormatDataValue(Object)
  fullName: System.Web.UI.WebControls.BoundColumn.FormatDataValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Преобразует указанное значение в формате, указанном в <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>свойство.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>"
  remarks: "Используйте метод FormatDataValue для преобразования указанного значения в формате, указанном в <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>свойство.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>      Настроек [!NOTE] настроек этот метод возвращает строку, эквивалентные значению Если <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>свойство не задано.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataValue (object dataValue);
    parameters:
    - id: dataValue
      type: System.Object
      description: "Значение для форматирования."
    return:
      type: System.String
      description: "Заданное значение, преобразованное в формат, указанный <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>свойство.</xref:System.Web.UI.WebControls.BoundColumn.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundColumn.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: BoundColumn.Initialize()
  fullName: System.Web.UI.WebControls.BoundColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Сбрасывает <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> в исходное состояние."
  remarks: "Метод Initialize используется для сброса <xref:System.Web.UI.WebControls.BoundColumn>в исходное состояние.</xref:System.Web.UI.WebControls.BoundColumn>"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает заданную ячейку в <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> в исходное состояние."
  remarks: "Метод InitializeCell возвращает заданную ячейку в <xref:System.Web.UI.WebControls.BoundColumn>в исходное состояние.</xref:System.Web.UI.WebControls.BoundColumn>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> , представляющий ячейку для восстановления."
    - id: columnIndex
      type: System.Int32
      description: "Номер столбца, где находится ячейка."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "Один из <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref> значения."
  overload: System.Web.UI.WebControls.BoundColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
  fullName: System.Web.UI.WebControls.BoundColumn.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает или задает значение, указывающее, является ли элементы в <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> можно изменить."
  remarks: "Позволяет указать свойства ReadOnly ли элементы в <xref:System.Web.UI.WebControls.BoundColumn>могут редактироваться.</xref:System.Web.UI.WebControls.BoundColumn> Это свойство также может использоваться для программного определения, является ли столбец доступен только для чтения."
  example:
  - "The following example demonstrates how to use the ReadOnly property to specify that a <xref:System.Web.UI.WebControls.BoundColumn> is read-only. The .aspx file defines three BoundColumn controls, and sets the Item column to read-only.  \n  \n [!code-cs[BoundColumnReadOnly#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_154_1.aspx)]\n [!code-vb[BoundColumnReadOnly#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_154_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элементы в <xref href=&quot;System.Web.UI.WebControls.BoundColumn&quot;> </xref> невозможно редактировать; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundColumn.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundColumn.thisExpr
  id: thisExpr
  parent: System.Web.UI.WebControls.BoundColumn
  langs:
  - csharp
  name: thisExpr
  nameWithType: BoundColumn.thisExpr
  fullName: System.Web.UI.WebControls.BoundColumn.thisExpr
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Представляет строку «!». Это поле доступно только для чтения."
  remarks: "Используйте поле thisExpr для представления «!» строки."
  syntax:
    content: public static readonly string thisExpr;
    return:
      type: System.String
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.Web.UI.WebControls.BoundColumn.#ctor
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: BoundColumn()
  nameWithType: BoundColumn.BoundColumn()
  fullName: System.Web.UI.WebControls.BoundColumn.BoundColumn()
- uid: System.Web.UI.WebControls.BoundColumn.DataField
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataField
  nameWithType: BoundColumn.DataField
  fullName: System.Web.UI.WebControls.BoundColumn.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
  fullName: System.Web.UI.WebControls.BoundColumn.DataFormatString
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: FormatDataValue(Object)
  nameWithType: BoundColumn.FormatDataValue(Object)
  fullName: System.Web.UI.WebControls.BoundColumn.FormatDataValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundColumn.Initialize
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: Initialize()
  nameWithType: BoundColumn.Initialize()
  fullName: System.Web.UI.WebControls.BoundColumn.Initialize()
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.BoundColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
  fullName: System.Web.UI.WebControls.BoundColumn.ReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundColumn.thisExpr
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: thisExpr
  nameWithType: BoundColumn.thisExpr
  fullName: System.Web.UI.WebControls.BoundColumn.thisExpr
- uid: System.Web.UI.WebControls.BoundColumn.#ctor*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: BoundColumn
  nameWithType: BoundColumn.BoundColumn
- uid: System.Web.UI.WebControls.BoundColumn.DataField*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataField
  nameWithType: BoundColumn.DataField
- uid: System.Web.UI.WebControls.BoundColumn.DataFormatString*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: DataFormatString
  nameWithType: BoundColumn.DataFormatString
- uid: System.Web.UI.WebControls.BoundColumn.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundColumn.FormatDataValue
- uid: System.Web.UI.WebControls.BoundColumn.Initialize*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: Initialize
  nameWithType: BoundColumn.Initialize
- uid: System.Web.UI.WebControls.BoundColumn.InitializeCell*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: InitializeCell
  nameWithType: BoundColumn.InitializeCell
- uid: System.Web.UI.WebControls.BoundColumn.ReadOnly*
  parent: System.Web.UI.WebControls.BoundColumn
  isExternal: false
  name: ReadOnly
  nameWithType: BoundColumn.ReadOnly
