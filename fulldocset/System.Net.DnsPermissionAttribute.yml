### YamlMime:ManagedReference
items:
- uid: System.Net.DnsPermissionAttribute
  id: DnsPermissionAttribute
  children:
  - System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.DnsPermissionAttribute.CreatePermission
  langs:
  - csharp
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute
  fullName: System.Net.DnsPermissionAttribute
  type: Class
  summary: "Задает разрешение для запроса данных от DNS-серверов."
  remarks: "Сведения о безопасности для объявления DnsPermissionAttribute хранится в метаданных конечного объекта атрибута, который является классом, к которому применяется DnsPermissionAttribute. Система затем обращается к этим сведениям, во время выполнения. <xref:System.Security.Permissions.SecurityAction>, Передается в конструктор, определяет разрешенные целевые объекты DNS.</xref:System.Security.Permissions.SecurityAction>       Эти атрибуты безопасности используются только для [декларативной безопасности](http://msdn.microsoft.com/en-us/97e21efd-6e89-4115-90d5-ad239513dad8). Для [Принудительная безопасность](http://msdn.microsoft.com/en-us/15aab1e1-6b7d-41ad-b102-c1ed7bedea27), используйте соответствующий <xref:System.Net.DnsPermission>класс.</xref:System.Net.DnsPermission>       Доступ безопасности полностью ограниченный или неограниченный полностью. Задать <xref:System.Security.Permissions.PermissionState>Свойства `true` для предоставления доступа, или `false` для нет доступа.</xref:System.Security.Permissions.PermissionState> Установите это свойство в виде именованного параметра.       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses DnsPermissionAttribute to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/csharp/t-system.net.dnspermissi_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/cpp/t-system.net.dnspermissi_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/visualbasic/t-system.net.dnspermissi_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class DnsPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.DnsPermissionAttribute&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> значение."
  remarks: "<xref:System.Security.Permissions.SecurityAction>Значение, переданное конструктору, определяет допустимые <xref:System.Net.DnsPermissionAttribute>целевых объектов.</xref:System.Net.DnsPermissionAttribute> </xref:System.Security.Permissions.SecurityAction>"
  example:
  - "The following example uses <xref:System.Net.DnsPermissionAttribute> to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/csharp/7a2591f2-0b5e-4482-b768-_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/cpp/7a2591f2-0b5e-4482-b768-_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/visualbasic/7a2591f2-0b5e-4482-b768-_1.vb)]"
  syntax:
    content: public DnsPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Один из <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> значения."
  overload: System.Net.DnsPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> action </code> Параметр не является допустимым <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Создает и возвращает новый экземпляр <xref href=&quot;System.Net.DnsPermission&quot;> </xref> класса."
  remarks: "`CreatePermission` Метод вызывается системой безопасности, не с помощью кода приложения.       Сведения о безопасности, описанные в <xref:System.Net.DnsPermissionAttribute>хранится в метаданных конечного объекта атрибута, который является классом, к которому <xref:System.Net.DnsPermissionAttribute>применяется.</xref:System.Net.DnsPermissionAttribute> </xref:System.Net.DnsPermissionAttribute> Затем система получает доступ к сведениям во время выполнения и вызывает CreatePermission. Система использует возвращенное <xref:System.Security.IPermission>для применения требований безопасности.</xref:System.Security.IPermission>"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Объект <xref href=&quot;System.Net.DnsPermission&quot;> </xref> , соответствующий объявлению безопасности."
  overload: System.Net.DnsPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.DnsPermissionAttribute.#ctor*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute
- uid: System.Net.DnsPermissionAttribute.CreatePermission*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: DnsPermissionAttribute.CreatePermission
