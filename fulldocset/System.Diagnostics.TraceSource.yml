### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSource
  id: TraceSource
  children:
  - System.Diagnostics.TraceSource.#ctor(System.String)
  - System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  - System.Diagnostics.TraceSource.Attributes
  - System.Diagnostics.TraceSource.Close
  - System.Diagnostics.TraceSource.Flush
  - System.Diagnostics.TraceSource.GetSupportedAttributes
  - System.Diagnostics.TraceSource.Listeners
  - System.Diagnostics.TraceSource.Name
  - System.Diagnostics.TraceSource.Switch
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceInformation(System.String)
  - System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  langs:
  - csharp
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
  type: Class
  summary: "Предоставляет набор методов и свойств, которые позволяют приложениям делать трассировку выполнения кода и связывать сообщения трассировки с их источником."
  remarks: "The TraceSource class is used by applications to produce traces that can be associated with the application. TraceSource provides tracing methods that allow you to easily trace events, trace data, and issue informational traces. Trace output from TraceSource can be controlled by configuration file settings. The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added. For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config. The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced. The following example shows the contents of a sample application configuration file.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <sources>  \n      <source name=\"TraceTest\" switchName=\"SourceSwitch\"   \n        switchType=\"System.Diagnostics.SourceSwitch\" >  \n        <listeners>  \n          <add name=\"console\" />  \n          <remove name =\"Default\" />  \n        </listeners>  \n      </source>  \n    </sources>  \n    <switches>  \n      <!-- You can set the level at which tracing is to occur -->  \n      <add name=\"SourceSwitch\" value=\"Warning\" />  \n        <!-- You can turn tracing off -->  \n        <!--add name=\"SourceSwitch\" value=\"Off\" -->  \n    </switches>  \n    <sharedListeners>  \n      <add name=\"console\"   \n        type=\"System.Diagnostics.ConsoleTraceListener\"   \n        initializeData=\"false\"/>  \n    </sharedListeners>  \n    <trace autoflush=\"true\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"console\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The TraceSource class is identified by the name of a source, typically the name of the application.  The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.  \n  \n TraceSource defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data. The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.  \n  \n> [!NOTE]\n>  You should not call the tracing methods during finalization. Doing so can result in an <xref:System.ObjectDisposedException> being thrown.  \n  \n You can customize the tracing output's target by adding or removing <xref:System.Diagnostics.TraceListener> instances to or from the collection stored in the <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName> property. By default, trace output is produced using an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. The preceding configuration file example demonstrates removing the <xref:System.Diagnostics.DefaultTraceListener> and adding a <xref:System.Diagnostics.ConsoleTraceListener> to produce the trace output for the trace source. For more information, see [\\&lt;listeners\\&gt;](../Topic/%3Clisteners%3E%20Element%20for%20%3Csource%3E.md) and [\\&lt;sharedListeners\\&gt;](../Topic/%3CsharedListeners%3E%20Element.md).  \n  \n> [!NOTE]\n>  Adding a trace listener to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the TraceSource methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.  \n  \n The <xref:System.Diagnostics.SourceSwitch> class provides the means to dynamically control the tracing output. The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.  You can modify the value of the source switch without recompiling your application. For information on using the configuration file to set a switch, see <xref:System.Diagnostics.Switch> and [How to: Create, Initialize and Configure Trace Switches](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <xref:System.Diagnostics.Trace.Refresh%2A> method must be called before the new settings take effect.  \n  \n The <xref:System.Diagnostics.TraceEventType> enumeration is used to define the event type of the trace message. Trace filters use the <xref:System.Diagnostics.TraceEventType> to determine if a trace listener should produce the trace message.  \n  \n The trace listeners can optionally have an additional layer of filtering through a trace filter.  If a trace listener has an associated filter, the listener calls the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method on that filter to determine whether or not to produce the trace information.  \n  \n The trace listeners use the values of the <xref:System.Diagnostics.Trace> class properties <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> to format trace output. You can use configuration file attributes to set the <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> properties. The following example sets the <xref:System.Diagnostics.Trace.AutoFlush%2A> property to `false` and the <xref:System.Diagnostics.Trace.IndentSize%2A> property to 3.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"3\" />  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following code example shows the use of the TraceSource class to forward traces to listeners.  The example also demonstrates switch and filter usage.  \n  \n [!code-cpp[System.Diagnostics.TraceSource2#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_3_1.cpp)]\n [!code-cs[System.Diagnostics.TraceSource2#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_3_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public class TraceSource
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> класса, используя указанное имя источника."
  remarks: "Имя источника используется для идентификации трассировок. Он используется <xref:System.Diagnostics.SourceFilter>для определения, является ли прослушиватель трассировки необходимость формирования трассировки.</xref:System.Diagnostics.SourceFilter> Рекомендуется использовать имя приложения, имени источника.      Настроек [!NOTE] настроек не требуется создавать новую <xref:System.Diagnostics.TraceSource>экземпляр для каждого запроса трассировки.</xref:System.Diagnostics.TraceSource> Создать <xref:System.Diagnostics.TraceSource>экземпляра и использовать его для всех запросов трассировки для приложения.</xref:System.Diagnostics.TraceSource>"
  example:
  - "The following code example shows the use of the TraceSource constructor to create a new <xref:System.Diagnostics.TraceSource> object. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/m-system.diagnostics.tra_28_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_28_1.vb)]"
  syntax:
    content: public TraceSource (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя источника (как правило, имя приложения)."
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>является пустой строкой (»»)."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  id: '#ctor(System.String,System.Diagnostics.SourceLevels)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> класса, используя указанное имя для источника и уровень источника по умолчанию, при котором она должна выдается."
  remarks: "Имя источника используется для идентификации трассировок. Он может использоваться с <xref:System.Diagnostics.SourceSwitch>для определения, если трассировка возникать и с помощью <xref:System.Diagnostics.SourceFilter>на необходимость создания трассировки.</xref:System.Diagnostics.SourceFilter> </xref:System.Diagnostics.SourceSwitch> Уровень источника по умолчанию используется <xref:System.Diagnostics.EventTypeFilter>для определения, если трассировка выдается, основанные на уровне исходного сообщения, подлежащего трассировке.</xref:System.Diagnostics.EventTypeFilter>      Настроек [!NOTE] настроек не требуется создавать новую <xref:System.Diagnostics.TraceSource>экземпляр для каждого запроса трассировки.</xref:System.Diagnostics.TraceSource> Создать <xref:System.Diagnostics.TraceSource>экземпляра и использовать его для всех запросов трассировки для приложения.</xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);
    parameters:
    - id: name
      type: System.String
      description: "Имя источника, обычно имя приложения."
    - id: defaultLevel
      type: System.Diagnostics.SourceLevels
      description: "Побитовая комбинация значений перечисления, указывающее уровень источника по умолчанию когда трассировки."
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>является пустой строкой (»»)."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Attributes
  id: Attributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает настраиваемые атрибуты переключателя определена в файле конфигурации приложения."
  remarks: "Свойства атрибутов определяет настраиваемые атрибуты, на которые ссылается файл конфигурации приложения. Настраиваемые атрибуты, которые отсутствуют ссылки, не перечисляются. Классы, наследующие от <xref:System.Diagnostics.TraceSource>класса можно добавлять настраиваемые атрибуты, переопределив <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName>метод и возвращает массив строк имен настраиваемого атрибута.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceSource>       Ниже приведен пример указания настраиваемого атрибута элемента источника трассировки `SecondTraceSourceAttribute`:```   <sources>     <source name=&quot;TraceTest&quot; switchName=&quot;TestSourceSwitch&quot;        switchType=&quot;Testing.MySourceSwitch, TraceSample&quot;        SecondTraceSourceAttribute=&quot;two&quot;>     </source>   </sources>   ```"
  example:
  - "The following code sample shows how to display the custom attributes for a <xref:System.Diagnostics.TraceSource>.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#14](~/add/codesnippet/csharp/p-system.diagnostics.tra_7_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#14](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Объект <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> содержащий настраиваемые атрибуты для переключателя трассировки."
  overload: System.Diagnostics.TraceSource.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Close
  id: Close
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Закрывает все прослушиватели трассировки в коллекции таких прослушивателей."
  remarks: "Вызовы метода Close <xref:System.Diagnostics.TraceListener.Close%2A>метод каждый прослушиватель трассировки в <xref:System.Diagnostics.TraceSource.Listeners%2A>коллекции.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Close%2A>"
  example:
  - "The following code example shows how you can use the Close method to close all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_21_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_21_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Flush
  id: Flush
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает все прослушиватели трассировки в коллекции таких прослушивателей."
  remarks: "Вызывает метод Flush <xref:System.Diagnostics.TraceListener.Flush%2A>метод каждый прослушиватель трассировки в <xref:System.Diagnostics.TraceSource.Listeners%2A>коллекции.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Flush%2A>"
  example:
  - "The following code example shows how you can use the Flush method to flush all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_15_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_15_1.vb)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает настраиваемые атрибуты, поддерживаемые источником трассировки."
  remarks: "Реализация по умолчанию для GetSupportedAttributes возвращает `null`."
  example:
  - "The following code example shows an override of the GetSupportedAttributes method to identify the custom attributes for the `MyTraceSource` class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Строковый массив, именующий настраиваемые атрибуты, поддерживаемые источником трассировки, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если настраиваемые атрибуты отсутствуют."
  overload: System.Diagnostics.TraceSource.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Listeners
  id: Listeners
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает коллекцию прослушивателей трассировки для источника трассировки."
  remarks: "Используйте это свойство для доступа, выполнения операций в прослушиватели трассировки."
  syntax:
    content: public System.Diagnostics.TraceListenerCollection Listeners { get; }
    return:
      type: System.Diagnostics.TraceListenerCollection
      description: "Объект <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> , содержащий связанный с источником прослушиватели трассировки."
  overload: System.Diagnostics.TraceSource.Listeners*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Name
  id: Name
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя источника трассировки."
  remarks: "Задается имя `name` параметр, переданный в конструктор. Можно ссылаться в источник трассировки с помощью `name` атрибут в файле конфигурации.       Следующий XML-элемент показан ссылается на источник трассировки в файле конфигурации.      ```   <configuration>     <system.diagnostics>       <sources>         <source name=&quot;TraceTest&quot;>         </source>       </sources>     </system.diagnostics>   </configuration>   ```"
  example:
  - "The following code sample shows how to name a trace source in the constructor call.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/p-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Имя источника трассировки."
  overload: System.Diagnostics.TraceSource.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Switch
  id: Switch
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает значение переключателя источника."
  remarks: "Свойство коммутатора разрешает фильтрацию сообщений перед вызовом источника трассировки прослушивателей.       Чтобы проверить, создан или учитывается трассировки вызовов переключателя. Вызывает каждый метод трассировки <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>метод <xref:System.Diagnostics.SourceSwitch>для определения необходимости продолжения трассировки.</xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Если вызов возвращает `true`, вызывается прослушиватель."
  syntax:
    content: public System.Diagnostics.SourceSwitch Switch { get; set; }
    return:
      type: System.Diagnostics.SourceSwitch
      description: "Объект <xref href=&quot;System.Diagnostics.SourceSwitch&quot;> </xref> объект, представляющий значение переключателя источника."
  overload: System.Diagnostics.TraceSource.Switch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Переключатель установлен в положение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает данные трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный тип, идентификатор события и данные трассировки.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Метод TraceData, таких как <xref:System.Diagnostics.TraceSource.TraceEvent%2A>метод, предназначен для автоматизированные средства, но она также позволяет присоединения дополнительных объекта, например экземпляр исключения в трассировку.</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       Вызовы метода TraceData <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName>метод <xref:System.Diagnostics.SourceSwitch>объект, возвращаемый <xref:System.Diagnostics.TraceSource.Switch%2A>свойство.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName> Если <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>возвращает `true`, TraceData вызывает соответствующий <xref:System.Diagnostics.TraceListener.TraceData%2A>метод всех прослушивателей.</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> В противном случае TraceData возвращается без вызова методов прослушивателей.      Настроек [!NOTE] настроек <xref:System.Diagnostics.EventLogTraceListener>объекта может превышать `id` значение 65 535.</xref:System.Diagnostics.EventLogTraceListener> Если `id` указанное значение больше 65 535, <xref:System.Diagnostics.EventLogTraceListener>объектов используют 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceData method to filter and forward a trace message to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#28](~/add/codesnippet/csharp/65c1aeb6-b0df-4e32-8afc-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#28](~/add/codesnippet/visualbasic/65c1aeb6-b0df-4e32-8afc-_1.vb)]"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Одно из значений перечисления, которое указывает тип события трассировки данных."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object
      description: "Данные трассировки."
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает данные трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный тип, идентификатор события и данные трассировки.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Метод TraceData, таких как <xref:System.Diagnostics.TraceSource.TraceEvent%2A>метод, предназначен для автоматизированные средства, но она также позволяет присоединение дополнительные объекты, такие как экземпляр исключения и трассировку стека в трассировку.</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       Вызовы метода TraceData <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>метод <xref:System.Diagnostics.SourceSwitch>объект, возвращаемый <xref:System.Diagnostics.TraceSource.Switch%2A>свойство.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Если <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>возвращает `true`, TraceData вызывает соответствующий <xref:System.Diagnostics.TraceListener.TraceData%2A>метод всех прослушивателей.</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> В противном случае TraceData возвращается без вызова методов прослушивателей.      Настроек [!NOTE] настроек <xref:System.Diagnostics.EventLogTraceListener>объекта может превышать `id` значение 65 535.</xref:System.Diagnostics.EventLogTraceListener> Если `id` указанное значение больше 65 535, <xref:System.Diagnostics.EventLogTraceListener>объектов используют 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Одно из значений перечисления, которое указывает тип события трассировки данных."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object[]
      description: "Массив объектов, содержащий данные трассировки."
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение о событии трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный тип и идентификатор события.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Метод TraceEvent предназначен для события трассировки, которые могут автоматически обрабатываться средства. Например средства мониторинга может сообщать администратору, если определенное событие, это событие регистрируется определенным источником.       Вызовы метода TraceEvent <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>метод <xref:System.Diagnostics.SourceSwitch>объект, возвращаемый <xref:System.Diagnostics.TraceSource.Switch%2A>свойство.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Если <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>возвращает `true`, TraceEvent вызывает соответствующий <xref:System.Diagnostics.TraceListener.TraceEvent%2A>метод для каждого прослушивателя.</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> В противном случае TraceEvent возвращается без вызова методов прослушивателей.       Содержимое трассировки зависит от прослушивателя. Если метод не переопределен реализацией прослушивателя, выход по умолчанию является имя источника трассировки, его числовой идентификатор и тип события.  Содержимое дополнительных трассировки зависит от прослушивателя <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>значение свойства.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      Настроек [!NOTE] настроек <xref:System.Diagnostics.EventLogTraceListener>объекта может превышать `id` значение 65 535.</xref:System.Diagnostics.EventLogTraceListener> Если `id` указанное значение больше 65 535, <xref:System.Diagnostics.EventLogTraceListener>использует 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceEvent method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#17](~/add/codesnippet/csharp/b6759a68-e7ea-4d5d-941c-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#17](~/add/codesnippet/visualbasic/b6759a68-e7ea-4d5d-941c-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Одно из значений перечисления, которое указывает тип события трассировки данных."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение о событии трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный тип, идентификатор события и сообщения.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Метод TraceEvent предназначен для события трассировки, которые могут автоматически обрабатываться средства. Например средства мониторинга может сообщать администратору, если определенное событие, это событие регистрируется определенным источником.       Вызовы метода TraceEvent <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>метод <xref:System.Diagnostics.SourceSwitch>объект, возвращаемый <xref:System.Diagnostics.TraceSource.Switch%2A>свойство.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Если <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>возвращает `true`, TraceEvent вызывает соответствующий <xref:System.Diagnostics.TraceListener.TraceEvent%2A>метод для каждого прослушивателя.</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> В противном случае TraceEvent возвращается без вызова методов прослушивателей.       Содержимое трассировки зависит от прослушивателя. Если метод не переопределен реализацией прослушивателя, выходными данными по умолчанию является имя источника трассировки, его числовой идентификатор, тип события и сообщения.  Содержимое дополнительных трассировки зависит от прослушивателя <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>значение свойства.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      Настроек [!NOTE] настроек <xref:System.Diagnostics.EventLogTraceListener>объекта может превышать `id` значение 65 535.</xref:System.Diagnostics.EventLogTraceListener> Если `id` указанное значение больше 65 535, <xref:System.Diagnostics.EventLogTraceListener>объектов используют 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#18](~/add/codesnippet/csharp/8dfa18b2-1bd6-4ef8-88ea-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#18](~/add/codesnippet/visualbasic/8dfa18b2-1bd6-4ef8-88ea-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Одно из значений перечисления, которое указывает тип события трассировки данных."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: message
      type: System.String
      description: "Записываемое сообщение трассировки."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение о событии трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный тип, идентификатор события и массив аргументов и формат.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceEvent method is intended to trace events that can be processed automatically by tools. For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.  \n  \n The TraceEvent method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property. If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, TraceEvent calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener. Otherwise, TraceEvent returns without calling the listeners' methods.  \n  \n The trace content is listener specific. The default [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method writes the source name, event type, and numeric identity in the trace header, then calls the [String.Format(IFormatProvider, String, Object\\[\\])](assetId:///M:System.String.Format(System.IFormatProvider,System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array and using the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property to format the string as the message output.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535. If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535."
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#24](~/add/codesnippet/csharp/9afa3050-f770-4c89-8f1f-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#24](~/add/codesnippet/visualbasic/9afa3050-f770-4c89-8f1f-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Одно из значений перечисления, которое указывает тип события трассировки данных."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: format
      type: System.String
      description: "Строка составного формата (см. примечания), содержащее текст, перемежаемый ноль или более элементов формата, связанных с объектами в `args` массива."
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> Массив, содержащий ноль или более объектов для форматирования."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>является недопустимым.       - или - число, которое указывает аргумент для форматирования, меньше нуля или больше или равно числу указанных объектов для форматирования."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  id: TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает информационное сообщение в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанное сообщение.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Метод TraceInformation предоставляет предназначен для пользователей, а не средства чтения информационное сообщение.       Вызовы TraceInformation <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>метод, установка `eventType` для <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>и информационное сообщение в качестве строки сообщения.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>В свою очередь вызывает метод <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>метод каждый прослушиватель трассировки.</xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>"
  syntax:
    content: public void TraceInformation (string message);
    parameters:
    - id: message
      type: System.String
      description: "Информационное сообщение для записи."
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  id: TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает информационное сообщение в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный массив объектов и сведения о форматировании.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceInformation method provides an informational message intended to be read by users and not by tools.  \n  \n TraceInformation calls the [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method, setting `eventType` to <xref:System.Diagnostics.TraceEventType?displayProperty=fullName> and passing the message content as an object array with formatting information. The [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method in turn calls the [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method of each trace listener."
  syntax:
    content: public void TraceInformation (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "Строка составного формата (см. примечания), содержащее текст, перемежаемый ноль или более элементов формата, связанных с объектами в `args` массива."
    - id: args
      type: System.Object[]
      description: "Массив, содержащий ноль или более объектов для форматирования."
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>является недопустимым.       - или - число, которое указывает аргумент для форматирования, меньше нуля или больше или равно числу указанных объектов для форматирования."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Выполнена попытка трассировки во время завершения события."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Записывает сообщение передачи трассировки в прослушиватели трассировки в <xref:System.Diagnostics.TraceSource.Listeners*>коллекции, используя указанный числовой идентификатор, сообщение и идентификатор сопутствующего действия.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Вызовы метода TraceTransfer <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>метод каждый прослушиватель трассировки в <xref:System.Diagnostics.TraceSource.Listeners%2A>свойство записывать данные трассировки.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A> Значение по умолчанию <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>метод в базовом классе <xref:System.Diagnostics.TraceListener>класса вызывает <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName>метод для обработки вызовов, установка `eventType` для <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>и добавления строковое представление `relatedActivityId` GUID `message`.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A>       TraceTransfer предназначен для использования с логические операции <xref:System.Diagnostics.CorrelationManager>.</xref:System.Diagnostics.CorrelationManager> `relatedActivityId` Параметр относится к <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>свойство <xref:System.Diagnostics.CorrelationManager>объекта.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Если логическая операция начинается в одном действии, а для перемещения в другую, второе действие регистрирует передачи с помощью вызова метода TraceTransfer. Вызов TraceTransfer новый идентификатор действия относится к предыдущему удостоверению. Скорее всего, потребитель реализации этой возможности является средство просмотра трассировки, которое может сообщать о логических операций, которые охватывают несколько действий."
  syntax:
    content: public void TraceTransfer (int id, string message, Guid relatedActivityId);
    parameters:
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: message
      type: System.String
      description: "Записываемое сообщение трассировки."
    - id: relatedActivityId
      type: System.Guid
      description: "Структура, идентифицирующая сопутствующее действие."
  overload: System.Diagnostics.TraceSource.TraceTransfer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.TraceSource.Attributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.TraceSource.Close
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
- uid: System.Diagnostics.TraceSource.Flush
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.Listeners
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceSource.Name
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
- uid: System.Diagnostics.SourceSwitch
  parent: System.Diagnostics
  isExternal: false
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.TraceSource.#ctor*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource
  nameWithType: TraceSource.TraceSource
- uid: System.Diagnostics.TraceSource.Attributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
- uid: System.Diagnostics.TraceSource.Close*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close
  nameWithType: TraceSource.Close
- uid: System.Diagnostics.TraceSource.Flush*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush
  nameWithType: TraceSource.Flush
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: TraceSource.GetSupportedAttributes
- uid: System.Diagnostics.TraceSource.Listeners*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
- uid: System.Diagnostics.TraceSource.Name*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
- uid: System.Diagnostics.TraceSource.TraceData*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData
  nameWithType: TraceSource.TraceData
- uid: System.Diagnostics.TraceSource.TraceEvent*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent
  nameWithType: TraceSource.TraceEvent
- uid: System.Diagnostics.TraceSource.TraceInformation*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation
  nameWithType: TraceSource.TraceInformation
- uid: System.Diagnostics.TraceSource.TraceTransfer*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer
  nameWithType: TraceSource.TraceTransfer
