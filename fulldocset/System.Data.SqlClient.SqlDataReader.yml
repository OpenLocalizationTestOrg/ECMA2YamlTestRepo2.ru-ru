### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataReader
  id: SqlDataReader
  children:
  - System.Data.SqlClient.SqlDataReader.Close
  - System.Data.SqlClient.SqlDataReader.Connection
  - System.Data.SqlClient.SqlDataReader.Depth
  - System.Data.SqlClient.SqlDataReader.FieldCount
  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetEnumerator
  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSchemaTable
  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.HasRows
  - System.Data.SqlClient.SqlDataReader.IsClosed
  - System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  - System.Data.SqlClient.SqlDataReader.Item(System.String)
  - System.Data.SqlClient.SqlDataReader.NextResult
  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Read
  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.RecordsAffected
  - System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  langs:
  - csharp
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
  type: Class
  summary: "Предоставляет способ чтения однопроходные потоки строк из базы данных SQL Server. Этот класс не наследуется."
  remarks: "Чтобы создать SqlDataReader, необходимо вызвать метод <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>метод <xref:System.Data.SqlClient.SqlCommand>объекта, вместо непосредственного использования конструктора.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>       Пока используется SqlDataReader, соответствующего <xref:System.Data.SqlClient.SqlConnection>является занят обслуживающий SqlDataReader, и никакие другие операции, которые могут выполняться на <xref:System.Data.SqlClient.SqlConnection>отличный от закрывает его.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection> Это состояние сохраняется до <xref:System.Data.SqlClient.SqlDataReader.Close%2A>вызывается метод SqlDataReader.</xref:System.Data.SqlClient.SqlDataReader.Close%2A> Например не удается получить выходные параметры можно только после вызова метода <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>       Изменения, внесенные в результирующий набор другим процессом или потоком во время чтения данных, могут быть видны пользователю `SqlDataReader`. Однако точное поведение зависит от времени.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>и <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>только свойства, которые могут быть вызваны после закрытия SqlDataReader.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> Несмотря на то что <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>Свойства могут быть доступны, пока существует SqlDataReader, всегда вызывайте метод <xref:System.Data.SqlClient.SqlDataReader.Close%2A>перед возвратом значения <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>гарантировать точность возвращаемого значения.</xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> </xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>       При использовании последовательного доступа (<xref:System.Data.CommandBehavior?displayProperty=fullName>), <xref:System.InvalidOperationException>будет вызываться, если положение SqlDataReader увеличивается и другой для чтения попытка выполнить операцию на предыдущий столбец.</xref:System.InvalidOperationException> </xref:System.Data.CommandBehavior?displayProperty=fullName>      Настроек [!NOTE] настроек для достижения оптимальной производительности SqlDataReader позволяет избежать создания ненужных объектов и копий данных. Таким образом, несколько вызовов методов, таких как <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>возвращают ссылку на тот же объект.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> Соблюдайте осторожность при изменении базового значения объектов, возвращаемых методами <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a SqlDataReader. The example reads through the data, writing it out to the console window. The code then closes the SqlDataReader. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._3_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._3_1.vb)]"
  syntax:
    content: 'public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.ReadAsync
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Close
  id: Close
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Закрывает <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> объекта."
  remarks: "Необходимо явно вызвать метод Close после завершения работы с помощью <xref:System.Data.SqlClient.SqlDataReader>использовать связанный <xref:System.Data.SqlClient.SqlConnection>для других целей.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataReader>       `Close` Метод заполняет значения для выходных параметров, возвращаемых значений и `RecordsAffected`, увеличивает время, необходимое для закрытия `SqlDataReader` , использованный для обработки больших или сложных запросов. Когда возвращаемые значения и число записей, затронутых запросом не являются значимыми, время, необходимое для закрытия `SqlDataReader` может быть уменьшена путем вызова <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>метод связанного <xref:System.Data.SqlClient.SqlCommand>объект перед вызовом `Close` метод.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.Cancel%2A>      Настроек [!CAUTION] настроек не следует вызывать `Close` или `Dispose` на соединение, DataReader или любого другого управляемого объекта в `Finalize` метод класса. Метод завершения следует только освобождать неуправляемые ресурсы, которыми ваш класс непосредственно владеет. Если класс не владеет все неуправляемые ресурсы, не включайте `Finalize` метод в определении класса. Дополнительные сведения см. в разделе [мусора](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._11_1.vb)]\n [!code-cs[Classic WebData SqlDataReader.Close Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._11_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> связанных с <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  syntax:
    content: protected System.Data.SqlClient.SqlConnection Connection { get; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Связанных с <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Depth
  id: Depth
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, указывающее глубину вложенности для текущей строки."
  remarks: "Внешняя таблица имеет нулевую глубину вложенности. Поставщик данных .NET Framework для SQL Server не поддерживает вложение и всегда возвращает ноль."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Глубина вложенности для текущей строки."
  overload: System.Data.SqlClient.SqlDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  id: FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает число столбцов в текущей строке."
  remarks: "Выполнение запроса, который по своей природе не возвращает строки (например, запрос на удаление), задает FieldCount значение 0. Тем не менее. Это не следует путать с запросом, который возвращает 0 строк (например, SELECT \\* FROM *таблицы* WHERE 1 = 2) в этом случае FieldCount возвращает число столбцов в таблице, включая скрытые поля. Используйте <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>для исключения скрытых полей.</xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "При размещении в недопустимом наборе записей — 0; в противном случае число столбцов в текущей строке. Значение по умолчанию — -1."
  overload: System.Data.SqlClient.SqlDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Нет текущего подключения к экземпляру SQL Server."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде логического значения."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Boolean
      description: "Значение столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде байта."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой байт.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Byte
      description: "Значение указанного столбца в виде байта."
  overload: System.Data.SqlClient.SqlDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Считывает поток байтов из указанного смещения столбца в буфер массива, начиная с заданного смещения буфера."
  remarks: "Метод GetBytes возвращает число доступных байтов в поле. В большинстве случаев это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если `GetBytes` уже используется для получения байтов из поля. Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader>читает большую структуру данных в буфер.</xref:System.Data.SqlClient.SqlDataReader> Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Если передается значение буфера `null`, GetBytes возвращает длину всего поля в байтах, не оставшийся размер, в зависимости от параметра смещения буфера.       Преобразования не выполняются; Таким образом извлеченные данные уже должны быть массив байтов."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: dataIndex
      type: System.Int64
      description: "Индекс внутри поля, с которого необходимо начать операцию чтения."
    - id: buffer
      type: System.Byte[]
      description: "Буфер, в который необходимо считать поток байтов."
    - id: bufferIndex
      type: System.Int32
      description: "Индекс в `buffer` которого начинается операция записи."
    - id: length
      type: System.Int32
      description: "Максимальная длина для копирования в буфер."
    return:
      type: System.Int64
      description: "Фактическое число считанных байтов."
  overload: System.Data.SqlClient.SqlDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде одного символа."
  remarks: "Не поддерживается для <xref:System.Data.SqlClient>.</xref:System.Data.SqlClient>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Char
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с заданного смещения буфера."
  remarks: "GetChars возвращает количество доступных символов в поле. Часто это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если `GetChars` уже используется для получения символов из поля. Это может быть так, например, если <xref:System.Data.SqlClient.SqlDataReader>читает большую структуру данных в буфер.</xref:System.Data.SqlClient.SqlDataReader> Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Фактическое число считанных символов может быть меньше запрошенного длины, если достигнут конец поля. Если передается значение буфера `null`, GetChars возвращает длину всего поля в символах не оставшийся размер, в зависимости от параметра смещения буфера.       Преобразования не выполняются; Таким образом. извлеченные данные уже должны быть массив символов.      Настроек [!NOTE] настроек метод GetChars возвращает 0, если `dataIndex` является отрицательным значением."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: dataIndex
      type: System.Int64
      description: "Индекс внутри поля, с которого необходимо начать операцию чтения."
    - id: buffer
      type: System.Char[]
      description: "Буфер, в который необходимо считать поток байтов."
    - id: bufferIndex
      type: System.Int32
      description: "Индекс в `buffer` которого начинается операция записи."
    - id: length
      type: System.Int32
      description: "Максимальная длина для копирования в буфер."
    return:
      type: System.Int64
      description: "Фактическое число считанных символов."
  overload: System.Data.SqlClient.SqlDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает строку, представляющую тип данных указанного столбца."
  remarks: "Возвращает имя типа данных.       `numeric`— синоним в SQL Server для `decimal` тип данных. `GetDataTypeName`Возвращает «десятичное число» для столбца, определенных как десятичных или числовых."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца для поиска."
    return:
      type: System.String
      description: "Строка, представляющая тип данных указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref:System.DateTime>объекта.</xref:System.DateTime>"
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTime>объекта.</xref:System.DateTime>       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.DateTime
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает значение указанного столбца в виде <xref:System.DateTimeOffset>объекта.</xref:System.DateTimeOffset>"
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.DateTimeOffset>объекта.</xref:System.DateTimeOffset>       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual DateTimeOffset GetDateTimeOffset (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.DateTimeOffset
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref:System.Decimal>объекта.</xref:System.Decimal>"
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.Decimal>объекта.</xref:System.Decimal>       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Decimal
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде числа с плавающей запятой двойной точности."
  remarks: "Преобразование не выполняется. Таким образом извлеченные данные уже должен быть двойной точности с плавающей запятой.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Double
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref:System.Collections.IEnumerator>, который выполняет итерацию <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "Несмотря на то, что этот метод можно использовать для получения явный перечислитель, в языках, которые поддерживают `foreach` конструкции, проще использовать циклы для перебора строк в модуле чтения данных."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref:System.Type>который является типом данных объекта.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Type
      description: "<xref:System.Type>Который является типом данных объекта.</xref:System.Type> Если тип не существует на клиенте, в случае определяемого пользователем типа (UDT) возвращаются из базы данных, **GetFieldType** возвращает значение null."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override T GetFieldValue<T> (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Для добавления."
    return:
      type: T
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: public override System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "Для добавления."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Для добавления."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде числа с плавающей запятой одиночной точности."
  remarks: "Преобразование не выполняется. Таким образом извлеченные данные уже должен числа с плавающей запятой одиночной точности.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Single
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде глобально уникальный идентификатор (GUID)."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть GUID.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Guid
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде 16-разрядное целое число со знаком."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 16-разрядное целое число со знаком.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int16
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде 32-разрядное целое число со знаком."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 32-разрядное целое число со знаком.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int32
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде 64-разрядное целое число со знаком."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное целое число со знаком.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int64
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает имя указанного столбца."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.String
      description: "Имя указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает порядковый номер столбца, заданному имени столбца."
  remarks: "`GetOrdinal`сначала выполняет поиск с учетом регистра. Возникает при сбое одной секунды, поиск без учета регистра (без учета регистра сравнение выполняется с помощью параметров сортировки базы данных). Если правила определения регистра для конкретного языка и региональных параметров влияют на результаты сравнений, возможны непредвиденные результаты. Например, в турецком алфавите следующий пример вызывает неверных результатов, так как файловая система в турецком использует регистр по правилам языка правил для буквы «i» в «файл». Метод создает `IndexOutOfRange` исключение, если не найден отсчитываемый от нуля порядковый номер столбца.       `GetOrdinal`не учитывает ширину японской азбуки.       Поскольку порядковым числительным более эффективны, чем поиск по имени, неэффективно вызывать `GetOrdinal` в цикле. Экономия времени при вызове `GetOrdinal` один раз и назначьте полученные результаты целочисленной переменной для использования в цикле."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-cs[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.sqlclient._27_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._27_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя столбца."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Указанное имя не является допустимым именем столбца."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> который является представлением базового типа поля, зависящий от поставщика."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "<xref:System.Int32>Представляет порядковый номер столбца.</xref:System.Int32>"
    return:
      type: System.Type
      description: "Возвращает <xref:System.Object>который является представлением базового типа поля, зависящий от поставщика.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> который является представлением базового значения конкретного поставщика."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "<xref:System.Int32>Представляет порядковый номер столбца.</xref:System.Int32>"
    return:
      type: System.Object
      description: "<xref:System.Object>Который является представлением базового значения конкретного поставщика.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает массив объектов, которые представляют собой конкретные значения базового поставщика."
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив <xref:System.Object>в который копируются значения столбцов.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Массив объектов, которые представляют собой конкретные значения базового поставщика."
  overload: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref href=&quot;System.Data.DataTable&quot;> </xref> , описывающий метаданные столбца <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Метод для GetSchemaTable возвращает метаданные о каждом столбце в следующем порядке: | Столбец DataReader | Описание |   |-----------------------|-----------------|   | AllowDBNull | Значение, если потребитель может установить для столбца значение null или если поставщик не может определить, может ли потребитель задать столбец значение null. В противном случае — не задано. Столбец может содержать значения null, даже если он не может быть присвоено значение null. |   | BaseCatalogName | Имя каталога в хранилище данных, содержащем столбец. Имеет значение NULL, если не удается определить имя базового каталога. По умолчанию этот столбец имеет значение null. |   | BaseColumnName | Имя столбца в хранилище данных. Это может отличаться от имени столбца, возвращаемого в столбце ColumnName, если используется псевдоним. Значение null, если невозможно определить имя базового столбца или если столбец набора строк является производным, но не идентично, хранилище столбцов в данных. По умолчанию этот столбец имеет значение null. |   | BaseSchemaName | Имя схемы в хранилище данных, содержащем столбец. Значение null, если невозможно определить имя базовой схемы. По умолчанию этот столбец имеет значение null. |   | BaseServerName | Имя экземпляра Microsoft SQL Server, используемые <xref:System.Data.SqlClient.SqlDataReader>. |   | BaseTableName | Имя таблицы или представления в хранилище данных, содержащей столбец.</xref:System.Data.SqlClient.SqlDataReader> Значение null, если не удается определить имя базовой таблицы. По умолчанию этот столбец имеет значение null. |   | ColumnName | Имя столбца; оно не может быть уникальным. Если не удается определить, возвращается значение null. Это имя всегда отражает последнее переименование столбца в текущем представлении или команды в тексте. |   | ColumnOrdinal | Отсчитываемый от нуля порядковый номер столбца. Этот столбец не может содержать значение null. |   | ColumnSize | Максимально возможная длина значения в столбце. Для столбцов, использующих тип данных фиксированной длины это размер типа данных. Для `nvarchar(MAX)`, `varchar(MAX)`, и `varbinary(MAX)` столбцы, которые хранятся в базе данных SQL Server, максимальный размер составляет 2 ГБ. Если эти столбцы хранятся и доступны в виде файлов, ограничения на максимальный размер определяется файловой системы. Это значение изменяется при использовании `Type System Version` ключевое слово в строке подключения.  Для новых типов они представлены в виде типов нижнего уровня. Типы данных MAX вернуть обычный 4 КБ для `nvarchar` и 8000 для `varchar`. Дополнительные сведения см. в справочнике Transact-SQL в электронной документации по SQL Server. |   | Имя_типа_данных | Возвращает строку, представляющую тип данных указанного столбца. |   | IsAliased | `true`: Имя столбца является псевдонимом.<br /><br /> `false`: Имя столбца не является псевдонимом. |   | IsAutoIncrement | `true`: Столбец присваивает значения новым строкам с фиксированным приращением.<br /><br /> `false`: Столбец не присваивает значения новым строкам с фиксированным приращением. По умолчанию этот столбец имеет `false`. |   | IsColumnSet | `true`: Столбец является разреженным столбцом, который входит в набор столбцов. |   | IsExpression | `true`: Столбец — это выражение.<br /><br /> `false`: Столбец не является выражением. |   | IsHidden | `true`: Столбец будет скрыт.<br /><br /> `false`: Столбец не является скрытым. |   | IsIdentity | `true`: Столбец является столбцом идентификаторов.<br /><br /> `false`: Столбец не является столбцом идентификаторов. |   | IsKey | `true`: Столбец является элементом набора столбцов в наборе строк, в совокупности уникально идентифицировать строку. Набор столбцов с `IsKey` значение `true` должен однозначно идентифицировать строку в наборе строк. Нет необходимости, этот набор столбцов является минимальным набором столбцов. Этот набор столбцов может быть создан из первичного ключа базовой таблицы, уникального ограничения или уникального индекса.<br /><br /> `false`: Столбец не требуется для уникальной идентификации строки. |   | IsLong | `true`: Столбец содержит большой двоичный объект (BLOB), содержащий данные очень большой длины. Определение очень большого объема данных зависит от поставщика.<br /><br /> `false`: Столбец не содержит большой двоичный объект (BLOB), содержащий данные очень большой длины. |   | IsReadOnly | `true`: Не удается изменить столбец.<br /><br /> `false`: Можно изменить столбец. |   | IsRowVersion | `true`: Столбец содержит постоянный идентификатор строки, не может быть записан и не имеет смысла значения за исключением удостоверений строки.<br /><br /> `false`: Столбец не содержит постоянный идентификатор строки, не может быть записан и не имеет смысла значения за исключением идентификации строки. |   | IsUnique | `true`: Столбец имеет тип `timestamp`.<br /><br /> `false`: Столбец не относится к типу `timestamp`. |   | NonVersionedProviderType | Тип столбца независимо от текущего `Type System Version` указано в строке подключения. Возвращаемое значение — из перечисления <xref:System.Data.SqlDbType>. |   | NumericPrecision | Если `ProviderType` является числовым типом данных, это максимальная точность столбца.</xref:System.Data.SqlDbType> Точность зависит от определения столбца. Если `ProviderType` не является числовым типом данных, это — 255. |   | NumericScale | Если `ProviderType` DBTYPE_DECIMAL или DBTYPE_NUMERIC, количество цифр справа от десятичной запятой. В противном случае это 255. |   | ProviderSpecificDataType | Возвращает тип поставщика данных столбца на основании `Type System Version` ключевое слово в строке подключения. |   | ProviderType | Индикатор типа данных столбца. Если тип данных столбца меняется от строки к строке, это должен быть объектом. Этот столбец не может содержать значение null. |   | UdtAssemblyQualifiedName | Если столбец определяемого пользователем типа (UDT), это полное имя сборки определяемого пользователем ТИПА согласно <xref:System.Type.AssemblyQualifiedName%2A>.</xref:System.Type.AssemblyQualifiedName%2A> Если столбец не является определяемым пользователем ТИПОМ, имеет значение null. |   | XmlSchemaCollectionDatabase | Имя базы данных, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionName` и `XmlSchemaCollectionOwningSchema` столбцы также имеют значение null. |   | XmlSchemaCollectionName | Имя коллекции схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic) при наличии связанной коллекции схем. Если значение равно null, `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionOwningSchema` столбцы также имеют значение null. |   | XmlSchemaCollectionOwningSchema | Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML, если строка содержит сведения о столбце XML. Это значение является `null` (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае `XmlSchemaCollectionDatabase` и `XmlSchemaCollectionName` столбцы также имеют значение null. |      Настроек [!NOTE] настроек чтобы убедиться в том, что столбцы метаданных возвращают правильные данные, необходимо вызвать метод <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>с `behavior` равным `KeyInfo`.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> В противном случае некоторые из столбцов в таблице схемы могут возвращать по умолчанию, значение null или неправильные данные."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Объект <xref href=&quot;System.Data.DataTable&quot;> </xref> , описывающий метаданные столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> Закрыт."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должен быть двоичной структуры или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть логическим или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "Значение столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должны представлять байт или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlBytes&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlChars&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять значение даты и времени, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть десятичным значением, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть числом с плавающей запятой двойной точности, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой GUID, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть 16-разрядное целое число со знаком, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 32-разрядное целое число со знаком, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть 64-разрядное знаковое целое число, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть десятичным значением, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть одинарной точности с плавающей запятой, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны представлять собой строку, или создается исключение."
  syntax:
    content: public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца как тип SQL Server."
  remarks: "GetSqlValue возвращает данные, используя собственные типы SQL Server. Для получения данных с применением типов .NET Framework, в разделе <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>"
  syntax:
    content: public virtual object GetSqlValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Object
      description: "Значение столбца в виде <xref href=&quot;System.Data.SqlDbType&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Заполняет массив <xref:System.Object>, содержащий значения для всех столбцов в записи, выраженное как типы SQL Server.</xref:System.Object>"
  remarks: "Возвращает значения для всех столбцов в записи за один вызов, используя систему типов SQL вместо системе типов среды CLR. Длина <xref:System.Object>массива не соответствует количеству столбцов в записи.</xref:System.Object> Можно передать <xref:System.Object>массив, который содержит меньшее число столбцов, содержащихся в записи.</xref:System.Object> Объем данных <xref:System.Object>содержит массив копируется в массив, начиная со столбца с порядковым номером 0.</xref:System.Object> Можно также передать <xref:System.Object>массив, длина которого превышает количество столбцов в результирующей строке.</xref:System.Object> Все оставшиеся столбцы не обрабатываются."
  syntax:
    content: public virtual int GetSqlValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив <xref:System.Object>в который копируются значения.</xref:System.Object> Значения столбцов выражаются как типы SQL Server."
    return:
      type: System.Int32
      description: "Целое число, указывающее количество скопированных столбцов."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>values</code>имеет значение null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде XML."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должны быть значения XML.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "Объект <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> значение, содержащее код XML, хранимый в соответствующее поле."
  overload: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.DataTableReader.FieldCount*>- 1</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Была предпринята попытка чтения или доступ к столбцам в закрытый <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Полученные данные не совместим с <xref href=&quot;System.Data.SqlTypes.SqlXml&quot;> </xref> типа."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает двоичный файл, изображения, varbinary, определяемого пользователем ТИПА и типов данных variant в виде <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "<xref:System.IO.Stream.ReadTimeout%2A>по умолчанию используется значение <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; но вы можете изменить <xref:System.IO.Stream.ReadTimeout%2A>через GetStream.</xref:System.IO.Stream.ReadTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A></xref:System.IO.Stream.ReadTimeout%2A>       Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.Stream>.</xref:System.IO.Stream>       <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>вызывает <xref:System.InvalidOperationException>исключение при использовании на объектом, возвращаемым GetStream при <xref:System.Data.CommandBehavior>действует.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>       <xref:System.Data.SqlClient.SqlException>исключения, вызванные из <xref:System.IO.Stream>вызываются как <xref:System.IO.IOException>исключения; в описании внутреннего исключения для <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.Stream></xref:System.Data.SqlClient.SqlException>       Следующие <xref:System.IO.Stream>члены недоступны для объектов, возвращенных GetStream: - BeginWrite - EndWrite - Length - позиции - Seek - SetLength - записи - WriteByte - WriteTimeout Если свойство соединения `ContextConnection=true`, GetStream поддерживает только извлечение синхронной данных для обоих последовательных (<xref:System.Data.CommandBehavior>) и непоследовательных (<xref:System.Data.CommandBehavior>) доступ.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior> </xref:System.IO.Stream>       Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.Stream GetStream (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.IO.Stream
      description: "Объект потока."
  overload: System.Data.SqlClient.SqlDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение разрывается или закрыто во время извлечения данных.       <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> Закрыт во время извлечения данных.       Нет данных готов для чтения (например, первый <> </> *настроек не был вызван или вернула значение false).       Попытка чтения столбец ранее чтения в последовательный режим.       Произошла асинхронной операции. Это относится ко всем Get* методы при работе в последовательном режиме, как их можно вызывать при чтении потока."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "При попытке считать данные столбца, который не существует."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Возвращаемый тип не является одним из типов ниже: - - двоичном - varbinary - определяемого пользователем типа"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в виде строки."
  remarks: "Преобразования не выполняются; Таким образом извлеченные данные уже должен быть строкой.       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.String
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает Char, NChar, NText, NVarChar, text, varChar и типы данных Variant в виде <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "<xref:System.Data.SqlClient.SqlException>исключения, вызванные из <xref:System.IO.TextReader>вызываются как <xref:System.IO.IOException>исключения; в описании внутреннего исключения для <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.IO.IOException> </xref:System.IO.TextReader></xref:System.Data.SqlClient.SqlException>       Значения NULL будут возвращены в виде пустой (0 байт) <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>вызывает <xref:System.InvalidOperationException>исключение при использовании на объект, возвращаемый GetTextReader при <xref:System.Data.CommandBehavior>действует.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       Когда свойство соединения `ContextConnection=true`, GetTextReader поддерживает только извлечение синхронной данных для обоих последовательных (<xref:System.Data.CommandBehavior>) и непоследовательных (<xref:System.Data.CommandBehavior>) доступ.</xref:System.Data.CommandBehavior> </xref:System.Data.CommandBehavior>       Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.IO.TextReader GetTextReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Столбец, который требуется получить."
    return:
      type: System.IO.TextReader
      description: "Возвращаемый объект."
  overload: System.Data.SqlClient.SqlDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение разрывается или закрыто во время извлечения данных.       <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> Закрыт во время извлечения данных.       Нет данных готов для чтения (например, первый <> </> *настроек не был вызван или вернула значение false).       Попытка чтения столбец ранее чтения в последовательный режим.       Произошла асинхронной операции. Это относится ко всем Get* методы при работе в последовательном режиме, как их можно вызывать при чтении потока."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "При попытке считать данные столбца, который не существует."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Возвращаемый тип не является одним из типов ниже: - char — nchar - ntext - nvarchar - текст — varchar"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает значение указанного столбца в виде <xref:System.TimeSpan>объекта.</xref:System.TimeSpan>"
  remarks: "Преобразования не выполняются; Таким образом, извлеченные данные уже должны быть <xref:System.TimeSpan>объекта.</xref:System.TimeSpan>       Вызовите <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>для проверки значений null перед вызовом этого метода.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>"
  syntax:
    content: public virtual TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.TimeSpan
      description: "Значение указанного столбца."
  overload: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в его собственном формате."
  remarks: "GetValue возвращает данные, с применением типов .NET Framework."
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Object
      description: "Этот метод возвращает <xref href=&quot;System.DBNull&quot;> </xref> для пустых столбцов базы данных."
  overload: System.Data.SqlClient.SqlDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Заполняет массив объектов значениями столбца текущей строки."
  remarks: "Для большинства приложений этот метод предоставляет эффективные средства для извлечения всех столбцов вместо извлечения каждого столбца отдельно.       Можно передать <xref:System.Object>массив, который содержит меньшее число столбцов, содержащихся в результирующей строке.</xref:System.Object> Объем данных <xref:System.Object>содержит массив копируется в массив.</xref:System.Object> Можно также передать <xref:System.Object>массив, длина которого превышает количество столбцов в результирующей строке.</xref:System.Object>       Этот метод возвращает <xref:System.DBNull>для пустых столбцов базы данных.</xref:System.DBNull>"
  example:
  - "The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/csharp/m-system.data.sqlclient._28_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/add/codesnippet/visualbasic/m-system.data.sqlclient._28_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив <xref:System.Object>в который необходимо скопировать столбцы атрибутов.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Число экземпляров <xref:System.Object>в массиве.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает данные типа XML в виде <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "<xref:System.Xml.XmlReader>Объект, возвращаемый GetXmlReader не поддерживает асинхронные операции.</xref:System.Xml.XmlReader> Если требуется, чтобы операции асинхронного <xref:System.Xml.XmlReader>приведения XML-столбца на сервере и использования <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>с <xref:System.Xml.XmlReader.Create%2A>.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> NVARCHAR(MAX)</xref:System.Xml.XmlReader>       <xref:System.Data.SqlClient.SqlException>исключения, вызванные из <xref:System.Xml.XmlReader>вызываются как <xref:System.Xml.XmlException>исключения; в описании внутреннего исключения для <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Xml.XmlException> </xref:System.Xml.XmlReader></xref:System.Data.SqlClient.SqlException>       <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>вызывает <xref:System.InvalidOperationException>исключение при использовании на объект, возвращаемый GetXmlReader при <xref:System.Data.CommandBehavior>действует.</xref:System.Data.CommandBehavior> </xref:System.InvalidOperationException></xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>       Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Xml.XmlReader GetXmlReader (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Значение указанного столбца."
    return:
      type: System.Xml.XmlReader
      description: "Возвращаемый объект."
  overload: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение разрывается или закрыто во время извлечения данных.       <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> Закрыт во время извлечения данных.       Нет данных готов для чтения (например, первый <> </> *настроек не был вызван или вернула значение false).       Попытка чтения ранее чтения статьи в последовательном режиме.       Произошла асинхронной операции. Это относится ко всем Get* методы при работе в последовательном режиме, как их можно вызывать при чтении потока."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "При попытке считать данные столбца, который не существует."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Возвращаемый тип не является xml."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  id: HasRows
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> содержит одну или несколько строк."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> содержит одну или несколько строк; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  id: IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает логическое значение, указывающее, является ли указанный <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> экземпляр был закрыт."
  remarks: "Не удается прочитать из <xref:System.Data.SqlClient.SqlDataReader>экземпляр, который закрывается.</xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> экземпляр закрыт; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  id: IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Определяет, является ли указанный <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> соответствует <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> ."
  remarks: "Этот член поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: protected bool IsCommandBehavior (System.Data.CommandBehavior condition);
    parameters:
    - id: condition
      type: System.Data.CommandBehavior
      description: "Объект <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> перечисления."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> имеет значение true, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае."
  overload: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения."
  remarks: "Вызовите этот метод для проверки наличия значений null столбцов перед вызовом типизированных методов get (например, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>и так далее), чтобы избежать возникновения ошибки.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>       [!code-vb[#1 SqlDataReader_IsDbNull](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)][!code-cs[SqlDataReader_IsDbNull&#1;  ](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение указанного столбца эквивалентно <xref href=&quot;System.DBNull&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Асинхронная версия <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>, который возвращает значение, которое указывает, содержит ли столбец несуществующие или отсутствующие значения.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>       Токен отмены можно использовать для запроса отказа операции до истечения времени ожидания команды. Исключения передаются в возвращенном объекте Task."
  remarks: "Дополнительные сведения см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля столбец, который требуется получить."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Инструкция отмены распространяет уведомление о том, что операции следует отменить. Это не гарантирует отмену. Если параметр <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> то этот метод эквивалентен методу <xref:System.Data.SqlClient.SqlDataReader.IsDBNull*>.</xref:System.Data.SqlClient.SqlDataReader.IsDBNull*> Возвращаемая задача должна быть отмечена как отменена."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение указанного столбца эквивалентно <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение разрывается или закрыто во время извлечения данных.       <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> Закрыт во время извлечения данных.       Нет данных готов для чтения (например, первый <> </> *настроек не был вызван или вернула значение false).       Попытка чтения ранее чтения статьи в последовательном режиме.       Произошла асинхронной операции. Это относится ко всем Get* методы при работе в последовательном режиме, как их можно вызывать при чтении потока.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>задается в строке подключения."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "При попытке считать данные столбца, который не существует."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в его собственном формате по порядковому номеру столбца."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Object
      description: "Значение указанного столбца в его собственном формате."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение указанного столбца в его собственном формате по имени столбца."
  remarks: "Сначала выполняется поиск с учетом регистра. Выполняется в случае неудачи второй поиска без учета регистра (без учета регистра сравнение выполняется с помощью параметров сортировки базы данных). Если правила определения регистра для конкретного языка и региональных параметров влияют на результаты сравнений, возможны непредвиденные результаты. Например, в турецком алфавите следующий пример вызывает неверных результатов, так как файловая система в турецком использует регистр по правилам языка правил для буквы «i» в «файл».       Этот метод не учитывает ширину японской азбуки."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Имя столбца."
    return:
      type: System.Object
      description: "Значение указанного столбца в его собственном формате."
  overload: System.Data.SqlClient.SqlDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Столбец с указанным именем не найден."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  id: NextResult
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Перемещает модуль чтения данных к следующему результату при чтении результатов пакетных инструкций Transact-SQL."
  remarks: "Используется для обработки нескольких результатов, которые могут быть созданы при выполнении пакетных инструкций Transact-SQL.       По умолчанию модуль чтения данных располагается на первый результат."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имеются дополнительные результирующие наборы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Асинхронная версия <xref:System.Data.SqlClient.SqlDataReader.NextResult*>, который перемещает модуль чтения данных к следующему результату при считывании результатов пакета [!INCLUDE[tsql](~/add/includes/tsql-md.md)] инструкции.</xref:System.Data.SqlClient.SqlDataReader.NextResult*>       Токен отмены можно использовать для запроса отказа операции до истечения времени ожидания команды.  Исключения передаются в возвращенном объекте Task."
  remarks: "Дополнительные сведения об асинхронном программировании в [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] поставщик данных для [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], в разделе [асинхронное программирование](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Инструкция отмены."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Задача, представляющая асинхронную операцию."
  overload: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов NextResultAsync более одного раза для того же экземпляра до завершения задачи.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>задается в строке подключения."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]вернул ошибку во время выполнения текста команды.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.Read
  id: Read
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Перемещает <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> к следующей записи."
  remarks: "По умолчанию <xref:System.Data.SqlClient.SqlDataReader>— перед первой записью.</xref:System.Data.SqlClient.SqlDataReader> Таким образом необходимо вызвать чтения, чтобы начать доступ к данным.       Только один `SqlDataReader` на связанные <xref:System.Data.SqlClient.SqlConnection>может быть открыт одновременно, и любые попытки открыть другой завершится ошибкой, пока первый закрыт.</xref:System.Data.SqlClient.SqlConnection> Аналогично, хотя `SqlDataReader` используется, связанный с ним `SqlConnection` обслуживает его только после вызова <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console window. The code then closes the <xref:System.Data.SqlClient.SqlDataReader>. The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имеются дополнительные строки. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlDataReader.Read*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]вернул ошибку во время выполнения текста команды.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Асинхронная версия <xref:System.Data.SqlClient.SqlDataReader.Read*>, какие усовершенствования <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> к следующей записи.</xref:System.Data.SqlClient.SqlDataReader.Read*>       Токен отмены можно использовать для запроса отказа операции до истечения времени ожидания команды. Исключения передаются в возвращенном объекте Task."
  remarks: "Если `behavior` параметр <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>имеет значение `Default`, ReadAsync считывает всю строку перед возвращением задачи.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>       Дополнительные сведения, включая примеры кода, об асинхронном программировании в [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] поставщик данных для [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], в разделе [асинхронное программирование](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Инструкция отмены."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Задача, представляющая асинхронную операцию."
  overload: System.Data.SqlClient.SqlDataReader.ReadAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов ReadAsync более одного раза для того же экземпляра до завершения задачи.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>задается в строке подключения."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: '[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]вернул ошибку во время выполнения текста команды.'
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает номер строки изменены, вставлены или удалены инструкцией Transact-SQL."
  remarks: "Свойство RecordsAffected не задано, пока не будут считаны все строки и закройте <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader>       Значение этого свойства является накапливаемым. Например, если выполняется вставка двух записей в пакетном режиме, значение `RecordsAffected` будет равно двум.       <xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>и RecordsAffected являются единственными свойствами, которые могут быть вызваны после <xref:System.Data.SqlClient.SqlDataReader>закрыт.</xref:System.Data.SqlClient.SqlDataReader></xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Число строк, которые были изменены, вставлены или удалены. не удалось выполнить 0, если строки не были затронуты или инструкция; и -1 для инструкций SELECT."
  overload: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает <xref href=&quot;System.Data.IDataReader&quot;> </xref> для указанного порядкового номера столбца."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataReader>экземпляр приводится к <xref:System.IDataRecord>интерфейс.</xref:System.IDataRecord> </xref:System.Data.SqlClient.SqlDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Порядковый номер столбца."
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> Экземпляра для указанного порядкового номера столбца."
  overload: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает число полей в <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> , не скрыты."
  remarks: "Это значение используется для определения количества полей в <xref:System.Data.SqlClient.SqlDataReader>видимы.</xref:System.Data.SqlClient.SqlDataReader> Например инструкция SELECT в частичном первичном ключе возвращает оставшиеся части ключа в виде скрытых полей. Скрытые поля всегда добавляются после видимых полей."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "Число не скрытых полей."
  overload: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDataReader.Close
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close()
  nameWithType: SqlDataReader.Close()
  fullName: System.Data.SqlClient.SqlDataReader.Close()
- uid: System.Data.SqlClient.SqlDataReader.Connection
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataReader.Depth
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(Int32)
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: SqlDataReader.GetFieldValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(String)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: SqlDataReader.GetSchemaTable()
  fullName: System.Data.SqlClient.SqlDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(Int32)
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(Int32)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(Int32)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(Int32)
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  nameWithType: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(Int32)
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(Int32)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(Int32)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(Int32)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(Int32)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(Int32)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(Int32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(Int32)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(Int32)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(Int32)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(Int32)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(Int32)
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  nameWithType: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(Object[])
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(Int32)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior(CommandBehavior)
  nameWithType: SqlDataReader.IsCommandBehavior(CommandBehavior)
  fullName: System.Data.SqlClient.SqlDataReader.IsCommandBehavior(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(Int32)
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlDataReader.Item(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.Item(Int32)
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item(String)
  nameWithType: SqlDataReader.Item(String)
  fullName: System.Data.SqlClient.SqlDataReader.Item(String)
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.Read
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
- uid: System.Data.SqlClient.SqlDataReader.Close*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Close
  nameWithType: SqlDataReader.Close
- uid: System.Data.SqlClient.SqlDataReader.Connection*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Connection
  nameWithType: SqlDataReader.Connection
- uid: System.Data.SqlClient.SqlDataReader.Depth*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Depth
  nameWithType: SqlDataReader.Depth
- uid: System.Data.SqlClient.SqlDataReader.FieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: SqlDataReader.GetBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetByte
  nameWithType: SqlDataReader.GetByte
- uid: System.Data.SqlClient.SqlDataReader.GetBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetBytes
  nameWithType: SqlDataReader.GetBytes
- uid: System.Data.SqlClient.SqlDataReader.GetChar*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChar
  nameWithType: SqlDataReader.GetChar
- uid: System.Data.SqlClient.SqlDataReader.GetChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetChars
  nameWithType: SqlDataReader.GetChars
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: SqlDataReader.GetDataTypeName
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: SqlDataReader.GetDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDateTimeOffset
  nameWithType: SqlDataReader.GetDateTimeOffset
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: SqlDataReader.GetDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetDouble
  nameWithType: SqlDataReader.GetDouble
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: SqlDataReader.GetEnumerator
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: SqlDataReader.GetFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: SqlDataReader.GetFieldValue<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: SqlDataReader.GetFieldValueAsync<T>
- uid: System.Data.SqlClient.SqlDataReader.GetFloat*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetFloat
  nameWithType: SqlDataReader.GetFloat
- uid: System.Data.SqlClient.SqlDataReader.GetGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetGuid
  nameWithType: SqlDataReader.GetGuid
- uid: System.Data.SqlClient.SqlDataReader.GetInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt16
  nameWithType: SqlDataReader.GetInt16
- uid: System.Data.SqlClient.SqlDataReader.GetInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt32
  nameWithType: SqlDataReader.GetInt32
- uid: System.Data.SqlClient.SqlDataReader.GetInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetInt64
  nameWithType: SqlDataReader.GetInt64
- uid: System.Data.SqlClient.SqlDataReader.GetName*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetName
  nameWithType: SqlDataReader.GetName
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: SqlDataReader.GetOrdinal
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: SqlDataReader.GetProviderSpecificFieldType
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: SqlDataReader.GetProviderSpecificValue
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: SqlDataReader.GetProviderSpecificValues
- uid: System.Data.SqlClient.SqlDataReader.GetSchemaTable*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: SqlDataReader.GetSchemaTable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBinary
  nameWithType: SqlDataReader.GetSqlBinary
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBoolean
  nameWithType: SqlDataReader.GetSqlBoolean
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlByte
  nameWithType: SqlDataReader.GetSqlByte
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlBytes
  nameWithType: SqlDataReader.GetSqlBytes
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlChars
  nameWithType: SqlDataReader.GetSqlChars
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDateTime
  nameWithType: SqlDataReader.GetSqlDateTime
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDecimal
  nameWithType: SqlDataReader.GetSqlDecimal
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlDouble
  nameWithType: SqlDataReader.GetSqlDouble
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlGuid
  nameWithType: SqlDataReader.GetSqlGuid
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt16
  nameWithType: SqlDataReader.GetSqlInt16
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt32
  nameWithType: SqlDataReader.GetSqlInt32
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlInt64
  nameWithType: SqlDataReader.GetSqlInt64
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlMoney
  nameWithType: SqlDataReader.GetSqlMoney
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlSingle
  nameWithType: SqlDataReader.GetSqlSingle
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlString
  nameWithType: SqlDataReader.GetSqlString
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValue
  nameWithType: SqlDataReader.GetSqlValue
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlValues
  nameWithType: SqlDataReader.GetSqlValues
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetSqlXml
  nameWithType: SqlDataReader.GetSqlXml
- uid: System.Data.SqlClient.SqlDataReader.GetStream*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetStream
  nameWithType: SqlDataReader.GetStream
- uid: System.Data.SqlClient.SqlDataReader.GetString*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetString
  nameWithType: SqlDataReader.GetString
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: SqlDataReader.GetTextReader
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: SqlDataReader.GetTimeSpan
- uid: System.Data.SqlClient.SqlDataReader.GetValue*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValue
  nameWithType: SqlDataReader.GetValue
- uid: System.Data.SqlClient.SqlDataReader.GetValues*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetValues
  nameWithType: SqlDataReader.GetValues
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: GetXmlReader
  nameWithType: SqlDataReader.GetXmlReader
- uid: System.Data.SqlClient.SqlDataReader.HasRows*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: HasRows
  nameWithType: SqlDataReader.HasRows
- uid: System.Data.SqlClient.SqlDataReader.IsClosed*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
- uid: System.Data.SqlClient.SqlDataReader.IsCommandBehavior*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsCommandBehavior
  nameWithType: SqlDataReader.IsCommandBehavior
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: SqlDataReader.IsDBNull
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: SqlDataReader.IsDBNullAsync
- uid: System.Data.SqlClient.SqlDataReader.Item*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Item
  nameWithType: SqlDataReader.Item
- uid: System.Data.SqlClient.SqlDataReader.NextResult*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResult
  nameWithType: SqlDataReader.NextResult
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: SqlDataReader.NextResultAsync
- uid: System.Data.SqlClient.SqlDataReader.Read*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: Read
  nameWithType: SqlDataReader.Read
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: SqlDataReader.ReadAsync
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
- uid: System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: SqlDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount*
  parent: System.Data.SqlClient.SqlDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
