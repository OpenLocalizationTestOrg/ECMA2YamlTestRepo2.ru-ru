### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Switch
  id: Switch
  children:
  - System.Diagnostics.Switch.#ctor(System.String,System.String)
  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.OnValueChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  langs:
  - csharp
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
  type: Class
  summary: "Предоставляет абстрактный базовый класс для создания новых переключателей отладки и трассировки."
  remarks: "Переключатель обеспечивает эффективный механизм управления выходными данными трассировки и отладки во время выполнения с помощью внешних параметров. Класс коммутатора реализует поведение по умолчанию для параметров, позволяя изменять уровень переключателя во время выполнения.       Этот класс является базовым классом для <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch>и <xref:System.Diagnostics.TraceSwitch>классы.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.BooleanSwitch> Эти переключатели используются в большинстве отладки и трассировки потребностей. Дополнительные сведения о параметрах трассировки см. в разделе [переключатели трассировки](~/add/includes/ajax-current-ext-md.md).       Трассировки или отладки перед использованием переключателя необходимо включить. Следующий синтаксис зависит от компилятора. При использовании компиляторов, отличных от C# или Visual Basic, см. в документации по вашим компилятором.      — Чтобы включить отладку в C#, добавьте `/d:DEBUG` флаг командную строку компилятора при компиляции кода, или можно добавить `#define DEBUG` в начало файла. В Visual Basic добавьте `/d:DEBUG=True` флаг компилятора командной строки.      — Чтобы включить трассировку в C#, добавьте `/d:TRACE` флаг командную строку компилятора при компиляции кода или добавьте `#define TRACE` в начало файла. В Visual Basic добавьте `/d:TRACE=True` флаг компилятора командной строки.       Чтобы задать уровень коммутатора, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить переключатель и задать его значение, удалить переключатель или очистить все параметры, заданные приложением ранее. Файл конфигурации необходимо отформатировать как в следующем примере: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;true&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` в этом разделе примере конфигурации определены <xref:System.Diagnostics.BooleanSwitch>с <xref:System.Diagnostics.Switch.DisplayName%2A>свойство `mySwitch` и <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>значение `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> </xref:System.Diagnostics.BooleanSwitch> В приложении, можно использовать настроенным значением переключателя, создав <xref:System.Diagnostics.BooleanSwitch>с тем же именем, как показано в следующем примере кода.</xref:System.Diagnostics.BooleanSwitch>       [!code-cpp[Классический коммутатора в примере&4;](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_1.cpp)][!code-cs[классический коммутатора в примере&4;  ](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_1.cs)]"
  example:
  - "The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  \n  \n The first example creates the enumeration used to set the level of the switch.  \n  \n [!code-cpp[Classic Switch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_2.cpp)]\n [!code-cs[Classic Switch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_2.cs)]\n [!code-vb[Classic Switch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_2.vb)]  \n  \n The following example creates the new switch. The code implements a `Level` property to set the value of the new switch. `Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  \n  \n [!code-cpp[Classic Switch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_3.cpp)]\n [!code-cs[Classic Switch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_3.cs)]\n [!code-vb[Classic Switch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_3.vb)]  \n  \n The following example creates a new switch in `Main`. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  \n  \n [!code-cpp[Classic Switch Example#3](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_4.cpp)]\n [!code-cs[Classic Switch Example#3](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_4.cs)]\n [!code-vb[Classic Switch Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_4.vb)]"
  syntax:
    content: public abstract class Switch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> класса."
  remarks: "При создании нового <xref:System.Diagnostics.Switch>объекта, значение `displayName` параметр используется для поиска исходных параметров переключателя.</xref:System.Diagnostics.Switch> Значение по умолчанию — пустая строка (»»).       В XML-файл конфигурации можно добавить переключатель и задать его значение, удалить переключатель или удалить все ранее заданные параметры приложением. Динамические изменения в файле конфигурации не обнаруживаются во время выполнения приложения. Необходимо остановить и перезапустить приложение, для вступления в силу изменений в файле конфигурации. Файл конфигурации форматируются как в следующем примере:```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;10&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: protected Switch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "Имя коммутатора."
    - id: description
      type: System.String
      description: "Описание для коммутатора."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> класса, задание отображаемое имя, описание и значение по умолчанию для коммутатора."
  remarks: "`displayName` Параметр используется для задания значения <xref:System.Diagnostics.Switch.DisplayName%2A>свойство и `description` параметр используется для задания значения <xref:System.Diagnostics.Switch.Description%2A>свойство.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> `defaultSwitchValue` Параметр имеет значение для переключателя, если <xref:System.Diagnostics.Switch.Value%2A>кодом или средой атрибут файла конфигурации не задано свойство.</xref:System.Diagnostics.Switch.Value%2A> В разделе <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>перегрузки для получения дополнительных сведений.</xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: protected Switch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "Имя коммутатора."
    - id: description
      type: System.String
      description: "Описание переключателя."
    - id: defaultSwitchValue
      type: System.String
      description: "Значение по умолчанию для коммутатора."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Attributes
  id: Attributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает настраиваемые атрибуты переключателя определена в файле конфигурации приложения."
  remarks: "Свойства атрибутов определяет настраиваемые атрибуты, на которые ссылается файл конфигурации приложения. Настраиваемые атрибуты, которые отсутствуют ссылки, не перечисляются. Классы, наследующие от <xref:System.Diagnostics.Switch>класса можно добавлять настраиваемые атрибуты, переопределив <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>метод и возвращает массив строк имен настраиваемого атрибута.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> </xref:System.Diagnostics.Switch>"
  example:
  - "The following code sample shows how to display the unrecognized attributes for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#15](~/add/codesnippet/csharp/p-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#15](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Объект <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> содержащий без учета регистра пользовательские атрибуты для переключателя трассировки."
  overload: System.Diagnostics.Switch.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Description
  id: Description
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает описание переключателя."
  remarks: "Это свойство должно указывать функция коммутатора; Например «включает трассировку для компонента наблюдателя каталога.» Значение задается `descriptor` параметр в <xref:System.Diagnostics.Switch.%23ctor%2A>конструктор.</xref:System.Diagnostics.Switch.%23ctor%2A>"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Описание переключателя. Значение по умолчанию — пустая строка (»»)."
  overload: System.Diagnostics.Switch.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.DisplayName
  id: DisplayName
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя, используемое для идентификации параметра."
  remarks: 'При создании нового <xref:System.Diagnostics.Switch>объекта, DisplayName находит начальные параметры переключателя.</xref:System.Diagnostics.Switch> Дополнительные сведения см. в разделе <xref:System.Diagnostics.Switch.%23ctor%2A>конструктор и [как: создание, инициализация и настройка переключателей трассировки](~/add/includes/ajax-current-ext-md.md) в документации по Visual Studio.</xref:System.Diagnostics.Switch.%23ctor%2A>'
  example:
  - "The following code example displays the display name for the switch in use by a trace source.  This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.  \n  \n [!code-cs[System.Diagnostics.TraceSource#10](~/add/codesnippet/csharp/p-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#10](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "Имя, используемое для идентификации параметра. Значение по умолчанию — пустая строка (»»)."
  overload: System.Diagnostics.Switch.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает настраиваемые атрибуты, поддерживаемые переключателем."
  remarks: "Реализация по умолчанию для метода GetSupportedAttributes возвращает `null`. Если параметр добавляется в файл конфигурации и указанные пользовательские атрибуты, которые не входят в массив строк, возвращенных GetSupportedAttributes, <xref:System.Configuration.ConfigurationException>возникает, когда загружается параметром.</xref:System.Configuration.ConfigurationException>"
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#34](~/add/codesnippet/csharp/m-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#34](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена настраиваемых атрибутов, поддерживаемых коммутатором, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если существует пользовательские атрибуты не поддерживаются."
  overload: System.Diagnostics.Switch.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Вызывается при <xref:System.Diagnostics.Switch.SwitchSetting*>Изменить свойство.</xref:System.Diagnostics.Switch.SwitchSetting*>"
  remarks: "OnSwitchSettingChanged вызывается при первом чтении переключателем <xref:System.Diagnostics.Switch.SwitchSetting%2A>из файла конфигурации и вызывается каждый раз при изменении значения параметра.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected virtual void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Вызывается при <xref:System.Diagnostics.Switch.Value*>Изменить свойство.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "Реализация по умолчанию выполняет синтаксический анализ новое значение <xref:System.Diagnostics.Switch.Value%2A>целочисленное значение, который используется для задания свойства <xref:System.Diagnostics.Switch.SwitchSetting%2A>свойство.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected virtual void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.SwitchSetting
  id: SwitchSetting
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает текущее значение параметра для этого параметра."
  syntax:
    content: protected int SwitchSetting { get; set; }
    return:
      type: System.Int32
      description: "Текущее значение параметра для этого параметра. Значение по умолчанию равно нулю."
  overload: System.Diagnostics.Switch.SwitchSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Value
  id: Value
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает значение переключателя."
  remarks: "<xref:System.Diagnostics.Switch.OnValueChanged%2A>Метод вызывается при изменении значения свойства Value.</xref:System.Diagnostics.Switch.OnValueChanged%2A> <xref:System.Diagnostics.Switch.OnValueChanged%2A>Метод выполняет синтаксический анализ значения этого свойства и преобразует его в целочисленное значение, которое затем используется для установки <xref:System.Diagnostics.Switch.SwitchSetting%2A>свойство.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.OnValueChanged%2A>"
  syntax:
    content: protected string Value { get; set; }
    return:
      type: System.String
      description: "Строка, представляющая значение переключателя."
  overload: System.Diagnostics.Switch.Value*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Значение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - или - значение не состоит из одних необязательным отрицательным знаком, за которым следуют цифры от 0 до 9.       Это значение представляет число меньше <xref:System.Int32.MinValue>или больше, чем <xref:System.Int32.MaxValue>.</xref:System.Int32.MaxValue> </xref:System.Int32.MinValue> - или -"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
- uid: System.Diagnostics.Switch.Attributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.#ctor*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch
  nameWithType: Switch.Switch
- uid: System.Diagnostics.Switch.Attributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
- uid: System.Diagnostics.Switch.Description*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
- uid: System.Diagnostics.Switch.DisplayName*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: Switch.GetSupportedAttributes
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: Switch.OnSwitchSettingChanged
- uid: System.Diagnostics.Switch.OnValueChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged
  nameWithType: Switch.OnValueChanged
- uid: System.Diagnostics.Switch.SwitchSetting*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
