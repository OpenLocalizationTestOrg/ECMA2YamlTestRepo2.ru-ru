### YamlMime:ManagedReference
items:
- uid: System.Data.ReadOnlyException
  id: ReadOnlyException
  children:
  - System.Data.ReadOnlyException.#ctor
  - System.Data.ReadOnlyException.#ctor(System.String)
  - System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.ReadOnlyException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
  type: Class
  summary: "Представляет исключение, которое выдается при попытке изменить значение столбца только для чтения."
  remarks: "ReadOnlyException возникает при вызове следующих методов или свойств при попытке изменить значение столбца только для чтения.      -   <xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName>      -   <xref:System.Data.DataRow.ItemArray%2A?displayProperty=fullName></xref:System.Data.DataRow.ItemArray%2A?displayProperty=fullName></xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName>"
  syntax:
    content: 'public class ReadOnlyException : System.Data.DataException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Data.DataException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.ReadOnlyException.#ctor
  id: '#ctor'
  parent: System.Data.ReadOnlyException
  langs:
  - csharp
  name: ReadOnlyException()
  nameWithType: ReadOnlyException.ReadOnlyException()
  fullName: System.Data.ReadOnlyException.ReadOnlyException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.ReadOnlyException&quot;> </xref> класса."
  syntax:
    content: public ReadOnlyException ();
    parameters: []
  overload: System.Data.ReadOnlyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ReadOnlyException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.ReadOnlyException
  langs:
  - csharp
  name: ReadOnlyException(String)
  nameWithType: ReadOnlyException.ReadOnlyException(String)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.ReadOnlyException&quot;> </xref> класса с заданной строки."
  syntax:
    content: public ReadOnlyException (string s);
    parameters:
    - id: s
      type: System.String
      description: "Строка, отображаемая при возникновении исключения."
  overload: System.Data.ReadOnlyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Data.ReadOnlyException
  langs:
  - csharp
  name: ReadOnlyException(SerializationInfo,StreamingContext)
  nameWithType: ReadOnlyException.ReadOnlyException(SerializationInfo,StreamingContext)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.ReadOnlyException&quot;> </xref> класс со сведениями о сериализации."
  syntax:
    content: protected ReadOnlyException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Данные, необходимые для сериализации или десериализации объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Описание источник и назначение заданного потока сериализации."
  overload: System.Data.ReadOnlyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ReadOnlyException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.ReadOnlyException
  langs:
  - csharp
  name: ReadOnlyException(String,Exception)
  nameWithType: ReadOnlyException.ReadOnlyException(String,Exception)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.ReadOnlyException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  syntax:
    content: public ReadOnlyException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: innerException
      type: System.Exception
      description: "Исключение, вызвавшее текущее исключение, или пустая ссылка (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic), если внутреннее исключение не указано."
  overload: System.Data.ReadOnlyException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.DataException
  isExternal: false
  name: System.Data.DataException
- uid: System.Data.ReadOnlyException.#ctor
  parent: System.Data.ReadOnlyException
  isExternal: false
  name: ReadOnlyException()
  nameWithType: ReadOnlyException.ReadOnlyException()
  fullName: System.Data.ReadOnlyException.ReadOnlyException()
- uid: System.Data.ReadOnlyException.#ctor(System.String)
  parent: System.Data.ReadOnlyException
  isExternal: false
  name: ReadOnlyException(String)
  nameWithType: ReadOnlyException.ReadOnlyException(String)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.ReadOnlyException
  isExternal: false
  name: ReadOnlyException(SerializationInfo,StreamingContext)
  nameWithType: ReadOnlyException.ReadOnlyException(SerializationInfo,StreamingContext)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.ReadOnlyException.#ctor(System.String,System.Exception)
  parent: System.Data.ReadOnlyException
  isExternal: false
  name: ReadOnlyException(String,Exception)
  nameWithType: ReadOnlyException.ReadOnlyException(String,Exception)
  fullName: System.Data.ReadOnlyException.ReadOnlyException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.ReadOnlyException.#ctor*
  parent: System.Data.ReadOnlyException
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException.ReadOnlyException
