### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "Исключение, возникающее, когда попытка загрузки класса завершается неудачей из-за отсутствия метода входа."
  remarks: "EntryPointNotFoundException-исключение возникает, когда общеязыковая среда выполнения не удается загрузить сборку, так как он не может идентифицировать точкой входа сборки.  Это исключение может возникать при следующих условиях:-общеязыковая среда выполнения не удается найти точку входа приложения (обычно `Main` метод) в исполняемую сборку. Точка входа приложения должны быть глобальными или `static` метода, имеющего без параметров или массив строк в качестве единственного параметра. Точка входа может возвращать `void`, или она может возвращать <xref:System.Int32>или <xref:System.UInt32>код выхода.</xref:System.UInt32> </xref:System.Int32> Сборка приложения нельзя определить более одной точки входа.      -Не удается разрешить вызов функции в Windows DLL, поскольку не удалось найти функцию. В следующем примере создается исключение EntryPointNotFoundException-исключение, поскольку User32.dll не включает функцию с именем `GetMyNumber`.           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -вызов функции в Windows DLL не удается разрешить, поскольку имя, используемое в вызове метода, не соответствует имени, находящиеся в сборке.       Часто это происходит из-за <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>неявно или явно задано значение `true`, вызванный метод включает один или несколько параметров строки ANSI и Юникод и имеет имя, используемое в вызове метода не соответствуют имени этой версии ANSI или Юникод.</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName> Ниже приведен пример, попытка вызова Windows `MessageBox` функции в библиотеке User32.dll. Так как первое определение метода задает <xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>для маршалинга строк, общий язык ищет версию расширенных символов функции, `MessageBoxW`, а не имя, используемое в вызове метода `MessageBox`.</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>  Второе определение метода решает эту проблему путем вызова `MessageBoxW` вместо `MessageBox` функции.           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -вы пытаетесь вызвать функцию в библиотеке динамической компоновки его простое имя, а не его декорированное имя.       Как правило компилятор C++ создает внутреннее имя функции DLL. Например, в следующем коде C++ определяется функция с именем `Double` в библиотеке с именем TestDll.dll.           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ] Если в коде, в следующем примере предпринимается попытка вызова функции, EntryPointNotFoundException-исключение создается, поскольку `Double` не удается найти функцию.           [!code-cs[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ] тем не менее, если функция вызывается с помощью его декорированное имя (в данном случае `?Double@@YAHH@Z`), успешного вызова функции, как показано в следующем примере.                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] можно найти декорированные имена функций, экспортируемых из библиотеки DLL с помощью служебной программы, как Dumpbin.exe.            — Выполняется попытка вызвать метод в управляемую сборку, как если бы он был неуправляемых библиотек. Чтобы увидеть это в действии, скомпилируйте сборку с именем StringUtilities.dll в следующем примере.           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ] затем Скомпилируйте и выполните следующий пример, который пытается вызвать `StringUtilities.SayGoodMorning` методу в библиотеке динамической компоновки StringUtilities.dll как если бы он был неуправляемого кода.       Результат — EntryPointNotFoundException-исключение.           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ] Чтобы устранить исключение, добавьте ссылку на управляемую сборку и доступа `StringUtilities.SayGoodMorning` точно так же, как и к любой другой метод в управляемом коде, как в следующем примере выполняется метод.                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -вы пытаетесь вызвать метод в DLL-библиотеку COM, как если бы оно библиотека DLL Windows.       Чтобы получить доступ к DLL-библиотеку COM, выберите **добавить ссылку** в Visual Studio, чтобы добавить ссылку на проект, а затем выберите библиотеку типов из **COM** вкладки.       Список начальных значений свойств для экземпляра класса EntryPointNotFoundException см. в разделе <xref:System.EntryPointNotFoundException.%23ctor%2A>конструкторов.</xref:System.EntryPointNotFoundException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> класса."
  remarks: "Этот конструктор инициализирует <xref:System.Exception.Message%2A>свойство нового экземпляра, предоставляемое системой сообщение, описывающее ошибку, например «Записи точка не найдена».</xref:System.Exception.Message%2A> Это сообщение учитывает текущую культуру системы.       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Пустая ссылка (`Nothing` в Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| Строка локализованного сообщения об. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> класса с указанным сообщением об ошибке."
  remarks: "Содержимое `message` предназначен должно быть понятно пользователю. Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Пустая ссылка (`Nothing` в Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| Строка сообщения об ошибке. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> сериализованными данными."
  remarks: "Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке."
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект, содержащий сериализованные данные объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекстные сведения об источнике или назначении."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException%2A>свойство.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>Свойство возвращает то же значение, которое передается конструктору, или пустую ссылку (`Nothing` в Visual Basic) Если <xref:System.Exception.InnerException%2A>свойства не предоставляет конструктору значение внутреннего исключения.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Ссылка на внутреннее исключение. |   | <xref:System.TypeLoadException.Message%2A>| Строка сообщения об ошибке. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: inner
      type: System.Exception
      description: "Исключение, которое стало причиной текущего исключения. Если `inner` параметр не является указателем null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic), текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
