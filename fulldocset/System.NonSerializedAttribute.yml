### YamlMime:ManagedReference
items:
- uid: System.NonSerializedAttribute
  id: NonSerializedAttribute
  children:
  - System.NonSerializedAttribute.#ctor
  langs:
  - csharp
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute
  fullName: System.NonSerializedAttribute
  type: Class
  summary: "Указывает, что поле сериализуемого класса не должны быть сериализованы. Этот класс не наследуется."
  remarks: "При использовании <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>или <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>классы для сериализации объекта, позволяет предотвратить сериализацию поле атрибутом NonSerializedAttribute.</xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> </xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> Например можно использовать этот атрибут для предотвращения сериализации конфиденциальных данных.       Целевые объекты для атрибутом NonSerializedAttribute являются открытые и закрытые поля сериализуемого класса. По умолчанию классы не сериализуются, если только они не помечены <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> В процессе сериализации все открытые и закрытые поля класса сериализуются по умолчанию. Поля, отмеченные NonSerializedAttribute исключаются при сериализации. Если вы используете <xref:System.Xml.Serialization.XmlSerializer>класс для сериализации объекта, используйте <xref:System.Xml.Serialization.XmlIgnoreAttribute>класса, чтобы получить те же функциональные возможности.</xref:System.Xml.Serialization.XmlIgnoreAttribute> </xref:System.Xml.Serialization.XmlSerializer> Можно также реализовать <xref:System.Runtime.Serialization.ISerializable>интерфейс для явного управления процессом сериализации.</xref:System.Runtime.Serialization.ISerializable> Обратите внимание, что классы, реализующие <xref:System.Runtime.Serialization.ISerializable>по-прежнему должен быть помечен атрибутом <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> </xref:System.Runtime.Serialization.ISerializable>       Чтобы применить класс NonSerializedAttribute событие, задайте расположение атрибута полем, как показано в следующем коде C#.      ```   [field:NonSerializedAttribute()]    public event ChangedEventHandler Changed;   ```Если поле не сериализуется, но она по-прежнему требуется значение по умолчанию, которое должно быть задано после десериализации, можно создать метод, который предоставляет поле со значением, а затем применить <xref:System.Runtime.Serialization.OnDeserializedAttribute>методу.</xref:System.Runtime.Serialization.OnDeserializedAttribute>       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates serialization of an object marked with the <xref:System.SerializableAttribute> attribute, and the behavior of a field marked with the NonSerializedAttribute in the serialized object.  \n  \n> [!NOTE]\n>  The code uses the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> class to serialize the object. The class is found in the system.runtime.serialization.formatters.soap.dll, which is not loaded by default into a project. To run the code, you must add a reference to the DLL to your project.  \n  \n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.nonserializedat_1.cpp)]\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.nonserializedat_1.cs)]\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.nonserializedat_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NonSerializedAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NonSerializedAttribute.#ctor
  id: '#ctor'
  parent: System.NonSerializedAttribute
  langs:
  - csharp
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.NonSerializedAttribute&quot;> </xref> класса."
  syntax:
    content: public NonSerializedAttribute ();
    parameters: []
  overload: System.NonSerializedAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.NonSerializedAttribute.#ctor
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
- uid: System.NonSerializedAttribute.#ctor*
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute.NonSerializedAttribute
