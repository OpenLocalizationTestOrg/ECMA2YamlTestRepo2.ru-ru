### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateModule
  id: SessionStateModule
  children:
  - System.Web.SessionState.SessionStateModule.#ctor
  - System.Web.SessionState.SessionStateModule.Dispose
  - System.Web.SessionState.SessionStateModule.End
  - System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateModule.Start
  langs:
  - csharp
  name: SessionStateModule
  nameWithType: SessionStateModule
  fullName: System.Web.SessionState.SessionStateModule
  type: Class
  summary: "Предоставляет службы состояния сеанса для приложения. Этот класс не наследуется."
  remarks: "Модуль SessionStateModule служит ASP. Обработчик состояния сеанса по умолчанию в NET. Он записывает данные о сеансе и извлекает их из хранилища состояния сеанса и вызывает **Session_OnStart** и **Session_OnEnd** события. Дополнительные сведения об использовании состояния сеанса ASP.NET для хранения и извлечения значений сеанса пользователя см. в разделе [Общие сведения о состоянии сеанса ASP.NET](~/add/includes/ajax-current-ext-md.md).       Можно заменить модуль SessionStateModule пользовательскую реализацию <xref:System.Web.IHttpModule>интерфейс, который управляет состоянием сеанса.</xref:System.Web.IHttpModule> Пример настраиваемого модуля состояния сеанса см. в разделе <xref:System.Web.SessionState.SessionStateUtility>Общие сведения о классе.</xref:System.Web.SessionState.SessionStateUtility>"
  syntax:
    content: 'public sealed class SessionStateModule : System.Web.SessionState.ISessionStateModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.ISessionStateModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> класса."
  remarks: "Этот конструктор не предназначен для вызова из кода приложения.       <xref:System.Web.HttpApplication>Объект создается при запуске приложения ASP.NET.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>Вызывает <xref:System.Web.SessionState.SessionStateModule>конструктор для создания <xref:System.Web.SessionState.SessionStateModule>объекта для приложения.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>Задан в конфигурации для приложения.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public SessionStateModule ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Выполняет заключительный код очистки перед <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> объект будет удален из памяти."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       <xref:System.Web.HttpApplication>Объект создается при запуске приложения ASP.NET.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>Объект создает и инициализирует <xref:System.Web.SessionState.SessionStateModule>объекта для приложения и вызывает метод Dispose при освобождении объекта.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>Задан в конфигурации для приложения.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.End
  id: End
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Происходит при завершении сеанса."
  remarks: "Завершающее событие вызывается в конце запроса при <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>был вызван метод, или если истек срок действия сеанса.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Срок действия сеанса истекает указанное число минут с <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>свойство передает без было запросов для сеанса.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A>       **Session_OnEnd** событие используется для выполнения задач очистки для сеанса, например освобождение ресурсов, используемых в сеансе.       Можно указать обработчик для события завершения путем добавления открытую подпрограмму с именем **Session_OnEnd** в файл Global.asax.      Настроек [!NOTE] настроек **Session_OnEnd** событие является только поддерживаются, если состояние сеанса <xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName>значение свойства <xref:System.Web.SessionState.SessionStateMode>, используемого по умолчанию.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A?displayProperty=fullName> Если состояние сеанса <xref:System.Web.SessionState.HttpSessionState.Mode%2A>равно <xref:System.Web.SessionState.SessionStateMode>или <xref:System.Web.SessionState.SessionStateMode>, то **Session_OnEnd** событий в файле Global.asax игнорируется.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> Если состояние сеанса <xref:System.Web.SessionState.HttpSessionState.Mode%2A>свойство имеет значение <xref:System.Web.SessionState.SessionStateMode>, то поддержка **Session_OnEnd** события определяется поставщиком хранилища пользовательских состояний сеанса.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       То, что событие окончания открытый, его можно только обработать путем добавления обработчика событий в файле Global.asax. Это ограничение реализуется потому, что <xref:System.Web.HttpApplication>экземпляров используются повторно для повышения производительности.</xref:System.Web.HttpApplication> Если время сеанса истекает, только **Session_OnEnd** выполняется события, указанного в файле Global.asax, для предотвращения вызова обработчик событий конечного, связанные с кодом <xref:System.Web.HttpApplication>экземпляр, который используется в настоящий момент.</xref:System.Web.HttpApplication>       Дополнительные сведения о файле Global.asax см. в разделе [синтаксис Global.asax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler End;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Вызывает инициализацию код при <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> создан объект."
  remarks: "Этот метод не предназначен для непосредственного вызова из кода приложения.       <xref:System.Web.HttpApplication>Создается при запуске приложения ASP.NET.</xref:System.Web.HttpApplication> <xref:System.Web.HttpApplication>Объект вызывает метод инициализации при создании <xref:System.Web.SessionState.SessionStateModule>объекта для приложения.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.HttpApplication> <xref:System.Web.SessionState.SessionStateModule>Класс указан в конфигурации для приложения.</xref:System.Web.SessionState.SessionStateModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Текущее приложение."
  overload: System.Web.SessionState.SessionStateModule.Init*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> Атрибута в [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) элемента конфигурации задано значение <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> или <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>, и приложение ASP.NET имеет меньше, чем <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> доверия."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> Атрибута в [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) элемента конфигурации задано значение <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> и <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> атрибут пуст или не существует.       - или - <xref uid=&quot;langword_csharp_mode&quot; name=&quot;mode&quot; href=&quot;&quot;> </xref> атрибута в [sessionState элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) элемента конфигурации задано значение <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> и поставщика, определяемый именем в <xref uid=&quot;langword_csharp_customProvider&quot; name=&quot;customProvider&quot; href=&quot;&quot;> </xref> не был добавлен атрибут для [поставщики элемент для sessionState (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/219d6778-9fb8-48ac-810d-bec68cf7d6aa) вложенный элемент."
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  id: ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Освобождает состояния сеанса для указанного <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public void ReleaseSessionState (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Которого для освобождения состояния сеанса."
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  id: ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Асинхронно освобождает состояния сеанса для указанного <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  syntax:
    content: public System.Threading.Tasks.Task ReleaseSessionStateAsync (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Которого для освобождения состояния сеанса."
    return:
      type: System.Threading.Tasks.Task
      description: "Объект <xref:System.Threading.Tasks.Task>для асинхронной операции.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateModule.Start
  id: Start
  parent: System.Web.SessionState.SessionStateModule
  langs:
  - csharp
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Событие, возникающее при создании сеанса."
  remarks: "Событие начала возникает в начале запроса при запуске нового сеанса. Новый сеанс запускается в том случае, если выполняется запрос, не содержит идентификатор сеанса, идентификатор сеанса является недопустимым или истек срок действия сеанса, связанного с идентификатором сеанса.       **Session_OnStart** событие используется для выполнения любой инициализации для сеанса, таких как установка значений по умолчанию для переменных сеанса.       Можно указать обработчик для события начала путем добавления открытую подпрограмму с именем **Session_OnStart** в файл Global.asax.       Дополнительные сведения о файле Global.asax см. в разделе [синтаксис Global.asax](http://msdn.microsoft.com/en-us/9ade9d4d-4d52-4e88-af52-53a9ffa26582)."
  example:
  - "The following code example shows the contents of a Global.asax file with the **Session_OnStart** and **Session_OnEnd** events defined.  \n  \n```vb#  \n<script language=\"VB\" runat=\"server\">  \nPublic Sub Session_OnStart()  \n  \nEnd Sub  \n  \nPublic Sub Session_OnEnd()  \n  \nEnd Sub  \n</script>  \n```  \n  \n```c#  \n<script language=\"C#\" runat=\"server\">  \npublic void Session_OnStart()  \n{  \n  \n}  \n  \npublic void Session_OnEnd()  \n{  \n  \n}  \n</script>  \n```"
  syntax:
    content: public event EventHandler Start;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.SessionState.SessionStateModule.#ctor
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule()
  nameWithType: SessionStateModule.SessionStateModule()
  fullName: System.Web.SessionState.SessionStateModule.SessionStateModule()
- uid: System.Web.SessionState.SessionStateModule.Dispose
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateModule.Dispose()
  fullName: System.Web.SessionState.SessionStateModule.Dispose()
- uid: System.Web.SessionState.SessionStateModule.End
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: End
  nameWithType: SessionStateModule.End
  fullName: System.Web.SessionState.SessionStateModule.End
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.SessionState.SessionStateModule.Init(System.Web.HttpApplication)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: SessionStateModule.Init(HttpApplication)
  fullName: System.Web.SessionState.SessionStateModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionState(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionState(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync(HttpContext)
  nameWithType: SessionStateModule.ReleaseSessionStateAsync(HttpContext)
  fullName: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync(HttpContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.SessionState.SessionStateModule.Start
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Start
  nameWithType: SessionStateModule.Start
  fullName: System.Web.SessionState.SessionStateModule.Start
- uid: System.Web.SessionState.SessionStateModule.#ctor*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: SessionStateModule
  nameWithType: SessionStateModule.SessionStateModule
- uid: System.Web.SessionState.SessionStateModule.Dispose*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Dispose
  nameWithType: SessionStateModule.Dispose
- uid: System.Web.SessionState.SessionStateModule.Init*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: Init
  nameWithType: SessionStateModule.Init
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionState*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionState
  nameWithType: SessionStateModule.ReleaseSessionState
- uid: System.Web.SessionState.SessionStateModule.ReleaseSessionStateAsync*
  parent: System.Web.SessionState.SessionStateModule
  isExternal: false
  name: ReleaseSessionStateAsync
  nameWithType: SessionStateModule.ReleaseSessionStateAsync
