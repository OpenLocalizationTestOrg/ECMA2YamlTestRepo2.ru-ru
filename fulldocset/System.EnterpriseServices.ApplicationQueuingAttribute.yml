### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ApplicationQueuingAttribute
  id: ApplicationQueuingAttribute
  children:
  - System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  - System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  - System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  - System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  langs:
  - csharp
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute
  type: Class
  summary: "Включает поддержку очередей для отмеченной сборки и позволяет приложению считывать вызовы методов из очередей сообщений. Этот класс не наследуется."
  remarks: "Список начальных значений свойств для экземпляра класса ApplicationQueuingAttribute см. в разделе <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>конструктор.</xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the ApplicationQueuingAttribute type.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ApplicationQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EnterpriseServices.ApplicationQueuingAttribute&quot;> </xref> класс, включая поддержку очередей для сборки и инициализируя <> </> *настроек, <> </> *настроек и <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>"
  remarks: "В следующей таблице показаны исходные значения свойств для экземпляра класса <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute>      | Свойство | Значение |   |--------------|-----------|   | `Enabled`|`true`|   | `QueueListenerEnabled`|`false`|   | `MaxListenerThreads`|zero (0)|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public ApplicationQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Возвращает или задает значение, указывающее, включена ли поддержка очередей."
  remarks: "Приложения не смогут использовать компоненты в очереди по умолчанию. При создании экземпляра <xref:System.EnterpriseServices.ApplicationQueuingAttribute>позволяет приложению использовать компоненты из очереди, но его не включить приложение для прослушивания сообщений из очереди от клиентов.</xref:System.EnterpriseServices.ApplicationQueuingAttribute>"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поддержка очередей включена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию, заданное конструктором — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  id: MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Возвращает или задает число потоков, используемых для извлечения сообщений из очереди и включения соответствующего компонента."
  remarks: "Допустимый диапазон значений для этого свойства является 0 до 1000. Значение по умолчанию равно нулю. Для вновь созданного приложения значение параметра вычисляется по алгоритму, используемому для определения количества потоков слушателей: 16 раз превышает количество процессоров на сервере.       Дополнительные сведения см. в разделе `QcListenerMaxThreads` в [приложений (COM +)](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp)."
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]"
  syntax:
    content: public int MaxListenerThreads { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число потоков, используемых для обработки сообщений, поступающих в очередь. Значение по умолчанию равно нулю."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  id: QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Возвращает или задает значение, указывающее, будет ли приложение принимать вызовы компонентов очереди от клиентов."
  remarks: ''
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]"
  syntax:
    content: public bool QueueListenerEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение принимает вызовы компонентов очереди; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
