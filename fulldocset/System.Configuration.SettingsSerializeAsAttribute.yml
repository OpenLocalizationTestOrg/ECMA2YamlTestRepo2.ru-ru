### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsSerializeAsAttribute
  id: SettingsSerializeAsAttribute
  children:
  - System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  - System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  langs:
  - csharp
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute
  fullName: System.Configuration.SettingsSerializeAsAttribute
  type: Class
  summary: "Определяет механизм сериализации, который должен использовать поставщик параметров. Этот класс не наследуется."
  remarks: "Поставщик параметров часто поддерживает несколько схем стандартной сериализацией .NET Framework. Эти схемы приведенному в <xref:System.Configuration.SettingsSerializeAs>перечисления и включать обычный текст, XML и двоичная сериализация.</xref:System.Configuration.SettingsSerializeAs> Кроме того поставщик может при желании поддержать пользовательскую схему сериализации.       С SettingsSerializeAsAttribute можно указать, какой механизм сериализации должен использоваться для класса параметры данного приложения или свойства. Этот атрибут считается запросом к поставщику параметров. Он может быть пропущен или приводят к ошибке, если поставщик или тип индивидуального свойства не поддерживает конкретную схему сериализации. Если этот атрибут отсутствует, поставщик предоставит механизм сериализации по умолчанию, наиболее часто в виде обычного текста.       Несмотря на то, что поставщик параметров разрешается обеспечить динамическое изменение механизма сериализации во время выполнения, но это не типичные возможности."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]

      public sealed class SettingsSerializeAsAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  id: '#ctor(System.Configuration.SettingsSerializeAs)'
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.SettingsSerializeAsAttribute&quot;> </xref> класса."
  remarks: "Если поставщик параметров или тип свойства, для преобразования не поддерживает схему сериализации, определяемое `serializeAs` параметр, операция может иметь одно из следующих результатов:-поставщик параметров может пропустить атрибут и использовать его схему сериализации по умолчанию.      -Процесс сериализации может прерваться без ответа. Свойства параметров приложения не будут сохранены.      -Исключения могут возникать во время сериализации."
  syntax:
    content: public SettingsSerializeAsAttribute (System.Configuration.SettingsSerializeAs serializeAs);
    parameters:
    - id: serializeAs
      type: System.Configuration.SettingsSerializeAs
      description: "Объект <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> перечислимое значение, указывающее схему сериализации."
  overload: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  id: SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  langs:
  - csharp
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> значение перечисления, указывающее схему сериализации."
  remarks: "Это свойство задается <xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>конструктор.</xref:System.Configuration.SettingsSerializeAsAttribute.%23ctor%2A>"
  syntax:
    content: public System.Configuration.SettingsSerializeAs SerializeAs { get; }
    return:
      type: System.Configuration.SettingsSerializeAs
      description: "Объект <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> перечислимое значение, указывающее схему сериализации."
  overload: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute(SettingsSerializeAs)
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
  fullName: System.Configuration.SettingsSerializeAsAttribute.SettingsSerializeAsAttribute(SettingsSerializeAs)
- uid: System.Configuration.SettingsSerializeAs
  parent: System.Configuration
  isExternal: false
  name: SettingsSerializeAs
  nameWithType: SettingsSerializeAs
  fullName: System.Configuration.SettingsSerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
  fullName: System.Configuration.SettingsSerializeAsAttribute.SerializeAs
- uid: System.Configuration.SettingsSerializeAsAttribute.#ctor*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SettingsSerializeAsAttribute
  nameWithType: SettingsSerializeAsAttribute.SettingsSerializeAsAttribute
- uid: System.Configuration.SettingsSerializeAsAttribute.SerializeAs*
  parent: System.Configuration.SettingsSerializeAsAttribute
  isExternal: false
  name: SerializeAs
  nameWithType: SettingsSerializeAsAttribute.SerializeAs
