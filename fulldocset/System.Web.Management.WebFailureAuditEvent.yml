### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebFailureAuditEvent
  id: WebFailureAuditEvent
  children:
  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebFailureAuditEvent
  nameWithType: WebFailureAuditEvent
  fullName: System.Web.Management.WebFailureAuditEvent
  type: Class
  summary: "Предоставляет сведения о сбоях безопасности."
  remarks: "Мониторинг состояния ASP.NET позволяет производства и операции персоналу управлять развернутыми веб-приложениями. <xref:System.Web.Management?displayProperty=fullName>Пространство имен содержит типы событий, отвечающие за упаковку данных о состоянии работоспособности приложений и типы поставщика, ответственные за обработку этих данных.</xref:System.Web.Management?displayProperty=fullName> Он также содержит вспомогательные типы, которые помогут при управлении событиями состояния.       Класс WebFailureAuditEvent используется при сбое операции безопасности. Примером этого является сбой авторизации URL-адреса для веб-запроса.       По умолчанию ASP.NET настроена для вызова события WebFailureAuditEvent для следующих компонентов:-авторизация файлов. ASP.NET предпринимает попытку авторизации файлов, только если удостоверение Windows связана с запросом. Код аудита связанные события — <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.</xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>      -Авторизация URL-адреса. Управление неавторизованными попытками доступа к ресурсу URL-адрес. Неудачных попыток доступа анонимных пользователей не подлежат аудиту, так как в большинстве случаев допустимо сбоя анонимную проверку подлинности. Код аудита связанные события — <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.</xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>      -Общие необработанные или необработанные условия безопасности. Ниже приведен список кодов событий, связанных с данными условиями:- <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>- <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>- <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>- <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>- <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>при WebFailureAuditEvent события, наблюдение за работоспособностью ASP.NET увеличивает значение связанных счетчиков производительности событий аудита отказов, а затем проверяет `healthMonitoring` раздел конфигурации для определения ли все поставщики подписаться на событие.</xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException> </xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException> </xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure> </xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure> </xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure> Если поставщики подписаться на событие, ASP.NET отправляет событие им для обработки.      Настроек [!NOTE] настроек для просмотра счетчиков событий аудита отказов в системном мониторе (PerfMon) в **добавить счетчики** выберите **ASP.NET** из **объект производительности** раскрывающемся списке выберите **событий аудита отказов** счетчик производительности и нажмите кнопку **добавить** кнопки. Дополнительные сведения см. в разделе [с помощью системного монитора (PerfMon) с приложениями ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) документации IIS на узле MSDN.      Настроек [!NOTE] настроек в большинстве случаев можно будет использовать типы мониторинга состояния ASP.NET как реализованные и управлять системой мониторинга состояния, указав значения в `healthMonitoring` раздел конфигурации. Также можно наследовать от типов наблюдение за работоспособностью, чтобы создавать собственные пользовательские события и поставщиков. Пример создания класса, производного от класса WebFailureAuditEvent см. в разделе."
  example:
  - "The following code example demonstrates how to derive from the WebFailureAuditEvent class to create a custom audit event.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._22_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._22_1.cs)]  \n  \n The following configuration excerpt shows how to enable ASP.NET to use the WebFailureAuditEvent event.  \n  \n```  \n<healthMonitoring   \nenabled=\"true\"  \nheartBeatInterval=\"0\">   \n<providers>  \n<add name=\"EventLogProvider\"   \ntype=\"System.Web.Management.EventLogWebEventProvider,  \nSystem.Web,Version=2.0.3600.0,Culture=neutral,  \nPublicKeyToken=b03f5f7f11d50a3a\"/>  \n</providers>  \n  \n<eventMappings>  \n<add  name=\"SampleWebFailureAuditEvent\"   \ntype=\"SamplesAspNet.SampleWebFailureAuditEvent,  \nwebfailureauditevent,Version=1.0.1663.31140,   \nCulture=neutral,   \nPublicKeyToken=0d1fa0f69d94de96,   \nprocessorArchitecture=MSIL\"/>  \n</eventMappings>  \n  \n<rules>  \n<add name=\"Custom Failure Audit Default\"  \neventName=\" SampleWebFailureAuditEvent \"  \nprovider=\"EventLogProvider\"  \nprofile=\"Default\"/>    \n</rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: WebFailureAuditEvent(String,Object,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Management.WebFailureAuditEvent&quot;> </xref> класса с помощью предоставленных параметров."
  remarks: "Этот конструктор используется внутренне системой мониторинга состояния ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebFailureAuditEvent>, но вы можете вызвать этот конструктор при реализации собственного типа события, который наследует от класса</xref:System.Web.Management.WebFailureAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/add/codesnippet/visualbasic/a50fb7f5-904a-42fa-8a42-_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#2](~/add/codesnippet/csharp/a50fb7f5-904a-42fa-8a42-_1.cs)]"
  syntax:
    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Описание события."
    - id: eventSource
      type: System.Object
      description: "Объект, который является источником события."
    - id: eventCode
      type: System.Int32
      description: "Код, связанный с событием. При реализации пользовательского события код события должно быть больше <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebFailureAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: WebFailureAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Management.WebFailureAuditEvent&quot;> </xref> класса с помощью предоставленных параметров."
  remarks: "Этот конструктор используется внутренне системой мониторинга состояния ASP.NET. Он никогда не будет использоваться для создания экземпляра <xref:System.Web.Management.WebFailureAuditEvent>, но вы можете вызвать этот конструктор при реализации собственного типа события, который наследует от класса</xref:System.Web.Management.WebFailureAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/add/codesnippet/visualbasic/c4dd7ba1-3445-4de0-9d16-_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#3](~/add/codesnippet/csharp/c4dd7ba1-3445-4de0-9d16-_1.cs)]"
  syntax:
    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "Описание события."
    - id: eventSource
      type: System.Object
      description: "Объект, который является источником события."
    - id: eventCode
      type: System.Int32
      description: "Код, связанный с событием. При реализации пользовательского события код события должно быть больше <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> Значение, указывающее подробный идентификатор для события."
  overload: System.Web.Management.WebFailureAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Увеличивает значение счетчика событий аудита отказов."
  remarks: "Счетчик производительности аудит событий отказов отслеживает количество событий сбоя аудита с момента запуска приложения. Этот метод также вызывает родительский <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>метод, который увеличивает значение счетчика событий.</xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> Этот счетчик отслеживает общее количество событий, вызванных.       Чтобы просмотреть эти счетчики производительности в системном мониторе (PerfMon), в **добавить счетчики** выберите **ASP.NET** из **объект производительности** раскрывающегося списка выберите счетчик производительности, который вы хотите просмотреть и нажмите кнопку **добавить** кнопки. Дополнительные сведения см. в разделе [с помощью системного монитора (PerfMon) с приложениями ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) документации IIS на узле MSDN."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebAuditEvent
  isExternal: false
  name: System.Web.Management.WebAuditEvent
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent(String,Object,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebFailureAuditEvent.#ctor*
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters
