### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.Manipulator2D
  id: Manipulator2D
  children:
  - System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)
  - System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)
  - System.Windows.Input.Manipulations.Manipulator2D.GetHashCode
  - System.Windows.Input.Manipulations.Manipulator2D.Id
  - System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  - System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  - System.Windows.Input.Manipulations.Manipulator2D.X
  - System.Windows.Input.Manipulations.Manipulator2D.Y
  langs:
  - csharp
  name: Manipulator2D
  nameWithType: Manipulator2D
  fullName: System.Windows.Input.Manipulations.Manipulator2D
  type: Struct
  summary: "Представляет двухмерный манипулятор в некоторый момент времени."
  syntax:
    content: public struct Manipulator2D
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)
  id: '#ctor(System.Int32,System.Single,System.Single)'
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: Manipulator2D(Int32,Single,Single)
  nameWithType: Manipulator2D.Manipulator2D(Int32,Single,Single)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Manipulator2D(Int32,Single,Single)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Создает новый <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект с указанными свойствами."
  remarks: "X и y параметров должны быть конечным числом."
  syntax:
    content: public Manipulator2D (int id, float x, float y);
    parameters:
    - id: id
      type: System.Int32
      description: "Уникальный идентификатор данного манипулятора."
    - id: x
      type: System.Single
      description: "Координата по оси x манипулятор."
    - id: y
      type: System.Single
      description: "Координата по оси y манипулятор."
  overload: System.Windows.Input.Manipulations.Manipulator2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>x</code>-coordinate or <code>y</code>-coordinate are <xref uid=&quot;langword_csharp_float.NaN&quot; name=&quot;float.NaN&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_float.PositiveInfinity&quot; name=&quot;float.PositiveInfinity&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_float.NegativeInfinity&quot; name=&quot;float.NegativeInfinity&quot; href=&quot;&quot;></xref>. Эти значения будут недопустимы."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Manipulator2D.Equals(Object)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Определяет, является ли это <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект имеет то же значение, что и заданный <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> Объект для сравнения для этого объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекты относятся к одному типу и представляют одинаковые значения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.Manipulations.Manipulator2D.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode
  id: GetHashCode
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Manipulator2D.GetHashCode()
  fullName: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает хэш-код данного экземпляра."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код данного экземпляра."
  overload: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.Id
  id: Id
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: Id
  nameWithType: Manipulator2D.Id
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Id
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает уникальный идентификатор для этого <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  syntax:
    content: public int Id { get; set; }
    return:
      type: System.Int32
      description: "Уникальный идентификатор для этого <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  overload: System.Windows.Input.Manipulations.Manipulator2D.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  id: op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: op_Equality(Manipulator2D,Manipulator2D)
  nameWithType: Manipulator2D.op_Equality(Manipulator2D,Manipulator2D)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.op_Equality(Manipulator2D,Manipulator2D)
  type: Operator
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Определяет, являются ли два заданных <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объектов имеют одинаковое значение."
  syntax:
    content: public static bool op_Equality (System.Windows.Input.Manipulations.Manipulator2D manipulator1, System.Windows.Input.Manipulations.Manipulator2D manipulator2);
    parameters:
    - id: manipulator1
      type: System.Windows.Input.Manipulations.Manipulator2D
      description: "Первый <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект для сравнения."
    - id: manipulator2
      type: System.Windows.Input.Manipulations.Manipulator2D
      description: "Второй <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объектов имеют одинаковое значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.Manipulations.Manipulator2D.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  id: op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: op_Inequality(Manipulator2D,Manipulator2D)
  nameWithType: Manipulator2D.op_Inequality(Manipulator2D,Manipulator2D)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(Manipulator2D,Manipulator2D)
  type: Operator
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Определяет, являются ли два заданных <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объектов имеют разные значения."
  syntax:
    content: public static bool op_Inequality (System.Windows.Input.Manipulations.Manipulator2D manipulator1, System.Windows.Input.Manipulations.Manipulator2D manipulator2);
    parameters:
    - id: manipulator1
      type: System.Windows.Input.Manipulations.Manipulator2D
      description: "Первый <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект для сравнения."
    - id: manipulator2
      type: System.Windows.Input.Manipulations.Manipulator2D
      description: "Второй <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объект для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объектов имеют разные значения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.X
  id: X
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: X
  nameWithType: Manipulator2D.X
  fullName: System.Windows.Input.Manipulations.Manipulator2D.X
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает координату x <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  remarks: "При задании этого свойства, значение должно быть конечное значение. Значение по умолчанию для этого свойства равно нулю (0)."
  syntax:
    content: public float X { get; set; }
    return:
      type: System.Single
      description: "Координата x <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  overload: System.Windows.Input.Manipulations.Manipulator2D.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.Manipulator2D.Y
  id: Y
  parent: System.Windows.Input.Manipulations.Manipulator2D
  langs:
  - csharp
  name: Y
  nameWithType: Manipulator2D.Y
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Y
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Возвращает или задает координату y <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  remarks: "При задании этого свойства, значение должно быть конечное значение. Значение по умолчанию для этого свойства равно нулю (0)."
  syntax:
    content: public float Y { get; set; }
    return:
      type: System.Single
      description: "Координата y <xref href=&quot;System.Windows.Input.Manipulations.Manipulator2D&quot;> </xref> объекта."
  overload: System.Windows.Input.Manipulations.Manipulator2D.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Manipulator2D(Int32,Single,Single)
  nameWithType: Manipulator2D.Manipulator2D(Int32,Single,Single)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Manipulator2D(Int32,Single,Single)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Equals(Object)
  nameWithType: Manipulator2D.Equals(Object)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: GetHashCode()
  nameWithType: Manipulator2D.GetHashCode()
  fullName: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode()
- uid: System.Windows.Input.Manipulations.Manipulator2D.Id
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Id
  nameWithType: Manipulator2D.Id
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Id
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: op_Equality(Manipulator2D,Manipulator2D)
  nameWithType: Manipulator2D.op_Equality(Manipulator2D,Manipulator2D)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.op_Equality(Manipulator2D,Manipulator2D)
- uid: System.Windows.Input.Manipulations.Manipulator2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulator2D
  nameWithType: Manipulator2D
  fullName: System.Windows.Input.Manipulations.Manipulator2D
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: op_Inequality(Manipulator2D,Manipulator2D)
  nameWithType: Manipulator2D.op_Inequality(Manipulator2D,Manipulator2D)
  fullName: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(Manipulator2D,Manipulator2D)
- uid: System.Windows.Input.Manipulations.Manipulator2D.X
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: X
  nameWithType: Manipulator2D.X
  fullName: System.Windows.Input.Manipulations.Manipulator2D.X
- uid: System.Windows.Input.Manipulations.Manipulator2D.Y
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Y
  nameWithType: Manipulator2D.Y
  fullName: System.Windows.Input.Manipulations.Manipulator2D.Y
- uid: System.Windows.Input.Manipulations.Manipulator2D.#ctor*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Manipulator2D
  nameWithType: Manipulator2D.Manipulator2D
- uid: System.Windows.Input.Manipulations.Manipulator2D.Equals*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Equals
  nameWithType: Manipulator2D.Equals
- uid: System.Windows.Input.Manipulations.Manipulator2D.GetHashCode*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: GetHashCode
  nameWithType: Manipulator2D.GetHashCode
- uid: System.Windows.Input.Manipulations.Manipulator2D.Id*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Id
  nameWithType: Manipulator2D.Id
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Equality*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: op_Equality
  nameWithType: Manipulator2D.op_Equality
- uid: System.Windows.Input.Manipulations.Manipulator2D.op_Inequality*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: op_Inequality
  nameWithType: Manipulator2D.op_Inequality
- uid: System.Windows.Input.Manipulations.Manipulator2D.X*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: X
  nameWithType: Manipulator2D.X
- uid: System.Windows.Input.Manipulations.Manipulator2D.Y*
  parent: System.Windows.Input.Manipulations.Manipulator2D
  isExternal: false
  name: Y
  nameWithType: Manipulator2D.Y
