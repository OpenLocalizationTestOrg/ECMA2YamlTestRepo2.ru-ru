### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProviderTraceListener
  id: EventProviderTraceListener
  children:
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Close
  - System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  - System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  - System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  - System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener
  type: Class
  summary: "Прослушиватель для <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> , который записывает события трассировки событий Windows подсистем."
  remarks: "Все данные события (trace или debug) из исходного события записываются в подсистему ETW в виде строки. Элементы данных разделяются с помощью запятой. Чтобы указать другой разделитель, используйте <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>свойство.</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>       Добавление прослушивателя к <xref:System.Diagnostics.TraceSource?displayProperty=fullName>регистрирует поставщик в подсистеме ETW.</xref:System.Diagnostics.TraceSource?displayProperty=fullName> Необходимо создать сеанс трассировки событий Windows, с помощью исполняемой программы Logman.exe (или аналогичную) для записи событий в файл журнала.       Не обязательно манифеста для использования событий из прослушивателя, так как данные о событии является одной символьной строкой.       При вызове <xref:System.Diagnostics.TraceSource?displayProperty=fullName>методы для записи событий, передаваемому <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>значение перечисления.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource?displayProperty=fullName> Перечисление содержит значения уровень и ключевое слово. При включении поставщика прослушивателя трассировки в сеансе трассировки событий Windows уровня указываемое значение может быть значение, связанное с одним из следующих значений перечисления <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>: - критический (значение-1) - Ошибка (значение — 2) — сведения о (значение равно 8) — Verbose (значение равно 16) - предупреждение (значение — 4) значение ключевого слова, которое указывается для сеанса может быть значение, связанное с одним из следующих значений перечисления <xref:System.Diagnostics.TraceEventType?displayProperty=fullName> :-Resume (значение — 2048) — начало (значение равно 256) — остановить (значение — 512) - приостановить (значение — 1 024) - передачи (равен 4 096)</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceEventType?displayProperty=fullName>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}\");  \n  \n    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), \"Test Listener\", \"::\");  \n  \n    // You should use the All default level and control the level using the  \n    // ETW session; otherwise, you may not log all the events requested by the  \n    // session.  \n    TraceSource source = new TraceSource(\"MyProvider\", SourceLevels.All);  \n  \n    source.Listeners.Add(listener);  \n  \n    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { \"abc\", \"def\", true, 123 });  \n  \n    source.TraceEvent(TraceEventType.Warning, 12, \"Provider guid: {0}\", new object[] { providerId });  \n  \n    source.TraceInformation(\"string {0}, bool {1}, int {2}, ushort {3}\", new object[] { \"abc\", false, 123, (UInt32)5 });  \n```"
  syntax:
    content: 'public class EventProviderTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> класса с помощью указанного поставщика идентификатора."
  syntax:
    content: public EventProviderTraceListener (string providerId);
    parameters:
    - id: providerId
      type: System.String
      description: "Уникальная строка <xref:System.Guid>, определяющий поставщика.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> класса, используя указанного поставщика идентификатор и имя прослушивателя."
  syntax:
    content: public EventProviderTraceListener (string providerId, string name);
    parameters:
    - id: providerId
      type: System.String
      description: "Уникальная строка <xref:System.Guid>, определяющий поставщика.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "Имя прослушивателя."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> класса с помощью указанного поставщика идентификатора, имя прослушивателя и разделитель."
  remarks: '-'
  syntax:
    content: public EventProviderTraceListener (string providerId, string name, string delimiter);
    parameters:
    - id: providerId
      type: System.String
      description: "Уникальная строка <xref:System.Guid>, определяющий поставщика.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "Имя прослушивателя."
    - id: delimiter
      type: System.String
      description: "Разделитель, используемый для разделения данных события. (Дополнительные сведения см. в разделе <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>свойство.)</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Закрывает выходной поток, таким образом, больше не принимает выходные данные трассировки и отладки."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Возвращает и задает разделитель, используемый для разделения данных события, которые записываются в подсистему ETW."
  remarks: "Прослушиватель преобразует элементы данных в строки и затем объединяет их, используя заданный разделитель для отделения каждый элемент данных в строке. Затем строка записывается как данные события в подсистеме трассировки событий Windows.       Для успешного анализа строки, потребитель необходимо знать разделитель, который был использован.       Если данные содержат строку, которая может содержать запятую, укажите соответствующий разделитель, чтобы правильно проанализировать данные о событии.       Не обязательно манифеста для использования событий из прослушивателя, так как данные о событии является одной символьной строкой.       Разделитель, который применяется для данных события, написанные с использованием <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>метод.</xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "Разделитель, используемый для разделения данных события. Разделителем по умолчанию — запятая."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Выдает ошибку и подробные сведения об ошибке сообщение в прослушиватель создается при реализации <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> класса."
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Выдаваемое сообщение."
    - id: detailMessage
      type: System.String
      description: "Выдаваемое подробное сообщение."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Очищает выходной буфер."
  syntax:
    content: public override sealed void Flush ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Получает настраиваемые атрибуты, поддерживаемые прослушивателем трассировки."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Строковый массив, именующий настраиваемые атрибуты, поддерживаемые прослушивателем трассировки, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если настраиваемые атрибуты отсутствуют."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Возвращает значение, указывающее, является ли прослушиватель трассировки потокобезопасным."
  syntax:
    content: public override sealed bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если прослушиватель трассировки потокобезопасен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает трассировки данные, данные объекта и сведения о событиях в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значения, указывающие тип события, ставшего причиной трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object
      description: "Выдаваемые данные трассировки."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает трассировки данные, данные объекта и сведения о событиях в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значения, указывающие тип события, ставшего причиной трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: data
      type: System.Object[]
      description: "Массив объектов для выдачи в качестве данных."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает трассировки и сведения о событиях в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значения, указывающие тип события, ставшего причиной трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает сведения трассировки, сообщение и сведения о событиях в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значения, указывающие тип события, ставшего причиной трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает сведения трассировки, форматированный массив объектов и сведения о событиях в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Один из <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> значения, указывающие тип события, ставшего причиной трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: format
      type: System.String
      description: "Строка формата, содержащая ноль или более элементов формата, связанных с объектами в `args` массива."
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> Массив, содержащий ноль или более объектов для форматирования."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Записывает сведения трассировки, сообщение, идентификатор сопутствующего действия и событий сведения в специальные выходные данные прослушивателя."
  syntax:
    content: public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Объект <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> объект, содержащий текущие идентификатор процесса, идентификатор потока и сведения о трассировке стека."
    - id: source
      type: System.String
      description: "Имя, используемое для идентификации выходных данных, обычно имя приложения, создавшего событие трассировки."
    - id: id
      type: System.Int32
      description: "Числовой идентификатор события."
    - id: message
      type: System.String
      description: "Записываемое сообщение."
    - id: relatedActivityId
      type: System.Guid
      description: "Объект <xref:System.Guid>объект, идентифицирующий сопутствующее действие.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "При переопределении в производном классе записывает заданное сообщение прослушиватель, создаваемый в производном классе."
  syntax:
    content: public override sealed void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "При переопределении в производном классе записывает сообщение в прослушиватель создаваемый в производном классе, признак конца строки."
  syntax:
    content: public override sealed void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Записываемое сообщение."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener.EventProviderTraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close
  nameWithType: EventProviderTraceListener.Close
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail
  nameWithType: EventProviderTraceListener.Fail
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush
  nameWithType: EventProviderTraceListener.Flush
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: EventProviderTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventProviderTraceListener.TraceData
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventProviderTraceListener.TraceEvent
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: EventProviderTraceListener.TraceTransfer
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write
  nameWithType: EventProviderTraceListener.Write
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventProviderTraceListener.WriteLine
