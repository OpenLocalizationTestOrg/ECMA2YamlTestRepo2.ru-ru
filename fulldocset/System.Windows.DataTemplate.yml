### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Описывает визуальную структуру объекта данных."
  remarks: "DataTemplate позволяет указать визуализацию объектов данных. Объекты DataTemplate особенно полезны при связывании <xref:System.Windows.Controls.ItemsControl>например <xref:System.Windows.Controls.ListBox>для всей коллекции.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Без определенных инструкций <xref:System.Windows.Controls.ListBox>отображает строковое представление объектов в коллекции.</xref:System.Windows.Controls.ListBox> В этом случае можно использовать DataTemplate для определения внешнего вида объектов данных. Содержимое вашего DataTemplate становится визуальную структуру объектов данных.       Подробное обсуждение в разделе [сведения о шаблонах данных](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> класса."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> класса с заданным <xref:System.Windows.DataTemplate.DataType*>свойство.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Для ссылки на имя типа класса, используйте [расширение разметки x: Type](~/add/includes/ajax-current-ext-md.md). Если шаблон предназначен для [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] данных, это строка, представляющая имя тега данных."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Если шаблон предназначен для данных объектов, это имя типа объекта данных."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает ключ по умолчанию <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Если вы не установите [директива x: Key](~/add/includes/ajax-current-ext-md.md) на <xref:System.Windows.DataTemplate>, находящийся в <xref:System.Windows.ResourceDictionary>, DataTemplateKey используется в качестве ключа.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "Ключ по умолчанию <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает тип, для которого данный <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> предназначен."
  remarks: "Это свойство аналогично <xref:System.Windows.Style.TargetType%2A>свойству <xref:System.Windows.Style>класса.</xref:System.Windows.Style> </xref:System.Windows.Style.TargetType%2A> Если задано это свойство в тип данных без указания `x:Key`, <xref:System.Windows.DataTemplate>автоматически применяется к объектам данных этого типа.</xref:System.Windows.DataTemplate> Обратите внимание, что при этом `x:Key` устанавливается неявно. Таким образом при назначении этого <xref:System.Windows.DataTemplate> `x:Key` значение, при переопределении неявный `x:Key` и <xref:System.Windows.DataTemplate>не будут применяться автоматически.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Также Обратите внимание, что при связывании <xref:System.Windows.Controls.ContentControl>на коллекцию `Task` объектов, <xref:System.Windows.Controls.ContentControl>не использует <xref:System.Windows.DataTemplate>автоматически.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Это из-за привязки на <xref:System.Windows.Controls.ContentControl>необходимы дополнительные сведения, чтобы распознать ли для привязки ко всей коллекции или отдельные объекты.</xref:System.Windows.Controls.ContentControl> Если вашей <xref:System.Windows.Controls.ContentControl>отслеживает выбор <xref:System.Windows.Controls.ItemsControl>типа, можно задать <xref:System.Windows.Data.Binding.Path%2A>Свойства <xref:System.Windows.Controls.ContentControl>Привязка к «`/`» для указания, что вы заинтересованы в текущем элементе.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Пример см. в разделе [как: привязка к коллекции и отображения сведений на основе выбора](~/add/includes/ajax-current-ext-md.md). В противном случае необходимо указать <xref:System.Windows.DataTemplate>явным образом задав <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>свойство.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       Свойство DataType особенно полезна при наличии <xref:System.Windows.Data.CompositeCollection>различных типов объектов данных.</xref:System.Windows.Data.CompositeCollection>       Если это свойство предназначено для XML-элемента, который не находится в пространстве имен по умолчанию, необходимо перед именем элемента пространство имен или указатель пространства имен. XML отображается через LINQ для XML, пространство имен появляется в фигурные скобки, предшествует escape-последовательность фигурной скобки: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` For XML предоставляются через XPath, имя элемента предшествует указатель пространства имен, заданные в экземпляре <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> ## использование атрибута XAML ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> ## значений XAML *typeName* Если шаблон предназначен для данных объектов, это свойство содержит имя типа объекта данных (в виде строки).            </xref:System.Windows.Data.XmlNamespaceMapping> Для ссылки на имя типа класса, используйте [расширение разметки x: Type](~/add/includes/ajax-current-ext-md.md). Если шаблон предназначен для [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] данных, это свойство содержит имя элемента XML. См. заметки документации сведения об указании другие пространства имен для элемента XML."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Получает коллекцию триггеров, которые применяются к значениям свойств или выполнения действий на основе одного или нескольких условий."
  remarks: "При создании триггеров в шаблоне данных переключатели этих триггеров должны задавать свойства, которые входят в область данных шаблона. В противном случае может быть более подходящим, создать триггеры с помощью стиля, нацеленного на тип, который содержит данные. Например, при связывании <xref:System.Windows.Controls.ListBox>контейнеры — это элемент управления, <xref:System.Windows.Controls.ListBoxItem>объекты.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> При использовании триггеров для задания свойств, которые не находятся в области <xref:System.Windows.DataTemplate>, может оказаться более подходящими для создания <xref:System.Windows.Controls.ListBoxItem>стиля и создание триггеров в этом стиле.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> Дополнительные сведения см. в разделе именно входит в DataTemplate? в [сведения о шаблонах данных](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек этого свойства может быть задано только в [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] через показанного синтаксиса коллекции или путем доступа к объекту коллекции и использования его различных методов, например Add. Свойство для доступа к объекту коллекции доступно только для чтения, сама коллекция доступна для чтения и записи.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## Использование элемента свойства XAML ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## значений XAML *OneOrMoreTriggers* ноль или более <xref:System.Windows.TriggerBase>объектов.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Коллекция объектов триггеров. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Проверяет шаблонного родителя на соответствие набору правил."
  remarks: "Метод использует следующие правила: - `templatedParent` должно быть ненулевой <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement>      <xref:System.Windows.DataTemplate>Должен быть применен к <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Элемент, с которым применяется этот шаблон."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
