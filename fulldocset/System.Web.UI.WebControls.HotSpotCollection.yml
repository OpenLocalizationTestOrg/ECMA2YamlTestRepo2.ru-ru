### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.HotSpotCollection
  id: HotSpotCollection
  children:
  - System.Web.UI.WebControls.HotSpotCollection.#ctor
  - System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  - System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  - System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: HotSpotCollection
  nameWithType: HotSpotCollection
  fullName: System.Web.UI.WebControls.HotSpotCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объектов внутри <xref href=&quot;System.Web.UI.WebControls.ImageMap&quot;> </xref> управления. Этот класс не наследуется."
  remarks: "Класс HotSpotCollection представляет коллекцию, позволяющую <xref:System.Web.UI.WebControls.ImageMap>управления для настройки списка <xref:System.Web.UI.WebControls.HotSpot>ее объектов.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.ImageMap>       Используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>метод, чтобы добавить указанный <xref:System.Web.UI.WebControls.HotSpot>объект в коллекцию в конец массива порядковый номер.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> Используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>метод, чтобы добавить <xref:System.Web.UI.WebControls.HotSpot>объект в коллекцию по указанному индексу.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> Используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>индексатора для прямого доступа к <xref:System.Web.UI.WebControls.HotSpot>объект в коллекцию по указанному индексу с помощью простой нотации массива.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Item%2A>       Используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>метод для удаления <xref:System.Web.UI.WebControls.HotSpot>объект в конец коллекции.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> Используйте <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>метод для удаления <xref:System.Web.UI.WebControls.HotSpot>объект с указанным индексом.</xref:System.Web.UI.WebControls.HotSpot> </xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the HotSpotCollection collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_294_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_294_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.HotSpotCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class HotSpotCollection : System.Web.UI.StateManagedCollection
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> класса."
  remarks: "При переопределении в производном классе, этот конструктор инициализирует новый экземпляр <xref:System.Web.UI.WebControls.HotSpotCollection>класса.</xref:System.Web.UI.WebControls.HotSpotCollection>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CircleHotSpot.%23ctor%2A> constructor to programmatically create two <xref:System.Web.UI.WebControls.CircleHotSpot> objects and add them to an <xref:System.Web.UI.WebControls.ImageMap> control. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_107_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_107_1.aspx)]"
  syntax:
    content: public HotSpotCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  id: Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объект в конец <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> коллекции."
  remarks: "Добавляет указанный метод Add <xref:System.Web.UI.WebControls.HotSpot>объект в конец коллекции.</xref:System.Web.UI.WebControls.HotSpot> Чтобы добавить <xref:System.Web.UI.WebControls.HotSpot>в коллекцию в расположении конкретного индекса, используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically create an <xref:System.Web.UI.WebControls.ImageMap> control and add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection for the <xref:System.Web.UI.WebControls.ImageMap> control and add the <xref:System.Web.UI.WebControls.CircleHotSpot> objects to it. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[ImageMap.Cstr#1](~/add/codesnippet/visualbasic/52b9e3b0-728a-4dc5-99eb-_1.aspx)]\n [!code-cs[ImageMap.Cstr#1](~/add/codesnippet/csharp/52b9e3b0-728a-4dc5-99eb-_1.aspx)]"
  syntax:
    content: public int Add (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> Объект, добавляемый в коллекцию."
    return:
      type: System.Int32
      description: "Индекс, по которому объект был добавлен в коллекцию."
  overload: System.Web.UI.WebControls.HotSpotCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Для добавления."
  overload: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  id: Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Вставляет указанный <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта в <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> коллекцию по указанному индексу."
  remarks: "Добавляет указанный метод вставки <xref:System.Web.UI.WebControls.HotSpot>объект в коллекцию по указанному индексу.</xref:System.Web.UI.WebControls.HotSpot> Для добавления <xref:System.Web.UI.WebControls.HotSpot>объект в конец коллекции, используется <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. The <xref:System.Web.UI.WebControls.ImageMap.HotSpots%2A> property is used to access the <xref:System.Web.UI.WebControls.HotSpotCollection> collection. The <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> method adds `Circle2` to the collection. The Insert method adds `Circle1` to the collection at the first element, in front of `Circle2`. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Insert#1](~/add/codesnippet/visualbasic/ab7caf40-b2de-4bb2-b23a-_1.aspx)]\n [!code-cs[HotSpotCollection.Insert#1](~/add/codesnippet/csharp/ab7caf40-b2de-4bb2-b23a-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс массива, с которой необходимо добавить <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта."
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> Объект, добавляемый в коллекцию."
  overload: System.Web.UI.WebControls.HotSpotCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает ссылку на <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объект по указанному индексу в <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> коллекции."
  remarks: "Этот указатель используется для доступа к <xref:System.Web.UI.WebControls.HotSpot>объекта в коллекции по указанному индексу, используя нотацию массива.</xref:System.Web.UI.WebControls.HotSpot> Индексатор позволяет изменить или заменить <xref:System.Web.UI.WebControls.HotSpot>непосредственно из коллекции.</xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to use the Item property to directly access the <xref:System.Web.UI.WebControls.HotSpot> objects contained in the <xref:System.Web.UI.WebControls.ImageMap> control's <xref:System.Web.UI.WebControls.HotSpotCollection> collection and display the value of each object's <xref:System.Web.UI.WebControls.HotSpot.AlternateText%2A> property in a label on the page. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.Item#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_688_1.aspx)]\n [!code-cs[HotSpotCollection.Item#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_688_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.HotSpot this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Порядковый индекс значение, указывающее расположение <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта в коллекции."
    return:
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> Объект по указанному индексу в <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> коллекции."
  overload: System.Web.UI.WebControls.HotSpotCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  id: Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет указанный <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта из <xref href=&quot;System.Web.UI.WebControls.HotSpotCollection&quot;> </xref> коллекции."
  remarks: "Метод Remove удаляет указанный <xref:System.Web.UI.WebControls.HotSpot>объекта из коллекции.</xref:System.Web.UI.WebControls.HotSpot> Чтобы удалить <xref:System.Web.UI.WebControls.HotSpot>объекта из коллекции по указанному индексу, используйте <xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.HotSpot>       Для добавления новых <xref:System.Web.UI.WebControls.HotSpot>объекты в коллекцию, используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>или <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the Remove method is used to delete `Circle1` from the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-cs[HotSpotCollection.Remove#1](~/add/codesnippet/csharp/f9b25fff-b2da-4484-9775-_1.aspx)]\n [!code-vb[HotSpotCollection.Remove#1](~/add/codesnippet/visualbasic/f9b25fff-b2da-4484-9775-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.HotSpot spot);
    parameters:
    - id: spot
      type: System.Web.UI.WebControls.HotSpot
      description: "<xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> Объект, удаляемый из коллекции."
  overload: System.Web.UI.WebControls.HotSpotCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта по указанному индексу из коллекции."
  remarks: "Метод RemoveAt удаляет <xref:System.Web.UI.WebControls.HotSpot>объекта по указанному индексу из коллекции.</xref:System.Web.UI.WebControls.HotSpot> Для удаления определенных <xref:System.Web.UI.WebControls.HotSpot>из коллекции по имени, используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.Remove%2A> </xref:System.Web.UI.WebControls.HotSpot>       Для добавления новых <xref:System.Web.UI.WebControls.HotSpot>объекты в коллекцию, используйте <xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A>или <xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A>метод.</xref:System.Web.UI.WebControls.HotSpotCollection.Insert%2A> </xref:System.Web.UI.WebControls.HotSpotCollection.Add%2A> </xref:System.Web.UI.WebControls.HotSpot>"
  example:
  - "The following code example demonstrates how to programmatically add two <xref:System.Web.UI.WebControls.CircleHotSpot> objects to an <xref:System.Web.UI.WebControls.ImageMap> control. After the two <xref:System.Web.UI.WebControls.CircleHotSpot> objects are added to the <xref:System.Web.UI.WebControls.HotSpotCollection> collection, the RemoveAt method is used to delete the object located at the first index in the collection. For this example to work correctly, you must supply your own image for the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property and update the path to the image appropriately so that the application can locate it.  \n  \n [!code-vb[HotSpotCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_136_1.aspx)]\n [!code-cs[HotSpotCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс массива, из которого следует удалить <xref href=&quot;System.Web.UI.WebControls.HotSpot&quot;> </xref> объекта."
  overload: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection()
  nameWithType: HotSpotCollection.HotSpotCollection()
  fullName: System.Web.UI.WebControls.HotSpotCollection.HotSpotCollection()
- uid: System.Web.UI.WebControls.HotSpotCollection.Add(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add(HotSpot)
  nameWithType: HotSpotCollection.Add(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Add(HotSpot)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.HotSpot
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HotSpot
  nameWithType: HotSpot
  fullName: System.Web.UI.WebControls.HotSpot
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: HotSpotCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: HotSpotCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert(System.Int32,System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert(Int32,HotSpot)
  nameWithType: HotSpotCollection.Insert(Int32,HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Insert(Int32,HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: HotSpotCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Item(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: HotSpotCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove(System.Web.UI.WebControls.HotSpot)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove(HotSpot)
  nameWithType: HotSpotCollection.Remove(HotSpot)
  fullName: System.Web.UI.WebControls.HotSpotCollection.Remove(HotSpot)
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HotSpotCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.HotSpotCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: HotSpotCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.HotSpotCollection.#ctor*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: HotSpotCollection
  nameWithType: HotSpotCollection.HotSpotCollection
- uid: System.Web.UI.WebControls.HotSpotCollection.Add*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Add
  nameWithType: HotSpotCollection.Add
- uid: System.Web.UI.WebControls.HotSpotCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: HotSpotCollection.CreateKnownType
- uid: System.Web.UI.WebControls.HotSpotCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: HotSpotCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.HotSpotCollection.Insert*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Insert
  nameWithType: HotSpotCollection.Insert
- uid: System.Web.UI.WebControls.HotSpotCollection.Item*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Item
  nameWithType: HotSpotCollection.Item
- uid: System.Web.UI.WebControls.HotSpotCollection.OnValidate*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: OnValidate
  nameWithType: HotSpotCollection.OnValidate
- uid: System.Web.UI.WebControls.HotSpotCollection.Remove*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: Remove
  nameWithType: HotSpotCollection.Remove
- uid: System.Web.UI.WebControls.HotSpotCollection.RemoveAt*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: RemoveAt
  nameWithType: HotSpotCollection.RemoveAt
- uid: System.Web.UI.WebControls.HotSpotCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.HotSpotCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: HotSpotCollection.SetDirtyObject
