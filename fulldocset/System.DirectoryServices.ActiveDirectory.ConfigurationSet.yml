### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  id: ConfigurationSet
  children:
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  - System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  langs:
  - csharp
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  type: Class
  summary: "Класс ConfigurationSet представляет набор конфигурации для одного или нескольких экземпляров AD LDS."
  syntax:
    content: public class ConfigurationSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  id: AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию только для чтения AD LDS экземпляров, которые находятся в наборе конфигурации."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection AdamInstances { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> объектов, которые находятся в наборе конфигурации."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  id: ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию только для чтения разделы приложений, которые находятся в наборе конфигурации."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartition&quot;> </xref> объектов, которые находятся в наборе конфигурации."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Освобождает все управляемые и неуправляемые ресурсы, используемые этим объектом."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Освобождает неуправляемые ресурсы, используемые этим объектом и дополнительно освобождает управляемые ресурсы."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, определяющее, следует освободить управляемые ресурсы.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если следует освободить управляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> если только освобождению неуправляемых ресурсов."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  id: FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит экземпляр AD LDS в данном наборе конфигураций."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> , Представляющий экземпляр AD LDS, который был найден."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Экземпляр AD LDS может быть не найден в данном наборе конфигураций."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  id: FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит экземпляр AD LDS в данном наборе конфигураций для заданного имени раздела."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "Объект <xref:System.String>, указывающий раздел, в котором выполняется поиск.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> , Представляющий экземпляр AD LDS, который был найден."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Экземпляр AD LDS для указанного <code> partitionName </code> не найден в данном наборе конфигураций."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  id: FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Находит экземпляр AD LDS в данном наборе конфигураций для заданного имени раздела и имени сайта."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance FindAdamInstance (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "Объект <xref:System.String>, указывающий раздел, в котором выполняется поиск.</xref:System.String>"
    - id: siteName
      type: System.String
      description: "Объект <xref:System.String>, указывающий сайт, в котором выполняется поиск.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> , Представляющий экземпляр AD LDS, который был найден."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Экземпляр AD LDS для указанного <code> partitionName </code> и <code> siteName </code> параметров не найден в данном наборе конфигураций."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  id: FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает все экземпляры AD LDS в данном наборе конфигураций."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> объектов, которые были найдены."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  id: FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает все экземпляры AD LDS в данном наборе конфигураций для заданного имени раздела."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName);
    parameters:
    - id: partitionName
      type: System.String
      description: "Объект <xref:System.String>, указывающий раздел, в котором выполняется поиск.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> объектов, которые были найдены."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partitionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  id: FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает все экземпляры AD LDS в данном наборе конфигураций для заданного имени раздела и имени сайта."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAllAdamInstances (string partitionName, string siteName);
    parameters:
    - id: partitionName
      type: System.String
      description: "Объект <xref:System.String>, указывающий раздел, в котором выполняется поиск.</xref:System.String>"
    - id: siteName
      type: System.String
      description: "Объект <xref:System.String>, указывающий раздел, в котором выполняется поиск.</xref:System.String>"
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstanceCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> найденные объекты."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> для контекста заданного каталога."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ConfigurationSet GetConfigurationSet (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> , Содержащий цель и учетные данные, используемые для извлечения объекта. Целью контекста может быть экземпляр AD LDS или ключевые слова, которые указаны в объекте serviceConnectionPoint текущего леса, который можно определить набор конфигурации."
    return:
      type: System.DirectoryServices.ActiveDirectory.ConfigurationSet
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> набор объектов, который представляет конфигурацию для указанного контекста."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Цели, указанной в <code> context </code> параметр не найден."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Вызов базовой службы каталогов завершился ошибкой."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> context </code> Указан недопустимый параметр."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> объекта для раздела конфигурации."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> Объекта для раздела конфигурации."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  id: GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает уровень безопасности репликации AD LDS."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel GetSecurityLevel ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "Объект <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> значение, указывающее текущий режим проверки подлинности репликации AD LDS."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> объекта."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, содержащий имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> объекта.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  id: NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает экземпляр AD LDS, который является текущим владельцем роли хозяина именования доменов."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance NamingRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> , Представляющий экземпляр AD LDS, что в настоящее время содержит роль хозяина именования доменов."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  id: Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает объект схемы для набора конфигурации."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> , Представляющий схемы для этого набора конфигурации."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает экземпляр AD LDS, который является текущим владельцем роли хозяина операций схемы."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamInstance SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamInstance
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.AdamInstance&quot;> </xref> Объект, представляющий экземпляр AD LDS +, который в настоящее время выполняет роль хозяина операций схемы."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  id: SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Задает уровень безопасности репликации AD LDS."
  syntax:
    content: public void SetSecurityLevel (System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel securityLevel);
    parameters:
    - id: securityLevel
      type: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> Значение, для которого требуется задать режим проверки подлинности репликации AD LDS."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>securityLevel</code>не является допустимым <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel&quot;> </xref> значение."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  id: Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает коллекцию узлов, которые находятся в наборе конфигурации только для чтения."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection&quot;> </xref> , Содержащий <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;> </xref> объектов, которые находятся в наборе конфигурации."
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Объект был удален."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  langs:
  - csharp
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Возвращает имя <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> объекта."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Объект <xref:System.String>, содержащее имя текущего <xref href=&quot;System.DirectoryServices.ActiveDirectory.ConfigurationSet&quot;> </xref> объекта.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstanceCollection
  nameWithType: AdamInstanceCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ApplicationPartitionCollection
  nameWithType: ApplicationPartitionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose()
  nameWithType: ConfigurationSet.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ConfigurationSet.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance()
  nameWithType: ConfigurationSet.FindAdamInstance()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance()
- uid: System.DirectoryServices.ActiveDirectory.AdamInstance
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamInstance
  nameWithType: AdamInstance
  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String)
  nameWithType: ConfigurationSet.FindAdamInstance(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance(String,String)
  nameWithType: ConfigurationSet.FindAdamInstance(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances()
  nameWithType: ConfigurationSet.FindAllAdamInstances()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances(String,String)
  nameWithType: ConfigurationSet.FindAllAdamInstances(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(String,String)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet(DirectoryContext)
  nameWithType: ConfigurationSet.GetConfigurationSet(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ConfigurationSet
  nameWithType: ConfigurationSet
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ConfigurationSet.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel()
  nameWithType: ConfigurationSet.GetSecurityLevel()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationSecurityLevel
  nameWithType: ReplicationSecurityLevel
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel(ReplicationSecurityLevel)
  nameWithType: ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(ReplicationSecurityLevel)
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlySiteCollection
  nameWithType: ReadOnlySiteCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString()
  nameWithType: ConfigurationSet.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString()
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: AdamInstances
  nameWithType: ConfigurationSet.AdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ApplicationPartitions
  nameWithType: ConfigurationSet.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Dispose
  nameWithType: ConfigurationSet.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAdamInstance
  nameWithType: ConfigurationSet.FindAdamInstance
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: FindAllAdamInstances
  nameWithType: ConfigurationSet.FindAllAdamInstances
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetConfigurationSet
  nameWithType: ConfigurationSet.GetConfigurationSet
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ConfigurationSet.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: GetSecurityLevel
  nameWithType: ConfigurationSet.GetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Name
  nameWithType: ConfigurationSet.Name
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: NamingRoleOwner
  nameWithType: ConfigurationSet.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Schema
  nameWithType: ConfigurationSet.Schema
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ConfigurationSet.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: SetSecurityLevel
  nameWithType: ConfigurationSet.SetSecurityLevel
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: Sites
  nameWithType: ConfigurationSet.Sites
- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString*
  parent: System.DirectoryServices.ActiveDirectory.ConfigurationSet
  isExternal: false
  name: ToString
  nameWithType: ConfigurationSet.ToString
