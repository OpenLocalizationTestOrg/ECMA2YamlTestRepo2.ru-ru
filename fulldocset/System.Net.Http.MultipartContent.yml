### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MultipartContent
  id: MultipartContent
  children:
  - System.Net.Http.MultipartContent.#ctor
  - System.Net.Http.MultipartContent.#ctor(System.String)
  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  - System.Net.Http.MultipartContent.Dispose(System.Boolean)
  - System.Net.Http.MultipartContent.GetEnumerator
  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: MultipartContent
  nameWithType: MultipartContent
  fullName: System.Net.Http.MultipartContent
  type: Class
  summary: "Предоставляет коллекцию <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> объектов, сериализуемых с использованием multipart / * спецификации типа содержимого."
  syntax:
    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> класса."
  syntax:
    content: public MultipartContent ();
    parameters: []
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> класса."
  syntax:
    content: public MultipartContent (string subtype);
    parameters:
    - id: subtype
      type: System.String
      description: "Подтип многокомпонентного контента."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subtype </code> Было <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или содержит только пробелы."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Создает новый экземпляр <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> класса."
  syntax:
    content: public MultipartContent (string subtype, string boundary);
    parameters:
    - id: subtype
      type: System.String
      description: "Подтип многокомпонентного контента."
    - id: boundary
      type: System.String
      description: "Строка границ для многокомпонентного контента."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subtype </code> Было <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой.       <code> boundary </code> Было <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или содержит только пробелы.       - или - <code> boundary </code> заканчивается символом пробела."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Длина <code> boundary </code> больше 70 символов."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  id: Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Добавление составного содержимого HTTP в коллекцию <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> объектов, сериализуемых с использованием multipart / * спецификации типа содержимого."
  syntax:
    content: public virtual void Add (System.Net.Http.HttpContent content);
    parameters:
    - id: content
      type: System.Net.Http.HttpContent
      description: "Содержимое HTTP для добавления в коллекцию."
  overload: System.Net.Http.MultipartContent.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`. При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.Http.MultipartContent>ссылки.</xref:System.Net.Http.MultipartContent></xref:System.Object.Finalize%2A> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Net.Http.MultipartContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Возвращает перечислитель, выполняющий итерацию по коллекции <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> объектов, сериализуемых с использованием multipart / * спецификации типа содержимого..."
  remarks: "Оператор foreach языка C# (For Each в Visual Basic) позволяет скрыть сложный механизм перечислителей. Поэтому рекомендуется вместо непосредственного использования перечислителя по каждому элементу с помощью.       Перечислители могут использоваться для чтения данных в коллекции, но не может использоваться для изменения коллекции.       Изначально перечислитель располагается перед первым элементом в коллекции."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
      description: "Объект, который может использоваться для итерации по коллекции."
  overload: System.Net.Http.MultipartContent.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Сериализация составного содержимого HTTP в поток в качестве асинхронной операции."
  remarks: "Эта операция не будет блокирована. Возвращенный <xref:System.Threading.Tasks.Task%601>объекта будет выполнена после сериализации все содержимое в целевой поток.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Целевой поток."
    - id: context
      type: System.Net.TransportContext
      description: "Сведения о транспорте (например, маркер привязки канала). Этот параметр может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Объект задачи, представляющий асинхронную операцию."
  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Явная реализация <xref:System.Net.Http.MultipartContent.GetEnumerator*>метода.</xref:System.Net.Http.MultipartContent.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Объект, который может использоваться для итерации по коллекции."
  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Определяет, имеет ли содержимое составным HTTP допустимую длину в байтах."
  remarks: "Метод TryComputeLength позволяет составного содержимого HTTP для вычисления длины содержимого. Это полезно для типов содержимого, которые поддерживают возможность легко вычислить длину содержимого. Если вычисление длину содержимого невозможно или ресурсоемкие (потребует системы для буферизации все содержимое, где бы требует много ресурсов или требуют выделения большого объема памяти системы сериализации), этот метод может возвращать `false`. Если этот метод возвращает `false`, это означает, что необходимости поблочное или содержимое должно получить буфер перед его отправкой на сервер."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Длина содержимого HTTP в байтах."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> length </code> является допустимой; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.MultipartContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MultipartContent.#ctor
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.MultipartContent.GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<HttpContent>
  nameWithType: IEnumerator<HttpContent>
  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.Http.HttpContent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: HttpContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.MultipartContent.#ctor*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent
  nameWithType: MultipartContent.MultipartContent
- uid: System.Net.Http.MultipartContent.Add*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add
  nameWithType: MultipartContent.Add
- uid: System.Net.Http.MultipartContent.Dispose*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose
  nameWithType: MultipartContent.Dispose
- uid: System.Net.Http.MultipartContent.GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator
  nameWithType: MultipartContent.GetEnumerator
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: MultipartContent.SerializeToStreamAsync
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength
  nameWithType: MultipartContent.TryComputeLength
