### YamlMime:ManagedReference
items:
- uid: System.Globalization.UmAlQuraCalendar
  id: UmAlQuraCalendar
  children:
  - System.Globalization.UmAlQuraCalendar.#ctor
  - System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.AlgorithmType
  - System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.UmAlQuraCalendar.Eras
  - System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  - System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  langs:
  - csharp
  name: UmAlQuraCalendar
  nameWithType: UmAlQuraCalendar
  fullName: System.Globalization.UmAlQuraCalendar
  type: Class
  summary: "Представляет календарь хиджра саудовский (саудовский)."
  remarks: "Очень похож на класс UmAlQuraCalendar <xref:System.Globalization.HijriCalendar>класса, за исключением саудовского календаря использует алгоритм табличных Лицензирование от правительство саудовский для вычисления дат, можно, экспресс-выпуск даты год хиджры. год 1500 и не поддерживает <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>свойство.</xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> </xref:System.Globalization.HijriCalendar>      Настроек [!NOTE] настроек сведения об использовании UmAlQuraCalendar классов и классов календарей в платформе .NET Framework см. в разделе [работа с календарями](~/add/includes/ajax-current-ext-md.md).       Для класса UmAlQuraCalendar каждый месяц имеет 29 или 30 дней, но обычно не определен порядок ощутимого. В то время как в документации по календарь хиджра дает таблицу, показывающую соответствующего дней в каждом месяце, такой общие таблицы не могут быть созданы для саудовскому календарю.       Дополнительные сведения о календарь хиджра. в разделе <xref:System.Globalization.HijriCalendar>класса.</xref:System.Globalization.HijriCalendar>       **Примечание** UmAlQuraCalendar класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
  syntax:
    content: 'public class UmAlQuraCalendar : System.Globalization.Calendar'
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: UmAlQuraCalendar()
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar()
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Initializes a new instance of the <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;></xref> class."
  syntax:
    content: public UmAlQuraCalendar ();
    parameters: []
  overload: System.Globalization.UmAlQuraCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет дату, указанное число месяцев от указанной исходной даты."
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Часть года полученный <xref:System.DateTime>изменяется, если конечный месяц находится вне диапазона года заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Эта реализация поддерживает только текущую эру. Таким образом Если исключение конечного года находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например, если указанный месяц каада, который содержит 30 дней, указанный день — 30-й день этого месяца, а значение `months` параметра равно 3, год результата сафар — на один больше указанного, месяц и день — 29-й день, который является зуль.       Если значение `months` параметр имеет отрицательное значение, <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> полученный       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.u_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.u_4_1.cs)]"
  example:
  - "The following example instantiates a <xref:System.DateTime> value and displays the values of several of its components in the Um Al Qura calendar. Next, it calls the <xref:System.Globalization.UmAlQuraCalendar.AddYears%2A> and AddMonths methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_4_2.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_4_2.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Дата, к которому добавляются месяцы. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    - id: months
      type: System.Int32
      description: "Положительное или отрицательное число месяцев для добавления."
    return:
      type: System.DateTime
      description: "Дату, полученную путем добавления числа месяцев, указанных <code> months </code> параметр к указанной дате <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Полученный дата находится вне диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>меньше – 120 000 или больше 120 000.       - или - <code>time</code> выходит за пределы диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет дату, указанное число лет от указанной исходной даты."
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> компонент месяца Эта реализация поддерживает только текущую эру. Таким образом Если исключение конечного года находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например хиджжа 29 дней, за исключением високосного года, когда 30 дней. Если указанная дата 30-й день хиджжа високосного года и значение `years` параметра равно 1, полученной дате 29-й день месяца зуль-хиджжа следующего года.       Если `years` отрицательное, полученный <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.u_2_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.u_2_1.cs)]"
  example:
  - "The following example instantiates a <xref:System.DateTime> value and displays the values of several of its components in the Um AL Qura calendar. Next, it calls the AddYears and <xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A> methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_2_2.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_2_2.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Дата, к которому добавляются годы. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    - id: years
      type: System.Int32
      description: "Положительное или отрицательное число лет для добавления."
    return:
      type: System.DateTime
      description: "Дату, полученную путем добавления количества лет, определяемое <code> years </code> параметр к указанной дате <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Полученный дата находится вне диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>years</code>меньше параметр больше или равно 10 000.       - или - <code>time</code> выходит за пределы диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
  fullName: System.Globalization.UmAlQuraCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение, указывающее, является ли текущий календарь солнечным, лунным или их сочетание."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.u_0_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.u_0_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Всегда возвращает <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.UmAlQuraCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в году, предшествующий год, который задается параметром <xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>свойство.</xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>"
  remarks: "Это свойство возвращает значение константы 384."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "Число дней, в течение года, который предшествует года, указанного параметром <xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>.</xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>"
  overload: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.Eras
  id: Eras
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
  fullName: System.Globalization.UmAlQuraCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает список эр, поддерживаемых текущим <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>."
  remarks: 'Календарь хиджра есть только одна эра: год хиджры. (Латиница «Anno Hegirae», что означает «год миграции,» применительно к миграции из исламском (PBUH) из Мекки). Это свойство всегда возвращает массив с единственным элементом.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Массив, состоящий из одного элемента, значение которого является <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;> </xref>."
  overload: System.Globalization.UmAlQuraCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Рассчитывает день месяца, в который происходит указанной даты."
  remarks: ''
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_7_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_7_1.cs)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    return:
      type: System.Int32
      description: "Целое число от 1 до 30, представляющее день месяца в заданном по <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Рассчитывает день недели, в который происходит указанной даты."
  remarks: "Ниже приведены значения <xref:System.DayOfWeek>: | Значение DayOfWeek | указывающая |   |---------------------|---------------------|   | Воскресенье | الاحد (Al Ahad) |   | Понедельник | الاثنين (Al Ithnayn) |   | Вторник | الثلاثاء (в Thulaathaa &quot;) |   | Среда | الاربعاء (Al Arbi&quot;aa &quot;) |   | Четверг | الخميس (Al Khamiis) |   | Пятница | الجمعة (Al Jumu&quot;ah) |   | Суббота | السبت (как Sabt) |</xref:System.DayOfWeek>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_1_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_1_1.cs)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    return:
      type: System.DayOfWeek
      description: "Объект <xref:System.DayOfWeek>значение, представляющее день недели, определяемое <code> time </code> параметр.</xref:System.DayOfWeek>"
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Рассчитывает день года, на котором находится указанной даты."
  remarks: "День года определяется как число дней с первого дня года. Например метод GetDayOfYear возвращает 1 за первый день первого месяца года и общее количество дней, за последний день месяца, последний год."
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmALQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_0_1.vb)]\n [!code-cs[System.Globalization.UmALQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_0_1.cs)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    return:
      type: System.Int32
      description: "Целое число от 1 до 355, обозначающее день года, указанного параметром <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет количество дней в указанном месяце указанных года и эры."
  remarks: "Этот метод возвращает различное количество дней в указанном месяце для обычного года по сравнению високосным годом. Например, этот метод возвращает значение 29 или 30-хиджжа (`month` = 12), в зависимости от ли `year` является високосным годом."
  example:
  - "The following example calls the GetDaysInMonth method to get the number of days in each month of five consecutive years.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/0de53081-7e5b-40a6-97f4-_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/0de53081-7e5b-40a6-97f4-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "Число дней в указанном месяце указанных года и эры. Возвращенное значение равно 29 для обычного года или 30 для високосного."
  overload: System.Globalization.UmAlQuraCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет количество дней в указанном году указанной эры."
  remarks: ''
  example:
  - "The following example calls the GetDaysInYear method to get the number of days in ten consecutive years in each era supported by the <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.u_8_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.u_8_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "Число дней в указанном году указанной эры. Число дней равно 354 месяцам для обычного года или 355 для високосного."
  overload: System.Globalization.UmAlQuraCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: UmAlQuraCalendar.GetEra(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет эры, в котором происходит указанной даты."
  remarks: 'Саудовского календаря одна эра: год хиджры. (Латиница «Anno Hegirae», что означает «год миграции,» применительно к миграции из исламском (PBUH) из Мекки).'
  example:
  - "The following example displays the values of several components of a date in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_5_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_5_1.cs)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения."
    return:
      type: System.Int32
      description: "Всегда возвращает <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;> </xref> значение."
  overload: System.Globalization.UmAlQuraCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет високосный месяц для заданных года и эры."
  remarks: "В календарях, поддерживает понятие високосного года високосный месяц может возникнуть после определенного месяца или после любого месяца в году. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "Всегда равно 0 из-за <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класс не поддерживает месяцев високосным."
  overload: System.Globalization.UmAlQuraCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>— меньше, чем 1318 или больше 1450.       -or-       <code>era</code> is not <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет месяца, в котором происходит указанной даты."
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars. The GetMonth method is used to retrieve the month of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/m-system.globalization.u_6_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/m-system.globalization.u_6_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    return:
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц в дате, указанной в <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет число месяцев в указанном году указанной эры."
  remarks: ''
  example:
  - "The following example calls the GetMonthsInYear method to determine the number of months in four consecutive years, and then calls the <xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A> method to determine how many days there are in each month.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/435027f7-d766-47b7-be58-_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/435027f7-d766-47b7-be58-_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "Всегда 12."
  overload: System.Globalization.UmAlQuraCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемое этим календарем."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>era</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет год даты, представленной указанным <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars. The GetYear method is used to retrieve the year of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/m-system.globalization.u_9_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/m-system.globalization.u_9_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Значение даты для чтения. <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> Класс поддерживает только даты с 04/30/1900 00.00.00 (по григорианскому календарю) до 11/16/2077 23:59:59 (по григорианскому календарю)."
    return:
      type: System.Int32
      description: "Целое число, представляющее года, указанного параметром <code> time </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанная дата день високосным."
  remarks: "День високосным является день, который возникает только в високосном году."
  example:
  - "The following example calls the IsLeapDay method for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/csharp/2ddffb14-73ba-4c58-a47b-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/cpp/2ddffb14-73ba-4c58-a47b-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/2ddffb14-73ba-4c58-a47b-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 30, представляющее день."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный день — високосный день; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Возвращаемое значение всегда равно <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> из-за <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класс не поддерживает дни високосным."
  overload: System.Globalization.UmAlQuraCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный месяц указанных года и эры високосным месяцем."
  remarks: "Високосный месяц — целый месяц, происходит только в високосном году."
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "Всегда <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> из-за <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класс не поддерживает месяцев високосным."
  overload: System.Globalization.UmAlQuraCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный год указанной эры високосным годом."
  remarks: "Обычного года 354 дней, в високосном году 355 дней."
  example:
  - "The following example lists the number of days in ten consecutive years and calls the IsLeapYear method to determine which years are leap years.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.u_3_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.u_3_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный год — високосный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.UmAlQuraCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает самые последние дату и время, поддерживаемые этим календарем."
  remarks: >-
    > [!NOTE]

    >  Starting with the [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], the value of the MaxSupportedDateTime property is 11/16/2077. In previous versions of the .NET Framework, its value is the last moment of May 13, 2029 C.E. in the Gregorian calendar.
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/p-system.globalization.u_2_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/p-system.globalization.u_2_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Самые последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса, который эквивалентен последнему мгновению 16 ноября 2077 года нашей эры по григорианскому календарю."
  overload: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает минимальное значение даты и времени, поддерживаемое этим календарем."
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/p-system.globalization.u_1_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/p-system.globalization.u_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса, что эквивалентно первому мгновению 30 апреля 1900 года нашей эры по григорианскому календарю."
  overload: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>, равным указанной даты, времени и эры.</xref:System.DateTime>"
  remarks: "Метод ToDateTime является полезным, поскольку он может преобразовать любую дату в текущем календаре Дата по григорианскому календарю. Дата по григорианскому календарю впоследствии можно, например, для сравнения дат в различных календарях или создания эквивалентной даты в определенном календаре."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 29, представляющее день."
    - id: hour
      type: System.Int32
      description: "Целое число от 0 до 23, представляющее час."
    - id: minute
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее минуты."
    - id: second
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее секунды."
    - id: millisecond
      type: System.Int32
      description: "Целое число от 0 до 999, представляющее миллисекунду."
    - id: era
      type: System.Int32
      description: "Эра. Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>, Равным указанной даты и времени в текущей эре.</xref:System.DateTime>"
  overload: System.Globalization.UmAlQuraCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref> класса.       - или - <code>hour</code> меньше нуля или больше 23.       - или - <code>minute</code> меньше нуля или больше 59.       - или - <code>second</code> меньше нуля или больше 59.       - или - <code>millisecond</code> меньше нуля или больше 999."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: UmAlQuraCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Преобразует указанный год в четырехзначный год с помощью <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*>для выбора века.</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*>"
  remarks: "Метод ToFourDigitYear использует `year` параметр <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>свойство и года для вычисления четырехзначный год.</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> Век определяется путем нахождения единственного двухзначного 2-разрядное `year` параметра в данном диапазоне ста лет. Например если <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>имеет значение 1429, столетний диапазон определяется с 1330 по 1429.</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> 2-разрядное значение 30 интерпретируется как 1330, а двухзначное значение 29 как 1429.       Если <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>свойство имеет специальное значение 99, метод ToFourDigitYear игнорирует региональные параметры и язык, на панели управления и возвращает `year` параметр без изменений.</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>       ToFourDigitYear поддерживает двузначный год или год из четырех цифр. При передаче значения двух цифр года (меньше 100) вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>значение, представляющее века.</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> Если приложение передает значение года из четырех цифр в диапазоне поддерживаемых календаря для ToFourDigitYear, метод возвращает фактическое входное значение. Если приложение передает значение из четырех цифр, выходит за пределы поддерживаемого календарного или если он предоставляет отрицательное значение, метод создает исключение."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "2 цифрами от 0 до 99 или четырехзначный год саудовского календаря с 1318 по 1450."
    return:
      type: System.Int32
      description: "Если <code> year </code> параметра равно 2 цифрами, возвращаемое значение соответствующего четырехзначный год. Если <code> year </code> параметр является 4-значный номер года, возвращаемое значение не меняется <code> year </code> параметра."
  overload: System.Globalization.UmAlQuraCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
  fullName: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает или задает последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  remarks: "Это свойство позволяет 2 цифрами правильно преобразовать 4-значный номер года. Например если это свойство имеет значение 1429, столетний диапазон является с 1330 по 1429. 2-разрядное значение 30 интерпретируется как 1330, а двухзначное значение 29 как 1429.       Начальное значение этого свойства является производным от параметров в списке язык и региональные параметры элемента панели управления. Тем не менее эти данные могут измениться в течение жизни <xref:System.AppDomain>.</xref:System.AppDomain> <xref:System.Globalization.UmAlQuraCalendar>Класса не обнаруживает изменения параметров системы автоматически.</xref:System.Globalization.UmAlQuraCalendar>       Специальное значение 99 причины <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>метод, чтобы игнорировать параметры системы и возвращать указанный год без изменений.</xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  overload: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Данный календарь доступен только для чтения."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "В операции задания, саудовского календаря год, значение меньше, но не 99 или больше 1450."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  id: UmAlQuraEra
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: UmAlQuraEra
  nameWithType: UmAlQuraCalendar.UmAlQuraEra
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Представляет текущую эру. Это поле является константой."
  remarks: "Значение поля UmAlQuraEra-1.       Саудовского календаря одна эра: год хиджры. (Латиница «Anno Hegirae», что означает «год миграции,» применительно к миграции из исламском (PBUH) из Мекки)."
  syntax:
    content: public const int UmAlQuraEra = 1;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.UmAlQuraCalendar.#ctor
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraCalendar()
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar()
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraCalendar()
- uid: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
  fullName: System.Globalization.UmAlQuraCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.UmAlQuraCalendar.Eras
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
  fullName: System.Globalization.UmAlQuraCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: UmAlQuraCalendar.GetEra(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetEra(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonth(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetYear(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: UmAlQuraCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
  fullName: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
- uid: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraEra
  nameWithType: UmAlQuraCalendar.UmAlQuraEra
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
- uid: System.Globalization.UmAlQuraCalendar.#ctor*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraCalendar
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar
- uid: System.Globalization.UmAlQuraCalendar.AddMonths*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddMonths
  nameWithType: UmAlQuraCalendar.AddMonths
- uid: System.Globalization.UmAlQuraCalendar.AddYears*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddYears
  nameWithType: UmAlQuraCalendar.AddYears
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.UmAlQuraCalendar.Eras*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: UmAlQuraCalendar.GetDayOfMonth
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: UmAlQuraCalendar.GetDayOfWeek
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: UmAlQuraCalendar.GetDayOfYear
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: UmAlQuraCalendar.GetDaysInMonth
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: UmAlQuraCalendar.GetDaysInYear
- uid: System.Globalization.UmAlQuraCalendar.GetEra*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetEra
  nameWithType: UmAlQuraCalendar.GetEra
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: UmAlQuraCalendar.GetLeapMonth
- uid: System.Globalization.UmAlQuraCalendar.GetMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonth
  nameWithType: UmAlQuraCalendar.GetMonth
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: UmAlQuraCalendar.GetMonthsInYear
- uid: System.Globalization.UmAlQuraCalendar.GetYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetYear
  nameWithType: UmAlQuraCalendar.GetYear
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: UmAlQuraCalendar.IsLeapDay
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: UmAlQuraCalendar.IsLeapMonth
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: UmAlQuraCalendar.IsLeapYear
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: UmAlQuraCalendar.ToDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: UmAlQuraCalendar.ToFourDigitYear
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
