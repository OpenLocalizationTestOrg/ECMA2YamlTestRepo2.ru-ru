### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.FileVersionInfo
  id: FileVersionInfo
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.ToString
  langs:
  - csharp
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  summary: "Предоставляет сведения о версии физического файла на диске."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       Используйте <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>метод класса для получения FileVersionInfo, содержащий сведения о файле, затем просмотрите свойства для получения сведений о файле.</xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>Свойство предоставляет сведения о файле версии.</xref:System.Diagnostics.FileVersionInfo.FileVersion%2A> <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>, И <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>свойства предоставляют сведения о версии для продукта, который входит указанный файл.</xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> </xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> </xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> Вызовите <xref:System.Diagnostics.FileVersionInfo.ToString%2A>получить неполный список свойств и их значения для этого файла.</xref:System.Diagnostics.FileVersionInfo.ToString%2A>       Свойства FileVersionInfo зависят от сведений о версии ресурсов, встроенные в файле. Ресурсы версий часто встраиваются в двоичные файлы .exe или DLL-файлов; текстовые файлы нет сведений о версии ресурса.       Ресурсы версий обычно указываются в файле ресурсов Win32 или в атрибутах сборки. Например <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>свойство отражает `VS_FF_DEBUG` флаг значение в файле `VS_FIXEDFILEINFO` блок, который строится на основе `VERSIONINFO` ресурс в файл ресурсов Win32.</xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>  Дополнительные сведения об указании ресурсов версий в файл ресурсов Win32 в разделе «О файлы ресурсов» и «VERSIONINFO Resource» в пакете SDK для платформы. Дополнительные сведения об указании ресурсов версий в модуле .NET см. в разделе [Настройка атрибутов сборки](~/add/includes/ajax-current-ext-md.md) раздела.      Настроек [!NOTE] настроек этот класс выполняет запрос ссылки на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException>возникает, когда непосредственный вызывающий объект не имеет разрешения полного доверия.</xref:System.Security.SecurityException> Дополнительные сведения о запросах связывания см. в разделе [требования связывания](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the FileVersionInfo for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo Example#1](~/add/codesnippet/csharp/t-system.diagnostics.fil_1.cs)]\n [!code-vb[Classic FileVersionInfo Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.fil_1.vb)]\n [!code-cpp[Classic FileVersionInfo Example#1](~/add/codesnippet/cpp/t-system.diagnostics.fil_1.cpp)]"
  syntax:
    content: public sealed class FileVersionInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Comments
  id: Comments
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает комментарии, связанные с файлом."
  remarks: "Это свойство содержит дополнительные сведения, которые могут отображаться в целях диагностики."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the comments in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_7_1.cs)]\n [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_7_1.cpp)]\n [!code-vb[Classic FileVersionInfo.Comments Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_7_1.vb)]"
  syntax:
    content: public string Comments { get; }
    return:
      type: System.String
      description: "Комментарии, связанные с файлом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.Comments*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  id: CompanyName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает название компании, которая является создателем файла."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the CompanyName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_20_1.cs)]\n [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_20_1.cpp)]\n [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_20_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "Название компании, которая является создателем файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  id: FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает номер сборки файла."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      -Третий набор из 16 разрядов — число FileBuildPart.      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       Это свойство возвращает третий набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_21_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_21_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_21_1.cpp)]"
  syntax:
    content: public int FileBuildPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее номер сборки файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FileBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  id: FileDescription
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает описание файла."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileDescription in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_18_1.cs)]\n [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_18_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_18_1.cpp)]"
  syntax:
    content: public string FileDescription { get; }
    return:
      type: System.String
      description: "Описание файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FileDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  id: FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает основную часть номера версии."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — номер FileMajorPart.      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       Это свойство получает первый набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_6_1.cs)]\n [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_6_1.cpp)]\n [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_6_1.vb)]"
  syntax:
    content: public int FileMajorPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее основную часть номера версии, или 0 (нуль), если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FileMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  id: FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает вспомогательную часть номера версии файла."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -Следующие 16 разрядов — число FileMinorPart.      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>       Это свойство получает второй набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_2_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_2_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_2_1.cs)]"
  syntax:
    content: public int FileMinorPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее вспомогательную часть номер версии файла, или 0 (нуль), если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FileMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileName
  id: FileName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя файла, этот экземпляр <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref> описание."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FileName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_19_1.vb)]\n [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_19_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FileName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_19_1.cs)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "Имя файла, описанные в этом экземпляре <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  id: FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает номер закрытой части файла."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -Последние 16 разрядов — номер FilePrivatePart.       Это свойство получает последний набор 16 бит."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the FilePrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_13_1.cpp)]\n [!code-cs[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_13_1.cs)]\n [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_13_1.vb)]"
  syntax:
    content: public int FilePrivatePart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее номер закрытой части файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  id: FileVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает номер версии файла."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии файла является 64-разрядное число, содержащее номер версии файла в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the file description and version number in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_12_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_12_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_12_1.cpp)]"
  syntax:
    content: public string FileVersion { get; }
    return:
      type: System.String
      description: "Номер версии файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.FileVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  id: GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref> представления сведений о версии, связанный с указанным файлом."
  remarks: ''
  example:
  - "The following example calls GetVersionInfo to get the <xref:System.Diagnostics.FileVersionInfo> for Notepad and  displays the file description and version number in the console window.  \n  \n [!code-cs[classic fileversioninfo example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_1_1.cs)]\n [!code-vb[classic fileversioninfo example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_1_1.vb)]\n [!code-cpp[classic fileversioninfo example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_1_1.cpp)]"
  syntax:
    content: public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Полный путь и имя файла для получения сведений о версии."
    return:
      type: System.Diagnostics.FileVersionInfo
      description: "Объект <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref> содержащий сведения о файле. Если файл не содержал сведения о версии, <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref> содержит только имя запрашиваемого файла."
  overload: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Не удается найти указанный файл."
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.InternalName
  id: InternalName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает внутреннее имя файла, если он существует."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the InternalName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_23_1.cpp)]\n [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_23_1.vb)]\n [!code-cs[Classic FileVersionInfo.InternalName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_23_1.cs)]"
  syntax:
    content: public string InternalName { get; }
    return:
      type: System.String
      description: "Внутреннее имя файла. Если он отсутствует, это свойство будет содержать исходное имя файла без расширения."
  overload: System.Diagnostics.FileVersionInfo.InternalName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  id: IsDebug
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает значение, которое определяет, файл содержит данные отладки или компилируется с помощью доступных средств отладки."
  remarks: "<xref:System.Diagnostics.FileVersionInfo>Свойства зависят от сведений о версии ресурсов, встроенные в файле.</xref:System.Diagnostics.FileVersionInfo> Ресурсы версий часто встраиваются в двоичные файлы .exe или DLL-файлов; текстовые файлы нет сведений о версии ресурса.       Ресурсы версий обычно указываются в файле ресурсов Win32 или в атрибутах сборки. Свойство IsDebug отражает `VS_FF_DEBUG` флаг значение в файле `VS_FIXEDFILEINFO` блок, который строится на основе `VERSIONINFO` ресурс в файл ресурсов Win32. Дополнительные сведения об указании ресурсов версий в файле ресурсов Win32 см. в разделе Platform SDK `About Resource Files` раздела и `VERSIONINFO Resource` разделы статьи."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsDebug in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_4_1.cs)]\n [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_4_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_4_1.vb)]"
  syntax:
    content: public bool IsDebug { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл содержит данные отладки или компилируется с помощью доступных средств отладки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.IsDebug*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  id: IsPatched
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает значение, указывающее, является ли файл был изменен и не совпадает с исходным файлом тот же номер версии."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the state of the Boolean IsPatched in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_5_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_5_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_5_1.vb)]"
  syntax:
    content: public bool IsPatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл исправлен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.IsPatched*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  id: IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает значение, которое указывает, является ли версия файла версией разработчика, или коммерческой версией продукта."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a prerelease version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_22_1.cpp)]\n [!code-cs[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_22_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_22_1.vb)]"
  syntax:
    content: public bool IsPreRelease { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл является предварительной версией; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.IsPreRelease*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  id: IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает значение, указывающее, создан ли файл с помощью стандартных процедур."
  remarks: "Если это значение равно `true`, <xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>будет описано в этой версии файла отличается от стандартной версии.</xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_24_1.cs)]\n [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_24_1.vb)]\n [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_24_1.cpp)]"
  syntax:
    content: public bool IsPrivateBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл является закрытой сборкой; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если файл был создан с помощью стандартных процедур или если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  id: IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает значение, указывающее, является ли файл особой сборкой."
  remarks: "Файл, который является особой сборкой был создан с помощью стандартных процедур, но он отличается от стандартного файла тот же номер версии. Если это значение равно `true`, <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>свойство необходимо задать как этот файл отличается от стандартной версии.</xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it displays whether this version is a special build version in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_14_1.cpp)]\n [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_14_1.vb)]\n [!code-cs[Classic FileVersionInfo.IsSpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_14_1.cs)]"
  syntax:
    content: public bool IsSpecialBuild { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл является особой сборкой; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.Language
  id: Language
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает языковую строку по умолчанию для блока сведений о версии."
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "Строка описания для идентификатора языка Майкрософт в ресурсе версии или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.Language*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  id: LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает все уведомления об авторских правах, применимые к указанному файлу."
  remarks: "Оно должно включать полный текст всех уведомлений, допустимых символов, сроки и так далее или `null` Если файл не содержал сведения о версии."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalCopyright in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_3_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_3_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_3_1.vb)]"
  syntax:
    content: public string LegalCopyright { get; }
    return:
      type: System.String
      description: "Уведомления об авторских правах, применимые к указанному файлу."
  overload: System.Diagnostics.FileVersionInfo.LegalCopyright*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  id: LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает товарные знаки и охраняемые товарные знаки, применимые к файлу."
  remarks: "Допустимые товарные знаки включают полный текст всех уведомлений, допустимые символы и номера товарных знаков."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the LegalTrademarks in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_8_1.cpp)]\n [!code-cs[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_8_1.cs)]\n [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_8_1.vb)]"
  syntax:
    content: public string LegalTrademarks { get; }
    return:
      type: System.String
      description: "Товарные знаки и охраняемые товарные знаки, применимые к файлу или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  id: OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя, которым создавался файл."
  remarks: "Это свойство позволяет приложению определить, является ли файл был переименован."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the OriginalFilename in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_0_1.vb)]\n [!code-cs[Classic FileVersionInfo.OriginalFilename Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_0_1.cs)]"
  syntax:
    content: public string OriginalFilename { get; }
    return:
      type: System.String
      description: "Имя, файл был создан или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.OriginalFilename*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  id: PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает сведения о закрытой версии файла."
  remarks: "Эти сведения предоставляются, если <xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>является `true`.</xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the private build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_16_1.cpp)]\n [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_16_1.vb)]\n [!code-cs[Classic FileVersionInfo.PrivateBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_16_1.cs)]"
  syntax:
    content: public string PrivateBuild { get; }
    return:
      type: System.String
      description: "Сведения о закрытой версии файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.PrivateBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  id: ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает номер сборки продукта, с которым связан этот файл."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии продукта является 64-разрядное число, содержащее номер версии в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      -Третий набор из 16 разрядов — число ProductBuildPart.      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       Это свойство возвращает третий набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductBuildPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_10_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_10_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_10_1.vb)]"
  syntax:
    content: public int ProductBuildPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее номер сборки продукта, этот файл связан с или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  id: ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает основную часть номера версии продукта, с которым связан этот файл."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии продукта является 64-разрядное число, содержащее номер версии в следующем виде:-первые 16 разрядов — номер ProductMajorPart.      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       Это свойство получает первый набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMajorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_9_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_9_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMajorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_9_1.cs)]"
  syntax:
    content: public int ProductMajorPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее основную часть номера версии продукта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  id: ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает вспомогательную часть номера версии продукта, с которым связан файл."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии продукта является 64-разрядное число, содержащее номер версии в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -Следующие 16 разрядов — число ProductMinorPart.      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>       Это свойство получает второй набор из 16 разрядов."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductMinorPart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_11_1.cpp)]\n [!code-cs[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_11_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_11_1.vb)]"
  syntax:
    content: public int ProductMinorPart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее вспомогательную часть номера версии продукта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductName
  id: ProductName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает имя продукта, с которым распространяется этот файл."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductName in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_17_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_17_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_17_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "Имя продукта, этот файл распространяется вместе с или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  id: ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает закрытую часть номера продукта, с которым связан этот файл."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии продукта является 64-разрядное число, содержащее номер версии в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -Последние 16 разрядов — номер ProductPrivatePart.       Это свойство получает последний набор 16 бит."
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductPrivatePart in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_25_1.cs)]\n [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_25_1.vb)]\n [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_25_1.cpp)]"
  syntax:
    content: public int ProductPrivatePart { get; }
    return:
      type: System.Int32
      description: "Значение, представляющее закрытую часть номера продукта, этот файл связан с или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  id: ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает версию продукта, с которым распространяется этот файл."
  remarks: "Как правило номер версии отображается как «номер части number.private образом number.build». Номер версии продукта является 64-разрядное число, содержащее номер версии в следующем виде:-первые 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>      -Следующие 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>      — Третий набор из 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>      -Последние 16 разрядов — <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>номер.</xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the ProductVersion in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_15_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_15_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_15_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "Версия продукта этот файл распространяется вместе с или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  id: SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает сведения особой сборке файла."
  remarks: "Если <xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>является `true`, SpecialBuild необходимо указать отличия файла от стандартной версии файла.</xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>"
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it prints the special build information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/cpp/p-system.diagnostics.fil_1_1.cpp)]\n [!code-cs[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/csharp/p-system.diagnostics.fil_1_1.cs)]\n [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.fil_1_1.vb)]"
  syntax:
    content: public string SpecialBuild { get; }
    return:
      type: System.String
      description: "Специальные сведения о сборке для файла или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не содержал сведения о версии."
  overload: System.Diagnostics.FileVersionInfo.SpecialBuild*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.FileVersionInfo.ToString
  id: ToString
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает неполный список свойств в <xref href=&quot;System.Diagnostics.FileVersionInfo&quot;> </xref> и их значения."
  remarks: ''
  example:
  - "The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad. Then it calls ToString to print a list of the file version information in a text box. This code assumes `textBox1` has been instantiated.  \n  \n [!code-cs[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/csharp/m-system.diagnostics.fil_0_1.cs)]\n [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/cpp/m-system.diagnostics.fil_0_1.cpp)]\n [!code-vb[Classic FileVersionInfo.ToString Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.fil_0_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A list of the following properties in this class and their values:       <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>, <>*>,       <xref:System.Diagnostics.FileVersionInfo.Language*>.</xref:System.Diagnostics.FileVersionInfo.Language*>       Если файл не содержал сведения о версии, этот список будет содержать только имя запрашиваемого файла. Логические значения будут иметь <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, и все другие элементы будут <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.FileVersionInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Diagnostics.FileVersionInfo.Comments
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo(String)
  nameWithType: FileVersionInfo.GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(String)
- uid: System.Diagnostics.FileVersionInfo
  parent: System.Diagnostics
  isExternal: false
  name: FileVersionInfo
  nameWithType: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
  fullName: System.Diagnostics.FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString()
  nameWithType: FileVersionInfo.ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
- uid: System.Diagnostics.FileVersionInfo.Comments*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Comments
  nameWithType: FileVersionInfo.Comments
- uid: System.Diagnostics.FileVersionInfo.CompanyName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: CompanyName
  nameWithType: FileVersionInfo.CompanyName
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileBuildPart
  nameWithType: FileVersionInfo.FileBuildPart
- uid: System.Diagnostics.FileVersionInfo.FileDescription*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileDescription
  nameWithType: FileVersionInfo.FileDescription
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMajorPart
  nameWithType: FileVersionInfo.FileMajorPart
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileMinorPart
  nameWithType: FileVersionInfo.FileMinorPart
- uid: System.Diagnostics.FileVersionInfo.FileName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileName
  nameWithType: FileVersionInfo.FileName
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FilePrivatePart
  nameWithType: FileVersionInfo.FilePrivatePart
- uid: System.Diagnostics.FileVersionInfo.FileVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: FileVersion
  nameWithType: FileVersionInfo.FileVersion
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: GetVersionInfo
  nameWithType: FileVersionInfo.GetVersionInfo
- uid: System.Diagnostics.FileVersionInfo.InternalName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: InternalName
  nameWithType: FileVersionInfo.InternalName
- uid: System.Diagnostics.FileVersionInfo.IsDebug*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsDebug
  nameWithType: FileVersionInfo.IsDebug
- uid: System.Diagnostics.FileVersionInfo.IsPatched*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPatched
  nameWithType: FileVersionInfo.IsPatched
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPreRelease
  nameWithType: FileVersionInfo.IsPreRelease
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsPrivateBuild
  nameWithType: FileVersionInfo.IsPrivateBuild
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: IsSpecialBuild
  nameWithType: FileVersionInfo.IsSpecialBuild
- uid: System.Diagnostics.FileVersionInfo.Language*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: Language
  nameWithType: FileVersionInfo.Language
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalCopyright
  nameWithType: FileVersionInfo.LegalCopyright
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: LegalTrademarks
  nameWithType: FileVersionInfo.LegalTrademarks
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: OriginalFilename
  nameWithType: FileVersionInfo.OriginalFilename
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: PrivateBuild
  nameWithType: FileVersionInfo.PrivateBuild
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductBuildPart
  nameWithType: FileVersionInfo.ProductBuildPart
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMajorPart
  nameWithType: FileVersionInfo.ProductMajorPart
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductMinorPart
  nameWithType: FileVersionInfo.ProductMinorPart
- uid: System.Diagnostics.FileVersionInfo.ProductName*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductName
  nameWithType: FileVersionInfo.ProductName
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductPrivatePart
  nameWithType: FileVersionInfo.ProductPrivatePart
- uid: System.Diagnostics.FileVersionInfo.ProductVersion*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ProductVersion
  nameWithType: FileVersionInfo.ProductVersion
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: SpecialBuild
  nameWithType: FileVersionInfo.SpecialBuild
- uid: System.Diagnostics.FileVersionInfo.ToString*
  parent: System.Diagnostics.FileVersionInfo
  isExternal: false
  name: ToString
  nameWithType: FileVersionInfo.ToString
