### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  id: IClientChannelSinkStack
  children:
  - System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)
  - System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)
  langs:
  - csharp
  name: IClientChannelSinkStack
  nameWithType: IClientChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  type: Interface
  summary: "Предоставляет функциональные возможности для стека клиента приемники каналов, который должен вызываться при декодировании асинхронного ответа."
  remarks: "IClientChannelSinkStack используется во время обработки ответов на асинхронные вызовы.       Во время синхронного вызова <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A?displayProperty=fullName>метод вызывается, когда сообщение является исходящим на сервер.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A?displayProperty=fullName> Каждый приемник в цепи приемников вызывает <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>метод для следующего приемника, пока вызов не достигает транспортного приемника в конце цепи.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> Оттуда сообщение передается на сервер.       Когда приемник модуля форматирования вызывается через <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A>метод, он передает вызов асинхронно путем вызова <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A>для следующего приемника канала.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A> </xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> Стек приемников ответов необходим для обработки ответа. Любой приемник, который должен обработать ответ должен передать себя стека приемника канала клиента внутри <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A>.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IClientChannelSinkStack : System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  implements:
  - System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)
  id: Pop(System.Runtime.Remoting.Channels.IClientChannelSink)
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  langs:
  - csharp
  name: Pop(IClientChannelSink)
  nameWithType: IClientChannelSinkStack.Pop(IClientChannelSink)
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop(IClientChannelSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Выводит сведения, связанные со всеми приемниками из стека приемника до и включая указанный приемник."
  syntax:
    content: public object Pop (System.Runtime.Remoting.Channels.IClientChannelSink sink);
    parameters:
    - id: sink
      type: System.Runtime.Remoting.Channels.IClientChannelSink
      description: "Чтобы удалить и вернуть из стека приемника приемник."
    return:
      type: System.Object
      description: "Сведения, созданные на стороне запроса и связанные с указанным приемником."
  overload: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)
  id: Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  langs:
  - csharp
  name: Push(IClientChannelSink,Object)
  nameWithType: IClientChannelSinkStack.Push(IClientChannelSink,Object)
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push(IClientChannelSink,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Переносит указанный приемник и сведения, связанные с ним в стек приемника."
  remarks: "Сведения, созданные на стороне запроса и указанные в `state` параметр возвращается в `state` параметр <xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A>метод в соответствующем приемнике.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessResponse%2A>"
  syntax:
    content: public void Push (System.Runtime.Remoting.Channels.IClientChannelSink sink, object state);
    parameters:
    - id: sink
      type: System.Runtime.Remoting.Channels.IClientChannelSink
      description: "Чтобы поместить в стек приемника приемник."
    - id: state
      type: System.Object
      description: "Сведения, созданные на стороне запроса, которые требуются на стороне ответа."
  overload: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Непосредственный вызывающий объект не имеет разрешения инфраструктуры."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop(System.Runtime.Remoting.Channels.IClientChannelSink)
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  isExternal: false
  name: Pop(IClientChannelSink)
  nameWithType: IClientChannelSinkStack.Pop(IClientChannelSink)
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop(IClientChannelSink)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Channels.IClientChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSink
  nameWithType: IClientChannelSink
  fullName: System.Runtime.Remoting.Channels.IClientChannelSink
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push(System.Runtime.Remoting.Channels.IClientChannelSink,System.Object)
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  isExternal: false
  name: Push(IClientChannelSink,Object)
  nameWithType: IClientChannelSinkStack.Push(IClientChannelSink,Object)
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push(IClientChannelSink,Object)
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Pop*
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  isExternal: false
  name: Pop
  nameWithType: IClientChannelSinkStack.Pop
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkStack.Push*
  parent: System.Runtime.Remoting.Channels.IClientChannelSinkStack
  isExternal: false
  name: Push
  nameWithType: IClientChannelSinkStack.Push
