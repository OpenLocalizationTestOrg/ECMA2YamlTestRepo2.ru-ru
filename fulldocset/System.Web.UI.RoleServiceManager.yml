### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Настраивает расположение пользовательской реализации службы роли."
  remarks: "Класс RoleServiceManager соответствует <xref:System.Web.UI.ScriptManager.RoleService%2A>свойство <xref:System.Web.UI.ScriptManager>или <xref:System.Web.UI.ScriptManagerProxy>управления.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       Роль веб-служба используется приложениями с поддержкой AJAX для получения сведений о роли для текущего пользователя, прошедшего проверку подлинности с помощью асинхронного вызова веб-службы. RoleServiceManager можно использовать для предоставления пути альтернативной реализации веб-службы с помощью встроенных веб-службы роли.       Чтобы использовать службу роли в приложении, необходимо включить его в файле конфигурации и объявить его на странице. Если используется встроенная роль веб-службы, необходимо включить его, но необходимо явно объявить роли service manager в странице.       Чтобы создать пользовательскую службу роли, необходимо реализовать веб-службу, которая содержит два метода: `GetRolesForCurrentUser` и `IsCurrentUserInRole`. Эти методы должны иметь такой же сигнатурой, что и соответствующие методы встроенной роли веб-службы.       В следующем примере показана структура базового класса, должен быть реализован в пользовательскую роль класса веб-службы.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] для использования пользовательских веб-службы роли, можно добавить службу декларативно в разметке, помещая `RoleService` внутри <xref:System.Web.UI.ScriptManager>контролировать, как показано в следующем примере.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```Можно также программно задать <xref:System.Web.UI.RoleServiceManager.Path%2A>свойство для использования пользовательских веб-службы роли.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> класса."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Возвращает или задает значение, указывающее, должен быть получен список ролей для пользователя, выполнившего вход."
  remarks: "Если имеет значение свойства LoadRoles `true`, получить список ролей <xref:System.Web.UI.RoleServiceManager>класса с помощью <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>метод.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> Затем список сериализуется в разметку страницы.      Настроек [!NOTE] настроек при LoadRoles — `true`, все роли, к которым принадлежит текущий пользователь проверку подлинности отправляемого в браузер. Поскольку пользователи потенциально могут видеть сведения о ролях, это может быть проблема безопасности.       Свойство LoadRoles можно указать в <xref:System.Web.UI.ScriptManager>управления или в связанную с ним <xref:System.Web.UI.ScriptManagerProxy>управления.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Если имеет значение LoadRoles `true` экземпляра прокси, извлекается и поместить на страницу списка ролей. Если LoadRoles `false`, роли не добавляются в разметку страницы. В этом случае можно использовать метод для сохранения сведений о ролях в памяти в браузере."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если необходимо получить список ролей; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Возвращает или задает путь к службе роли."
  remarks: "Если свойство Path не задано, возвращается <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> В этом случае ASP.NET использует встроенной проверки подлинности веб-службы, соответствующий по следующему пути внутреннее значение по умолчанию: ~ / RolesService.svc. То же самое происходит, если задать путь к пустой строкой или к `null`.       Путь может быть задан в <xref:System.Web.UI.ScriptManager>управления или в связанную с ним <xref:System.Web.UI.ScriptManagerProxy>управления.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Если задан путь в <xref:System.Web.UI.ScriptManagerProxy>уровня, выполняются следующие условия:-в случае нескольких прокси-объекты в иерархии элементов управления, должны быть заданы для каждого экземпляра прокси-сервера нет пути.</xref:System.Web.UI.ScriptManagerProxy>      -Если путь явно задан для прокси-объект, значение должно быть одинаковым для всех остальных объектов, это свойство имеет значение для прокси-сервера. Если установить различные пути для различных объектов прокси в иерархии элементов управления <xref:System.ArgumentException>исключения.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Путь к пользовательской роли веб-службы."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Более одного уникального пути задано в иерархии элементов управления."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
