### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Указывает, поддерживает ли служба отправку ответов только на анонимные адреса, только только неанонимные адреса, или оба."
  remarks: "Это перечисление используется для задания возможностей сервера, который, в свою очередь, устанавливает требования для клиентов.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]имеет широкий набор элементов управления адресации для указания, куда должны отправляться сообщения. Например, есть логический <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>адрес назначения сообщения, физический («Via») адрес, используемый транспортом, по которому служба ожидает передачи данных, и <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>адрес конечной точки, предоставляющее адрес конечной точки клиента.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       В большинстве случаев когда две стороны обмениваются сообщениями только между собой, это не нужно отдельно задавать эти адреса. Но так, как обмен сообщениями могут быть задействованы другие пункты назначения, необходимо указать, когда адреса должен быть предоставлен явно. Даже между только двух сторон эта возможность не иногда требуется, как с помощью двойных каналов HTTP где сервера необходимо создать собственный HTTP-запрос. Следующие типы отношений определены перечислением SupportedAddressingMode для описания шаблонов обмена сообщениями:-анонимные адреса — это самая простая форма адресации. Анонимная адресация используется, если есть путь ответа по умолчанию. TCP — это двунаправленный транспорт, ответ на сообщение TCP может быть отправлен обратно на другой стороне сокет, с которого пришло исходное сообщение. Аналогично модель запрос ответ HTTP отправляет ответы по каналу HTTP-ответа. Ни один из этих ответов необходимо указать, где идут сообщения ответа. Если сервер требует анонимных ответов от клиента, используется анонимный значение перечисления. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Системных <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>и <xref:System.ServiceModel.WSHttpBinding>привязки всегда использовать анонимные адреса.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Неанонимные адреса будут использоваться при отправке ответа требует создания нового канала связи. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Системных <xref:System.ServiceModel.WSDualHttpBinding>Привязка использует неанонимный адрес.</xref:System.ServiceModel.WSDualHttpBinding> С помощью двойных каналов HTTP клиент создает запрос HTTP для отправки сообщения и затем сервер должен создавать собственный HTTP-запрос для отправки ответа. Поскольку сервер инициирует отправку, он должен иметь определенную конечную точку для установления соединения. Необходимо указать адрес конечной точки сервера для ответа. Аналогично Если служба должна ответить на одностороннее сообщение, полученное, необходимо также неанонимных адресов, поскольку нет обратного канала для обмена данными. Если сервер отправляет сообщение обратно, требуется отдельной операции от используемого для отправки первого сообщения.      -Смешанного — третий вид адресации, который объединяет в себе анонимный доступ и неанонимных адреса в зависимости от того, который отправляется сообщение. Типичный пример адресации в смешанном режиме является использование выделенного компьютера для обработки сообщений об ошибках и подтверждений. Если в стандартной последовательности обмена для ответов — HTTP или TCP, для ответных сообщений используется анонимная адресация, но ошибок используется адресация non-anonymous. Во время [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] не поддерживает смешанный адресации функции в какой-либо стандартной привязке, можно создать канал, позволяющий службе отправлять ответы напрямую по обратному каналу (если адрес ответа является анонимный) или по отдельному канал (когда обратный адрес неанонимных). В этом случае элемент привязки канала используется для setSupportedAddressingMode смешанный режим."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Сервер поддерживает только анонимные адреса и клиенты должны предоставлять анонимный обратный адрес."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Сервер поддерживает анонимные и неанонимные адреса и клиенты могут выбрать для использования одной или обеих."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Сервер поддерживает только неанонимные адреса и клиенты должны предоставлять неанонимный обратный адрес."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
