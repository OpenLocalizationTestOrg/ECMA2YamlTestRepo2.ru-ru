### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.InPlaceHostingManager
  id: InPlaceHostingManager
  children:
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.CancelAsync
  - System.Deployment.Application.InPlaceHostingManager.Dispose
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  - System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  - System.Deployment.Application.InPlaceHostingManager.Execute
  - System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  - System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  langs:
  - csharp
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager
  fullName: System.Deployment.Application.InPlaceHostingManager
  type: Class
  summary: "Установите или обновите [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания на компьютере."
  remarks: "Можно использовать для записи программ, установить InPlaceHostingManager [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения программным способом. Например этот класс можно использовать в среде управляемой системы управления программного обеспечения (SMS) или в ситуациях, где требуется сложный установки, который выполняет ряд операций перед или после установки на локальном компьютере. Как правило, рекомендуется использовать члены этого класса в определенном порядке: 1.  Создайте новый экземпляр InPlaceHostingManager.      2.  Загрузить манифест развертывания с помощью <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>      3.  Проверьте, что приложения могут выполняться с соответствующими разрешениями, с помощью <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>      4.  Загрузить и установить приложение с помощью <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>      -При вызове любого из этих параметров не по порядку, они создают исключение.       Можно установить InPlaceHostingManager [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения, но не может выполнить его. Некоторые методы в этом классе, такие как <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, зарезервированы для использования при загрузке приложения Windows Presentation Foundation, которое выполняется в веб-браузер.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>       Чтобы использовать InPlaceHostingManager для загрузки и установки приложений, необходимо проверить, сертификат для подписывания [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложений, которые вы планируете установить уже установлены на клиентских компьютерах в качестве доверенного издателя. Дополнительные сведения о доверенных издателей см. в разделе [Общие сведения о развертывании доверенных приложений](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек в настоящее время имеется ограничение продукта, препятствующих правильной работе при отладке кода с помощью InPlaceHostingManager [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]. При отладке приложения в [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] с помощью клавиши F5, образец, исключения загадочным при вызове <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> Чтобы отлаживать, используя [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], запустите приложение без отладки, а затем подключите отладчик. Кроме того можно использовать другой отладчик, как WinDbg."
  example:
  - "The following code example shows how to use InPlaceHostingManager to install a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application programmatically on a client computer.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#1)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#1)]"
  syntax:
    content: 'public class InPlaceHostingManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Создает новый экземпляр <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> для загрузки и установки указанного приложения, размещаемые в браузере."
  remarks: "Этот конструктор используется, если требуется загрузить в приложении Windows Presentation Foundation, размещенной в веб-браузере. Для загрузки приложения Windows Forms, которые развертываются с помощью [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)], используйте <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>конструктор с `launchInHostProcess` равным `false`.</xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Универсальный код ресурса (<xref:System.Uri>) для [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] манифест развертывания для приложения.</xref:System.Uri>"
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>можно использовать только в Windows XP или более поздних версиях операционной системы Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Невозможно передать <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для <code> deploymentManifest </code> аргумент."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>использует схему URI, который не поддерживается [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Создает новый экземпляр <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> для загрузки и установки указанного приложения, который может быть автономного приложения на основе Windows Forms или приложения, размещенного в веб-браузере."
  remarks: ''
  example:
  - "The following code example demonstrates how to create an instance of <xref:System.Deployment.Application.InPlaceHostingManager> that allows you to download Windows Forms-based applications deployed using [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)].  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Универсального ресурса (URI) для манифеста развертывания приложения, которая будет установлена."
    - id: launchInHostProcess
      type: System.Boolean
      description: "Ли это приложение будет выполняться в приложении, такие как веб-браузер. Для автономного приложения, это значение равно <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>можно использовать только в Windows XP или более поздних версиях операционной системы Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Невозможно передать <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для <code> deploymentManifest </code> аргумент."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>использует схему URI, который не поддерживается [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  id: AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Определяет, является ли [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение имеет необходимые разрешения и зависимости платформы для запуска на локальном компьютере."
  remarks: "Необходимо вызвать метод AssertApplicationRequirements после <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>возвращает успешно.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> Не следует вызывать <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>Если вызвать метод assertapplicationrequirements во, и возвращает без ошибок.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>"
  example:
  - "The following code example demonstrates the use of AssertApplicationRequirements, which it calls in the body of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void AssertApplicationRequirements ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Если этот метод вызывается перед <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>метод.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  id: AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Определяет, является ли [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение имеет необходимые разрешения и зависимости платформы для запуска на локальном компьютере."
  remarks: "Если `grantApplicationTrust` — `true`, <xref:System.Deployment.Application.InPlaceHostingManager>предоставит приложение повышенными разрешениями, если они требуются.</xref:System.Deployment.Application.InPlaceHostingManager> Это возможно только если <xref:System.Deployment.Application.InPlaceHostingManager>способен предоставить эти разрешения.</xref:System.Deployment.Application.InPlaceHostingManager> Например если [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения устанавливаются как часть большего размера пакета, установщик было предоставлено полное доверие <xref:System.Deployment.Application.InPlaceHostingManager>будут иметь возможность предоставлять [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложению полный уровень доверия.</xref:System.Deployment.Application.InPlaceHostingManager> Если `grantApplicationTrust` — `false`, приложение не получает никаких разрешений."
  syntax:
    content: public void AssertApplicationRequirements (bool grantApplicationTrust);
    parameters:
    - id: grantApplicationTrust
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, приложение попытается поднять свои права до требуемого уровня."
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  id: CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Отменяет асинхронную операцию загрузки."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  id: Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref>."
  remarks: "После использования <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Deployment.Application.InPlaceHostingManager>окажется в неработоспособном состоянии.</xref:System.Deployment.Application.InPlaceHostingManager> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Deployment.Application.InPlaceHostingManager>, сборщик мусора мог освободить память, <xref:System.Deployment.Application.InPlaceHostingManager>занимаемую.</xref:System.Deployment.Application.InPlaceHostingManager> </xref:System.Deployment.Application.InPlaceHostingManager> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Deployment.Application.InPlaceHostingManager>объекта `Finalize` метод.</xref:System.Deployment.Application.InPlaceHostingManager>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  id: DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Загружает обновление приложения в фоновом режиме."
  remarks: "Необходимо вызвать этот метод после вызова <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>"
  example:
  - "The following code example demonstrates the use of DownloadApplicationAsync, which it calls at the end of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void DownloadApplicationAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Если этот метод вызывается перед <> </> *настроек и <> </> *настроек методы."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  id: DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит, когда приложение завершило загрузку на локальном компьютере."
  remarks: "При установке приложения на основе Windows Forms необходимо попросить пользователей для запуска приложения отдельно. не удается запустить приложения на основе Windows Forms программными средствами с помощью <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>метод.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>"
  example:
  - "The following code example demonstrates a handler for the DownloadApplicationCompleted event.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#7)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#7)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs> DownloadApplicationCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит при изменении статуса загрузки приложения или манифеста."
  remarks: "В консольном приложении события назначаются потоки из пула потоков. Таким образом может появиться события обновления выполняется по порядку, при этом последующее событие, показывающая меньшее значение, чем предыдущее. Такое поведение в приложении Windows Forms не увидят так, как события Windows Forms обрабатываются последовательно из очереди сообщений потока пользовательского интерфейса (UI)."
  example:
  - "The following code example demonstrates how to update a <xref:System.Windows.Forms.ToolStripProgressBar> that is contained within a <xref:System.Windows.Forms.StatusStrip>.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#6)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#6)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs> DownloadProgressChanged;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  id: Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Запускает [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение только в том случае, если это приложение на основе Windows Presentation Foundation, работающих в веб-браузере."
  remarks: "Этот метод допустим только для приложений на основе Windows Presentation Foundation, которые могут быть размещены в веб-браузере (то есть определить манифесты развертывания `hostInBrowser` XML-элемент)."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle Execute ();
    parameters: []
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> Соответствующий запущенное приложение."
  overload: System.Deployment.Application.InPlaceHostingManager.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  id: GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Загружает манифест развертывания для [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения в фоновом режиме и вызывает событие, когда операция завершена или произошла ошибка."
  remarks: "Для получения уведомлений о завершении этого события, создайте обработчик событий для <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>событий.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Если это событие вызывается, и ошибка не обозначается <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, Далее следует вызывать <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>Чтобы убедиться, что приложение будет иметь разрешение на запуск на локальном компьютере.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs>"
  example:
  - "The following code examples demonstrate how to call the GetManifestAsync method. The handler for the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]  \n  \n [!code-cs[System.Deployment.Application.InPlaceHostingManager#4](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#4)]"
  syntax:
    content: public void GetManifestAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  id: GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит, когда манифест развертывания, загруженной на локальный компьютер."
  remarks: "Используйте <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>свойство <xref:System.Deployment.Application.GetManifestCompletedEventArgs>для проверки ли <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>успешное завершение или возвращена ошибка.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Если <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>имеет значение null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>завершено, и может вызывать <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code examples demonstrate how to call the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> method. The handler for the GetManifestCompleted event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs> GetManifestCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  id: UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Удаляет ранее установленные пользовательские компоненты приложения."
  syntax:
    content: public static void UninstallCustomAddIn (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Строка, содержащая идентификатор подписки, который указывает надстройку для удаления."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subscriptionId</code>не является допустимым удостоверением подписки или не включает имя, токен открытого ключа, архитектура процессора и номер версии."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subscriptionId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  id: UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Удаляет [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения, которое содержит &lt;customUX&gt; элемента."
  remarks: "This method uninstalls a previously installed [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application that uses the `<customUX>` element in the [\\&lt;entryPoint\\&gt; Element](../Topic/%3CentryPoint%3E%20Element%20\\(ClickOnce%20Application\\).md).  \n  \n Custom installers that do not create an Add or Remove Programs entry for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application must store the subscription identifier found in the <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> property during installation."
  syntax:
    content: public static void UninstallCustomUXApplication (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Строка, содержащая идентификатор подписки, который задает [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения для удаления."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
- uid: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadApplicationCompletedEventArgs>
  nameWithType: EventHandler<DownloadApplicationCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadApplicationCompletedEventArgs
    name: DownloadApplicationCompletedEventArgs
    nameWithType: DownloadApplicationCompletedEventArgs
    fullName: DownloadApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
- uid: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: DownloadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
- uid: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GetManifestCompletedEventArgs>
  nameWithType: EventHandler<GetManifestCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.GetManifestCompletedEventArgs
    name: GetManifestCompletedEventArgs
    nameWithType: GetManifestCompletedEventArgs
    fullName: GetManifestCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager.InPlaceHostingManager
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync
  nameWithType: InPlaceHostingManager.CancelAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose
  nameWithType: InPlaceHostingManager.Dispose
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Execute*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute
  nameWithType: InPlaceHostingManager.Execute
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync
  nameWithType: InPlaceHostingManager.GetManifestAsync
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication
