### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterCategory
  id: PerformanceCounterCategory
  children:
  - System.Diagnostics.PerformanceCounterCategory.#ctor
  - System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)
  - System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.CategoryHelp
  - System.Diagnostics.PerformanceCounterCategory.CategoryName
  - System.Diagnostics.PerformanceCounterCategory.CategoryType
  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)
  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)
  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)
  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.Delete(System.String)
  - System.Diagnostics.PerformanceCounterCategory.Exists(System.String)
  - System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.GetCategories
  - System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)
  - System.Diagnostics.PerformanceCounterCategory.GetCounters
  - System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)
  - System.Diagnostics.PerformanceCounterCategory.GetInstanceNames
  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)
  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounterCategory.MachineName
  - System.Diagnostics.PerformanceCounterCategory.ReadCategory
  langs:
  - csharp
  name: PerformanceCounterCategory
  nameWithType: PerformanceCounterCategory
  fullName: System.Diagnostics.PerformanceCounterCategory
  type: Class
  summary: "Представляет объект производительности, который определяет категорию счетчиков производительности."
  remarks: "> [!IMPORTANT]\n>  Creating or deleting a performance counter requires synchronization of the underlying code by using a named mutex. If a highly privileged application locks the named mutex, attempts to create or delete a performance counter causes the application to stop responding until the lock is released. To help avoid this problem, never grant <xref:System.Security.Permissions.SecurityPermissionFlag> permission to untrusted code. In addition, <xref:System.Security.Permissions.SecurityPermissionFlag> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.  \n  \n The PerformanceCounterCategory instance's <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> property is displayed in the Performance Object field of the Performance Viewer application's Add Counter dialog box.  \n  \n The PerformanceCounterCategory class provides several methods for interacting with counters and categories on the computer. The <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> methods enable you to define custom categories. The <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> method provides a way to remove categories from the computer. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method enables you to view the list of categories, while <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> retrieves all the counter and instance data associated with a single category.  \n  \n A performance counter publishes performance data about an application. Categories include physical components (such as processors, disks, and memory) and system objects (such as processes and threads). System counters that are related to the same performance object are grouped into a category that indicates their common focus. When you create an instance of the <xref:System.Diagnostics.PerformanceCounter> class, you first indicate the category with which the component will interact, and then you choose a counter from that category.  \n  \n For example, one Windows counter category is the Memory category. System counters within this category track memory data such as the number of bytes available and the number of bytes cached. If you wanted to work with the bytes cached in your application, you would create an instance of the <xref:System.Diagnostics.PerformanceCounter> component, connect it to the Memory category, and then pick the appropriate counter (in this case, Cached Bytes) from that category.  \n  \n Although your system makes many more counter categories available, the categories that you will probably interact with most frequently are the Cache, Memory, Objects, PhysicalDisk, Process, Processor, Server, System, and Thread categories.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> method in the <xref:System.Diagnostics.PerformanceCounter> class will release the counter and, if the reuse option is selected for that category, the instance of the counter will be reused. This could cause a race condition if another process or even another part of the code is trying to write to the counter instance.  \n  \n> [!NOTE]\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \n  \n> [!NOTE]\n>  Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see [\\&lt;performanceCounters\\&gt;](../Topic/%3CperformanceCounters%3E%20Element.md)."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> and its PerformanceCounterCategory exist on the local computer or on another computer. If these objects do not exist on the local computer, the example optionally creates them. It uses the <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> method to determine whether the PerformanceCounterCategory exists.  If the PerformanceCounterCategory does not exist and no counter name is specified, or if the computer is a remote machine, the example exits.  \n  \n If a <xref:System.Diagnostics.PerformanceCounter> name is provided, the example uses the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method and displays the result to the user. If the <xref:System.Diagnostics.PerformanceCounter> does not exist, the user can delete and re-create the PerformanceCounterCategory with the new <xref:System.Diagnostics.PerformanceCounter>. If the user does so, the category is deleted using the <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> method.  \n  \n If requested, the example now creates the new PerformanceCounterCategory and <xref:System.Diagnostics.PerformanceCounter> using the <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> method. If an instance name is specified, the example uses the <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> method and displays the result.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.Class#27](~/add/codesnippet/csharp/t-system.diagnostics.per_3_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/add/codesnippet/visualbasic/t-system.diagnostics.per_3_1.vb)]"
  syntax:
    content: public sealed class PerformanceCounterCategory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor
  id: '#ctor'
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: PerformanceCounterCategory()
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory()
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> класса оставляет <> </> *настроек пустой свойство, которое задает <> </> *настроек свойств на локальном компьютере."
  remarks: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>Свойству необходимо присвоить до связывания данного <xref:System.Diagnostics.PerformanceCounterCategory>экземпляр с объектом производительности на сервере.</xref:System.Diagnostics.PerformanceCounterCategory> </xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> В противном случае создается исключение."
  example:
  - "The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line.  It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload appropriate for the number of parameters provided, then displays its properties.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_4_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_4_1.vb)]"
  syntax:
    content: public PerformanceCounterCategory ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: PerformanceCounterCategory(String)
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> класса наборы <> </> *настроек свойств для указанного значения и наборы <> </> *настроек свойства на локальном компьютере."
  remarks: ''
  example:
  - "The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_11_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_11_1.vb)]"
  syntax:
    content: public PerformanceCounterCategory (string categoryName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности или объект производительности, с которым необходимо связать это <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> экземпляра."
  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> — Пустая строка (»»)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: PerformanceCounterCategory(String,String)
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> класса и наборы <> </> *настроек и <> </> *настроек свойств для указанных значений."
  remarks: ''
  example:
  - "The following code example accepts a <xref:System.Diagnostics.PerformanceCounterCategory> name and a computer name from the command line. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/csharp/75b9896e-a505-4b53-afe2-_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/add/codesnippet/visualbasic/75b9896e-a505-4b53-afe2-_1.vb)]"
  syntax:
    content: public PerformanceCounterCategory (string categoryName, string machineName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности или объект производительности, с которым необходимо связать это <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> экземпляра."
    - id: machineName
      type: System.String
      description: "Компьютер, на котором существует категория счетчиков производительности и связанная с ним."
  overload: System.Diagnostics.PerformanceCounterCategory.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> — Пустая строка (»»).       - или - <code> machineName </code> недопустимый синтаксис."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp
  id: CategoryHelp
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CategoryHelp
  nameWithType: PerformanceCounterCategory.CategoryHelp
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryHelp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Получает текст справки для данной категории."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and computer names, then sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> properties from the entered values. It then displays the values of the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, and CategoryHelp properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_5_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_5_1.vb)]"
  syntax:
    content: public string CategoryHelp { get; }
    return:
      type: System.String
      description: "Описание объекта производительности, который измеряет эта категория."
  overload: System.Diagnostics.PerformanceCounterCategory.CategoryHelp*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> Чтобы получить справку по категории необходимо задать имя категории."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName
  id: CategoryName
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CategoryName
  nameWithType: PerformanceCounterCategory.CategoryName
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает имя объекта производительности, который определяет эту категорию."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and computer names, then sets the CategoryName and <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> properties from the entered values. It then displays the values of the CategoryName, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, and <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_3_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_3_1.vb)]"
  syntax:
    content: public string CategoryName { get; set; }
    return:
      type: System.String
      description: "Имя категории счетчика производительности или объект производительности, с которым необходимо связать это <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> экземпляра."
  overload: System.Diagnostics.PerformanceCounterCategory.CategoryName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "«Категория» является пустая строка (»»)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "«Категория» является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType
  id: CategoryType
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CategoryType
  nameWithType: PerformanceCounterCategory.CategoryType
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает тип категории счетчика производительности."
  remarks: "Свойство CategoryType указывает, является ли <xref:System.Diagnostics.PerformanceCounterCategory>объекта может иметь несколько экземпляров.</xref:System.Diagnostics.PerformanceCounterCategory> Возможные значения: <xref:System.Diagnostics.PerformanceCounterCategoryType>, <xref:System.Diagnostics.PerformanceCounterCategoryType>, или <xref:System.Diagnostics.PerformanceCounterCategoryType>.</xref:System.Diagnostics.PerformanceCounterCategoryType> </xref:System.Diagnostics.PerformanceCounterCategoryType> </xref:System.Diagnostics.PerformanceCounterCategoryType>       Существует два типа категорий счетчиков производительности: одним экземпляром и с несколькими экземплярами. По умолчанию категории экземпляра при его создании и становится нескольких экземпляров, если добавить другой экземпляр. Категории создаются, когда Настройка приложения, а экземпляры добавляются во время выполнения. В .NET Framework версий 1.0 и 1.1 это не нужно знать, если категория счетчиков производительности нескольких экземпляров или экземпляра. В [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], <xref:System.Diagnostics.PerformanceCounterCategoryType>перечисление используется для указания, является ли счетчик производительности может иметь несколько экземпляров.</xref:System.Diagnostics.PerformanceCounterCategoryType>"
  syntax:
    content: public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterCategoryType
      description: "Один из <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref> значения."
  overload: System.Diagnostics.PerformanceCounterCategory.CategoryType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)
  id: CounterExists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CounterExists(String)
  nameWithType: PerformanceCounterCategory.CounterExists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, зарегистрирован ли указанный счетчик в этой категории, который обозначается <> </> *настроек и <> </> *настроек свойств."
  remarks: "Необходимо задать <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>свойства перед вызовом этого метода.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> В противном случае создается исключение.       Если вы не задали <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>свойство, этот метод использует локальный компьютер (».»).</xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It creates a <xref:System.Diagnostics.PerformanceCounterCategory> object using the appropriate <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. It then uses the CounterExists method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> exists, and informs the user.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_6_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_6_1.vb)]"
  syntax:
    content: public bool CounterExists (string counterName);
    parameters:
    - id: counterName
      type: System.String
      description: "Имя счетчика производительности для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если счетчик зарегистрирован в категорию, который задается параметром <> </> *настроек и <> </> *настроек свойств; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Свойство не задано.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)
  id: CounterExists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CounterExists(String,String)
  nameWithType: PerformanceCounterCategory.CounterExists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, зарегистрирован ли указанный счетчик в указанной категории на локальном компьютере."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> name exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is provided.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/csharp/ccefabf7-dd26-432c-91c0-_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/visualbasic/ccefabf7-dd26-432c-91c0-_1.vb)]"
  syntax:
    content: public static bool CounterExists (string counterName, string categoryName);
    parameters:
    - id: counterName
      type: System.String
      description: "Имя счетчика производительности для поиска."
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности или объект, с которым связан указанный счетчик производительности."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если счетчик зарегистрирован в указанной категории на локальном компьютере. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> — Пустая строка (»»)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Имя категории не существует."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)
  id: CounterExists(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: CounterExists(String,String,String)
  nameWithType: PerformanceCounterCategory.CounterExists(String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, зарегистрирован ли указанный счетчик в указанной категории на удаленном компьютере."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> method to determine whether the specified <xref:System.Diagnostics.PerformanceCounter> name exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is provided.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/csharp/479fa6a9-538c-463f-94d2-_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/add/codesnippet/visualbasic/479fa6a9-538c-463f-94d2-_1.vb)]"
  syntax:
    content: public static bool CounterExists (string counterName, string categoryName, string machineName);
    parameters:
    - id: counterName
      type: System.String
      description: "Имя счетчика производительности для поиска."
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности или объект, с которым связан указанный счетчик производительности."
    - id: machineName
      type: System.String
      description: "Имя компьютера, на котором существует категория счетчиков производительности и связанная с ним."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если счетчик зарегистрирован в указанной категории на заданном компьютере; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.CounterExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> — Пустая строка (»»).       - или - <code> machineName </code> является недопустимым."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Имя категории не существует."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)
  id: Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Create(String,String,CounterCreationDataCollection)
  nameWithType: PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Регистрирует категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named \"orders\" exists. If not, it creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \n  \n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/9e4e5065-5efa-4558-a11f-_1.cpp)]\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/9e4e5065-5efa-4558-a11f-_1.vb)]\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/9e4e5065-5efa-4558-a11f-_1.cs)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для создания и регистрации в системе."
    - id: categoryHelp
      type: System.String
      description: "Описание пользовательской категории."
    - id: counterData
      type: System.Diagnostics.CounterCreationDataCollection
      description: "Объект <xref href=&quot;System.Diagnostics.CounterCreationDataCollection&quot;> </xref> , указывающий счетчики для создания в рамках новой категории."
    return:
      type: System.Diagnostics.PerformanceCounterCategory
      description: "Объект <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> , которые относятся к новой пользовательской категории или объект производительности."
  overload: System.Diagnostics.PerformanceCounterCategory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A counter name that is specified within the <code>counterData</code> collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n -or-  \n  \n A counter that is specified within the <code>counterData</code> collection already exists.  \n  \n -or-  \n  \n The <code>counterName</code> parameter has invalid syntax. It might contain backslash characters (\"\\\\\") or have length greater than 80 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Категория уже существует на локальном компьютере.       - или - макет <code> counterData </code> коллекция является неверной для базовых счетчиков. A counter of type <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_SampleCounter&quot; name=&quot;SampleCounter&quot; href=&quot;&quot;></xref> has to be immediately followed by one of the base counter types (<xref uid=&quot;langword_csharp_AverageBase&quot; name=&quot;AverageBase&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MultiBase&quot; name=&quot;MultiBase&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_RawBase&quot; name=&quot;RawBase&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SampleBase&quot; name=&quot;SampleBase&quot; href=&quot;&quot;></xref>)."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)
  id: Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Регистрирует категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере."
  remarks: "The `categoryType` parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the  .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.  \n  \n Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory.  You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  \n  \n> [!NOTE]\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \n  \n> [!NOTE]\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \n>   \n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \n>   \n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator."
  example:
  - "The following code example shows the use of the Create method. The example shows how to create a custom, multi-instance performance counter category for the number of orders per second.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategoryType#2](~/add/codesnippet/csharp/38799c48-5863-4c7c-ac81-_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/add/codesnippet/visualbasic/38799c48-5863-4c7c-ac81-_1.vb)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для создания и регистрации в системе."
    - id: categoryHelp
      type: System.String
      description: "Описание пользовательской категории."
    - id: categoryType
      type: System.Diagnostics.PerformanceCounterCategoryType
      description: "Один из <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref> значения."
    - id: counterData
      type: System.Diagnostics.CounterCreationDataCollection
      description: "Объект <xref href=&quot;System.Diagnostics.CounterCreationDataCollection&quot;> </xref> , указывающий счетчики для создания в рамках новой категории."
    return:
      type: System.Diagnostics.PerformanceCounterCategory
      description: "Объект <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> , которые относятся к новой пользовательской категории или объект производительности."
  overload: System.Diagnostics.PerformanceCounterCategory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A counter name that is specified within the <code>counterData</code> collection is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n -or-  \n  \n A counter that is specified within the <code>counterData</code> collection already exists.  \n  \n -or-  \n  \n <code>counterName</code> has invalid syntax. It might contain backslash characters (\"\\\\\") or have length greater than 80 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>counterData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: '<code>categoryType</code>значение находится вне диапазона из следующих значений: <xref uid=&quot;langword_csharp_MultiInstance&quot; name=&quot;MultiInstance&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SingleInstance&quot; name=&quot;SingleInstance&quot; href=&quot;&quot;> </xref>, или <xref uid=&quot;langword_csharp_Unknown&quot; name=&quot;Unknown&quot; href=&quot;&quot;> </xref>.'
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Категория уже существует на локальном компьютере.       - или - макет <code> counterData </code> коллекция является неверной для базовых счетчиков. A counter of type <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SampleCounter&quot; name=&quot;SampleCounter&quot; href=&quot;&quot;></xref> must be immediately followed by one of the base counter types (<xref uid=&quot;langword_csharp_AverageBase&quot; name=&quot;AverageBase&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MultiBase&quot; name=&quot;MultiBase&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_RawBase&quot; name=&quot;RawBase&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_SampleBase&quot; name=&quot;SampleBase&quot; href=&quot;&quot;></xref>)."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)
  id: Create(System.String,System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Create(String,String,String,String)
  nameWithType: PerformanceCounterCategory.Create(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Регистрирует категорию счетчиков производительности, содержащую один счетчик типа <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref> на локальном компьютере."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> and single <xref:System.Diagnostics.PerformanceCounter> with help text for each, using the Create method.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/add/codesnippet/visualbasic/012c8ef3-108d-4e71-bb01-_1.vb)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/add/codesnippet/csharp/012c8ef3-108d-4e71-bb01-_1.cs)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для создания и регистрации в системе."
    - id: categoryHelp
      type: System.String
      description: "Описание пользовательской категории."
    - id: counterName
      type: System.String
      description: "Имя нового счетчика типа <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref>, чтобы создать как часть новой категории."
    - id: counterHelp
      type: System.String
      description: "Описание счетчика, который связан с новой пользовательской категории."
    return:
      type: System.Diagnostics.PerformanceCounterCategory
      description: "Объект <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> , которые относятся к новой категории системы или объект производительности."
  overload: System.Diagnostics.PerformanceCounterCategory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").  \n  \n -or-  \n  \n The counter that is specified by <code>counterName</code> already exists.  \n  \n -or-  \n  \n <code>counterName</code> has invalid syntax. It might contain backslash characters (\"\\\\\") or have length greater than 80 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Категория уже существует на локальном компьютере."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>counterHelp</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)
  id: Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Create(String,String,PerformanceCounterCategoryType,String,String)
  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Регистрирует категорию счетчиков производительности, содержащую один счетчик типа <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> на локальном компьютере."
  remarks: "The `categoryType` parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], the <xref:System.Diagnostics.PerformanceCounterCategoryType> enumeration is used to indicate whether a performance counter can have multiple instances.  \n  \n Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  \n  \n> [!NOTE]\n>  It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  \n  \n> [!NOTE]\n>  To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  \n>   \n>  To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  \n>   \n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator."
  example:
  - "The following code example shows the use of the Create method. The example shows how to create a custom, single instance performance counter category.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategoryType#3](~/add/codesnippet/csharp/f3ced94f-b6d8-4841-851d-_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/add/codesnippet/visualbasic/f3ced94f-b6d8-4841-851d-_1.vb)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для создания и регистрации в системе."
    - id: categoryHelp
      type: System.String
      description: "Описание пользовательской категории."
    - id: categoryType
      type: System.Diagnostics.PerformanceCounterCategoryType
      description: "Один из <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref> значения, указывающие, является ли категория <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref>, <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref>, или <xref href=&quot;System.Diagnostics.PerformanceCounterCategoryType&quot;> </xref>."
    - id: counterName
      type: System.String
      description: "Имя нового счетчика для создания в рамках новой категории."
    - id: counterHelp
      type: System.String
      description: "Описание счетчика, который связан с новой пользовательской категории."
    return:
      type: System.Diagnostics.PerformanceCounterCategory
      description: "Объект <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> , которые относятся к новой категории системы или объект производительности."
  overload: System.Diagnostics.PerformanceCounterCategory.Create*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>counterName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or is an empty string (\"\").  \n  \n -or-  \n  \n The counter that is specified by <code>counterName</code> already exists.  \n  \n -or-  \n  \n <code>counterName</code> has invalid syntax. It might contain backslash characters (\"\\\\\") or have length greater than 80 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Категория уже существует на локальном компьютере."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>counterHelp</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Delete(System.String)
  id: Delete(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Delete(String)
  nameWithType: PerformanceCounterCategory.Delete(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Delete(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Удаляет категорию и связанные с ней счетчики с локального компьютера."
  remarks: "Только пользовательские категории счетчиков производительности можно удалить из системы. Не удается удалить счетчик из категории. Для этого нужно удалить категорию и повторно создать категорию со счетчиками, которые необходимо сохранить. Чтобы избежать возникновения исключения, убедиться, что категория существует, прежде чем пытаться удалить его.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example uses the Delete method to delete a <xref:System.Diagnostics.PerformanceCounterCategory> and the <xref:System.Diagnostics.PerformanceCounter> objects that it contains.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/add/codesnippet/csharp/m-system.diagnostics.per_10_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_10_1.vb)]"
  syntax:
    content: public static void Delete (string categoryName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для удаления."
  overload: System.Diagnostics.PerformanceCounterCategory.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> Параметра имеет недопустимый синтаксис. Он может содержать символы обратной косой черты («\\&quot;) или иметь длину более 80 символов."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удается удалить категорию, поскольку он не является пользовательской категории."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String)
  id: Exists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Exists(String)
  nameWithType: PerformanceCounterCategory.Exists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, зарегистрирован ли категория на локальном компьютере."
  remarks: "Использование метода Exists можно привести заметное снижение производительности во время проверки для обеспечения доступности всех счетчиков производительности на компьютере. При записи только в счетчик производительности, можно избежать путем создания счетчика производительности, когда приложение установлено и при условии, что раздел существует, при доступе к счетчику глобального поиска для счетчиков производительности. Нет возможности во избежание поиска счетчик производительности при чтении из счетчиков производительности.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named \"orders\" exists. If not, it creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \n  \n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/m-system.diagnostics.per_3_1.cpp)]\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/m-system.diagnostics.per_3_1.vb)]\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/m-system.diagnostics.per_3_1.cs)]"
  syntax:
    content: public static bool Exists (string categoryName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если категория зарегистрирована; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> Параметра является пустая строка (»»)."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)
  id: Exists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: Exists(String,String)
  nameWithType: PerformanceCounterCategory.Exists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, зарегистрирован ли категория на указанном компьютере."
  remarks: "Использование метода Exists можно привести заметное снижение производительности во время проверки для обеспечения доступности всех счетчиков производительности на компьютере. При записи только в счетчик производительности, можно избежать путем создания счетчика производительности, когда приложение установлено и при условии, что раздел существует, при доступе к счетчику глобального поиска для счетчиков производительности. Нет возможности во избежание поиска счетчик производительности при чтении из счетчиков производительности.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following example determines whether a <xref:System.Diagnostics.PerformanceCounterCategory> object named `Orders` exists. If it does not exist, the example creates the <xref:System.Diagnostics.PerformanceCounterCategory> object by using a <xref:System.Diagnostics.CounterCreationDataCollection> object that contains two performance counters.  \n  \n [!code-cpp[PerfCounter_ccd#1](~/add/codesnippet/cpp/a840bf9c-a22d-45eb-89a3-_1.cpp)]\n [!code-vb[PerfCounter_ccd#1](~/add/codesnippet/visualbasic/a840bf9c-a22d-45eb-89a3-_1.vb)]\n [!code-cs[PerfCounter_ccd#1](~/add/codesnippet/csharp/a840bf9c-a22d-45eb-89a3-_1.cs)]"
  syntax:
    content: public static bool Exists (string categoryName, string machineName);
    parameters:
    - id: categoryName
      type: System.String
      description: "Имя категории счетчика производительности для поиска."
    - id: machineName
      type: System.String
      description: "Имя компьютера для проверки категории."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если категория зарегистрирована; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> Параметра является пустая строка (»»).       - или - <code> machineName </code> указан недопустимый параметр."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Сетевой путь не найден."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Вызывающий объект не имеет необходимых разрешений.       - или - код, который выполняется без прав администратора при попытке считать счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories
  id: GetCategories
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: GetCategories()
  nameWithType: PerformanceCounterCategory.GetCategories()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Извлекает список категорий счетчиков производительности, зарегистрированных на локальном компьютере."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounterCategory> objects from the local computer or a specified computer. It converts the <xref:System.Diagnostics.PerformanceCounterCategory> array into an array of category names, which it sorts and displays for the user. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload is selected based on whether a computer name was specified.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_5_1.vb)]\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/cpp/m-system.diagnostics.per_5_1.cpp)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_5_1.cs)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();
    parameters: []
    return:
      type: System.Diagnostics.PerformanceCounterCategory[]
      description: "Массив <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> объектов, который показывает категории, которые зарегистрированы на локальном компьютере."
  overload: System.Diagnostics.PerformanceCounterCategory.GetCategories*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)
  id: GetCategories(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: GetCategories(String)
  nameWithType: PerformanceCounterCategory.GetCategories(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Извлекает список категорий счетчиков производительности, которые зарегистрированы на указанном компьютере."
  remarks: "Для извлечения категорий на локальном компьютере, используйте другую перегрузку или передать «.» как `machineName` параметр.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounterCategory> objects from the local computer or a specified computer. It converts the <xref:System.Diagnostics.PerformanceCounterCategory> array into an array of category names, which it sorts and displays for the user. The <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> overload is selected based on whether a computer name was specified.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_7_1.vb)]\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/cpp/m-system.diagnostics.per_7_1.cpp)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_7_1.cs)]"
  syntax:
    content: public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);
    parameters:
    - id: machineName
      type: System.String
      description: "Для поиска компьютере."
    return:
      type: System.Diagnostics.PerformanceCounterCategory[]
      description: "Массив <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> объектов, который показывает категории, зарегистрированные на указанном компьютере."
  overload: System.Diagnostics.PerformanceCounterCategory.GetCategories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> machineName </code> Указан недопустимый параметр."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters
  id: GetCounters
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: GetCounters()
  nameWithType: PerformanceCounterCategory.GetCounters()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Извлекает список счетчиков в категории счетчиков производительности, который содержит только один экземпляр."
  remarks: "Дополнительные сведения об экземплярах объектов производительности см. в разделе <xref:System.Diagnostics.PerformanceCounter>Общие сведения о классе.</xref:System.Diagnostics.PerformanceCounter>      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the appropriate constructor, based on whether a computer name was specified. It then uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounter> objects, selecting the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload based on whether an instance name was specified.  \n  \n This GetCounters overload fails unless it is used with a single-instance category.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_14_1.vb)]\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/cpp/m-system.diagnostics.per_14_1.cpp)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_14_1.cs)]"
  syntax:
    content: public System.Diagnostics.PerformanceCounter[] GetCounters ();
    parameters: []
    return:
      type: System.Diagnostics.PerformanceCounter[]
      description: "Массив <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> объектов, обозначающих счетчики, связанные с этой категории счетчиков производительности с одним экземпляром."
  overload: System.Diagnostics.PerformanceCounterCategory.GetCounters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Категория не один экземпляр."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Категория не имеет связанный экземпляр."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)
  id: GetCounters(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: GetCounters(String)
  nameWithType: PerformanceCounterCategory.GetCounters(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Извлекает список счетчиков в категории счетчиков производительности, который содержит один или несколько экземпляров."
  remarks: "Для представления экземпляра категории, необходимо передать пустую строку (&quot;») для `instanceName` параметра.       Дополнительные сведения об экземплярах объектов производительности см. в разделе <xref:System.Diagnostics.PerformanceCounter>Общие сведения о классе.</xref:System.Diagnostics.PerformanceCounter>      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the appropriate constructor, based on whether a computer name was specified. It then uses the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> method to return an array of <xref:System.Diagnostics.PerformanceCounter> objects, selecting the <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> overload based on whether an instance name was specified.  \n  \n This GetCounters overload fails unless it is used with a category that contains instances.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/visualbasic/m-system.diagnostics.per_8_1.vb)]\n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/cpp/m-system.diagnostics.per_8_1.cpp)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/add/codesnippet/csharp/m-system.diagnostics.per_8_1.cs)]"
  syntax:
    content: public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Экземпляр объекта производительности, для которого требуется извлечь список связанных с ним счетчиков."
    return:
      type: System.Diagnostics.PerformanceCounter[]
      description: "Массив <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> объектов, обозначающих счетчики, связанные с указанным экземпляром объекта этой категории счетчиков производительности."
  overload: System.Diagnostics.PerformanceCounterCategory.GetCounters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Для данного <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> экземпляр не был задан.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>       Категория не содержит экземпляр, который задается параметром - или - <code> instanceName </code> параметра."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames
  id: GetInstanceNames
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: GetInstanceNames()
  nameWithType: PerformanceCounterCategory.GetInstanceNames()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Извлекает список экземпляров объекта производительности, связанные с этой категорией."
  remarks: "> [!NOTE]Настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example gets a list of the <xref:System.Diagnostics.PerformanceCounter> objects in a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> object, using the appropriate constructor based on whether a computer name was specified. It then uses GetInstanceNames to return the instance names as an array of <xref:System.String>, which it sorts and displays.  \n  \n [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/cpp/m-system.diagnostics.per_0_1.cpp)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/csharp/m-system.diagnostics.per_0_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: public string[] GetInstanceNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив строк, представляющих имена экземпляров объекта производительности, связанные с этой категорией или, если категория содержит только один экземпляр объекта производительности, одноэлементный массив, содержащий пустую строку (»»)."
  overload: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> Свойство может не быть установлен.       - или - категория имеет связанный экземпляр."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)
  id: InstanceExists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: InstanceExists(String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, существует ли указанный экземпляр объекта производительности в категорию, которая определяется этим <xref href=&quot;System.Diagnostics.PerformanceCounterCategory&quot;> </xref> объекта <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>свойство.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>"
  remarks: "Эта перегрузка InstanceExists не `static`. Необходимо создать <xref:System.Diagnostics.PerformanceCounterCategory>объекта и задать <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>Свойства.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> </xref:System.Diagnostics.PerformanceCounterCategory>      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example determines whether a <xref:System.Diagnostics.PerformanceCounter> instance exists within a <xref:System.Diagnostics.PerformanceCounterCategory>. It first creates a <xref:System.Diagnostics.PerformanceCounterCategory> object, using the appropriate constructor based on whether a computer name was specified. It then uses InstanceExists to determine whether the specified instance exists, then informs the user. If no instance name is specified, the example uses the default single-instance name.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/add/codesnippet/csharp/m-system.diagnostics.per_1_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_1_1.vb)]"
  syntax:
    content: public bool InstanceExists (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Экземпляр объекта производительности в этой категории счетчиков производительности для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если категория содержит указанный экземпляр объекта производительности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> Свойство может не быть установлен."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)
  id: InstanceExists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: InstanceExists(String,String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, содержит ли указанная категория на локальном компьютере указанный экземпляр объекта производительности."
  remarks: "Определить, существует ли экземпляр объекта производительности на компьютере без указания определенной категории для поиска в невозможна.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example uses the static overloads of <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> to determine whether the given <xref:System.Diagnostics.PerformanceCounter> instance exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/visualbasic/adb05d13-bcb8-4c81-ad06-_1.vb)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/csharp/adb05d13-bcb8-4c81-ad06-_1.cs)]"
  syntax:
    content: public static bool InstanceExists (string instanceName, string categoryName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Экземпляр объекта производительности, для поиска."
    - id: categoryName
      type: System.String
      description: "Категория счетчиков производительности для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если категория содержит указанный экземпляр объекта производительности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> Параметра является пустая строка (»»)."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)
  id: InstanceExists(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: InstanceExists(String,String,String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Определяет, содержит ли указанная категория на указанном компьютере указанный экземпляр объекта производительности."
  remarks: "Определить, существует ли экземпляр объекта производительности на компьютере без указания определенной категории для поиска в невозможна.       Можно использовать «.» для указания локального компьютера.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example uses the static overloads of <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> to determine whether the given <xref:System.Diagnostics.PerformanceCounter> instance exists in the <xref:System.Diagnostics.PerformanceCounterCategory>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  \n  \n [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/visualbasic/c05b631a-0e63-4d23-8d88-_1.vb)]\n [!code-cs[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/add/codesnippet/csharp/c05b631a-0e63-4d23-8d88-_1.cs)]"
  syntax:
    content: public static bool InstanceExists (string instanceName, string categoryName, string machineName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Экземпляр объекта производительности, для поиска."
    - id: categoryName
      type: System.String
      description: "Категория счетчиков производительности для поиска."
    - id: machineName
      type: System.String
      description: "Имя компьютера, на котором выполняется поиск для экземпляра пары «категории»."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если категория содержит указанный экземпляр объекта производительности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounterCategory.InstanceExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>instanceName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>categoryName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> categoryName </code> Параметра является пустая строка (»»).       - или - <code> machineName </code> указан недопустимый параметр."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.MachineName
  id: MachineName
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: MachineName
  nameWithType: PerformanceCounterCategory.MachineName
  fullName: System.Diagnostics.PerformanceCounterCategory.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Возвращает или задает имя компьютера, на который существует в этой категории."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> with the <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> constructor. It prompts the user for the <xref:System.Diagnostics.PerformanceCounterCategory> and the computer names, then sets the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> and MachineName properties from the entered values. It then displays the values of the <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, MachineName, and <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> properties, or it displays an error message if the <xref:System.Diagnostics.PerformanceCounterCategory> cannot be accessed.  \n  \n [!code-cs[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/csharp/p-system.diagnostics.per_1_1.cs)]\n [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/add/codesnippet/visualbasic/p-system.diagnostics.per_1_1.vb)]"
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "Имя компьютера, на котором существует категория счетчиков производительности и связанная с ним."
  overload: System.Diagnostics.PerformanceCounterCategory.MachineName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Недопустимый синтаксис MachineName."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory
  id: ReadCategory
  parent: System.Diagnostics.PerformanceCounterCategory
  langs:
  - csharp
  name: ReadCategory()
  nameWithType: PerformanceCounterCategory.ReadCategory()
  fullName: System.Diagnostics.PerformanceCounterCategory.ReadCategory()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Считывает все счетчика и производительности данные экземпляра объекта, связанного с данной категории счетчиков производительности."
  remarks: "Необходимо задать <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>свойства перед вызовом метода ReadCategory.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>       Чтение всей категории за один раз может быть столь же эффективна, как и чтение одного счетчика из-за способа предоставления данных системой.      Настроек [!NOTE] настроек для чтения данных счетчиков производительности в Windows Vista и более поздних версиях Windows XP Professional x64 Edition или Windows Server 2003, необходимо быть членом группы пользователей системного монитора или права администратора.   >> Во избежание необходимости повысить права доступа для доступа к счетчикам производительности в Windows Vista и более поздних версий, добавьте себя в группу пользователей монитора производительности.   >> В Windows Vista и более поздних версиях права доступа пользователя определяются управления учетных записей (UAC). Если вы являетесь членом группы администраторов, вы присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Для выполнения кода, который обращается к счетчикам производительности, необходимо сначала повысить права доступа со стандартного пользователя до администратора. Это можно сделать при запуске приложения, щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора."
  example:
  - "The following code example creates a <xref:System.Diagnostics.PerformanceCounterCategory> for a specified <xref:System.Diagnostics.PerformanceCounterCategory> name. It then uses ReadCategory to return an <xref:System.Diagnostics.InstanceDataCollectionCollection> that contains instance data for all the instances of the <xref:System.Diagnostics.PerformanceCounter> objects within the <xref:System.Diagnostics.PerformanceCounterCategory>.  \n  \n [!code-cs[System.Diagnostics.InstanceData.CopyTo#6](~/add/codesnippet/csharp/m-system.diagnostics.per_9_1.cs)]\n [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/add/codesnippet/visualbasic/m-system.diagnostics.per_9_1.vb)]"
  syntax:
    content: public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();
    parameters: []
    return:
      type: System.Diagnostics.InstanceDataCollectionCollection
      description: "<xref href=&quot;System.Diagnostics.InstanceDataCollectionCollection&quot;> </xref> , Содержащий данные экземпляра объекта счетчика и производительности для категории."
  overload: System.Diagnostics.PerformanceCounterCategory.ReadCategory*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.PerformanceCounterCategory.CategoryName*> Свойство может не быть установлен."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Сбой вызова базовому системному API."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Код, который выполняется без прав администратора попытка считывания значения счетчика производительности."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: PerformanceCounterCategory()
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory()
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory()
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: PerformanceCounterCategory(String)
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: PerformanceCounterCategory(String,String)
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.PerformanceCounterCategory(String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryHelp
  nameWithType: PerformanceCounterCategory.CategoryHelp
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryHelp
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounterCategory.CategoryName
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryName
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryType
  nameWithType: PerformanceCounterCategory.CategoryType
  fullName: System.Diagnostics.PerformanceCounterCategory.CategoryType
- uid: System.Diagnostics.PerformanceCounterCategoryType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterCategoryType
  nameWithType: PerformanceCounterCategoryType
  fullName: System.Diagnostics.PerformanceCounterCategoryType
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CounterExists(String)
  nameWithType: PerformanceCounterCategory.CounterExists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CounterExists(String,String)
  nameWithType: PerformanceCounterCategory.CounterExists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CounterExists(String,String,String)
  nameWithType: PerformanceCounterCategory.CounterExists(String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.CounterExists(String,String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Create(String,String,CounterCreationDataCollection)
  nameWithType: PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,CounterCreationDataCollection)
- uid: System.Diagnostics.PerformanceCounterCategory
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterCategory
  nameWithType: PerformanceCounterCategory
  fullName: System.Diagnostics.PerformanceCounterCategory
- uid: System.Diagnostics.CounterCreationDataCollection
  parent: System.Diagnostics
  isExternal: false
  name: CounterCreationDataCollection
  nameWithType: CounterCreationDataCollection
  fullName: System.Diagnostics.CounterCreationDataCollection
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Create(String,String,String,String)
  nameWithType: PerformanceCounterCategory.Create(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Create(String,String,PerformanceCounterCategoryType,String,String)
  nameWithType: PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Create(String,String,PerformanceCounterCategoryType,String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.Delete(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Delete(String)
  nameWithType: PerformanceCounterCategory.Delete(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Delete(String)
- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Exists(String)
  nameWithType: PerformanceCounterCategory.Exists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String)
- uid: System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Exists(String,String)
  nameWithType: PerformanceCounterCategory.Exists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.Exists(String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCategories()
  nameWithType: PerformanceCounterCategory.GetCategories()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories()
- uid: System.Diagnostics.PerformanceCounterCategory[]
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterCategory
  nameWithType: PerformanceCounterCategory
  fullName: System.Diagnostics.PerformanceCounterCategory[]
  spec.csharp:
  - uid: System.Diagnostics.PerformanceCounterCategory
    name: PerformanceCounterCategory
    nameWithType: PerformanceCounterCategory
    fullName: PerformanceCounterCategory[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCategories(String)
  nameWithType: PerformanceCounterCategory.GetCategories(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCategories(String)
- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCounters()
  nameWithType: PerformanceCounterCategory.GetCounters()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters()
- uid: System.Diagnostics.PerformanceCounter[]
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounter
  nameWithType: PerformanceCounter
  fullName: System.Diagnostics.PerformanceCounter[]
  spec.csharp:
  - uid: System.Diagnostics.PerformanceCounter
    name: PerformanceCounter
    nameWithType: PerformanceCounter
    fullName: PerformanceCounter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCounters(String)
  nameWithType: PerformanceCounterCategory.GetCounters(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.GetCounters(String)
- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetInstanceNames()
  nameWithType: PerformanceCounterCategory.GetInstanceNames()
  fullName: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: InstanceExists(String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String)
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: InstanceExists(String,String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: InstanceExists(String,String,String)
  nameWithType: PerformanceCounterCategory.InstanceExists(String,String,String)
  fullName: System.Diagnostics.PerformanceCounterCategory.InstanceExists(String,String,String)
- uid: System.Diagnostics.PerformanceCounterCategory.MachineName
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounterCategory.MachineName
  fullName: System.Diagnostics.PerformanceCounterCategory.MachineName
- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: ReadCategory()
  nameWithType: PerformanceCounterCategory.ReadCategory()
  fullName: System.Diagnostics.PerformanceCounterCategory.ReadCategory()
- uid: System.Diagnostics.InstanceDataCollectionCollection
  parent: System.Diagnostics
  isExternal: false
  name: InstanceDataCollectionCollection
  nameWithType: InstanceDataCollectionCollection
  fullName: System.Diagnostics.InstanceDataCollectionCollection
- uid: System.Diagnostics.PerformanceCounterCategory.#ctor*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: PerformanceCounterCategory
  nameWithType: PerformanceCounterCategory.PerformanceCounterCategory
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryHelp*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryHelp
  nameWithType: PerformanceCounterCategory.CategoryHelp
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryName*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounterCategory.CategoryName
- uid: System.Diagnostics.PerformanceCounterCategory.CategoryType*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CategoryType
  nameWithType: PerformanceCounterCategory.CategoryType
- uid: System.Diagnostics.PerformanceCounterCategory.CounterExists*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: CounterExists
  nameWithType: PerformanceCounterCategory.CounterExists
- uid: System.Diagnostics.PerformanceCounterCategory.Create*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Create
  nameWithType: PerformanceCounterCategory.Create
- uid: System.Diagnostics.PerformanceCounterCategory.Delete*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Delete
  nameWithType: PerformanceCounterCategory.Delete
- uid: System.Diagnostics.PerformanceCounterCategory.Exists*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: Exists
  nameWithType: PerformanceCounterCategory.Exists
- uid: System.Diagnostics.PerformanceCounterCategory.GetCategories*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCategories
  nameWithType: PerformanceCounterCategory.GetCategories
- uid: System.Diagnostics.PerformanceCounterCategory.GetCounters*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetCounters
  nameWithType: PerformanceCounterCategory.GetCounters
- uid: System.Diagnostics.PerformanceCounterCategory.GetInstanceNames*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: GetInstanceNames
  nameWithType: PerformanceCounterCategory.GetInstanceNames
- uid: System.Diagnostics.PerformanceCounterCategory.InstanceExists*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: InstanceExists
  nameWithType: PerformanceCounterCategory.InstanceExists
- uid: System.Diagnostics.PerformanceCounterCategory.MachineName*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounterCategory.MachineName
- uid: System.Diagnostics.PerformanceCounterCategory.ReadCategory*
  parent: System.Diagnostics.PerformanceCounterCategory
  isExternal: false
  name: ReadCategory
  nameWithType: PerformanceCounterCategory.ReadCategory
