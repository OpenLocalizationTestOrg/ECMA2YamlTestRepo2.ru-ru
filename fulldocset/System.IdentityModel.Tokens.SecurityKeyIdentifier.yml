### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
  type: Class
  summary: "Представляет идентификатор ключа."
  remarks: "Как правило SecurityKeyIdentifier не используется, отличный от при создании пользовательской службы маркеров безопасности. Когда служба маркеров безопасности возвращает маркер безопасности, выданный маркер безопасности содержит ссылки на прикрепленные и неприкрепленные маркеры безопасности. Прикрепленные ссылки указывают на маркеры безопасности, содержащиеся в заголовке безопасности сообщения SOAP, а неприкрепленные ссылки являются маркерами безопасности, не входящими в заголовок безопасности сообщения SOAP. Обычно эти ссылки подтверждают подлинность выданного маркера безопасности. Эти ссылки представлены классами, которые являются производными от <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>класса.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> Класс SecurityKeyIdentifier содержит коллекцию этих ссылок."
  syntax:
    content: 'public class SecurityKeyIdentifier : System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> класса."
  syntax:
    content: public SecurityKeyIdentifier ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> класса с помощью предложений идентификатора ключа."
  syntax:
    content: public SecurityKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] clauses);
    parameters:
    - id: clauses
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
      description: "Массив <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> , содержащий предложения идентификатора ключа."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clauses</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Добавляет предложение идентификатора ключа в конец списка."
  syntax:
    content: public void Add (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);
    parameters:
    - id: clause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Объект <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> добавляется в конец списка."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Значение <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*>свойство <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает значение, указывающее, можно ли создать ключ хотя бы для одного из предложений идентификатора ключа."
  syntax:
    content: public bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если можно создать ключ хотя бы для одного из предложений идентификатора ключа; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  id: Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает количество предложений идентификатора ключа."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Количество предложений идентификатора ключа."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Создает ключ для одного из предложений идентификатора ключа."
  remarks: "<xref:System.IdentityModel.Tokens.SecurityKey>Возвращаемый для первой конструкции идентификатора ключа в коллекции, можно создать ключ.</xref:System.IdentityModel.Tokens.SecurityKey>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Объект <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> , представляющий созданный ключ."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось создать ключ для любого из предложений идентификатора ключа."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  id: Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public TClause Find<TClause> () where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: TClause
      description: "Для добавления."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает перечислитель, выполняющий итерацию по коллекции предложений идентификатора ключа."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
      description: "Объект &lt;xref:System.Collections.Generic.List%601.Enumerator&gt; типа <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> для коллекции."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает значение, указывающее, является ли свойства данного экземпляра доступны только для чтения."
  remarks: "Чтобы сделать этот экземпляр <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>класс только для чтения, вызовите <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A>метод.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойства этого экземпляра доступны только для чтения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает предложение идентификатора ключа по указанному индексу."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс конструкции идентификатора ключа в коллекции предложений идентификатора ключа."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> По указанному индексу."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше 0.       - или - <code>index</code> больше или равно значению <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Делает этот экземпляр доступным только для чтения для."
  remarks: "Когда вызывается метод MakeReadOnly, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A>свойству `true` и свойства этого экземпляра больше не может быть задано.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A> Например невозможно добавить предложение идентификатора ключа для этого объекта."
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает перечислитель, выполняющий итерацию по коллекции предложений идентификатора ключа."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Объект &lt;xref:System.Collections.Generic.IEnumerator%601&gt; может использоваться для итерации по коллекции."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Возвращает текущий объект."
  remarks: "Метод ToString возвращает сведения обо всех предложений идентификатора ключа в идентификатор ключа."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Текущий объект."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  id: TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public bool TryFind<TClause> (out TClause clause) where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters:
    - id: clause
      type: TClause
      description: "Для добавления."
    return:
      type: System.Boolean
      description: "Для добавления."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  spec.csharp:
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
- uid: TClause
  isExternal: true
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<SecurityKeyIdentifierClause>
  nameWithType: IEnumerator<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add
  nameWithType: SecurityKeyIdentifier.Add
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifier.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find<TClause>
  nameWithType: SecurityKeyIdentifier.Find<TClause>
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator
  nameWithType: SecurityKeyIdentifier.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item
  nameWithType: SecurityKeyIdentifier.Item
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly
  nameWithType: SecurityKeyIdentifier.MakeReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityKeyIdentifier.ToString
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind<TClause>
  nameWithType: SecurityKeyIdentifier.TryFind<TClause>
