### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.BrowserInteropHelper
  id: BrowserInteropHelper
  children:
  - System.Windows.Interop.BrowserInteropHelper.ClientSite
  - System.Windows.Interop.BrowserInteropHelper.HostScript
  - System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  - System.Windows.Interop.BrowserInteropHelper.Source
  langs:
  - csharp
  name: BrowserInteropHelper
  nameWithType: BrowserInteropHelper
  fullName: System.Windows.Interop.BrowserInteropHelper
  type: Class
  summary: "Вспомогательный класс, который предоставляет сведения о среде обозревателя, в котором [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] размещается приложение."
  syntax:
    content: public static class BrowserInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  id: ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Возвращает ссылку на объект, который может использоваться для доступа к ведущему обозревателю посредством его интерфейсов OLE-контейнера (например, IOleClientSite::GetContainer();)."
  syntax:
    content: public static object ClientSite { get; }
    return:
      type: System.Object
      description: "Объект, который может быть приведен к <xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>.</xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>"
  overload: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  id: HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Возвращает объект скрипта, предоставляющий доступ к объект окна HTML, функциям пользовательского скрипта и глобальным переменным HTML-страницы, если [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] размещается в кадре."
  remarks: "Возвращаемый объект HostScript можно доступа свойства, методы и события объекта window HTML, напрямую вызывать функцию скрипта или доступа к глобальным переменным. Синтаксис для доступа к этим элементам используется знакомый точечной нотации.       Дополнительные сведения об объекте окна см. в разделе [объект окна](http://go.microsoft.com/fwlink/?LinkId=160274) в документации по динамического HTML (DHTML).       Это свойство возвращает HostScript `null` Если кадр осуществляется переход из расположения между доменами.       Эту функцию можно отключить для Internet Explorer, задав **ScriptInteropDisallow** значение реестра. Дополнительные сведения см. в разделе [безопасность (WPF)](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to retrieve the HostScript object and close the browser window.  \n  \n [!code-xml[XbapBrowserInterop#1](~/add/codesnippet/xaml/wpfbrowserapplication1/page1.xaml#1)]  \n[!code-cs[XbapBrowserInterop#10](~/add/codesnippet/csharp/wpfbrowserapplication1/page1.xaml.cs#10)]\n[!code-vb[XbapBrowserInterop#10](~/add/codesnippet/visualbasic/wpfbrowserapplication1vb/page1.xaml.vb#10)]"
  syntax:
    content: public static dynamic HostScript { get; }
    return:
      type: System.Object
      description: "Объект скрипта, который предоставляет доступ к объект окна HTML, функциям пользовательского скрипта и глобальных переменных для HTML-страницу, если [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] размещенные во фрейме; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.HostScript*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  id: IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Возвращает значение, указывающее, является ли текущий [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] приложение размещается в браузере."
  remarks: "Объект <xref:System.Windows.Controls.Page>может размещаться независимо и, следовательно, может быть загружена в несколько различных типов узлов, включая <xref:System.Windows.Controls.Frame>, <xref:System.Windows.Navigation.NavigationWindow>, или в браузере.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Page> Это может произойти, если имеется библиотечная сборка, содержащий одну или несколько страниц, на который ссылаются несколько автономных и для просмотра ([!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]) размещения приложений."
  example:
  - "The following example demonstrates how to use IsBrowserHosted to determine if a <xref:System.Windows.Controls.Page> is hosted in a browser.  \n  \n [!code-cs[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/csharp/BrowserInteropHelperSnippet/Page1.xaml.cs#isbrowserhostedcode)]\n [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/visualbasic/browserinterophelpersnippet/page1.xaml.vb#isbrowserhostedcode)]"
  syntax:
    content: public static bool IsBrowserHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение размещается в браузере; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  id: Source
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Возвращает [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] для расположения, из которого [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] было запущено приложение."
  remarks: "Свойство Source содержит только <xref:System.Uri>для [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] приложений.</xref:System.Uri> Пример свойства Source разделе <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.</xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>"
  syntax:
    content: public static Uri Source { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>Для расположения, из которого [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] приложение было запущенной; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Interop.BrowserInteropHelper.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
- uid: System.Windows.Interop.BrowserInteropHelper.Source*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
