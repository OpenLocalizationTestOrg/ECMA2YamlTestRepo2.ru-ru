### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RolePrincipal
  id: RolePrincipal
  children:
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.CachedListChanged
  - System.Web.Security.RolePrincipal.CookiePath
  - System.Web.Security.RolePrincipal.Expired
  - System.Web.Security.RolePrincipal.ExpireDate
  - System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.GetRoles
  - System.Web.Security.RolePrincipal.Identity
  - System.Web.Security.RolePrincipal.IsInRole(System.String)
  - System.Web.Security.RolePrincipal.IsRoleListCached
  - System.Web.Security.RolePrincipal.IssueDate
  - System.Web.Security.RolePrincipal.ProviderName
  - System.Web.Security.RolePrincipal.SetDirty
  - System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.ToEncryptedTicket
  - System.Web.Security.RolePrincipal.Version
  langs:
  - csharp
  name: RolePrincipal
  nameWithType: RolePrincipal
  fullName: System.Web.Security.RolePrincipal
  type: Class
  summary: "Представляет сведения о безопасности для текущего HTTP-запроса, включая членство в роли. Этот класс не наследуется."
  remarks: "Реализует объект RolePrincipal создан <xref:System.Security.Principal.IPrincipal>интерфейс и представляет контекст безопасности текущего HTTP-запроса.</xref:System.Security.Principal.IPrincipal>       Если включено управление ролями (см. <xref:System.Web.Security.Roles>), <xref:System.Web.Security.RoleManagerModule>назначает объект RolePrincipal создан <xref:System.Web.HttpContext.User%2A>свойство <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.Roles>       Класс RolePrincipal создан предоставляет удостоверение безопасности для текущего HTTP-запроса и Кроме того, выполняет проверки на членство в роли. Если <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>является `true`, объект RolePrincipal создан управляет кэшированный список ролей и ищет членство в роли для текущего пользователя в кэшированном списке во-первых, затем роль <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> Если <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>является `false`, объект RolePrincipal создан всегда ищет членство в роли с помощью поставщика ролей.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>       Объект RolePrincipal создан шифрует и дешифрует данные ролей, кэшированные в файле cookie, определяется <xref:System.Web.Security.Roles.CookieName%2A>на основе <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.</xref:System.Web.Security.Roles.CookieProtectionValue%2A> </xref:System.Web.Security.Roles.CookieName%2A>"
  syntax:
    content: 'public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для указанного <code> identity </code>."
  remarks: "Эта перегрузка RolePrincipal создан конструктор создает новый <xref:System.Web.Security.RolePrincipal>объекта и инициализирует значения свойств.</xref:System.Web.Security.RolePrincipal> Кэшированные данные о ролях не считывается из файла cookie, обозначенную <xref:System.Web.Security.Roles.CookieName%2A>свойство.</xref:System.Web.Security.Roles.CookieName%2A> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>Свойству <xref:System.Configuration.Provider.ProviderBase.Name%2A>поставщика ролей по умолчанию.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Сведения о включении управления ролями см. в разделе <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/39332c55-2f33-4fad-9306-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/39332c55-2f33-4fad-9306-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Идентификатор пользователя для создания <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> класса с помощью сведений, содержащихся в заданном <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> объекта и используя заданный контекст потоковой передачи."
  syntax:
    content: protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Объекта для заполнения данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Целевой объект этой сериализации."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для указанного <code> identity </code> с сведения о ролях из указанного <code> encryptedTicket </code>."
  remarks: "Эта перегрузка RolePrincipal создан конструктор создает новый <xref:System.Web.Security.RolePrincipal>объекта и инициализирует значения свойств.</xref:System.Web.Security.RolePrincipal> Сведения о роли для текущего пользователя считывается из предоставленного `encryptedTicket` и кэшируются с <xref:System.Web.Security.RolePrincipal>объекта.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>Свойству <xref:System.Configuration.Provider.ProviderBase.Name%2A>поставщика ролей по умолчанию.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Сведения о включении управления ролями см. в разделе <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/9eda904c-406a-4e24-aa64-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/9eda904c-406a-4e24-aa64-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Идентификатор пользователя для создания <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для."
    - id: encryptedTicket
      type: System.String
      description: "Строка, содержащая зашифрованные сведения о роли."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  id: '#ctor(System.String,System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для указанного <code> identity </code> с использованием указанного <code> providerName </code>."
  remarks: "Эта перегрузка RolePrincipal создан конструктор создает новый <xref:System.Web.Security.RolePrincipal>объекта и инициализирует значения свойств.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>Свойству присвоено значение, указанное в `providerName` параметр.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Сведения о включении управления ролями см. в разделе <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles>"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);
    parameters:
    - id: providerName
      type: System.String
      description: "Имя поставщика ролей для пользователя."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Идентификатор пользователя для создания <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>providerName</code> ссылается на поставщика роли, который не существует в конфигурации для приложения."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.String,System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для указанного <code> identity </code> с использованием указанного <code> providerName </code> и сведения о ролях из указанного <code> encryptedTicket </code>."
  remarks: "Эта перегрузка <xref:System.Web.Security.RolePrincipal.%23ctor%2A>конструктор создает новый <xref:System.Web.Security.RolePrincipal>объекта и инициализирует значения свойств.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal.%23ctor%2A> Сведения о роли для текущего пользователя считывается из предоставленного `encryptedTicket` и кэшируются с <xref:System.Web.Security.RolePrincipal>объекта.</xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.ProviderName%2A>Свойству присвоено значение, указанное в `providerName` параметр.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Сведения о включении управления ролями см. в разделе <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles>"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: providerName
      type: System.String
      description: "Имя поставщика ролей для пользователя."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "Идентификатор пользователя для создания <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> для."
    - id: encryptedTicket
      type: System.String
      description: "Строка, содержащая зашифрованные сведения о роли."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>providerName</code> ссылается на поставщика роли, который не существует в конфигурации для приложения."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  id: CachedListChanged
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, кэшируются ли список имен ролей с <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> объект был изменен."
  remarks: "CachedListChanged свойство будет возвращать `true` после извлечения из роли по умолчанию имена ролей <xref:System.Web.Security.Roles.Provider%2A>и добавляются в кэш, <xref:System.Web.Security.RolePrincipal.GetRoles%2A>метод, или когда <xref:System.Web.Security.RolePrincipal.IsInRole%2A>вызовы методов <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>метод поставщика ролей по умолчанию и затем получает ответ от `true`, полученный из имени роли, передаваемый <xref:System.Web.Security.RolePrincipal.IsInRole%2A>метод, добавляемый в кэш.</xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RoleProvider.IsUserInRole%2A> </xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RolePrincipal.GetRoles%2A> </xref:System.Web.Security.Roles.Provider%2A>       Свойство CachedListChanged также будет возвращать значение true, если <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>имеет значение `true` и <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>прошла, возникающие в новом <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>задаваемое.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_6_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public bool CachedListChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если список имен ролей в кэше с <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> объект был изменен; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.CachedListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CookiePath
  id: CookiePath
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает путь для cookie с именами ролей."
  remarks: "Свойство CookiePath возвращает значение `cookiePath` атрибут из файла Web.config для приложения ASP.NET. Дополнительные сведения о путях к файлам cookie см. в разделе <xref:System.Web.HttpCookie.Path%2A>.</xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string CookiePath { get; }
    return:
      type: System.String
      description: "Путь файла cookie, в котором кэшированы имена ролей. Значение по умолчанию — /."
  overload: System.Web.Security.RolePrincipal.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Expired
  id: Expired
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, истек ли срок действия файла cookie ролей."
  remarks: "Это свойство возвращает истек `Boolean` значение, указывающее, истек ли срок действия файла cookie ролей на основе <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>текущую дату и время.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_1_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_1_1.aspx)]"
  syntax:
    content: public bool Expired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При истечении срока действия файла cookie ролей; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.Expired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ExpireDate
  id: ExpireDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает дату и время истечения срока действия файла cookie ролей."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_11_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_11_1.aspx)]"
  syntax:
    content: public DateTime ExpireDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Значение, когда истекает срок действия файла cookie ролей.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.ExpireDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Заполняет <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> объект с данными, которые требуются для сериализации целевого объекта, используя заданный контекст потоковой передачи."
  remarks: "Дополнительные сведения см. в разделе <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>метод.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Объекта для заполнения данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Целевой объект этой сериализации."
  overload: System.Web.Security.RolePrincipal.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetRoles
  id: GetRoles
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает список ролей, <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> является членом."
  remarks: "Если <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>является `true` и были кэшированы имена ролей для пользователя, представленного <xref:System.Web.Security.RolePrincipal>, метод GetRoles возвращает список имен ролей в кэше, членом которых является пользователь.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> Если не кэшированы имена ролей, метод GetRoles возвращает список имен ролей, которые пользователь является членом роли по умолчанию <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> Только имена ролей для текущего <xref:System.Web.Security.Roles.ApplicationName%2A>возвращаются.</xref:System.Web.Security.Roles.ApplicationName%2A> Чтобы определить, были ли кэшированы имена ролей в <xref:System.Web.Security.RolePrincipal>объекта, проверка <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>свойство.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following code example displays the roles that the logged-on user is a member of.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#7](~/add/codesnippet/csharp/m-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#7](~/add/codesnippet/visualbasic/m-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public string[] GetRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Список ролей, <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> является членом."
  overload: System.Web.Security.RolePrincipal.GetRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Identity
  id: Identity
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает идентификатор безопасности для текущего HTTP-запроса."
  remarks: "Удостоверение <xref:System.Web.Security.RolePrincipal>объекта установлено <xref:System.Web.Security.RolePrincipal>вызывается конструктор.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_2_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_2_1.aspx)]"
  syntax:
    content: public override System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "Идентификатор безопасности для текущего HTTP-запроса."
  overload: System.Web.Security.RolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, является ли пользователя, представленного <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> находится в указанной роли."
  remarks: "Сначала проверяет IsInRole <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>Свойства, чтобы определить, доступен ли кэшированные список имен ролей для текущего пользователя.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Если <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>свойство `true`, кэшированный список проверяется для указанной роли.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Если метод IsInRole находит указанную роль в списке кэширования, он возвращает `true`.       Если IsInRole не удается найти указанную роль, он вызывает метод <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>метод по умолчанию <xref:System.Web.Security.Roles.Provider%2A>экземпляр, чтобы определить, связан ли имя пользователя с ролью из источника данных для настроенного <xref:System.Web.Security.Roles.ApplicationName%2A>значение.</xref:System.Web.Security.Roles.ApplicationName%2A> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>"
  example:
  - "The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  \n  \n [!code-vb[System.Web.Security.RolePrincipal#8](~/add/codesnippet/visualbasic/m-system.web.security.ro_6_1.aspx)]\n [!code-cs[System.Web.Security.RolePrincipal#8](~/add/codesnippet/csharp/m-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public override bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Роль для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователя, представленного <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> находится в указанной роли; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.IsInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  id: IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, кэшируются ли список ролей для пользователя в файле cookie."
  remarks: "Если `cacheRolesInCookie` атрибута в файле Web.config для приложения имеет значение `true`, список имен ролей для текущего пользователя записывается в файл cookie при проверке принадлежности пользователя определенной роли. Свойство IsRoleListCached указывает имена ролей, были ли записаны в файл cookie. Обратите внимание, что, даже если `cacheRolesInCookie` атрибут конфигурации может быть `true`, свойство IsRoleListCached не возвращает `true` до сведения о роли произошло после записи в файл cookie. Если роль не проверяется для пользователя, будет возвращать IsRoleListCached `false`."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public bool IsRoleListCached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имена ролей кэшированные в файле cookie; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.IsRoleListCached*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IssueDate
  id: IssueDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает дату и время, выданный файла cookie ролей."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_7_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_7_1.aspx)]"
  syntax:
    content: public DateTime IssueDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>, Выданный файла cookie ролей.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.IssueDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ProviderName
  id: ProviderName
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает имя поставщика роли, который хранит и извлекает сведения о роли для пользователя."
  remarks: "Свойство ProviderName предоставляет имя поставщика роли, который управляет сведения о роли для пользователя, представленного <xref:System.Web.Security.RolePrincipal>объекта.</xref:System.Web.Security.RolePrincipal> Это дает возможность доступа к экземпляру определенного поставщика ролей для пользователя с помощью <xref:System.Web.Security.Roles.Providers%2A>свойство <xref:System.Web.Security.Roles>класса независимо от того, является ли поставщик является поставщиком по умолчанию для приложения.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Providers%2A> Например, можно создать метод, который принимает <xref:System.Web.Security.RolePrincipal>качестве входных данных и возвращает список ролей для представленного пользователя.</xref:System.Web.Security.RolePrincipal> Убедитесь, что поставщик соответствующую роль используется для возврата списка ролей для <xref:System.Web.Security.RolePrincipal>путем вызова <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>метод поставщика ролей из <xref:System.Web.Security.Roles.Providers%2A>коллекцию, которая индексируется по значению свойства ProviderName.</xref:System.Web.Security.Roles.Providers%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.RolePrincipal>       Для заполнения <xref:System.Web.Security.RolePrincipal>объекта для каждого запроса, необходимо использовать <xref:System.Web.Security.RoleManagerModule.GetRoles>обработчик событий, определенный в файле Global.asax приложения.</xref:System.Web.Security.RoleManagerModule.GetRoles> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "Имя поставщика роли, который хранит и извлекает сведения о роли для пользователя."
  overload: System.Web.Security.RolePrincipal.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.SetDirty
  id: SetDirty
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Отмечает кэшированный список ролей как измененный."
  remarks: "Метод SetDirty помечает кэшированный список ролей как измененный, задав <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>для `true` и <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>для `false`.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>"
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.Security.RolePrincipal.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Описание этого члена см. в разделе <xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>.</xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>"
  remarks: "Этот член представляет собой реализацию явный интерфейс члена. Он может использоваться только если <xref:System.Web.Security.RolePrincipal>экземпляр приводится к <xref:System.Runtime.Serialization.ISerializable>интерфейс.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Требуется заполнить данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Целевой объект этой сериализации."
  overload: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  id: ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает сведения о роли, в кэше с <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> объекта шифруются на основе <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>"
  remarks: "Значение, возвращаемое методом ToEncryptedTicket хранится в файле cookie роли при <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>— `true`.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example writes the results of the ToEncryptedTicket method to the roles cookie.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#6](~/add/codesnippet/csharp/m-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#6](~/add/codesnippet/visualbasic/m-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string ToEncryptedTicket ();
    parameters: []
    return:
      type: System.String
      description: "Кэширование сведений о ролях с <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> объекта шифруются на основе <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>"
  overload: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Version
  id: Version
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает номер версии файла Cookie ролей."
  remarks: "Включив номер версии файла cookie ролей, будущие выпуски ASP.NET можно изменить формат файла Cookie ролей и использовать свойство Version различать разные форматы."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_9_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_9_1.aspx)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "Номер версии файла Cookie ролей."
  overload: System.Web.Security.RolePrincipal.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: System.Security.Claims.ClaimsPrincipal
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.RolePrincipal.CookiePath
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.GetRoles
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.RolePrincipal.Identity
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
- uid: System.Web.Security.RolePrincipal.Version
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.RolePrincipal.#ctor*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal
  nameWithType: RolePrincipal.RolePrincipal
- uid: System.Web.Security.RolePrincipal.CachedListChanged*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
- uid: System.Web.Security.RolePrincipal.CookiePath*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
- uid: System.Web.Security.RolePrincipal.GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: RolePrincipal.GetObjectData
- uid: System.Web.Security.RolePrincipal.GetRoles*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles
  nameWithType: RolePrincipal.GetRoles
- uid: System.Web.Security.RolePrincipal.Identity*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: RolePrincipal.IsInRole
- uid: System.Web.Security.RolePrincipal.IsRoleListCached*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty
  nameWithType: RolePrincipal.SetDirty
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket
  nameWithType: RolePrincipal.ToEncryptedTicket
- uid: System.Web.Security.RolePrincipal.Version*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
