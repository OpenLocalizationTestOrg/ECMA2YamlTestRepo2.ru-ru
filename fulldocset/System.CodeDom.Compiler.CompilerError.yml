### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerError
  id: CompilerError
  children:
  - System.CodeDom.Compiler.CompilerError.#ctor
  - System.CodeDom.Compiler.CompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)
  - System.CodeDom.Compiler.CompilerError.Column
  - System.CodeDom.Compiler.CompilerError.ErrorNumber
  - System.CodeDom.Compiler.CompilerError.ErrorText
  - System.CodeDom.Compiler.CompilerError.FileName
  - System.CodeDom.Compiler.CompilerError.IsWarning
  - System.CodeDom.Compiler.CompilerError.Line
  - System.CodeDom.Compiler.CompilerError.ToString
  langs:
  - csharp
  name: CompilerError
  nameWithType: CompilerError
  fullName: System.CodeDom.Compiler.CompilerError
  type: Class
  summary: "Представляет ошибку компилятора или предупреждение."
  remarks: "CompilerError представляет ошибку компилятора или предупреждение, который был возвращен компилятором.      Настроек [!NOTE] настроек этот класс содержит требование наследования на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException>возникает, когда производный класс не имеет разрешения полного доверия.</xref:System.Security.SecurityException> Дополнительные сведения о запросах наследования см. в разделе [требования к наследованию](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example compiles a CodeDOM program graph and provides an example of how to programmatically access CompilerError data.  \n  \n [!code-cs[Classic CompilerError Example#1](~/add/codesnippet/csharp/t-system.codedom.compile_5_1.cs)]\n [!code-vb[Classic CompilerError Example#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_5_1.vb)]\n [!code-cpp[Classic CompilerError Example#1](~/add/codesnippet/cpp/t-system.codedom.compile_5_1.cpp)]"
  syntax:
    content: public class CompilerError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: CompilerError()
  nameWithType: CompilerError.CompilerError()
  fullName: System.CodeDom.Compiler.CompilerError.CompilerError()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.CodeDom.Compiler.CompilerError&quot;> </xref> класса."
  syntax:
    content: public CompilerError ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)
  id: '#ctor(System.String,System.Int32,System.Int32,System.String,System.String)'
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: CompilerError(String,Int32,Int32,String,String)
  nameWithType: CompilerError.CompilerError(String,Int32,Int32,String,String)
  fullName: System.CodeDom.Compiler.CompilerError.CompilerError(String,Int32,Int32,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.CodeDom.Compiler.CompilerError&quot;> </xref> класса с помощью указанного имени файла, строки, столбца, номер ошибки и текст сообщения об ошибке."
  syntax:
    content: public CompilerError (string fileName, int line, int column, string errorNumber, string errorText);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла, файла, который обрабатывался компилятором во время возникновения ошибки."
    - id: line
      type: System.Int32
      description: "Строка источника ошибки."
    - id: column
      type: System.Int32
      description: "Столбец источника ошибки."
    - id: errorNumber
      type: System.String
      description: "Номер ошибки."
    - id: errorText
      type: System.String
      description: "Текст сообщения об ошибке."
  overload: System.CodeDom.Compiler.CompilerError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.Column
  id: Column
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: Column
  nameWithType: CompilerError.Column
  fullName: System.CodeDom.Compiler.CompilerError.Column
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает номер столбца, в котором источник ошибки."
  remarks: "Свойства столбца можно задать в ноль для компиляторов, которые не возвращают сведения о столбце."
  syntax:
    content: public int Column { get; set; }
    return:
      type: System.Int32
      description: "Номер столбца исходного файла, в котором компилятор обнаружил ошибку."
  overload: System.CodeDom.Compiler.CompilerError.Column*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.ErrorNumber
  id: ErrorNumber
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: ErrorNumber
  nameWithType: CompilerError.ErrorNumber
  fullName: System.CodeDom.Compiler.CompilerError.ErrorNumber
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает номер ошибки."
  remarks: "Свойство номер ошибки, может содержать строку любой длины."
  syntax:
    content: public string ErrorNumber { get; set; }
    return:
      type: System.String
      description: "Номер ошибки в виде строки."
  overload: System.CodeDom.Compiler.CompilerError.ErrorNumber*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.ErrorText
  id: ErrorText
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: ErrorText
  nameWithType: CompilerError.ErrorText
  fullName: System.CodeDom.Compiler.CompilerError.ErrorText
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает текст сообщения об ошибке."
  remarks: "ErrorText свойство может быть строку любой длины."
  syntax:
    content: public string ErrorText { get; set; }
    return:
      type: System.String
      description: "Текст сообщения об ошибке."
  overload: System.CodeDom.Compiler.CompilerError.ErrorText*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.FileName
  id: FileName
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: FileName
  nameWithType: CompilerError.FileName
  fullName: System.CodeDom.Compiler.CompilerError.FileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает имя файла исходного файла, который содержит код, вызвавший ошибку."
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "Имя файла исходного файла, который содержит код, вызвавший ошибку."
  overload: System.CodeDom.Compiler.CompilerError.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.IsWarning
  id: IsWarning
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: IsWarning
  nameWithType: CompilerError.IsWarning
  fullName: System.CodeDom.Compiler.CompilerError.IsWarning
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает значение, указывающее, является ли ошибка предупреждением."
  syntax:
    content: public bool IsWarning { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ошибка является предупреждением; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerError.IsWarning*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.Line
  id: Line
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: Line
  nameWithType: CompilerError.Line
  fullName: System.CodeDom.Compiler.CompilerError.Line
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Возвращает или задает номер строки, в котором источник ошибки."
  syntax:
    content: public int Line { get; set; }
    return:
      type: System.Int32
      description: "Номер строки исходного файла, в котором компилятор обнаружил ошибку."
  overload: System.CodeDom.Compiler.CompilerError.Line*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerError.ToString
  id: ToString
  parent: System.CodeDom.Compiler.CompilerError
  langs:
  - csharp
  name: ToString()
  nameWithType: CompilerError.ToString()
  fullName: System.CodeDom.Compiler.CompilerError.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Предоставляет реализацию объекта <xref:System.Object.ToString*>метод.</xref:System.Object.ToString*>"
  remarks: "Этот метод поддерживается, <xref:System.CodeDom.Compiler.CompilerError>объекты могут рассматриваться как объекты для упрощенное выходные данные отладки.</xref:System.CodeDom.Compiler.CompilerError>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строковое представление ошибки компилятора."
  overload: System.CodeDom.Compiler.CompilerError.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerError.#ctor
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: CompilerError()
  nameWithType: CompilerError.CompilerError()
  fullName: System.CodeDom.Compiler.CompilerError.CompilerError()
- uid: System.CodeDom.Compiler.CompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: CompilerError(String,Int32,Int32,String,String)
  nameWithType: CompilerError.CompilerError(String,Int32,Int32,String,String)
  fullName: System.CodeDom.Compiler.CompilerError.CompilerError(String,Int32,Int32,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerError.Column
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: Column
  nameWithType: CompilerError.Column
  fullName: System.CodeDom.Compiler.CompilerError.Column
- uid: System.CodeDom.Compiler.CompilerError.ErrorNumber
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ErrorNumber
  nameWithType: CompilerError.ErrorNumber
  fullName: System.CodeDom.Compiler.CompilerError.ErrorNumber
- uid: System.CodeDom.Compiler.CompilerError.ErrorText
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ErrorText
  nameWithType: CompilerError.ErrorText
  fullName: System.CodeDom.Compiler.CompilerError.ErrorText
- uid: System.CodeDom.Compiler.CompilerError.FileName
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: FileName
  nameWithType: CompilerError.FileName
  fullName: System.CodeDom.Compiler.CompilerError.FileName
- uid: System.CodeDom.Compiler.CompilerError.IsWarning
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: IsWarning
  nameWithType: CompilerError.IsWarning
  fullName: System.CodeDom.Compiler.CompilerError.IsWarning
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerError.Line
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: Line
  nameWithType: CompilerError.Line
  fullName: System.CodeDom.Compiler.CompilerError.Line
- uid: System.CodeDom.Compiler.CompilerError.ToString
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ToString()
  nameWithType: CompilerError.ToString()
  fullName: System.CodeDom.Compiler.CompilerError.ToString()
- uid: System.CodeDom.Compiler.CompilerError.#ctor*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: CompilerError
  nameWithType: CompilerError.CompilerError
- uid: System.CodeDom.Compiler.CompilerError.Column*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: Column
  nameWithType: CompilerError.Column
- uid: System.CodeDom.Compiler.CompilerError.ErrorNumber*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ErrorNumber
  nameWithType: CompilerError.ErrorNumber
- uid: System.CodeDom.Compiler.CompilerError.ErrorText*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ErrorText
  nameWithType: CompilerError.ErrorText
- uid: System.CodeDom.Compiler.CompilerError.FileName*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: FileName
  nameWithType: CompilerError.FileName
- uid: System.CodeDom.Compiler.CompilerError.IsWarning*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: IsWarning
  nameWithType: CompilerError.IsWarning
- uid: System.CodeDom.Compiler.CompilerError.Line*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: Line
  nameWithType: CompilerError.Line
- uid: System.CodeDom.Compiler.CompilerError.ToString*
  parent: System.CodeDom.Compiler.CompilerError
  isExternal: false
  name: ToString
  nameWithType: CompilerError.ToString
