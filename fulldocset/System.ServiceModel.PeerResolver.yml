### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerResolver
  id: PeerResolver
  children:
  - System.ServiceModel.PeerResolver.#ctor
  - System.ServiceModel.PeerResolver.CanShareReferrals
  - System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  - System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  langs:
  - csharp
  name: PeerResolver
  nameWithType: PeerResolver
  fullName: System.ServiceModel.PeerResolver
  type: Class
  summary: "Задает базовый тип, используемый для определения контракта для регистрации и разрешения однорангового идентификатора сетки узлов в адреса конечных точек узлов, участвующих в сетке."
  remarks: "Этот класс является базовым классом для реализации настраиваемых распознавателей одноранговых имя узлов. Имя арбитра одноранговых узлов представляет собой службу обнаружения, используемую одноранговыми каналами для поиска одноранговых узлов, участвующих в одноранговой сети. Он также используется для «регистрации» узла с одноранговой сети, механизм, по которому одноранговый узел становится известным и доступным из сетки одноранговых узлов."
  syntax:
    content: public abstract class PeerResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.#ctor
  id: '#ctor'
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: System.ServiceModel.PeerResolver.PeerResolver()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.PeerResolver&quot;> </xref> класса."
  syntax:
    content: protected PeerResolver ();
    parameters: []
  overload: System.ServiceModel.PeerResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  id: CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: System.ServiceModel.PeerResolver.CanShareReferrals
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Получает значение, указывающее имя арбитра одноранговых узлов может совместный доступ к ссылкам."
  syntax:
    content: public abstract bool CanShareReferrals { get; }
    return:
      type: System.Boolean
      description: "Значение true, если имя арбитра одноранговых узлов может совместный доступ к ссылкам; Если значение равно false, нельзя."
  overload: System.ServiceModel.PeerResolver.CanShareReferrals*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  id: Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  fullName: System.ServiceModel.PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Инициализирует текущий экземпляр распознавателя одноранговых узлов с параметрами и новый поддерживаемым адресом конечной точки."
  remarks: "Этот метод просто инициализирует существующий экземпляр распознавателя одноранговых узлов; он не создает новую. Чтобы создать новый распознаватель одноранговых узлов, вызовите метод CreatePeerResolver для соответствующего элемента привязки (например, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>"
  syntax:
    content: public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>содержащий новый адрес конечной точки этот экземпляр распознавателя одноранговых узлов.</xref:System.ServiceModel.EndpointAddress>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>указывающий новую сетевую привязку для этого арбитра одноранговых узлов.</xref:System.ServiceModel.Channels.Binding>"
    - id: credentials
      type: System.ServiceModel.Description.ClientCredentials
      description: "<xref:System.ServiceModel.Description.ClientCredentials>Описывает новые учетные данные клиента для этого арбитра одноранговых узлов.</xref:System.ServiceModel.Description.ClientCredentials>"
    - id: referralPolicy
      type: System.ServiceModel.PeerResolvers.PeerReferralPolicy
      description: "<xref href=&quot;System.ServiceModel.PeerResolvers.PeerReferralPolicy&quot;></xref>задающий новую политику ссылок для этого арбитра одноранговых узлов."
  overload: System.ServiceModel.PeerResolver.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Register(String,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Регистрирует <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> для конкретной сетке узлов."
  syntax:
    content: public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: "Идентификатор сетки одноранговых узлов, в котором будет регистрироваться однорангового узла."
    - id: nodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: "<xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> Для регистрации в сетке."
    - id: timeout
      type: System.TimeSpan
      description: "Длина времени ожидания успешного завершения перед прекращением попытки регистрации в сетке. Если происходит сбой попытки <xref:System.TimeoutException>вызывается для однорангового узла.</xref:System.TimeoutException>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий регистрационный идентификатор.</xref:System.Object> Объект идентификатора регистрации передается <> </> *настроек и <> </> *настроек методы."
  overload: System.ServiceModel.PeerResolver.Register*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  id: Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Resolve(String,Int32,TimeSpan)
  nameWithType: PeerResolver.Resolve(String,Int32,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Resolve(String,Int32,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Разрешает передаваемого идентификатора сетки в адреса конечных точек ноль или более узлов, участвующих в сетке."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress> Resolve (string meshId, int maxAddresses, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: "Сетка идентификатор сетки однорангового узла, в течение которого <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> объектов представляющий являются узлами-участниками получить невозможно."
    - id: maxAddresses
      type: System.Int32
      description: "Число возвращаемых адресов конечных точек."
    - id: timeout
      type: System.TimeSpan
      description: "Длина времени ожидания успешного завершения перед прекращением попытки разрешения адресов конечных точек в сетке. Если происходит сбой попытки <xref:System.TimeoutException>вызывается для однорангового узла.</xref:System.TimeoutException>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
      description: "Объект &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; , содержащий <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> объекты, представляющие узлов, участвующих в сетке."
  overload: System.ServiceModel.PeerResolver.Resolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  id: Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Unregister(Object,TimeSpan)
  nameWithType: PeerResolver.Unregister(Object,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Unregister(Object,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Удаляет регистрационную запись для узла в одноранговой сети."
  remarks: "Идентификатор регистрации является маркером арбитра однорангового узла, который в минимальном варианте представляет кортеж, содержащий идентификатор однорангового узла и идентификатор сетки. Это значение идентификатора должен быть получен в результате вызова предыдущей <xref:System.ServiceModel.PeerResolver.Register%2A>.</xref:System.ServiceModel.PeerResolver.Register%2A>       Отменить регистрацию вызывается в двух следующих случаях: - при <xref:System.ServiceModel.PeerNode>выходит из сетки одноранговых узлов (обычно в результате закрытия последнего однорангового канала или службы узла, связанный с ним).</xref:System.ServiceModel.PeerNode>      -Если <xref:System.ServiceModel.PeerNode>можно найти нет доступных адресов конечных точек других узлов, входящих в сетку одноранговых.</xref:System.ServiceModel.PeerNode> В результате <xref:System.ServiceModel.PeerNode>больше не доступна, и он будет пытаться вызвать отменить регистрацию на регистрацию <xref:System.ServiceModel.PeerResolver>.</xref:System.ServiceModel.PeerResolver> </xref:System.ServiceModel.PeerNode> Если другие одноранговые узлы в сетке становятся доступными после удаления регистрации, узел может повторно зарегистрироваться, вызвав <xref:System.ServiceModel.PeerResolver.Register%2A>и получив новый регистрационный идентификатор.</xref:System.ServiceModel.PeerResolver.Register%2A>"
  syntax:
    content: public abstract void Unregister (object registrationId, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: "Идентификатор регистрации для узла, полученный в результате предыдущего вызова <xref:System.ServiceModel.PeerResolver.Register*>.</xref:System.ServiceModel.PeerResolver.Register*>"
    - id: timeout
      type: System.TimeSpan
      description: "Длина времени ожидания успешного удаления регистрации из сетки одноранговых узлов. Если происходит сбой попытки <xref:System.TimeoutException>вызывается для однорангового узла.</xref:System.TimeoutException>"
  overload: System.ServiceModel.PeerResolver.Unregister*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Update(Object,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Обновления <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> для узла, зарегистрированного в конкретной сетке узлов."
  remarks: "Обновления вызывается, когда адрес <xref:System.ServiceModel.PeerNode>изменения на локальном компьютере.</xref:System.ServiceModel.PeerNode>"
  syntax:
    content: public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: "Маркер регистрационного идентификатора узла, полученный в результате предыдущего вызова<xref:System.ServiceModel.PeerResolver.Register*></xref:System.ServiceModel.PeerResolver.Register*>"
    - id: updatedNodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: "Обновленный адрес конечной точки (и другие многосетевых IP-адреса)."
    - id: timeout
      type: System.TimeSpan
      description: "Длина времени ожидания успешного завершения перед прекращением попытки обновления регистрации узла в одноранговой сети. Если происходит сбой попытки <xref:System.TimeoutException>вызывается для однорангового узла.</xref:System.TimeoutException>"
  overload: System.ServiceModel.PeerResolver.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.PeerResolver.#ctor
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: System.ServiceModel.PeerResolver.PeerResolver()
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: System.ServiceModel.PeerResolver.CanShareReferrals
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  fullName: System.ServiceModel.PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.PeerResolvers.PeerReferralPolicy
  parent: System.ServiceModel.PeerResolvers
  isExternal: false
  name: PeerReferralPolicy
  nameWithType: PeerReferralPolicy
  fullName: System.ServiceModel.PeerResolvers.PeerReferralPolicy
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register(String,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.PeerNodeAddress
  parent: System.ServiceModel
  isExternal: false
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress
  fullName: System.ServiceModel.PeerNodeAddress
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve(String,Int32,TimeSpan)
  nameWithType: PeerResolver.Resolve(String,Int32,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Resolve(String,Int32,TimeSpan)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PeerNodeAddress>
  nameWithType: ReadOnlyCollection<PeerNodeAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.PeerNodeAddress>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.PeerNodeAddress
    name: PeerNodeAddress
    nameWithType: PeerNodeAddress
    fullName: PeerNodeAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister(Object,TimeSpan)
  nameWithType: PeerResolver.Unregister(Object,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Unregister(Object,TimeSpan)
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update(Object,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
- uid: System.ServiceModel.PeerResolver.#ctor*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver
  nameWithType: PeerResolver.PeerResolver
- uid: System.ServiceModel.PeerResolver.CanShareReferrals*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
- uid: System.ServiceModel.PeerResolver.Initialize*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize
  nameWithType: PeerResolver.Initialize
- uid: System.ServiceModel.PeerResolver.Register*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register
  nameWithType: PeerResolver.Register
- uid: System.ServiceModel.PeerResolver.Resolve*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerResolver.Resolve
- uid: System.ServiceModel.PeerResolver.Unregister*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister
  nameWithType: PeerResolver.Unregister
- uid: System.ServiceModel.PeerResolver.Update*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update
  nameWithType: PeerResolver.Update
