### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer
  id: ICallContextInitializer
  children:
  - System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  - System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: ICallContextInitializer
  nameWithType: ICallContextInitializer
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer
  type: Interface
  summary: "Определяет методы, которые позволяют выполнять инициализацию и уничтожение локальной памяти потока, который вызывает пользовательский код."
  remarks: "Реализуйте интерфейс ICallContextInitializer и добавьте его в <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName>свойства инициализации и очистки локальной памяти потока, который вызывает пользовательский код.</xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName> Типичным использованием является задание некоторого значения, такие как олицетворение или изменение <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Если вы хотите установить некоторый пользовательский контекст, это точка расширения для инициализации свойства статического контекста, которое затем становится доступным для разработчиков в рамках операции."
  syntax:
    content: public interface ICallContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  id: AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Реализуйте для участия в очистке потока, который вызвал операцию."
  remarks: "Используйте этот метод, чтобы выполнить необходимую очистку потока операции."
  syntax:
    content: public void AfterInvoke (object correlationState);
    parameters:
    - id: correlationState
      type: System.Object
      description: "Объект корреляции, возвращаемый из <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>метод.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  id: BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Реализуйте для участия в инициализации потока операции."
  remarks: "Реализуйте метод BeforeInvoke для инициализации и очистки локальной памяти потока, который вызывает пользовательский код. Типичным использованием является задание некоторого значения, такие как олицетворение или изменение <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Если вы хотите установить некоторый пользовательский контекст, это точка расширения для инициализации свойства статического контекста, которое затем становится доступным для разработчиков в рамках операции."
  syntax:
    content: public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Экземпляр службы для операции."
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Клиентский канал."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Входящее сообщение."
    return:
      type: System.Object
      description: "Объект корреляции, передается обратно в качестве параметра <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>метод.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke
  nameWithType: ICallContextInitializer.AfterInvoke
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke
  nameWithType: ICallContextInitializer.BeforeInvoke
