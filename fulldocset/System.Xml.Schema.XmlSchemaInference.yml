### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Определяет схему языка определения схем XML (XSD) из XML-документа. XmlSchemaInference класс не наследуется."
  remarks: "> [!IMPORTANT]Настроек-не использовать схемы из неизвестных или ненадежных источников или расположения. Это приведет к компрометации вашего кода.   Настроек-XML-схем (включая встроенные схемы) по своей природе уязвимы для атак; не принимать их в недоверенных сценариях.   Настроек-сообщений об ошибках проверки схемы и исключения могут предоставлять конфиденциальных сведений о модели содержимого или пути URI к файлу схемы. Будьте внимательны и не предоставлять эту информацию для ненадежных вызывающих объектов.       Класс XmlSchemaInference в <xref:System.Xml.Schema?displayProperty=fullName>пространства имен позволяет выводить схему языка определения схем XML (XSD) на основе структуры XML-документа.</xref:System.Xml.Schema?displayProperty=fullName> Класс XmlSchemaInference выводит схему XML, которая может проверять XML-документа.       Класс XmlSchemaInference поддерживает стандарты консорциума W3C XML и XML-схем. Он может использоваться для создания новой схемы или уточнения существующей схемы."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;></xref> class."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Определяет схему языка определения схем XML (XSD) из XML-документ, содержащийся в <xref:System.Xml.XmlReader>указанного объекта.</xref:System.Xml.XmlReader>"
  remarks: "Метод InferSchema выводит один или несколько схем языка определения схемы (XSD) XML W3C из XML экземпляра, документ, содержащийся в <xref:System.Xml.XmlReader>указанного объекта.</xref:System.Xml.XmlReader> Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, то создается несколько схем,: один для каждого пространства имен, используемых в документе. Первичной схемой является схема, можно проверить всего XML-документа, а ее целевое пространство имен совпадает с именем пространства имен элемента документа XML-документа.       Ниже перечислены важные замечания, которые следует учитывать при использовании метода InferSchema.      -InferSchema метод игнорирует любые `xsi:type`, `xsi:schemaLocation`, или `xsi:noNamespaceSchemaLocation` атрибутов в XML-документе.      -Если <xref:System.Xml.XmlReader>типизированного объекта, он содержит сведения о типе игнорируется.</xref:System.Xml.XmlReader>      -Если <xref:System.Xml.XmlReader>позиционируется объект для элемента, который не является корневым элементом XML-документа, то схема определяется только для этого элемента.</xref:System.Xml.XmlReader> Если <xref:System.Xml.XmlReader>объект находится на элементе, <xref:System.Xml.XmlReader.Read%2A>метод будет вызван на <xref:System.Xml.XmlReader>параметра, пока не будет обнаружен элемент (например, в том случае, когда <xref:System.Xml.XmlReader.NodeType%2A>— <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> В этот момент процесс определения начнется с такого элемента. Если элемент не обнаружен до конца документа, <xref:System.ArgumentException>возникает исключение.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Объект, содержащий XML-документа для вывода схемы из.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Объект, содержащий выводимого схемы."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML-документ не является корректным."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>Объект находится в корневом узле или на элементе.</xref:System.Xml.XmlReader> Произошла ошибка во время процесса выведения схемы."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Определяет схему языка определения схем XML (XSD) из XML-документ, содержащийся в <xref:System.Xml.XmlReader>указанного объекта и уточняет схему, используя существующую схему в <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> объекта, указанного с помощью того же целевого пространства имен.</xref:System.Xml.XmlReader>"
  remarks: "Метод InferSchema выводит один или несколько схем языка определения схемы (XSD) XML W3C из XML экземпляра, документ, содержащийся в <xref:System.Xml.XmlReader>указанного объекта.</xref:System.Xml.XmlReader> Если XML-документ содержит элементы и атрибуты из нескольких пространств имен, создается несколько схем,: один для каждого пространства имен, используемых в документе. Первичной схемой является схема, можно проверить всего XML-документа, а ее целевое пространство имен совпадает с именем пространства имен элемента документа XML-документа.       Ниже перечислены важные замечания, которые следует учитывать при использовании метода InferSchema.      -InferSchema метод игнорирует любые `xsi:type`, `xsi:schemaLocation`, или `xsi:noNamespaceSchemaLocation` атрибутов в XML-документе.      -Если <xref:System.Xml.XmlReader>типизированного объекта, он содержит сведения о типе игнорируется.</xref:System.Xml.XmlReader>      -Если <xref:System.Xml.XmlReader>позиционируется объект для элемента, который не является корневым элементом XML-документа, то схема определяется только для этого элемента.</xref:System.Xml.XmlReader> Если <xref:System.Xml.XmlReader>объект находится на элементе, <xref:System.Xml.XmlReader.Read%2A>метод будет вызван на <xref:System.Xml.XmlReader>параметра, пока не будет обнаружен элемент (например, в том случае, когда <xref:System.Xml.XmlReader.NodeType%2A>— <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> В этот момент процесс определения начнется с такого элемента. Если элемент не обнаружен до конца документа, <xref:System.ArgumentException>возникает исключение.</xref:System.ArgumentException>      -Если <xref:System.Xml.Schema.XmlSchemaSet>объект передается в качестве параметра и элемент, на котором <xref:System.Xml.XmlReader>позиционируется объект определен в одной из схем в <xref:System.Xml.Schema.XmlSchemaSet>, созданная схема используется для уточнения существующей схемы в <xref:System.Xml.Schema.XmlSchemaSet>параметр с того же целевого пространства имен; в противном случае выводится новую схему для пространства имен.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Объект, содержащий XML-документа для вывода схемы из.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Объект, содержащий существующую схему использовать для уточнения выведенную схему."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> Объект, содержащий выводимого схемы."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML-документ не является корректным."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "<xref:System.Xml.XmlReader>Объект находится в корневом узле или на элементе.</xref:System.Xml.XmlReader> Произошла ошибка во время процесса выведения схемы."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>значение, которое влияет на вхождение объявлений схемы, получены из XML-документа.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Если экземпляр является свойство <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, первые элементы времени встречаются в XML-документ, объявление схемы выводится как `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Если обнаруживаются атрибуты, объявление схемы выводится как `use=&quot;required&quot;`.       Если экземпляр является свойство <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, объявлений элементов схемы выводятся как `minOccurs=&quot;0&quot;`, и объявления атрибутов схемы выводятся как `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Значение по умолчанию свойства вхождения — <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>Объект.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>значение, которое влияет на типы, которые получены из XML-документа.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Если свойство TypeInference равно <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, всегда является тип выводимых элементов и атрибутов в XML-документ с простым содержимым `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Если свойство TypeInference равно <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, выводятся более конкретные типы, такие как `xs:date`, `xs:decimal`, `xs:unsignedByte`, и т. д.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Значение по умолчанию свойства TypeInference — <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>Объект.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
