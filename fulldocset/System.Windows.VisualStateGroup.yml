### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "Содержит взаимоисключающие <xref href=&quot;System.Windows.VisualState&quot;> </xref> объектов и <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> объектов, которые используются для перемещения из одного состояния в другое."
  remarks: "Каждый VisualStateGroup содержит коллекцию <xref:System.Windows.VisualState>объектов.</xref:System.Windows.VisualState> Объект <xref:System.Windows.VisualState>содержит коллекцию <xref:System.Windows.Media.Animation.Storyboard>объекты, которые указывают, как изменяется внешний вид элемента управления, когда элемент управления находится в определенном состоянии.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Например <xref:System.Windows.Controls.Button>может иметь несколько различный внешний вид при нажатии чем нажатого не.</xref:System.Windows.Controls.Button> Двумя состояниями, <xref:System.Windows.Controls.Button>определяет соответствуют нажатого (`&quot;Pressed&quot;`) и когда это не (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button>       Добавить <xref:System.Windows.VisualState>к элементу управления, задав `VisualStateManager.VisualStateGroups` присоединенного свойства элемента управления.</xref:System.Windows.VisualState> Можно поместить состояний, которые взаимно исключают друг с другом в одном VisualStateGroup. Например <xref:System.Windows.Controls.CheckBox>имеет два объекта VisualStateGroup.</xref:System.Windows.Controls.CheckBox> Один из них содержит состояния, `Normal`, `MouseOver`, `Pressed`, и `Disabled`. Другой словарь содержит состояния, `Checked`, `UnChecked`, и `Indeterminate`. <xref:System.Windows.Controls.CheckBox>Может находиться в состояниях `MouseOver` и `UnChecked` одновременно, но не может быть в `MouseOver` и `Pressed` состояний, в то же время.</xref:System.Windows.Controls.CheckBox>       Несмотря на то, что можно добавить <xref:System.Windows.VisualState>объекты к любому элементу, они особенно полезный способ разрешить другим пользователям переопределение поведения visual <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.VisualState> Если создается пользовательский элемент управления, который использует <xref:System.Windows.Controls.ControlTemplate>, можно указать, в том, что элемент управления может быть путем добавления в <xref:System.Windows.TemplateVisualStateAttribute>на его определение класса.</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> Затем кто-либо создает новый <xref:System.Windows.Controls.ControlTemplate>для элемента управления можно добавить <xref:System.Windows.VisualState>объектов в шаблон.</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.TemplateVisualStateAttribute>Позволяет средствам разработки, таких как Expression Blend, для предоставления состояния элемента управления.</xref:System.Windows.TemplateVisualStateAttribute> Состояния с тем же <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>принадлежат одной VisualStateGroup.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       Дополнительные сведения о том, как использовать объекты VisualStateGroup в <xref:System.Windows.Controls.ControlTemplate>, в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate> Дополнительные сведения о создании элементов управления, использующих <xref:System.Windows.VisualStateManager>, в разделе [Создание элемент управления, имеющий Настройка внешнего вида](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.VisualStateManager>       <xref:System.Windows.VisualStateGroup.Transitions%2A>Свойство содержит <xref:System.Windows.VisualTransition>объектов, которые применяются при переходе элемента управления между сказано, что определены в VisualStateGroup.</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> класса."
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает <xref href=&quot;System.Windows.VisualState&quot;> </xref> , примененные к элементу управления."
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "<xref href=&quot;System.Windows.VisualState&quot;> </xref> , Примененные к элементу управления."
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Происходит после перехода элемента управления в другое состояние."
  remarks: "Это событие возникает после переходов в новое состояние элемента управления и <xref:System.Windows.VisualStateGroup.CurrentStateChanging>событием.</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Происходит, когда элемент управления начинает переход в другое состояние."
  remarks: "Это событие возникает, когда элемент управления начинает Переходные состояния. Если <xref:System.Windows.VisualTransition>применяется изменение состояния, это событие происходит, когда начинается переход.</xref:System.Windows.VisualTransition> Если <xref:System.Windows.VisualTransition>не применяется, это событие возникает после элемента управления перехода объекта в новое состояние, но перед <xref:System.Windows.VisualStateGroup.CurrentStateChanged>событий.</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает имя <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  remarks: "Разработчики элементов управления укажите том, может находиться в элемент управления путем добавления <xref:System.Windows.TemplateVisualStateAttribute>на его определение класса.</xref:System.Windows.TemplateVisualStateAttribute> Состояния с же <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>принадлежат в одном <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> Задайте имя <xref:System.Windows.VisualStateGroup>значению <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>свойство.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает коллекцию взаимно исключают друг друга <xref href=&quot;System.Windows.VisualState&quot;> </xref> объектов."
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "Коллекция взаимно исключают друг друга <xref href=&quot;System.Windows.VisualState&quot;> </xref> объектов."
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает коллекцию <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> объектов."
  remarks: "<xref:System.Windows.VisualTransition>Объекты в переходы вступают в силу при смене управления подтверждает, что определенные в <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "Коллекция <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> объектов."
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
