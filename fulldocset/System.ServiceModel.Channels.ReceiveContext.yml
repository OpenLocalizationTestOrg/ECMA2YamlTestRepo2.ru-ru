### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReceiveContext
  id: ReceiveContext
  children:
  - System.ServiceModel.Channels.ReceiveContext.#ctor
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.Fault
  - System.ServiceModel.Channels.ReceiveContext.Faulted
  - System.ServiceModel.Channels.ReceiveContext.Name
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnFaulted
  - System.ServiceModel.Channels.ReceiveContext.State
  - System.ServiceModel.Channels.ReceiveContext.ThisLock
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  langs:
  - csharp
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
  type: Class
  summary: "Наследовать от этого класса, чтобы реализовать пользовательский конечный автомат для функции контекста получения."
  remarks: "Получение функция контекста является двухступенчатой. При работе с канал в очереди получения контекста позволяет заблокировать сообщение до его обработки. В случае сбоя сообщение останется заблокированным, служба, обрабатывающая это сообщение, останется его владельцем (другая служба не может получить и обработать это сообщение) и может также потребоваться выполнить другие действия с ним. При работе с односторонним каналом получения контекста позволяет службе контролировать, когда он отправляет сообщение подтверждения или он может указывать на проблему, отправив сообщение отрицательного подтверждения. Клиент затем можно повторно отправить сообщение, если он получает уведомление о или не получит подтверждение в течение определенного периода времени."
  syntax:
    content: public abstract class ReceiveContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;> </xref> класса."
  syntax:
    content: protected ReceiveContext ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  id: Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывает конечного автомата в прерванное состояние с указанным значением времени ожидания."
  syntax:
    content: public virtual void Abandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  id: Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывает конечного автомата в прерванное состояние с указанным исключением и значением времени ожидания."
  syntax:
    content: public virtual void Abandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "Исключение, вызывающее операцию прерывания."
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Начинает асинхронную операцию прерывания с заданное время ожидания, асинхронным обратным вызовом и состоянием, определяемым пользователем данных."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Данные пользовательской среды."
    return:
      type: System.IAsyncResult
      description: "Объект <xref:System.IAsyncResult>, ссылается на асинхронную операцию прерывания.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Начинает асинхронную операцию прерывания с указанного исключения, время ожидания, асинхронным обратным вызовом и определенные пользователем данные о состоянии."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "Исключение, содержащее причину для операции прерывания."
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "данные пользовательской среды."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию прерывания.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Начинает асинхронную операцию завершения с заданное время ожидания, асинхронным обратным вызовом и состоянием, определяемым пользователем данных."
  syntax:
    content: public virtual IAsyncResult BeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания завершения операции завершения."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Данные пользовательской среды."
    return:
      type: System.IAsyncResult
      description: "Объект <xref:System.IAsyncResult>, ссылается на асинхронную операцию завершения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  id: Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывает переход в завершенное состояние конечного автомата с указанным значением времени ожидания."
  syntax:
    content: public virtual void Complete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания завершения операции завершения."
  overload: System.ServiceModel.Channels.ReceiveContext.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  id: EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Завершает асинхронную операцию прерывания."
  syntax:
    content: public virtual void EndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова одного из <xref:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon*>методы.</xref:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  id: EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Завершает асинхронную операцию завершения."
  syntax:
    content: public virtual void EndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова <xref:System.ServiceModel.Channels.ReceiveContext.BeginComplete*>метод.</xref:System.ServiceModel.Channels.ReceiveContext.BeginComplete*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  id: Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывает переход в состояние faulted конечного автомата."
  syntax:
    content: protected virtual void Fault ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.Fault*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  id: Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Определяет событие, которое возникает, когда произошло исключение в процессе обмена сообщениями."
  syntax:
    content: public event EventHandler Faulted;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  id: Name
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Имя контекста получения."
  syntax:
    content: public static readonly string Name;
    return:
      type: System.String
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  id: OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние прерывания с указанным значением времени ожидания."
  syntax:
    content: protected abstract void OnAbandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  id: OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние прерывания с указанным исключением и значением времени ожидания."
  syntax:
    content: protected virtual void OnAbandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "Исключение, содержащее причину для операции прерывания."
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние прерывания в асинхронном режиме с указанным значением времени ожидания, обратным вызовом и данные о состоянии."
  syntax:
    content: protected abstract IAsyncResult OnBeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Определяемые пользователем данные о состоянии."
    return:
      type: System.IAsyncResult
      description: "Объект <xref:System.IAsyncResult>, ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние прерывания в асинхронном режиме с указанным исключением, значение времени ожидания, обратного вызова и данных состояния."
  syntax:
    content: protected virtual IAsyncResult OnBeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "Исключение, содержащее причину для операции прерывания."
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания для завершения операции прерывания."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Данные пользовательской среды."
    return:
      type: System.IAsyncResult
      description: "Объект <xref:System.IAsyncResult>, ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние завершения в асинхронном режиме с заданным временем ожидания, обратным вызовом и данные о состоянии."
  syntax:
    content: protected abstract IAsyncResult OnBeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания завершения операции завершения."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции."
    - id: state
      type: System.Object
      description: "Данные пользовательской среды."
    return:
      type: System.IAsyncResult
      description: "Объект <xref:System.IAsyncResult>, ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  id: OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние завершения с указанным значением времени ожидания."
  syntax:
    content: protected abstract void OnComplete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Время ожидания завершения операции завершения."
  overload: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  id: OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние прерывания асинхронно."
  syntax:
    content: protected abstract void OnEndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова одного из <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*>методы.</xref:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  id: OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние завершения асинхронно."
  syntax:
    content: protected abstract void OnEndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Возвращается путем вызова <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*></xref:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*> </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  id: OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Вызывается, когда конечный автомат переходит в состояние faulted."
  syntax:
    content: protected virtual void OnFaulted ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.State
  id: State
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Возвращает или задает состояние конечного автомата."
  syntax:
    content: public System.ServiceModel.Channels.ReceiveContextState State { get; protected set; }
    return:
      type: System.ServiceModel.Channels.ReceiveContextState
      description: "Текущий контекст получения конечного автомата."
  overload: System.ServiceModel.Channels.ReceiveContext.State*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  id: ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Объект, используемый для блокировки <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;> </xref> экземпляра."
  syntax:
    content: protected object ThisLock { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>.</xref:System.Object>"
  overload: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Пытается извлечь контекст получения из заданного сообщения."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Сообщение."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "Контекст получения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если контекст получения извлекается успешно. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Пытается извлечь контекст получения из коллекции свойств указанного сообщения."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "Коллекция свойств сообщения."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "Контекст получения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если контекст получения извлекается успешно. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
- uid: System.ServiceModel.Channels.ReceiveContext.State
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContextState
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContextState
  nameWithType: ReceiveContextState
  fullName: System.ServiceModel.Channels.ReceiveContextState
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.ReceiveContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon
  nameWithType: ReceiveContext.Abandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon
  nameWithType: ReceiveContext.BeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete
  nameWithType: ReceiveContext.BeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Complete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete
  nameWithType: ReceiveContext.Complete
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon
  nameWithType: ReceiveContext.EndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete
  nameWithType: ReceiveContext.EndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Fault*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault
  nameWithType: ReceiveContext.Fault
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon
  nameWithType: ReceiveContext.OnAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon
  nameWithType: ReceiveContext.OnBeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete
  nameWithType: ReceiveContext.OnBeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete
  nameWithType: ReceiveContext.OnComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon
  nameWithType: ReceiveContext.OnEndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete
  nameWithType: ReceiveContext.OnEndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted
  nameWithType: ReceiveContext.OnFaulted
- uid: System.ServiceModel.Channels.ReceiveContext.State*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet
  nameWithType: ReceiveContext.TryGet
