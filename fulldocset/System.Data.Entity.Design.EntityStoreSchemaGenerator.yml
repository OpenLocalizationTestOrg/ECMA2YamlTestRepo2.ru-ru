### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator
  id: EntityStoreSchemaGenerator
  children:
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)
  - System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)
  langs:
  - csharp
  name: EntityStoreSchemaGenerator
  nameWithType: EntityStoreSchemaGenerator
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator
  type: Class
  summary: "Отвечают за загрузку сведений о схеме базы данных."
  remarks: "Содержимое не будет обновляться; Просьба не добавлять сюда материал."
  syntax:
    content: public sealed class EntityStoreSchemaGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: EntityStoreSchemaGenerator(String,String,String)
  nameWithType: EntityStoreSchemaGenerator.EntityStoreSchemaGenerator(String,String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityStoreSchemaGenerator(String,String,String)
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Entity.Design.EntityStoreSchemaGenerator&quot;> </xref> класса."
  syntax:
    content: public EntityStoreSchemaGenerator (string providerInvariantName, string connectionString, string namespaceName);
    parameters:
    - id: providerInvariantName
      type: System.String
      description: "Неизменяемое имя поставщика."
    - id: connectionString
      type: System.String
      description: "Соединение, используемое для открытия базы данных."
    - id: namespaceName
      type: System.String
      description: "Имя пространства имен для языка определения схемы хранилища (SSDL)."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)
  id: CreateStoreSchemaConnection(System.String,System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: CreateStoreSchemaConnection(String,String)
  nameWithType: EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Создает EntityConnection загружен с метаданными поставщиков для схемы хранилища."
  syntax:
    content: public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString);
    parameters:
    - id: providerInvariantName
      type: System.String
      description: "Неизменяемое имя поставщика."
    - id: connectionString
      type: System.String
      description: "Соединение для подключения к поставщикам."
    return:
      type: System.Data.EntityClient.EntityConnection
      description: "Объект EntityConnection, можно запросить ConceptualSchemaDefinition для поставщика."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)
  id: CreateStoreSchemaConnection(System.String,System.String,System.Version)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: CreateStoreSchemaConnection(String,String,Version)
  nameWithType: EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String,Version)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String,Version)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Создает EntityConnection загружен с метаданными поставщиков для схемы хранилища. Обратите внимание, что параметра targetEntityFrameworkVersion использует внутренний номер версии EntityFramework, как описано в <xref href=&quot;System.Data.Entity.Design.EntityFrameworkVersions&quot;> </xref> класса."
  syntax:
    content: public static System.Data.EntityClient.EntityConnection CreateStoreSchemaConnection (string providerInvariantName, string connectionString, Version targetEntityFrameworkVersion);
    parameters:
    - id: providerInvariantName
      type: System.String
      description: "Неизменяемое имя поставщика."
    - id: connectionString
      type: System.String
      description: "Соединение для подключения к поставщикам."
    - id: targetEntityFrameworkVersion
      type: System.Version
      description: "Внутренняя версии Entity Framework, который является целевым."
    return:
      type: System.Data.EntityClient.EntityConnection
      description: "Объект EntityConnection, можно запросить ConceptualSchemaDefinition для поставщика."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer
  id: EntityContainer
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: EntityContainer
  nameWithType: EntityStoreSchemaGenerator.EntityContainer
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Возвращает модель хранения EntityContainer, который был создан."
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: "Модель хранения EntityContainer, который был создан."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  id: GenerateForeignKeyProperties
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: GenerateForeignKeyProperties
  nameWithType: EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Возвращает или задает флаг для создания свойств внешнего ключа в модели хранения."
  syntax:
    content: public bool GenerateForeignKeyProperties { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если свойства внешнего ключа, создаваемых в модели хранения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata
  id: GenerateStoreMetadata
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: GenerateStoreMetadata()
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata()
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata()
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Создает метаданные хранилища и возвращает все ошибки схемы."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError> GenerateStoreMetadata ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
      description: "Коллекция объектов ошибок схемы."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})
  id: GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Создает метаданные хранилища и возвращает все ошибки схемы."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError> GenerateStoreMetadata (System.Collections.Generic.IEnumerable<System.Data.Entity.Design.EntityStoreSchemaFilterEntry> filters);
    parameters:
    - id: filters
      type: System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry}
      description: "EntityStoreSchemaFilterEntry, которое указывает, какие объекты базы данных для включения или исключения во время создания."
    return:
      type: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
      description: "Коллекция объектов ошибок схемы."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)
  id: GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Создает язык определения схемы хранилища (SSDL) и возвращает все ошибки схемы."
  syntax:
    content: public System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError> GenerateStoreMetadata (System.Collections.Generic.IEnumerable<System.Data.Entity.Design.EntityStoreSchemaFilterEntry> filters, Version targetEntityFrameworkVersion);
    parameters:
    - id: filters
      type: System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry}
      description: "EntityStoreSchemaFilterEntry, которое указывает, какие объекты базы данных для включения или исключения во время создания."
    - id: targetEntityFrameworkVersion
      type: System.Version
      description: "Свойство EntityFrameworkVersions, соответствующий целевой версии платформы Entity Framework."
    return:
      type: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
      description: "Коллекция объектов ошибок схемы."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection
  id: StoreItemCollection
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: StoreItemCollection
  nameWithType: EntityStoreSchemaGenerator.StoreItemCollection
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Возвращает коллекцию StoreItemCollection, который был создан."
  syntax:
    content: public System.Data.Metadata.Edm.StoreItemCollection StoreItemCollection { get; }
    return:
      type: System.Data.Metadata.Edm.StoreItemCollection
      description: "Созданный <xref href=&quot;System.Data.Metadata.Edm.StoreItemCollection&quot;> </xref> объекта."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)
  id: WriteStoreSchema(System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: WriteStoreSchema(String)
  nameWithType: EntityStoreSchemaGenerator.WriteStoreSchema(String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Записывает созданный код на языке (SSDL) в файл."
  syntax:
    content: public void WriteStoreSchema (string outputFileName);
    parameters:
    - id: outputFileName
      type: System.String
      description: "Имя выходного файла."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)
  id: WriteStoreSchema(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  langs:
  - csharp
  name: WriteStoreSchema(XmlWriter)
  nameWithType: EntityStoreSchemaGenerator.WriteStoreSchema(XmlWriter)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(XmlWriter)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design
  summary: "Записывает созданный код на языке (SSDL) объекта XmlWriter."
  syntax:
    content: public void WriteStoreSchema (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "XmlWriter, в который записывается на языке SSDL."
  overload: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor(System.String,System.String,System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: EntityStoreSchemaGenerator(String,String,String)
  nameWithType: EntityStoreSchemaGenerator.EntityStoreSchemaGenerator(String,String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityStoreSchemaGenerator(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: CreateStoreSchemaConnection(String,String)
  nameWithType: EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String)
- uid: System.Data.EntityClient.EntityConnection
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(System.String,System.String,System.Version)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: CreateStoreSchemaConnection(String,String,Version)
  nameWithType: EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String,Version)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection(String,String,Version)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: EntityContainer
  nameWithType: EntityStoreSchemaGenerator.EntityContainer
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateForeignKeyProperties
  nameWithType: EntityStoreSchemaGenerator.GenerateForeignKeyProperties
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateStoreMetadata()
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata()
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata()
- uid: System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EdmSchemaError>
  nameWithType: IList<EdmSchemaError>
  fullName: System.Collections.Generic.IList<System.Data.Metadata.Edm.EdmSchemaError>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Data.Metadata.Edm.EdmSchemaError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmSchemaError
    name: EdmSchemaError
    nameWithType: EdmSchemaError
    fullName: EdmSchemaError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry})
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<EntityStoreSchemaFilterEntry>
  nameWithType: IEnumerable<EntityStoreSchemaFilterEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Entity.Design.EntityStoreSchemaFilterEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Entity.Design.EntityStoreSchemaFilterEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Entity.Design.EntityStoreSchemaFilterEntry
    name: EntityStoreSchemaFilterEntry
    nameWithType: EntityStoreSchemaFilterEntry
    fullName: EntityStoreSchemaFilterEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(System.Collections.Generic.IEnumerable{System.Data.Entity.Design.EntityStoreSchemaFilterEntry},System.Version)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata(IEnumerable<EntityStoreSchemaFilterEntry>,Version)
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: StoreItemCollection
  nameWithType: EntityStoreSchemaGenerator.StoreItemCollection
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection
- uid: System.Data.Metadata.Edm.StoreItemCollection
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: StoreItemCollection
  nameWithType: StoreItemCollection
  fullName: System.Data.Metadata.Edm.StoreItemCollection
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.String)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: WriteStoreSchema(String)
  nameWithType: EntityStoreSchemaGenerator.WriteStoreSchema(String)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(String)
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(System.Xml.XmlWriter)
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: WriteStoreSchema(XmlWriter)
  nameWithType: EntityStoreSchemaGenerator.WriteStoreSchema(XmlWriter)
  fullName: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.#ctor*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: EntityStoreSchemaGenerator
  nameWithType: EntityStoreSchemaGenerator.EntityStoreSchemaGenerator
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.CreateStoreSchemaConnection*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: CreateStoreSchemaConnection
  nameWithType: EntityStoreSchemaGenerator.CreateStoreSchemaConnection
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.EntityContainer*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: EntityContainer
  nameWithType: EntityStoreSchemaGenerator.EntityContainer
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateForeignKeyProperties*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateForeignKeyProperties
  nameWithType: EntityStoreSchemaGenerator.GenerateForeignKeyProperties
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.GenerateStoreMetadata*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: GenerateStoreMetadata
  nameWithType: EntityStoreSchemaGenerator.GenerateStoreMetadata
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.StoreItemCollection*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: StoreItemCollection
  nameWithType: EntityStoreSchemaGenerator.StoreItemCollection
- uid: System.Data.Entity.Design.EntityStoreSchemaGenerator.WriteStoreSchema*
  parent: System.Data.Entity.Design.EntityStoreSchemaGenerator
  isExternal: false
  name: WriteStoreSchema
  nameWithType: EntityStoreSchemaGenerator.WriteStoreSchema
