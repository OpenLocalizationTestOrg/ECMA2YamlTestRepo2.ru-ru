### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapAttributeAttribute
  id: SoapAttributeAttribute
  children:
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor
  - System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  - System.Xml.Serialization.SoapAttributeAttribute.DataType
  - System.Xml.Serialization.SoapAttributeAttribute.Namespace
  langs:
  - csharp
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute
  fullName: System.Xml.Serialization.SoapAttributeAttribute
  type: Class
  summary: "Указывает, что <xref:System.Xml.Serialization.XmlSerializer>должен сериализовать член класса как закодированный атрибут SOAP.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Класс SoapAttributeAttribute принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer>сериализует или десериализует объект как закодированный SOAP XML.</xref:System.Xml.Serialization.XmlSerializer> Получаемый код XML соответствует разделу 5 документа консорциума World Wide Web (www.w3.org), «Simple Object Access Protocol (SOAP) 1.1». Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие кодированной SOAP сериализацией](~/add/includes/ajax-current-ext-md.md).       Чтобы сериализовать объект как закодированное сообщение SOAP, необходимо создать <xref:System.Xml.Serialization.XmlSerializer>с помощью <xref:System.Xml.Serialization.XmlTypeMapping>создания с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>метода <xref:System.Xml.Serialization.SoapReflectionImporter>класса.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       Применить к открытому полю, чтобы указать, что SoapAttributeAttribute <xref:System.Xml.Serialization.XmlSerializer>сериализует поле как атрибут XML.</xref:System.Xml.Serialization.XmlSerializer> Можно указать альтернативное имя атрибута, задав <xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A>свойство.</xref:System.Xml.Serialization.SoapAttributeAttribute.AttributeName%2A> Задать <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>Если атрибут должен быть присвоен определенной схемы XML (XSD) тип данных языка определения.</xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> Если атрибут принадлежит к определенному пространству имен XML, задайте <xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>свойство.</xref:System.Xml.Serialization.SoapAttributeAttribute.Namespace%2A>       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)       >  [!NOTE] настроек можно использовать слово `SoapAttribute` в коде вместо более SoapAttributeAttribute."
  example:
  - "The following example serializes a class that contains several fields to which a SoapAttributeAttribute is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/t-system.xml.serializati_15_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_15_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/t-system.xml.serializati_15_1.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapAttributeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> класса."
  remarks: "Этот конструктор используется для создания <xref:System.Xml.Serialization.SoapAttributeAttribute>При переопределении сериализации члена класса.</xref:System.Xml.Serialization.SoapAttributeAttribute> Создание <xref:System.Xml.Serialization.SoapAttributeAttribute>, задать его свойства и задать этот объект для <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>свойство <xref:System.Xml.Serialization.SoapAttributes>объекта.</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> </xref:System.Xml.Serialization.SoapAttributeAttribute> Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example creates a new <xref:System.Xml.Serialization.SoapAttributeAttribute> that is used to override the serialization of a field. After creating a <xref:System.Xml.Serialization.SoapAttributeAttribute> and setting its properties, the object is set to the <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> property of a <xref:System.Xml.Serialization.SoapAttributes>. The <xref:System.Xml.Serialization.SoapAttributes> is then added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cpp[SoapAttributeAttributeEx2#1](~/add/codesnippet/cpp/m-system.xml.serializati_10_1.cpp)]\n [!code-vb[SoapAttributeAttributeEx2#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_10_1.vb)]\n [!code-cs[SoapAttributeAttributeEx2#1](~/add/codesnippet/csharp/m-system.xml.serializati_10_1.cs)]"
  syntax:
    content: public SoapAttributeAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> класса, используя указанное значение имени атрибута XML."
  remarks: ''
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/m-system.xml.serializati_2_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_2_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/m-system.xml.serializati_2_1.cpp)]"
  syntax:
    content: public SoapAttributeAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "Имя атрибута XML."
  overload: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  id: AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает имя атрибута XML, созданные <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Свойство AttributeName укажите имя атрибута XML, если нельзя использовать значение по умолчанию. Например если имя атрибута XML недопустимо в качестве идентификатора элемента, используйте допустимое имя для идентификатора при установке AttributeName недопустимое имя."
  example:
  - "The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The AttributeName property is set for the `Today` field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_0_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_0_1.cpp)]"
  syntax:
    content: public string AttributeName { get; set; }
    return:
      type: System.String
      description: "Имя атрибута XML. Значение по умолчанию — идентификатор элемента."
  overload: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает XML-схемы (XSD) тип данных языка определения атрибута SOAP, созданного объектом <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Ниже перечислены типы простых данных схемы XML с их эквивалентами.       XML-схемы `base64Binary` и `hexBinary` типов данных, используйте массив <xref:System.Byte>структуры и применения <xref:System.Xml.Serialization.SoapAttributeAttribute>с типом данных, равным «base64Binary» или «hexBinary», в соответствии с потребностями.</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.Byte> XML-схемы `time` и `date` типов данных используйте <xref:System.DateTime>Введите и применить <xref:System.Xml.Serialization.SoapAttributeAttribute>с типом данных «date» или «время».</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.DateTime>       Для каждого типа данных схемы XML, отраженного в строке, примените <xref:System.Xml.Serialization.SoapAttributeAttribute>для его свойства типа данных в тип данных схемы XML.</xref:System.Xml.Serialization.SoapAttributeAttribute> Обратите внимание, что это не изменяет формат сериализации, а только схему для члена.      Настроек [!NOTE] настроек свойство учитывает регистр, поэтому его необходимо задать ровно на один из типов данных схемы XML.      Настроек [!NOTE] настроек передача двоичных данных в виде элемента XML является более эффективным, передав его в качестве атрибута XML.       Дополнительные сведения о типах данных схемы XML см. в документе широкий консорциума World (www.w3.org) с именем «XML схема часть 2: типы данных».      | Тип данных XSD |. Тип данных .NET |   |-------------------|--------------------|   | anyURI | <xref:System.String>|   | base64Binary | Массив объектов, <xref:System.Byte>|   | Логическое | <xref:System.Boolean>|   | байтов | <xref:System.SByte>|   | Дата | <xref:System.DateTime>|   | dateTime | <xref:System.DateTime>|   | десятичное | <xref:System.Decimal>|   | двойные | <xref:System.Double>|   | СУЩНОСТИ | <xref:System.String>|   | СУЩНОСТИ | <xref:System.String>|   | float | <xref:System.Single>|   | gDay | <xref:System.String>|   | gMonth | <xref:System.String>|   | gMonthDay | <xref:System.String>|   | типа gYear | <xref:System.String>|   | gYearMonth | <xref:System.String>|   | hexBinary | Массив объектов, <xref:System.Byte>|   | ИДЕНТИФИКАТОР | <xref:System.String>|   | IDREF | <xref:System.String>|   | IDREFS | <xref:System.String>|   | int | <xref:System.Int32>|   | integer | <xref:System.String>|   | языка | <xref:System.String>|   | long | <xref:System.Int64>|   | Имя | <xref:System.String>|   | NCName | <xref:System.String>|   | negativeInteger | <xref:System.String>|   | NMTOKEN | <xref:System.String>|   | NMTOKENS | <xref:System.String>|   | normalizedString | <xref:System.String>|   | nonNegativeInteger | <xref:System.String>|   | Тип nonPositiveInteger | <xref:System.String>|   | НОТАЦИЯ | <xref:System.String>|   | positiveInteger | <xref:System.String>|   | QName | <xref:System.Xml.XmlQualifiedName>|   | Длительность | <xref:System.String>|   | Строка | <xref:System.String>|   | короткий | <xref:System.Int16>|   | время | <xref:System.DateTime>|   | маркера | <xref:System.String>|   | unsignedByte | <xref:System.Byte>|   | unsignedInt | <xref:System.UInt32>|   | unsignedLong | <xref:System.UInt64>|   | unsignedShort | <xref:System.UInt16>|</xref:System.UInt16></xref:System.UInt64></xref:System.UInt32></xref:System.Byte></xref:System.String></xref:System.DateTime></xref:System.Int16></xref:System.String></xref:System.String></xref:System.Xml.XmlQualifiedName></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Int64></xref:System.String></xref:System.String></xref:System.Int32></xref:System.String></xref:System.String></xref:System.String></xref:System.Byte></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Single></xref:System.String></xref:System.String></xref:System.Double></xref:System.Decimal></xref:System.DateTime></xref:System.DateTime></xref:System.SByte></xref:System.Boolean></xref:System.Byte></xref:System.String>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The DataType property is set for the `GroupNumber` and the `Today` fields.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_31_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_31_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_31_1.cpp)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: 'Тип данных схемы XML, как определено документом консорциума World Wide Web (www.w3.org) с именем «XML схема часть 2: типы данных».'
  overload: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Тип данных схемы XML, которые были выбраны, не может быть сопоставлен с типом данных .NET."
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает пространство имен XML атрибута XML."
  remarks: "<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>Свойства соответствует спецификации консорциума World Wide Web (www.w3.org) «Пространства имен XML».</xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>       Для создания пространств имен, связанных с префиксами, необходимо создать <xref:System.Xml.Serialization.XmlSerializerNamespaces>, содержащий пространства имен и префиксы, используемые в XML-документе.</xref:System.Xml.Serialization.XmlSerializerNamespaces> Пространство имен, задаваемое для каждого <xref:System.Xml.Serialization.XmlAttributeAttribute>должен полностью соответствовать одному из пространств имен в списке <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</xref:System.Xml.Serialization.XmlSerializerNamespaces> </xref:System.Xml.Serialization.XmlAttributeAttribute> Когда <xref:System.Xml.Serialization.XmlSerializer>создает XML-код должен иметь правильный префикс каждое имя атрибута.</xref:System.Xml.Serialization.XmlSerializer>"
  example:
  - "The following example serializes a class that contains several fields to which a <xref:System.Xml.Serialization.SoapAttributeAttribute> is applied. The Namespace property is set for the `GroupName` the field.  \n  \n [!code-cs[SoapAttribute#1](~/add/codesnippet/csharp/p-system.xml.serializati_28_1.cs)]\n [!code-vb[SoapAttribute#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_28_1.vb)]\n [!code-cpp[SoapAttribute#1](~/add/codesnippet/cpp/p-system.xml.serializati_28_1.cpp)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Пространство имен XML атрибута XML."
  overload: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute()
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute()
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute()
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute(String)
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute(String)
  fullName: System.Xml.Serialization.SoapAttributeAttribute.SoapAttributeAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
  fullName: System.Xml.Serialization.SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
  fullName: System.Xml.Serialization.SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
  fullName: System.Xml.Serialization.SoapAttributeAttribute.Namespace
- uid: System.Xml.Serialization.SoapAttributeAttribute.#ctor*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute.SoapAttributeAttribute
- uid: System.Xml.Serialization.SoapAttributeAttribute.AttributeName*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: AttributeName
  nameWithType: SoapAttributeAttribute.AttributeName
- uid: System.Xml.Serialization.SoapAttributeAttribute.DataType*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapAttributeAttribute.DataType
- uid: System.Xml.Serialization.SoapAttributeAttribute.Namespace*
  parent: System.Xml.Serialization.SoapAttributeAttribute
  isExternal: false
  name: Namespace
  nameWithType: SoapAttributeAttribute.Namespace
