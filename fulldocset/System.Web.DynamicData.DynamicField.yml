### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "Представляет поле данных, отображаемых в элементе управления с привязкой к данным, использующем функции динамических данных ASP.NET."
  remarks: "В этом разделе:- [Введение](#introduction)      -   [декларативный синтаксис](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## DynamicField введение класс используется элементами управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView>и <xref:System.Web.UI.WebControls.DetailsView>элементы управления, чтобы отобразить значение поля, которое использует функции динамических данных ASP.NET в настраиваемые страницы.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             Класс DynamicField предоставляет функциональные возможности напоминает <xref:System.Web.UI.WebControls.BoundField>класса.</xref:System.Web.UI.WebControls.BoundField> Тем не менее, поскольку объект DynamicField используется в приложениях платформы динамических данных, вы сможете использовать следующие возможности динамических данных: - автоматически отрисовки элемента управления для поля с помощью шаблонов полей на основе типа данных. Шаблоны полей можно глобально изменять для всего приложения.      -Предоставление встроенная проверка данных на основе схемы базы данных. Можно также добавлять типы проверки, настроив модели данных.      -Настройка отрисовки данных для отдельных полей с помощью атрибутов в модели данных или с помощью <xref:System.Web.DynamicData.DynamicField.UIHint%2A>свойство.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       Объект DynamicField отрисовывает каждого поля с использованием `DynamicControl` элемента управления. Чтобы указать поле данных для отображения в объекте DynamicField, задайте <xref:System.Web.DynamicData.DynamicField.DataField%2A>Свойства имени поля.</xref:System.Web.DynamicData.DynamicField.DataField%2A> Пользовательской строки форматирования можно применить к значению поля, задав <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>свойство.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> По умолчанию строка форматирования применяется к значениям полей только в том случае, если элемент управления с привязкой к данным находится в режиме только для чтения. Чтобы применить строка форматирования к значениям, отображаемым во время управления с привязкой к данным находится в режиме редактирования, установите <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>Свойства `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> Если значение поля — `null`, можно отобразить пользовательский заголовок, задав <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>свойство.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> Объект DynamicField можно также автоматически преобразовать пустую строку (&quot;») поля, задав значения со значениями null <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>Свойства `true`.</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>      <a name=&quot;declarative_syntax&quot;></a>## Декларативного синтаксиса```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.DynamicData.DynamicField&quot;></xref> class."
  remarks: "Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.DynamicData.DynamicField>класса.</xref:System.Web.DynamicData.DynamicField> Этот конструктор обычно используется при добавлении полей в динамически созданный элемент управления с привязкой к данным.       Для динамического добавления <xref:System.Web.DynamicData.DynamicField>объекта к элементу управления с привязкой к данным, создайте новый <xref:System.Web.DynamicData.DynamicField>, задать его свойства и затем добавить его в коллекцию полей элемента управления с привязкой к данным.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> Например, если вы используете <xref:System.Web.UI.WebControls.GridView>управления, добавьте <xref:System.Web.DynamicData.DynamicField>объект <xref:System.Web.UI.WebControls.GridView.Columns%2A>коллекции.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.GridView>      Настроек [!NOTE] настроек несмотря на то, что может динамически добавлять поля в элемент управления с привязкой к данным, настоятельно рекомендуется, поля статически объявлен и затем отображать и скрывать, соответствующим образом. Статическое объявление всех полей уменьшает размер состояния представления для родительского элемента управления с привязкой к данным."
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает значение, указывающее ли отформатированную строку, которая определяется <xref:System.Web.DynamicData.DynamicField.DataFormatString*>свойство применяется к значение поля, когда поле данных находится в режиме редактирования.</xref:System.Web.DynamicData.DynamicField.DataFormatString*>"
  remarks: "Элементы управления с привязкой к данным (такие как <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.GridView>) имеют различных режимов отображения, позволяющие пользователям читать, изменять или вставлять записи.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> По умолчанию строка форматирования, определенные <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>свойство применяется к значениям полей только в том случае, когда элемент управления с привязкой к данным находится в режиме только для чтения.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Чтобы применить строка форматирования к значениям, отображаемым во время управления с привязкой к данным находится в режиме редактирования, свойству ApplyFormatInEditMode `true`.      Настроек [!NOTE] настроек A <xref:System.Web.DynamicData.DynamicField>объект не удаляется автоматически форматирование, когда в источнике данных обновляется поле.</xref:System.Web.DynamicData.DynamicField> Если не требуется форматирование как часть значения, хранящегося, необходимо снять программно."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> применяется форматирование в режиме редактирования; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> объекта этим <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> с которой связан объект."
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Столбец метаданных."
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Предоставляет механизм для изменения <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> объект, который был создан с <xref:System.Web.DynamicData.DynamicField.InitializeCell*>метод.</xref:System.Web.DynamicData.DynamicField.InitializeCell*>"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "Элемент управления для изменения."
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает значение, указывающее, является ли пустые строковые значения (&quot;»), автоматически преобразуются в значения null, когда в источнике данных обновляется поле данных."
  remarks: "Иногда пользователь может ввести пустую строку в качестве значения поля при обновлении или вставке записей. Свойство ConvertEmptyStringToNull определяет, является ли пустое строковое значение автоматически преобразовываться в значение null, когда в источнике данных обновляется поле данных.       По умолчанию <xref:System.Web.DynamicData.DynamicField>объект отображает значения null как пустые строки.</xref:System.Web.DynamicData.DynamicField> Чтобы отобразить другое значение, задайте <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>свойство.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>      Настроек [!NOTE] настроек <xref:System.Web.UI.WebControls.Parameter>управления объект источника данных, родительский элемент управления <xref:System.Web.DynamicData.DynamicField>привязывается к также имеет свойство с именем <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.Parameter> Это свойство выполняет ту же функцию. Убедитесь, что правильно заданы оба свойства."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы пустые строковые значения автоматически преобразуются в значения null; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Копирует свойства текущего <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объект в указанный <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> объекта."
  remarks: "Метод CopyProperties — это вспомогательный метод. Он используется <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>метод, чтобы скопировать все свойства текущего <xref:System.Web.DynamicData.DynamicField>объект <xref:System.Web.DynamicData.DynamicField>объект, передаваемый в `newField` параметр.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Для копирования свойств, текущего <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> для."
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Предоставляет механизм для классов, производных от <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> переопределить как <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> создан объект."
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "Новый динамический элемент управления."
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Создает и возвращает новый экземпляр <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> класса."
  remarks: "Метод CreateField — это вспомогательный метод. Он используется <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>метод для создания пустого <xref:System.Web.DynamicData.DynamicField>объекта.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Новый экземпляр <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> класса."
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает имя поля данных для привязки <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объект."
  remarks: "Свойство DataField определяет поля данных для привязки к <xref:System.Web.DynamicData.DynamicField>объекта.</xref:System.Web.DynamicData.DynamicField> Поле данных может быть имя столбца или, для столбцов внешнего ключа, имя связи.       По умолчанию, заданного поля данных отображаются по <xref:System.Web.DynamicData.DynamicField>с помощью шаблона поля, связанный с типом данных поля.</xref:System.Web.DynamicData.DynamicField> Можно изменить шаблон поля, отображаемый для поля данных, задав <xref:System.Web.DynamicData.DynamicField.UIHint%2A>свойство.</xref:System.Web.DynamicData.DynamicField.UIHint%2A> Также можно форматировать текст, задав <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>свойство.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Если значение поля является `null`, пустая строка (&quot;») отображается для значения по умолчанию. Чтобы указать альтернативного заголовка, задайте <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>свойство.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>       **Примечание** Если вы хотите изменить глобально отображение и поведение поля данных, необходимо применить атрибуты к модели данных, а не задавать их в определенном экземпляре класса <xref:System.Web.DynamicData.DynamicField>объекта.</xref:System.Web.DynamicData.DynamicField> Дополнительные сведения см. в разделе [динамических данных ASP.NET](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Метод вызывается для вызова события изменения состояния, когда задано свойство DataField.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Значение имеет свойство DataField хранится в состоянии представления."
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Имя данных поля, <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объект привязан к."
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает строку, определяющую формат отображения значения поля данных."
  remarks: "Свойство DataFormatString определяет пользовательский формат отображения чисел, отображаемых в <xref:System.Web.DynamicData.DynamicField>объекта.</xref:System.Web.DynamicData.DynamicField> Если свойство DataFormatString не задано, значение поля отображается без форматирования.       По умолчанию строка форматирования применяется к значениям полей только в том случае, если элемент управления с привязкой к данным, содержащий <xref:System.Web.DynamicData.DynamicField>объект находится в режиме только для чтения.</xref:System.Web.DynamicData.DynamicField> Чтобы применить строка форматирования к значениям полей в режиме редактирования, установите <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>Свойства `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>       Укажите, используя свойство DataFormatString формат отображения для данного экземпляра <xref:System.Web.DynamicData.DynamicField>класса.</xref:System.Web.DynamicData.DynamicField> Также можно изменить формат отображения для поля данных по всему приложению, применив <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>в модели данных и присвоив <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>именованный параметр в конструкторе.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Дополнительные сведения см. в разделе [динамических данных ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Строка форматирования, определяющая формат отображения значения поля данных. Значение по умолчанию — пустая строка (&quot;»), указывающая на неприменение к значению специального форматирования."
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Извлекает значение поля данных из текущей ячейки таблицы и добавляет значение в указанный словарь."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Словарь, который будет содержать значения ячеек."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Ячейку, содержащую текст или элементы управления <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Одно из значений перечисления, указывающее состояние строки."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить значения только для чтения поля в `dictionary`; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Извлекает значение указанного атрибута."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "Ключ извлекаемого атрибута."
    return:
      type: System.String
      description: "Значение атрибута."
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает текст, отображаемый в заголовке элементов управления с привязкой к данным, который содержит <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
  remarks: "Свойство HeaderText для идентификации понятное имя поля в элементе управления с привязкой к данным. Наиболее частым применением свойство HeaderText — предоставить имена столбцов может применяться к полям в <xref:System.Web.UI.WebControls.GridView>или <xref:System.Web.UI.WebControls.DetailsView>управления.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       По умолчанию свойство HeaderText использует отображаемое имя задать для поля данных с помощью <xref:System.ComponentModel.DisplayNameAttribute>атрибут.</xref:System.ComponentModel.DisplayNameAttribute> Если отображаемое имя не задано, свойство HeaderText использует значение <xref:System.Web.DynamicData.DynamicField.DataField%2A>Свойства.</xref:System.Web.DynamicData.DynamicField.DataField%2A>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "Текст, отображаемый в заголовке элементов управления с привязкой к данным, который содержит <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> Объект находится внутри элемента управления с привязкой к данным, который не привязан к элементу управления источником данных, который реализует <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> интерфейса."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает значение, указывающее, является ли значения полей данных HTML-кодированную перед их отображением в <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
  remarks: "Свойство HtmlEncode определять, доступно ли поле значения HTML-кодированную для их соответствующих строковые представления перед их отображением.      Настроек [!NOTE] настроек значения полей HTML-кодирование позволяют предотвратить отображение атак с использованием межсайтовых сценариев и вредоносного содержимого. Это свойство должна быть включена, когда это возможно. Дополнительные сведения см. в разделе [Обзор эксплойты скриптов](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поле значения HTML-кодированную перед их отображением; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Добавляет текст или элементы управления для заданной ячейки."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Объект, содержащий текст и элементы управления <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Одно из значений перечисления, которое задает функцию `cell` объекта."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Одно из значений перечисления, указывающее состояние строки."
    - id: rowIndex
      type: System.Int32
      description: "Индекс строки, `cell` которой содержится объект."
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает заголовок, отображаемый для поля данных, когда оно имеет значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Иногда значение поля хранится как допускающий значения null в источнике данных. Можно указать пользовательский заголовок, отображаемый для поля данных, имеющих значение null, присвоив свойству NullDisplayText. Если это свойство не задано, полей со значением null значения отображаются как пустые строки (»»)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Заголовок, отображаемый для поля данных, когда оно имеет значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — пустая строка (&quot;»), указывающая, что это свойство не задано."
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает состояние динамического поля только для чтения."
  remarks: "Если свойство ReadOnly `true`, <xref:System.Web.DynamicData.DynamicField>элемент управления загружает шаблон только для чтения.</xref:System.Web.DynamicData.DynamicField> Для этого свойства требуется включить состояние просмотра."
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "Состояние динамического поля только для чтения."
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Задает атрибут, связанный с <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> объекта."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "Имя атрибута."
    - id: value
      type: System.String
      description: "Значение атрибута."
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает выражение сортировки, используемый, когда поле данных используется для сортировки источника данных."
  remarks: "Пытается использовать значение свойства SortExpression <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>свойство объекта столбца, с которым связан <xref:System.Web.DynamicData.DynamicField>, задавая <xref:System.Web.DynamicData.DynamicField.DataField%2A>свойство.</xref:System.Web.DynamicData.DynamicField.DataField%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Метод вызывается для вызова события изменения состояния, когда задано свойство SortExpression.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Значение SortExpression свойство хранится в состоянии представления."
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "Выражение сортировки, используемый, когда поле данных используется для сортировки источника данных."
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> Объект находится внутри элемента управления с привязкой к данным, который не привязан к элементу управления источником данных, который реализует <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> интерфейса."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает шаблон поля, используемый для отображения поля данных."
  remarks: "Свойство UIHint для указания шаблона поля, используемый для отображения пользовательского интерфейса для поля данных. Шаблоны полей по умолчанию являются пользовательскими элементами управления и их имена содержат суффикс, идентифицирующий шаблоны полей, которые используются для операций редактирования и операций вставки. Суффиксы: _измените и _вставлять, соответственно. При установке значения свойства UIHint задания имени без суффикса. Платформа динамических данных идентифицирует текущий режим поля данных и сделает верного шаблона поля.       Если UIHint свойство не задано, динамических данных по умолчанию отрисовка шаблона поля, в зависимости от типа поля. Дополнительные сведения см. в разделе [формирование шаблонов динамических данных ASP.NET](~/add/includes/ajax-current-ext-md.md).       Шаблон поля, укажите с помощью свойства UIHint для данного экземпляра <xref:System.Web.DynamicData.DynamicField>класса.</xref:System.Web.DynamicData.DynamicField> Можно также изменить шаблон поля, используемая поля данных во всем приложении путем применения <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>к модели данных.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Задание свойства UIHint переопределяет метаданные, применяемые к модели данных. Дополнительные сведения об использовании атрибутов метаданных см. в разделе [динамических данных ASP.NET](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Метод вызывается для вызова события изменения состояния, когда задано свойство UIHint.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Значение UIHint, оно хранится в состоянии представления."
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "Имя шаблона поля, используемого для отображения поля данных."
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает или задает значение, указывающее, является ли элемент управления проверяет входные данные от клиента."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент управления проверяет входные данные клиента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Возвращает <xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>объекта этим <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> с которой связан объект.</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Имя группы проверки, к которой принадлежит элемент управления проверки. Значение по умолчанию — пустая строка (&quot;»), указывающая, что это свойство не задано."
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
