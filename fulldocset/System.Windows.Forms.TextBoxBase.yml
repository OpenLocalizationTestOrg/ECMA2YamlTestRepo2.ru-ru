### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TextBoxBase
  id: TextBoxBase
  children:
  - System.Windows.Forms.TextBoxBase.AcceptsTab
  - System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  - System.Windows.Forms.TextBoxBase.AppendText(System.String)
  - System.Windows.Forms.TextBoxBase.AutoSize
  - System.Windows.Forms.TextBoxBase.AutoSizeChanged
  - System.Windows.Forms.TextBoxBase.BackColor
  - System.Windows.Forms.TextBoxBase.BackgroundImage
  - System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  - System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  - System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  - System.Windows.Forms.TextBoxBase.BorderStyle
  - System.Windows.Forms.TextBoxBase.BorderStyleChanged
  - System.Windows.Forms.TextBoxBase.CanEnableIme
  - System.Windows.Forms.TextBoxBase.CanUndo
  - System.Windows.Forms.TextBoxBase.Clear
  - System.Windows.Forms.TextBoxBase.ClearUndo
  - System.Windows.Forms.TextBoxBase.Click
  - System.Windows.Forms.TextBoxBase.Copy
  - System.Windows.Forms.TextBoxBase.CreateHandle
  - System.Windows.Forms.TextBoxBase.CreateParams
  - System.Windows.Forms.TextBoxBase.Cut
  - System.Windows.Forms.TextBoxBase.DefaultCursor
  - System.Windows.Forms.TextBoxBase.DefaultSize
  - System.Windows.Forms.TextBoxBase.DeselectAll
  - System.Windows.Forms.TextBoxBase.DoubleBuffered
  - System.Windows.Forms.TextBoxBase.ForeColor
  - System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  - System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  - System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  - System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  - System.Windows.Forms.TextBoxBase.HideSelection
  - System.Windows.Forms.TextBoxBase.HideSelectionChanged
  - System.Windows.Forms.TextBoxBase.ImeModeBase
  - System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.Lines
  - System.Windows.Forms.TextBoxBase.MaxLength
  - System.Windows.Forms.TextBoxBase.Modified
  - System.Windows.Forms.TextBoxBase.ModifiedChanged
  - System.Windows.Forms.TextBoxBase.MouseClick
  - System.Windows.Forms.TextBoxBase.Multiline
  - System.Windows.Forms.TextBoxBase.MultilineChanged
  - System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.TextBoxBase.Padding
  - System.Windows.Forms.TextBoxBase.PaddingChanged
  - System.Windows.Forms.TextBoxBase.Paint
  - System.Windows.Forms.TextBoxBase.Paste
  - System.Windows.Forms.TextBoxBase.PreferredHeight
  - System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.TextBoxBase.ReadOnly
  - System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  - System.Windows.Forms.TextBoxBase.ScrollToCaret
  - System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  - System.Windows.Forms.TextBoxBase.SelectAll
  - System.Windows.Forms.TextBoxBase.SelectedText
  - System.Windows.Forms.TextBoxBase.SelectionLength
  - System.Windows.Forms.TextBoxBase.SelectionStart
  - System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  - System.Windows.Forms.TextBoxBase.Text
  - System.Windows.Forms.TextBoxBase.TextLength
  - System.Windows.Forms.TextBoxBase.ToString
  - System.Windows.Forms.TextBoxBase.Undo
  - System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.TextBoxBase.WordWrap
  langs:
  - csharp
  name: TextBoxBase
  nameWithType: TextBoxBase
  fullName: System.Windows.Forms.TextBoxBase
  type: Class
  summary: "Реализует основные функциональные возможности текстовых элементов управления."
  remarks: "Этот класс реализует основные функции обработки текстовых элементов управления, например <xref:System.Windows.Forms.TextBox>и <xref:System.Windows.Forms.RichTextBox>.</xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.TextBox> К ним относятся выделение текста **буфер обмена** функциональные возможности поддержки многострочного текстового элемента управления и многие события."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/t-system.windows.forms.t_46_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/t-system.windows.forms.t_46_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("Text")]

      [System.ComponentModel.DefaultEvent("TextChanged")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TextBoxBase : System.Windows.Forms.Control
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnResize(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab
  id: AcceptsTab
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTab
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли нажатие клавиши TAB в типы элементов управления многострочного текстового поля символ табуляции в элементе управления, вместо перемещения фокуса к следующему элементу управления в последовательности табуляции."
  remarks: "<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>Свойство также должно быть `true` для получения символ табуляции в элементе управления.</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>       Если имеет значение свойства AcceptsTab `true`, пользователь должен нажать сочетание клавиш CTRL + TAB для перемещения фокуса к следующему элементу управления в последовательности табуляции."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the AcceptsTab, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_72_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_72_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_72_1.vb)]"
  syntax:
    content: public bool AcceptsTab { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователи вводится знак табуляции в многострочное текстовое поле с помощью клавиши TAB; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> при нажатии клавиши TAB фокус перемещается. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.AcceptsTab*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  id: AcceptsTabChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AcceptsTabChanged
  nameWithType: TextBoxBase.AcceptsTabChanged
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.AcceptsTab*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.AcceptsTab*>"
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AcceptsTabChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the AcceptsTabChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#241](~/add/codesnippet/csharp/e-system.windows.forms.t_105_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#241](~/add/codesnippet/visualbasic/e-system.windows.forms.t_105_1.vb)]"
  syntax:
    content: public event EventHandler AcceptsTabChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: TextBoxBase.AppendText(String)
  fullName: System.Windows.Forms.TextBoxBase.AppendText(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет текст в текущий текст текстового поля."
  remarks: "Этот метод можно использовать для добавления текста к существующему тексту в элементе управления, а не с помощью оператора объединения (+) для присоединения текста для <xref:System.Windows.Forms.TextBoxBase.Text%2A>свойство.</xref:System.Windows.Forms.TextBoxBase.Text%2A>"
  example:
  - "The following code example demonstrates how to use the AppendText method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n [!code-cpp[TextBoxBase.AppendText#1](~/add/codesnippet/cpp/m-system.windows.forms.t_63_1.cpp)]\n [!code-cs[TextBoxBase.AppendText#1](~/add/codesnippet/csharp/m-system.windows.forms.t_63_1.cs)]\n [!code-vb[TextBoxBase.AppendText#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_63_1.vb)]"
  syntax:
    content: public void AppendText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Текст для добавления к текущее содержимое текстового поля."
  overload: System.Windows.Forms.TextBoxBase.AppendText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
  fullName: System.Windows.Forms.TextBoxBase.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, настраивается ли автоматически высота элемента управления при изменении шрифта, назначенного элементу управления."
  remarks: "Если выбрать значение свойства AutoSize `true` для <xref:System.Windows.Forms.TextBox>, когда <xref:System.Windows.Forms.Control.Font%2A>изменения, <xref:System.Windows.Forms.TextBox>позволяет раскрыть или свернуть <xref:System.Windows.Forms.Control.Height%2A>для размещения текста больше или меньше.</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Control.Font%2A> </xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.Control.Width%2A>Из <xref:System.Windows.Forms.TextBox>не изменяется.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Control.Width%2A>       Если вы хотите изменить размер элемента управления при нажатии пользователем текст, можно использовать <xref:System.Windows.Forms.RichTextBox>управлять и использовать его <xref:System.Windows.Forms.RichTextBox.ContentsResized>событие, чтобы изменить его размер.</xref:System.Windows.Forms.RichTextBox.ContentsResized> </xref:System.Windows.Forms.RichTextBox>"
  example:
  - "This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons. The example demonstrates the AutoSize property by setting it to `true` for one text box and `false` for the other. When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text. The text box that has AutoSize set to `true` expands in height to accommodate the larger text. The width does not change.  \n  \n [!code-cs[SystemWindowsFormsAutoSize#1](~/add/codesnippet/csharp/AutoSizeCS/Form1.cs#1)]\n [!code-vb[SystemWindowsFormsAutoSize#1](~/add/codesnippet/visualbasic/AutoSize/Form1.vb#1)]"
  syntax:
    content: public override bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если высота элемента управления автоматически изменяется при изменении шрифта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: TextBoxBase.AutoSizeChanged
  fullName: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Данное событие не применимо к этому классу."
  remarks: "Данное событие не применимо к этому классу."
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackColor
  id: BackColor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackColor
  nameWithType: TextBoxBase.BackColor
  fullName: System.Windows.Forms.TextBoxBase.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает цвет фона элемента управления."
  remarks: "Чтобы изменить цвет фона текстового элемента управления для использования в формах цветовую схему, можно использовать свойства BackColor.       Чтобы изменить цвет текста в элементе управления, используйте <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>свойство.</xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> При задании свойства BackColor текстового элемента управления, удостовериться, что цвет, выбранный текст исчезновения элемента управления. Например если цвет фона и <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>заданы оба свойства `Color.Black`, не будут видны текст в элементе управления textbox.</xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>       Это свойство может быть за ridden if <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>свойство <xref:System.Windows.Forms.TextBoxBase>имеет значение `true`.</xref:System.Windows.Forms.TextBoxBase> </xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>"
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> , представляющий фона элемента управления."
  overload: System.Windows.Forms.TextBoxBase.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Данное свойство не применимо к этому классу."
  remarks: "Данное свойство не применимо к этому классу."
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "Фоновое изображение для объекта."
  overload: System.Windows.Forms.TextBoxBase.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: TextBoxBase.BackgroundImageChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.BackgroundImage*>изменения свойств.</xref:System.Windows.Forms.TextBoxBase.BackgroundImage*> Данное событие не применимо к этому классу."
  remarks: "Данное событие не применимо к этому классу."
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Данное свойство не применимо к этому классу."
  remarks: "Данное свойство не применимо к этому классу."
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "Один из <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref> значения."
  overload: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: TextBoxBase.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.BackgroundImageLayout*>изменения свойств.</xref:System.Windows.Forms.TextBoxBase.BackgroundImageLayout*> Данное событие не применимо к этому классу."
  remarks: "Данное событие не применимо к этому классу."
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
  fullName: System.Windows.Forms.TextBoxBase.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает тип границы элемента управления текстового поля."
  remarks: "Создание элементов управления не имеет границ и плоский стиль, кроме трехмерного элемента управления по умолчанию, можно использовать свойства BorderStyle.      Настроек [!NOTE] настроек производного класса <xref:System.Windows.Forms.RichTextBox>, не поддерживает `BorderStyle.FixedSingle` стиль.</xref:System.Windows.Forms.RichTextBox> Этот стиль вызовет <xref:System.Windows.Forms.BorderStyle>для использования `BorderStyle.Fixed3D` стиль.</xref:System.Windows.Forms.BorderStyle>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border. This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and BorderStyle have been assigned to the control.  \n  \n [!code-cs[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_71_1.cs)]\n [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_71_1.cpp)]\n [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_71_1.vb)]"
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "Объект <xref href=&quot;System.Windows.Forms.BorderStyle&quot;> </xref> , представляющий тип границы элемента управления текстового поля. Значение по умолчанию — <xref uid=&quot;langword_csharp_Fixed3D&quot; name=&quot;Fixed3D&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Значение, которое не входит в диапазон допустимых значений для перечисления было назначено свойству."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  id: BorderStyleChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: BorderStyleChanged
  nameWithType: TextBoxBase.BorderStyleChanged
  fullName: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.BorderStyle*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.BorderStyle*>"
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the BorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#242](~/add/codesnippet/csharp/e-system.windows.forms.t_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#242](~/add/codesnippet/visualbasic/e-system.windows.forms.t_10_1.vb)]"
  syntax:
    content: public event EventHandler BorderStyleChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme
  id: CanEnableIme
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
  fullName: System.Windows.Forms.TextBoxBase.CanEnableIme
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли <xref:System.Windows.Forms.Control.ImeMode*>свойство можно задать активное значение для включения поддержки IME.</xref:System.Windows.Forms.Control.ImeMode*>"
  syntax:
    content: protected override bool CanEnableIme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если <xref:System.Windows.Forms.TextBoxBase.ReadOnly*>свойство <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> или если этот <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref> класс настроен на использование пароля маска знаком; в противном случае — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.TextBoxBase.ReadOnly*>"
  overload: System.Windows.Forms.TextBoxBase.CanEnableIme*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CanUndo
  id: CanUndo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
  fullName: System.Windows.Forms.TextBoxBase.CanUndo
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, может ли пользователь отменить предыдущую операцию в элемент управления текстовым полем."
  remarks: "Если этот метод возвращает `true`, можно вызвать <xref:System.Windows.Forms.TextBoxBase.Undo%2A>метод, чтобы отменить последнюю операцию в текстовом поле.</xref:System.Windows.Forms.TextBoxBase.Undo%2A> Можно использовать этот метод в <xref:System.Windows.Forms.MenuItem.Popup>событие <xref:System.Windows.Forms.MenuItem>, или в коде, который управляет состоянием кнопок на <xref:System.Windows.Forms.ToolBar>Чтобы включить или отключить возможность отменить предыдущую операцию в текстовом поле.</xref:System.Windows.Forms.ToolBar> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MenuItem.Popup>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_153_1.cs)]\n [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_153_1.cpp)]\n [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_153_1.vb)]"
  syntax:
    content: public bool CanUndo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь отменить предыдущую операцию, выполненную в элемент управления текстовым полем; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.CanUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Clear
  id: Clear
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Clear()
  nameWithType: TextBoxBase.Clear()
  fullName: System.Windows.Forms.TextBoxBase.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет весь текст из элемента управления текстового поля."
  remarks: "Этот метод можно использовать для очистки содержимого элемента управления, а не назначайте <xref:System.Windows.Forms.TextBoxBase.Text%2A>свойство пустая строка.</xref:System.Windows.Forms.TextBoxBase.Text%2A>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event. The code within the event handler restricts data to numbers. After text has been entered in the control, the code determines if the text entered is a number. If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted. The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method. This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.  \n  \n [!code-cpp[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_57_1.cpp)]\n [!code-vb[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_57_1.vb)]\n [!code-cs[Classic TextBoxBase.Clear Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_57_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ClearUndo
  id: ClearUndo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ClearUndo()
  nameWithType: TextBoxBase.ClearUndo()
  fullName: System.Windows.Forms.TextBoxBase.ClearUndo()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет сведения о последней операции из буфера отмены текстового поля."
  remarks: "Этот метод можно использовать для предотвращения повторения операции отмены на основе состояния приложения."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_62_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_62_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_62_1.cpp)]"
  syntax:
    content: public void ClearUndo ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.ClearUndo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Click
  id: Click
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Click
  nameWithType: TextBoxBase.Click
  fullName: System.Windows.Forms.TextBoxBase.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит по щелчку текстового поля."
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates how to handle the Click event. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1. This example requires that the event-handling method has been associated with the Click event.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/csharp/e-system.windows.forms.t_46_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/cpp/e-system.windows.forms.t_46_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/add/codesnippet/visualbasic/e-system.windows.forms.t_46_1.vb)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Copy
  id: Copy
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Copy()
  nameWithType: TextBoxBase.Copy()
  fullName: System.Windows.Forms.TextBoxBase.Copy()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Копирует текущее выделение в текстовом поле для **буфер обмена**."
  remarks: "Этот метод можно использовать вместо использования <xref:System.Windows.Forms.Clipboard>класса, чтобы скопировать текст в текстовом поле и поместите его в **буфер обмена**.</xref:System.Windows.Forms.Clipboard>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_0_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_0_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_0_1.cpp)]"
  syntax:
    content: public void Copy ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: TextBoxBase.CreateHandle()
  fullName: System.Windows.Forms.TextBoxBase.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает дескриптор для элемента управления."
  syntax:
    content: protected override void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.CreateHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
  fullName: System.Windows.Forms.TextBoxBase.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает параметры, необходимые для создания дескриптора элемента управления."
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "Объект <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> , содержащий необходимые параметры процедуры создания дескриптора элемента управления."
  overload: System.Windows.Forms.TextBoxBase.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Cut
  id: Cut
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Cut()
  nameWithType: TextBoxBase.Cut()
  fullName: System.Windows.Forms.TextBoxBase.Cut()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Перемещает текущее выделение в текстовом поле для **буфер обмена**."
  remarks: "Этот метод будет только вырезание текста из текстового поля, если выделенный текст в элементе управления. Этот метод можно использовать вместо использования <xref:System.Windows.Forms.Clipboard>класса, чтобы скопировать текст в текстовом поле и переместить его на **буфер обмена**.</xref:System.Windows.Forms.Clipboard>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_47_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_47_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_47_1.cpp)]"
  syntax:
    content: public void Cut ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Cut*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor
  id: DefaultCursor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
  fullName: System.Windows.Forms.TextBoxBase.DefaultCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает курсор по умолчанию для элемента управления."
  remarks: "Переопределите DefaultCursor Настройка курсор по умолчанию для элемента управления. Это более эффективно, чем задание курсора в конструкторе элемента управления и предоставляет автоматическую поддержку конструктора некоторых функций, относящихся к курсору."
  syntax:
    content: protected override System.Windows.Forms.Cursor DefaultCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "Объект типа <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> представляющий текущий курсор по умолчанию."
  overload: System.Windows.Forms.TextBoxBase.DefaultCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
  fullName: System.Windows.Forms.TextBoxBase.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает размер по умолчанию элемента управления."
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "Значение по умолчанию <xref href=&quot;System.Drawing.Size&quot;> </xref> элемента управления."
  overload: System.Windows.Forms.TextBoxBase.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DeselectAll
  id: DeselectAll
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DeselectAll()
  nameWithType: TextBoxBase.DeselectAll()
  fullName: System.Windows.Forms.TextBoxBase.DeselectAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Указывает, что значение <xref:System.Windows.Forms.TextBoxBase.SelectionLength*>свойство имеет значение&0;, чтобы никакие символы выбраны в элементе управления.</xref:System.Windows.Forms.TextBoxBase.SelectionLength*>"
  syntax:
    content: public void DeselectAll ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.DeselectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered
  id: DoubleBuffered
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
  fullName: System.Windows.Forms.TextBoxBase.DoubleBuffered
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, выполняется ли прорисовка в буфере перед отображением элемента управления. Данное свойство не применимо к этому классу."
  remarks: "Данное свойство не применимо к этому классу."
  syntax:
    content: protected override bool DoubleBuffered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для реализации двойной буферизации для элемента управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.DoubleBuffered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
  fullName: System.Windows.Forms.TextBoxBase.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает цвет переднего плана элемента управления."
  remarks: "Чтобы изменить цвет текста в элементе управления для поиска совпадения в тексте других элементов управления в форме можно использовать свойства ForeColor. Кроме того, это свойство можно использовать для выделения текстового поля, которое содержит недопустимое значение.       Чтобы изменить цвет фона элемента управления, используйте <xref:System.Windows.Forms.TextBoxBase.BackColor%2A>свойство.</xref:System.Windows.Forms.TextBoxBase.BackColor%2A> При задании свойства ForeColor текстового элемента управления, удостовериться, что цвет, выбранный текст исчезновения элемента управления. Например если цвет переднего плана и <xref:System.Windows.Forms.TextBoxBase.BackColor%2A>заданы оба свойства `Color.Black`, не будут видны текст в элементе управления textbox.</xref:System.Windows.Forms.TextBoxBase.BackColor%2A>       Это свойство может быть за ridden if <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>свойство <xref:System.Windows.Forms.TextBoxBase>имеет значение `true`.</xref:System.Windows.Forms.TextBoxBase> </xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> , представляющий цвет переднего плана элемента управления."
  overload: System.Windows.Forms.TextBoxBase.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  id: GetCharFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetCharFromPosition(Point)
  nameWithType: TextBoxBase.GetCharFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharFromPosition(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает символ, ближайший к указанному местоположению в элементе управления."
  remarks: "Если расположение указано в `pt` параметр находится за пределами клиентской области элемента управления, первый символ строки, ближайшей к точке, указанной в `pt` возвращается. Этот метод можно использовать, чтобы определить, какие символы расположены рядом на конкретную точку в элементе управления. Затем это значение можно использовать для выполнения операций с текстом в этом местоположении.      Настроек [!NOTE] настроек при указанном месте в `pt` параметр находится в правой части клиентской области элемента управления, последним символом строки, ближайшей к точке, указанной в `pt` возвращается."
  syntax:
    content: public virtual char GetCharFromPosition (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Расположение, из которого осуществляется поиск ближайшего символа."
    return:
      type: System.Char
      description: "Символ в указанном месте."
  overload: System.Windows.Forms.TextBoxBase.GetCharFromPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  id: GetCharIndexFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetCharIndexFromPosition(Point)
  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс ближайшего к указанному местоположению символа."
  remarks: "Этот метод возвращает индекс символа, ближайший к позиции, указанной в `pt` параметра. Индекс знака является отсчитываемый от нуля индекс текста в элементе управления, включая пробелы. Этот метод можно использовать для определения, где в тексте имеет пользователь мыши посредством передачи координат мыши этот метод. Это может быть полезно использовать для выполнения задач, когда пользователь наводит указатель мыши на слово в тексте элемента управления.      Настроек [!IMPORTANT] настроек Если указанное расположение не является в клиентском прямоугольнике элемента управления, или после последнего символа в элементе управления, возвращает значение индекса последнего символа."
  syntax:
    content: public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Местоположение для поиска."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в указанном месте."
  overload: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  id: GetFirstCharIndexFromLine(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetFirstCharIndexFromLine(Int32)
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс первого символа заданной строки."
  remarks: "Нумерацию строк в текстовом поле начинается с нуля. Если `lineNumber` параметр больше, чем в последней строке текстового поля, GetFirstCharIndexFromLine возвращает -1.       GetFirstCharIndexFromLine возвращает индекс первого символа физической строки. Физическая строка — это отображаемая строка, а не назначенная строка. Количество отображаемых строк может быть больше количества назначенных строк из-за переноса слов. Например, если назначить два длинные строки для <xref:System.Windows.Forms.RichTextBox>и задание <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>и <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>для `true`, две строки долго назначенного привести четыре физических (или отображаемых строк).</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> </xref:System.Windows.Forms.TextBoxBase.Multiline%2A> </xref:System.Windows.Forms.RichTextBox>"
  syntax:
    content: public int GetFirstCharIndexFromLine (int lineNumber);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "Строка, для которой возвращается индекс ее первого символа."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого символа в указанной строке."
  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение <code> lineNumber </code> меньше нуля."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  id: GetFirstCharIndexOfCurrentLine
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetFirstCharIndexOfCurrentLine()
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс первого символа текущей строки."
  syntax:
    content: public int GetFirstCharIndexOfCurrentLine ();
    parameters: []
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в текущей строке."
  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  id: GetLineFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetLineFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает номер строки в указанную позицию символа в тексте элемента управления."
  remarks: "Этот метод позволяет определить номер строки на основе индекса символа, указанного в `index` параметра метода. Первая строка текста в элементе управления, возвращается нулевое значение. Метод GetLineFromCharIndex возвращает номер физической, где индексированных символ находится в элементе управления. Например если часть первой логической строки в элементе управления текст переносится на следующую строку, метод GetLineFromCharIndex возвращает 1, если символ в символ с указанным индексом перешел на вторую строку физический. Если <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>имеет значение `false`, нет часть строки переходит на следующую и метод возвращает значение 0 для указанному индексу символа.</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Этот метод позволяет определить строку, в котором определенный индекс находится в пределах. Например, после вызова метода <xref:System.Windows.Forms.RichTextBox.Find%2A>метод для поиска текста, можно получить индекс знака, в котором находятся результаты поиска.</xref:System.Windows.Forms.RichTextBox.Find%2A> Этот метод можно вызывать с индекс символа, возвращенных <xref:System.Windows.Forms.RichTextBox.Find%2A>найден метод, чтобы определить строку слово.</xref:System.Windows.Forms.RichTextBox.Find%2A>      Настроек [!NOTE] настроек, если указанный индекс символа в `index` параметра превышает допустимое число строк, содержащихся в элементе управления, возвращается номер последней строки."
  syntax:
    content: public virtual int GetLineFromCharIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Позиция индекса символа для поиска."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля номер строки, в которой индекс символа."
  overload: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  id: GetPositionFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: GetPositionFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вычисляет положение в элементе управления по указанному индексу символа."
  remarks: "Этот метод позволяет определить, где находится определенный индекс символа в элементе управления. Этот метод можно использовать для таких задач, как отображение контекстное меню элементов или справочных сведений для слова элемента управления. Например, если требуется отображать меню параметров для пользователя, когда пользователь щелкает правой кнопкой мыши слово в элементе управления, можно использовать этот метод для определения позиции word для правильного отображения <xref:System.Windows.Forms.ContextMenu>управления.</xref:System.Windows.Forms.ContextMenu>"
  syntax:
    content: public virtual System.Drawing.Point GetPositionFromCharIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс символа, для которого требуется извлечь расположение."
    return:
      type: System.Drawing.Point
      description: "Расположение указанного символа в клиентском прямоугольнике элемента управления."
  overload: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.HideSelection
  id: HideSelection
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
  fullName: System.Windows.Forms.TextBoxBase.HideSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, остается ли выделенный текст в текстовом поле выделенным, при потере фокуса элементом управления."
  remarks: "Это свойство можно использовать для сохранения текста выделенным в элемент управления текстовым полем в другую форму или диалоговое окно имеет фокус, например диалоговое окно средства проверки орфографии."
  example:
  - "The following code example demonstrates how to use the HideSelection property. To run the example, paste the following code in a form. Call the `InitializeTextBox` method in the form's constructor or `Load` method.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/csharp/p-system.windows.forms.t_76_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/cpp/p-system.windows.forms.t_76_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/add/codesnippet/visualbasic/p-system.windows.forms.t_76_1.vb)]"
  syntax:
    content: public bool HideSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выделенный текст не подсвечивается, когда элемент управления текстовым полем фокус; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, если выделенный текст остается выделенным, когда фокус элемента управления текстового поля. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.HideSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  id: HideSelectionChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: HideSelectionChanged
  nameWithType: TextBoxBase.HideSelectionChanged
  fullName: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.HideSelection*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.HideSelection*>"
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HideSelectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the HideSelectionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#245](~/add/codesnippet/csharp/e-system.windows.forms.t_114_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#245](~/add/codesnippet/visualbasic/e-system.windows.forms.t_114_1.vb)]"
  syntax:
    content: public event EventHandler HideSelectionChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase
  id: ImeModeBase
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
  fullName: System.Windows.Forms.TextBoxBase.ImeModeBase
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает режим редактора метода ввода (IME) элемента управления."
  syntax:
    content: protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "Режим IME элемента управления."
  overload: System.Windows.Forms.TextBoxBase.ImeModeBase*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  id: IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: IsInputKey(Keys)
  nameWithType: TextBoxBase.IsInputKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.IsInputKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, является ли заданная клавиша клавишей ввода или специальной клавишей, нуждающейся в предварительной обработке."
  remarks: "Метод IsInputKey возвращает `true` при `keyData` включает параметр <xref:System.Windows.Forms.Keys>значение и <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>свойство `true`.</xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> </xref:System.Windows.Forms.Keys> Возвращает IsInputKey `false` Если `keyData` содержит оба <xref:System.Windows.Forms.Keys>и <xref:System.Windows.Forms.Keys>.</xref:System.Windows.Forms.Keys> </xref:System.Windows.Forms.Keys>"
  syntax:
    content: protected override bool IsInputKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Одно из значений клавиш."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанная клавиша является клавишей ввода; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.IsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Lines
  id: Lines
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Lines
  nameWithType: TextBoxBase.Lines
  fullName: System.Windows.Forms.TextBoxBase.Lines
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает строки текста в текстовом поле."
  remarks: "Каждый элемент массива становится строки текста в элементе текстового поля. Если <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>элемента управления текстовым полем свойству `true` и символа новой строки отображается в тексте, символ новой строки следующий текст добавляется новый элемент в массиве и отображается на отдельной строке.</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>      Настроек [!NOTE] настроек по умолчанию коллекцию линий является только для чтения копию строки в <xref:System.Windows.Forms.TextBox>.</xref:System.Windows.Forms.TextBox> Чтобы получить коллекции, допускающее запись строк, используйте код, аналогичный приведенному ниже:`textBox1.Lines = new string[] { &quot;abcd&quot; };`"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName> method. This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.  \n  \n [!code-cs[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_111_1.cs)]\n [!code-vb[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_111_1.vb)]\n [!code-cpp[Classic TextBoxBase.Lines Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_111_1.cpp)]"
  syntax:
    content: public string[] Lines { get; set; }
    return:
      type: System.String[]
      description: "Массив строк, содержащий текст в текстовом поле."
  overload: System.Windows.Forms.TextBoxBase.Lines*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MaxLength
  id: MaxLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
  fullName: System.Windows.Forms.TextBoxBase.MaxLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает максимальное число символов, можно вводить или вставлять в текстовое поле."
  remarks: "Это свойство можно использовать для ограничения длины текста, введенного в элементе управления для значений, как почтовые индексы и номера телефона, или для ограничения длины текста, введенного в случаях, когда должна вводиться в базе данных. Можно ограничить текста, введенного в элемент управления в максимальную длину в соответствующее поле в базе данных.      Настроек [!NOTE] настроек в коде, можно задать значение <xref:System.Windows.Forms.TextBoxBase.Text%2A>свойство в значение, которое имеет длину больше, чем значение, указанное в свойстве MaxLength.</xref:System.Windows.Forms.TextBoxBase.Text%2A> Это свойство влияет только на текст, введенный в элемент управления во время выполнения."
  example:
  - "The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password. This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the MaxLength property to restrict the password length to eight characters. This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_14_1.cs)]\n [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_14_1.cpp)]\n [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_14_1.vb)]"
  syntax:
    content: public virtual int MaxLength { get; set; }
    return:
      type: System.Int32
      description: "Число символов, которые могут быть введены в элемент управления. Значение по умолчанию — 32767."
  overload: System.Windows.Forms.TextBoxBase.MaxLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение свойства меньше 0."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Modified
  id: Modified
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Modified
  nameWithType: TextBoxBase.Modified
  fullName: System.Windows.Forms.TextBoxBase.Modified
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, что элемент управления текстовым полем был изменен пользователем с момента был создан элемент управления или последнего ввода его содержимого."
  remarks: "Это свойство можно использовать для определения, если пользователь изменил содержимое элемента управления текстового поля. Это свойство можно также задать в коде, чтобы указать, что изменения были сделаны приложением для управления текстовым полем. Это свойство может использоваться, проверки и сохранения данных для определения, если были внесены изменения в элемент управления текстовым полем, можно проверить или сохранить измененное содержимое.       При изменении <xref:System.Windows.Forms.TextBoxBase.Text%2A>свойство программным образом, свойства Modified перейдет к поиску `false`.</xref:System.Windows.Forms.TextBoxBase.Text%2A> Это не вызывает <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>событий.</xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data. The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed. If the contents have changed, the Modified property is set to `true`. Otherwise, it is reset to `false`. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cpp[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_45_1.cpp)]\n [!code-cs[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_45_1.cs)]\n [!code-vb[Classic TextBoxBase.Modified Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_45_1.vb)]"
  syntax:
    content: public bool Modified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если содержимое элемента управления было изменено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.Modified*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged
  id: ModifiedChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ModifiedChanged
  nameWithType: TextBoxBase.ModifiedChanged
  fullName: System.Windows.Forms.TextBoxBase.ModifiedChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.Modified*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.Modified*>"
  remarks: "При изменении <xref:System.Windows.Forms.TextBoxBase.Text%2A>свойство программными средствами, <xref:System.Windows.Forms.TextBoxBase.Modified%2A>свойство возвращается к `false`.</xref:System.Windows.Forms.TextBoxBase.Modified%2A> </xref:System.Windows.Forms.TextBoxBase.Text%2A> Это не вызывает события ModifiedChanged.       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ModifiedChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the ModifiedChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#246](~/add/codesnippet/csharp/e-system.windows.forms.t_141_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#246](~/add/codesnippet/visualbasic/e-system.windows.forms.t_141_1.vb)]"
  syntax:
    content: public event EventHandler ModifiedChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MouseClick
  nameWithType: TextBoxBase.MouseClick
  fullName: System.Windows.Forms.TextBoxBase.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит при щелчке мышью элемента управления."
  remarks: "<xref:System.Windows.Forms.RichTextBox>Управления не вызывает <xref:System.Windows.Forms.TextBoxBase.Click>событий для правой кнопкой мышки.</xref:System.Windows.Forms.TextBoxBase.Click> </xref:System.Windows.Forms.RichTextBox> MouseClick-событие предоставляет функционально эквивалентны.       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the MouseClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#244](~/add/codesnippet/csharp/e-system.windows.forms.t_39_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#244](~/add/codesnippet/visualbasic/e-system.windows.forms.t_39_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Multiline
  id: Multiline
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Multiline
  nameWithType: TextBoxBase.Multiline
  fullName: System.Windows.Forms.TextBoxBase.Multiline
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли элемент управления многострочного текстового поля."
  remarks: "Многострочное текстовое поле позволяет отображать более одной строки текста в элементе управления. Если <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>свойству `true`, текста, введенного в многострочном текстовом окне переносится на следующую строку в элементе управления.</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Если <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>свойству `false`, текста, введенного в многострочное текстовое поле будет отображаться в той же строке, пока не будет введен знак новой строки.</xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>       Как символы новой строки можно использовать следующее:- <xref:System.Environment.NewLine%2A?displayProperty=fullName>- ControlChars.CrLf - vbCrLf (только Visual Basic), можно добавить в текст с помощью полосы прокрутки <xref:System.Windows.Forms.TextBox.ScrollBars%2A>свойство для отображения полос прокрутки по горизонтали или вертикали.</xref:System.Windows.Forms.TextBox.ScrollBars%2A> </xref:System.Environment.NewLine%2A?displayProperty=fullName> Это позволяет пользователю просматривать текст, который выходит за пределы элемента управления.      Настроек [!NOTE] настроек так как значение по умолчанию свойства Multiline `false`, <xref:System.Windows.Forms.TextBox>будут в соответствии с размером шрифта, даже при изменении размера <xref:System.Windows.Forms.TextBox>.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.TextBox> размер по умолчанию Для получения согласованных размер для вашей <xref:System.Windows.Forms.TextBox>, задайте его <xref:System.Windows.Forms.TextBox.Multiline%2A>Свойства `true`.</xref:System.Windows.Forms.TextBox.Multiline%2A> </xref:System.Windows.Forms.TextBox>      Настроек [!NOTE] настроек японский операционных системах, если свойство Multiline равно `true`, параметр <xref:System.Windows.Forms.TextBox.PasswordChar%2A>свойство будет отображать текст пароля, поэтому нарушения безопасности системы.</xref:System.Windows.Forms.TextBox.PasswordChar%2A> Таким образом, в японском языке операционных системах, значение свойства Multiline `false` при установке <xref:System.Windows.Forms.TextBox.PasswordChar%2A>свойство.</xref:System.Windows.Forms.TextBox.PasswordChar%2A>      Настроек [!NOTE] настроек это свойство имеет значение `false` по умолчанию для всех производных классов, за исключением элемента <xref:System.Windows.Forms.RichTextBox>управления.</xref:System.Windows.Forms.RichTextBox>       Для <xref:System.Windows.Forms.RichTextBox>элемента управления, <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>свойство влияет ли будет автоматически изменяться размеры элемента управления, как показано ниже: - Если <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>имеет значение `true` и <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>равно `true`, <xref:System.Windows.Forms.RichTextBox>размер не будет автоматически.</xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> </xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> </xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> </xref:System.Windows.Forms.RichTextBox>      -Если <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>имеет значение `true` и <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName>равно `false`, <xref:System.Windows.Forms.RichTextBox>будут автоматически изменены.</xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> </xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_170_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_170_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_170_1.vb)]"
  syntax:
    content: public virtual bool Multiline { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент управления многострочного текстового поля; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.Multiline*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.MultilineChanged
  id: MultilineChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: MultilineChanged
  nameWithType: TextBoxBase.MultilineChanged
  fullName: System.Windows.Forms.TextBoxBase.MultilineChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.Multiline*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.Multiline*>"
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MultilineChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the MultilineChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#247](~/add/codesnippet/csharp/e-system.windows.forms.t_111_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#247](~/add/codesnippet/visualbasic/e-system.windows.forms.t_111_1.vb)]"
  syntax:
    content: public event EventHandler MultilineChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  id: OnAcceptsTabChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnAcceptsTabChanged(EventArgs)
  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.TextBoxBase.AcceptsTabChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnAcceptsTabChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnAcceptsTabChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  id: OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.TextBoxBase.BorderStyleChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnBorderStyleChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: TextBoxBase.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> событий."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;> </xref> событий."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;> </xref> событий."
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  id: OnHideSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnHideSelectionChanged(EventArgs)
  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Повышение <xref href=&quot;System.Windows.Forms.TextBoxBase.HideSelectionChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnHideSelectionChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnHideSelectionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  id: OnModifiedChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnModifiedChanged(EventArgs)
  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnModifiedChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.TextBoxBase.ModifiedChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnModifiedChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnModifiedChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnModifiedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnMouseUp(MouseEventArgs)
  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMouseUp(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;> </xref> событий."
  syntax:
    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);
    parameters:
    - id: mevent
      type: System.Windows.Forms.MouseEventArgs
      description: "Данные события."
  overload: System.Windows.Forms.TextBoxBase.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  id: OnMultilineChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnMultilineChanged(EventArgs)
  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMultilineChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.TextBoxBase.MultilineChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnMultilineChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnMultilineChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnMultilineChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  id: OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnPaddingChanged(EventArgs)
  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnPaddingChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Этот метод не применим к этому классу."
  remarks: "Этот метод не применим к этому классу."
  syntax:
    content: protected override void OnPaddingChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnPaddingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  id: OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.TextBoxBase.ReadOnlyChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnReadOnlyChanged также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnReadOnlyChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: TextBoxBase.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вызывает <xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;> </xref> событий."
  syntax:
    content: protected override void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Windows.Forms.TextBoxBase.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Padding
  id: Padding
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Padding
  nameWithType: TextBoxBase.Padding
  fullName: System.Windows.Forms.TextBoxBase.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Данное свойство не применимо к этому классу."
  remarks: "Данное свойство не применимо к этому классу."
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.TextBoxBase.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: TextBoxBase.PaddingChanged
  fullName: System.Windows.Forms.TextBoxBase.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Данное событие не применимо к этому классу."
  remarks: "Данное событие не применимо к этому классу."
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Paint
  id: Paint
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Paint
  nameWithType: TextBoxBase.Paint
  fullName: System.Windows.Forms.TextBoxBase.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит при перерисовке элемента управления. Данное событие не применимо к этому классу."
  remarks: "Данное событие не применимо к этому классу."
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Paste
  id: Paste
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Paste()
  nameWithType: TextBoxBase.Paste()
  fullName: System.Windows.Forms.TextBoxBase.Paste()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Заменяет текущее выделение в текстовом поле содержимым **буфер обмена**."
  remarks: "Метод вставки только вставка текста в элементе управления, если текст хранится в настоящее время в **буфер обмена**."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_52_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_52_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_52_1.cpp)]"
  syntax:
    content: public void Paste ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Paste*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
  fullName: System.Windows.Forms.TextBoxBase.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает предпочтительную высоту текстового поля."
  remarks: "Размер, возвращаемый этим свойством определяется начертание шрифта высоту и границы текстового поля. Это свойство можно использовать для определения подходящего размера текстового поля, чтобы убедиться, что текст отображается правильно в элементе управления. Значение, возвращаемое этим свойством находится в пикселях.       Значение PreferredHeight представляет минимальную высоту текстового поля необходимы для отображения одной строки текста без обрезки текст в верхний или нижний. Это значение является одинаковым ли <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>свойству `true` или `false`.</xref:System.Windows.Forms.TextBoxBase.Multiline%2A>"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "Предпочтительная высота текстового поля."
  overload: System.Windows.Forms.TextBoxBase.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: TextBoxBase.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Обрабатывает клавишу для команд."
  syntax:
    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "Объект <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, передаваемый по ссылке, который представляет сообщение окна для обработки."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Один из <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> значения, которые представляет сочетание клавиш для обработки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если командная клавиша была обработана элементом управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: TextBoxBase.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Обрабатывает клавишу диалогового окна."
  syntax:
    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Один из <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> значения, представляющее обрабатываемую клавишу."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если клавиша была обработана элементом управления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ReadOnly
  id: ReadOnly
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
  fullName: System.Windows.Forms.TextBoxBase.ReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, является ли текст в текстовом поле доступно только для чтения."
  remarks: "Если значение этого свойства `true`, содержимое элемента управления не может изменяться пользователем во время выполнения. Это свойство равным `true`, по-прежнему можно задать значение <xref:System.Windows.Forms.TextBoxBase.Text%2A>Свойства в коде.</xref:System.Windows.Forms.TextBoxBase.Text%2A> Эту функцию можно использовать вместо отключения элемента управления с <xref:System.Windows.Forms.Control.Enabled%2A>свойство, чтобы можно было копировать содержимое и отображать всплывающие подсказки.</xref:System.Windows.Forms.Control.Enabled%2A>"
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текстовое поле только для чтения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  id: ReadOnlyChanged
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ReadOnlyChanged
  nameWithType: TextBoxBase.ReadOnlyChanged
  fullName: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Происходит, когда значение <xref:System.Windows.Forms.TextBoxBase.ReadOnly*>измененное свойство.</xref:System.Windows.Forms.TextBoxBase.ReadOnly*>"
  remarks: 'Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ReadOnlyChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the ReadOnlyChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#248](~/add/codesnippet/csharp/e-system.windows.forms.t_93_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#248](~/add/codesnippet/visualbasic/e-system.windows.forms.t_93_1.vb)]"
  syntax:
    content: public event EventHandler ReadOnlyChanged;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret
  id: ScrollToCaret
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ScrollToCaret()
  nameWithType: TextBoxBase.ScrollToCaret()
  fullName: System.Windows.Forms.TextBoxBase.ScrollToCaret()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Прокручивает содержимое элемента управления до текущей позиции курсора."
  remarks: "Этот метод позволяет прокручивать содержимое элемента управления, пока курсор находится в видимой области элемента управления. Если курсор находится ниже видимой области элемента управления, метод ScrollToCaret прокручивает содержимое элемента управления, пока курсор не появится в нижней части элемента управления. Если курсор находится выше видимой области элемента управления, этот метод прокручивает содержимое элемента управления, пока курсор не появится в верхней части элемента управления. Чтобы убедиться, что текущей точки ввода текста в видимой области элемента управления, можно использовать этот метод в многострочном текстовом окне.      Настроек [!NOTE] настроек этот метод не оказывает влияния, если элемент управления имеет фокус, или если курсор уже находится в видимой области элемента управления."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the ScrollToCaret method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`. This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.  \n  \n [!code-cs[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/csharp/m-system.windows.forms.t_50_1.cs)]\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/cpp/m-system.windows.forms.t_50_1.cpp)]\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_50_1.vb)]"
  syntax:
    content: public void ScrollToCaret ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.ScrollToCaret*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  id: Select(System.Int32,System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Select(Int32,Int32)
  nameWithType: TextBoxBase.Select(Int32,Int32)
  fullName: System.Windows.Forms.TextBoxBase.Select(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Выбирает диапазон текста в текстовом поле."
  remarks: "Если вы хотите задать начальное положение для первого символа в тексте элемента управления, установите `start` в значение 0. Этот метод можно использовать для выбора подстроки текста, например, при поиске по тексту элемента управления и замене данных.      Настроек [!NOTE] настроек можно программно переместить курсор в текстовом поле, задав `start` позицию в текстовом поле, где требуется курсора переместите и установите параметр `length` параметр в значение нуль (0). Текстовое поле должен иметь фокус в порядке для перемещения курсора.      Настроек [!NOTE] настроек Если этот метод вызывается без параметров, используется альтернативный метод. Это альтернативный метод наследуется от <xref:System.Windows.Forms.Control>класса.</xref:System.Windows.Forms.Control> При вызове, он устанавливает фокус ввода на элементе управления и выбирает содержимое элемента управления. Дополнительные сведения см. в разделе <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName>метод.</xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word \"fox\". If found, the code selects the word in the control using the Select method. This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence \"The quick brown fox jumps over the lazy dog.\"  \n  \n [!code-vb[Classic TextBoxBase.Select Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_54_1.vb)]\n [!code-cpp[Classic TextBoxBase.Select Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_54_1.cpp)]\n [!code-cs[Classic TextBoxBase.Select Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_54_1.cs)]"
  syntax:
    content: public void Select (int start, int length);
    parameters:
    - id: start
      type: System.Int32
      description: "Позиция первого символа в текущем выделении текста в текстовом поле."
    - id: length
      type: System.Int32
      description: "Количество выделяемых знаков."
  overload: System.Windows.Forms.TextBoxBase.Select*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение <code> start </code> меньше нуля."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectAll
  id: SelectAll
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectAll()
  nameWithType: TextBoxBase.SelectAll()
  fullName: System.Windows.Forms.TextBoxBase.SelectAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Выделяет весь текст в текстовом поле."
  remarks: "Этот метод позволяет выделить весь текст в элементе управления. Этот метод можно использовать в сочетании с <xref:System.Windows.Forms.TextBoxBase.Cut%2A>метод, который требуется текст должен быть выделен в элементе управления, скопируйте все содержимое элемента управления и вставьте их в **буфер обмена**.</xref:System.Windows.Forms.TextBoxBase.Cut%2A>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control. If no text is selected, a call is made to the SelectAll method before copying the contents of the control to the **Clipboard**. This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.  \n  \n [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_37_1.cpp)]\n [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_37_1.vb)]\n [!code-cs[Classic TextBoxBase.SelectAll Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_37_1.cs)]"
  syntax:
    content: public void SelectAll ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.SelectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectedText
  id: SelectedText
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
  fullName: System.Windows.Forms.TextBoxBase.SelectedText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее текущий выбранный текст в элементе управления."
  remarks: "Текст можно назначить этому свойству можно изменять текст, выбранный в данный момент в текстовом поле. Если выделенного текста в текстовом поле, это свойство возвращает строку нулевой длины."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_21_1.cpp)]\n [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_21_1.vb)]\n [!code-cs[Classic TextBoxBase.SelectedText Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_21_1.cs)]"
  syntax:
    content: public virtual string SelectedText { get; set; }
    return:
      type: System.String
      description: "Строка, представляющая текущий выделенный текст в текстовом поле."
  overload: System.Windows.Forms.TextBoxBase.SelectedText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectionLength
  id: SelectionLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
  fullName: System.Windows.Forms.TextBoxBase.SelectionLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает число символов, выделенных в текстовом поле."
  remarks: "Это свойство можно использовать для определения, если все символы выбранных в данный момент в элементе текстового поля перед выполнением операций над выделенным текстом. Если значение свойства SelectionLength присвоено значение, которое больше, чем количество символов в тексте элемента управления, на всю длину текста в элементе управления минус значение присвоено значение свойства SelectionLength <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>Свойства (Если указано любое значение для <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>свойство).</xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> </xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>      Настроек [!NOTE] настроек можно программно переместить курсор в текстовом поле, задав <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>в позицию в текстовом поле, где требуется курсор, чтобы переместить и присвоено свойству SelectionLength значение нуль (0).</xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> Текстовое поле должен иметь фокус в порядке для перемещения курсора."
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_216_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_216_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_216_1.cpp)]"
  syntax:
    content: public virtual int SelectionLength { get; set; }
    return:
      type: System.Int32
      description: "Число символов, выделенных в текстовом поле."
  overload: System.Windows.Forms.TextBoxBase.SelectionLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Присвоенное значение меньше нуля."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SelectionStart
  id: SelectionStart
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
  fullName: System.Windows.Forms.TextBoxBase.SelectionStart
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает начальную точку текста, выделенного в текстовом поле."
  remarks: "Если никакой текст не выбран в элементе управления, это свойство указывает курсор или курсор для нового текста. Если это свойство устанавливается в расположение за пределами длины текста в элементе управления, позиция начала выбора будет помещен после последнего символа. При выделении текста в элементе текстового поля, изменение этого свойства может уменьшить значение <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>Свойства.</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Если оставшийся текст в элементе управления после позиции, указанной в свойстве SelectionStart меньше, чем значение <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>Свойства, значение <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>Свойства автоматически уменьшается.</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> </xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Значение свойства SelectionStart никогда не приводит к увеличению в <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>свойство.</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>       Можно программно переместить выделение в текстовом поле, задав SelectionStart и <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>Свойства.</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>       Можно программно переместить курсор в текстовом поле, задав SelectionStart позицию в текстовом поле, где требуется курсора переместите и установите <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>значение ноль (0).</xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>       <xref:System.Windows.Forms.TextBox>Должен иметь фокус в порядке для выбранного или курсор перемещаемого.</xref:System.Windows.Forms.TextBox> Можно установить свойство SelectionStart <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>, указав его <xref:System.Windows.Forms.Control.Focus%2A>первого.</xref:System.Windows.Forms.Control.Focus%2A> </xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> </xref:System.Windows.Forms.TextBox>"
  example:
  - "**Example 1**  \n  \n The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_70_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_70_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_70_1.cpp)]  \n  \n **Example 2**  \n  \n The following example sets the SelectionStart property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.  \n  \n [!code-vb[SystemWindowsFormsTextBoxBase#1](~/add/codesnippet/visualbasic/SelectionStart/Form1.vb#1)]\n [!code-cs[SystemWindowsFormsTextBoxBase#1](~/add/codesnippet/csharp/SelectionStartCS/Form1.cs#1)]"
  syntax:
    content: public int SelectionStart { get; set; }
    return:
      type: System.Int32
      description: "Начальная позиция текста, выбранного в текстовом поле."
  overload: System.Windows.Forms.TextBoxBase.SelectionStart*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Присвоенное значение меньше нуля."
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Задает указанные границы <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref> управления."
  remarks: "<xref:System.Windows.Forms.TextBoxBase>Управления использует <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>свойство, чтобы задать границы, если <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>свойство `true` и <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>свойство `false`.</xref:System.Windows.Forms.TextBoxBase.Multiline%2A> </xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> </xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> </xref:System.Windows.Forms.TextBoxBase>       Как правило, параметры, соответствующие границам, не включенным в `specified` передаются со своими текущими значениями. Например <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, или <xref:System.Drawing.Point.X%2A>или <xref:System.Drawing.Point.Y%2A>Свойства <xref:System.Windows.Forms.Control.Location%2A>свойство может быть передан с помощью ссылки на текущий экземпляр элемента управления.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> Однако все передаваемые значения учитывается и применяется к элементу управления.       `specified` Элементов, элементов управления представляет параметр <xref:System.Windows.Forms.Control.Bounds%2A>измененные приложением.</xref:System.Windows.Forms.Control.Bounds%2A> Например, если изменить <xref:System.Windows.Forms.Control.Size%2A>элемента управления, `specified` значение параметра `Size` значение <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Size%2A> Однако если <xref:System.Windows.Forms.Control.Size%2A>изменяется в ответ на <xref:System.Windows.Forms.Control.Dock%2A>Свойства, `specified` значение параметра `None` значение <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>"
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "Новый <xref:System.Windows.Forms.Control.Left*>значение свойства элемента управления.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "Новый <xref:System.Windows.Forms.Control.Top*>значение свойства элемента управления.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "Новый <xref:System.Windows.Forms.Control.Width*>значение свойства элемента управления.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "Не используется."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "Побитовое сочетание <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> значения."
  overload: System.Windows.Forms.TextBoxBase.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  id: ShortcutsEnabled
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
  fullName: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает значение, указывающее, включены ли определенные сочетания клавиш."
  remarks: "Свойство ShortcutsEnabled позволяет включить или отключить следующие сочетания клавиш и контекстное меню элемента управления: - CTRL + Z - сочетание клавиш CTRL + E — CTRL + C - сочетание клавиш CTRL + Y - CTRL + X - CTRL + BACKSPACE - сочетание клавиш CTRL + V - CTRL + DELETE - CTRL + A - SHIFT + DELETE — CTRL + L - SHIFT + INSERT - CTRL + R можно переопределить это свойство для указания других сочетаний клавиш."
  syntax:
    content: public virtual bool ShortcutsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы включить сочетания клавиш; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Text
  id: Text
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Text
  nameWithType: TextBoxBase.Text
  fullName: System.Windows.Forms.TextBoxBase.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает текущий текст в текстовом поле."
  remarks: "Чтобы просмотреть несколько строк текста в текстовом поле, установите <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>Свойства `true`.</xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Для чтения или текст элемента многострочное текстовое поле, используйте <xref:System.Windows.Forms.TextBoxBase.Lines%2A>свойство.</xref:System.Windows.Forms.TextBoxBase.Lines%2A> Объем текста, введенного в <xref:System.Windows.Forms.RichTextBox>управления ограничивается только объемом доступной системной памяти.</xref:System.Windows.Forms.RichTextBox>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_187_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_187_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_187_1.vb)]"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "Текст, отображаемый в элементе управления."
  overload: System.Windows.Forms.TextBoxBase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.TextLength
  id: TextLength
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: TextLength
  nameWithType: TextBoxBase.TextLength
  fullName: System.Windows.Forms.TextBoxBase.TextLength
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает длину текста в элементе управления."
  remarks: "Это свойство можно использовать для определения числа знаков в строке для задач, таких как поиск определенных строк в тексте элемента управления, которых необходимо знание общее число символов."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the TextLength property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n [!code-cpp[TextBoxBase.AppendText#1](~/add/codesnippet/cpp/p-system.windows.forms.t_275_1.cpp)]\n [!code-cs[TextBoxBase.AppendText#1](~/add/codesnippet/csharp/p-system.windows.forms.t_275_1.cs)]\n [!code-vb[TextBoxBase.AppendText#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_275_1.vb)]"
  syntax:
    content: public virtual int TextLength { get; }
    return:
      type: System.Int32
      description: "Число символов, содержащихся в тексте элемента управления."
  overload: System.Windows.Forms.TextBoxBase.TextLength*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.ToString
  id: ToString
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: ToString()
  nameWithType: TextBoxBase.ToString()
  fullName: System.Windows.Forms.TextBoxBase.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает строку, представляющую <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref> управления."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, представляющая текущий <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref>. Строка содержит тип и <xref href=&quot;System.Windows.Forms.TextBoxBase&quot;> </xref> свойству элемента управления."
  overload: System.Windows.Forms.TextBoxBase.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.Undo
  id: Undo
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: Undo()
  nameWithType: TextBoxBase.Undo()
  fullName: System.Windows.Forms.TextBoxBase.Undo()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Отменяет последнюю операцию редактирования в текстовом поле."
  remarks: "Этот метод отменяет последнего **буфер обмена** или операцию, выполненную в элементе текстового поля, если изменения текста <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>возвращает `true`.</xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>      Настроек [!NOTE] настроек отменить метод не работает с <xref:System.Windows.Forms.Control.KeyPress>или <xref:System.Windows.Forms.Control.TextChanged>события.</xref:System.Windows.Forms.Control.TextChanged> </xref:System.Windows.Forms.Control.KeyPress>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \n  \n [!code-cs[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/csharp/m-system.windows.forms.t_21_1.cs)]\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_21_1.vb)]\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/add/codesnippet/cpp/m-system.windows.forms.t_21_1.cpp)]"
  syntax:
    content: public void Undo ();
    parameters: []
  overload: System.Windows.Forms.TextBoxBase.Undo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: TextBoxBase.WndProc(Message)
  fullName: System.Windows.Forms.TextBoxBase.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Обрабатывает сообщения Windows."
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> процессу."
  overload: System.Windows.Forms.TextBoxBase.WndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextBoxBase.WordWrap
  id: WordWrap
  parent: System.Windows.Forms.TextBoxBase
  langs:
  - csharp
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
  fullName: System.Windows.Forms.TextBoxBase.WordWrap
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Указывает, является ли элемент управления многострочным текстовым полем автоматический перенос по словам в начало следующей строки, при необходимости."
  remarks: "Если это свойство имеет значение `true`, горизонтальные полосы прокрутки не отображаются вне зависимости от <xref:System.Windows.Forms.TextBox.ScrollBars%2A>значение свойства.</xref:System.Windows.Forms.TextBox.ScrollBars%2A>      Настроек [!NOTE] настроек в производном классе <xref:System.Windows.Forms.TextBox>, текст в элементе управления всегда переносится независимо от значения свойства этого свойства, если не <xref:System.Windows.Forms.TextBox.TextAlign%2A>свойству `HorizontalAlignment.Left`.</xref:System.Windows.Forms.TextBox.TextAlign%2A> </xref:System.Windows.Forms.TextBox>"
  example:
  - "The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and WordWrap properties to make the multiline text box control useful for creating text documents.  \n  \n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/cpp/p-system.windows.forms.t_266_1.cpp)]\n [!code-cs[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/csharp/p-system.windows.forms.t_266_1.cs)]\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_266_1.vb)]"
  syntax:
    content: public bool WordWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент управления многострочным текстовым полем перенос по словам; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если элемент управления текстовым полем автоматическая прокрутка по горизонтали, когда пользователь вводит за правый край элемента управления. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TextBoxBase.WordWrap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.Control
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTab
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTabChanged
  nameWithType: TextBoxBase.AcceptsTabChanged
  fullName: System.Windows.Forms.TextBoxBase.AcceptsTabChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AppendText(String)
  nameWithType: TextBoxBase.AppendText(String)
  fullName: System.Windows.Forms.TextBoxBase.AppendText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TextBoxBase.AutoSize
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
  fullName: System.Windows.Forms.TextBoxBase.AutoSize
- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSizeChanged
  nameWithType: TextBoxBase.AutoSizeChanged
  fullName: System.Windows.Forms.TextBoxBase.AutoSizeChanged
- uid: System.Windows.Forms.TextBoxBase.BackColor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackColor
  nameWithType: TextBoxBase.BackColor
  fullName: System.Windows.Forms.TextBoxBase.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: TextBoxBase.BackgroundImageChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageChanged
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: TextBoxBase.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.TextBoxBase.BorderStyle
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
  fullName: System.Windows.Forms.TextBoxBase.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyleChanged
  nameWithType: TextBoxBase.BorderStyleChanged
  fullName: System.Windows.Forms.TextBoxBase.BorderStyleChanged
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
  fullName: System.Windows.Forms.TextBoxBase.CanEnableIme
- uid: System.Windows.Forms.TextBoxBase.CanUndo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
  fullName: System.Windows.Forms.TextBoxBase.CanUndo
- uid: System.Windows.Forms.TextBoxBase.Clear
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Clear()
  nameWithType: TextBoxBase.Clear()
  fullName: System.Windows.Forms.TextBoxBase.Clear()
- uid: System.Windows.Forms.TextBoxBase.ClearUndo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ClearUndo()
  nameWithType: TextBoxBase.ClearUndo()
  fullName: System.Windows.Forms.TextBoxBase.ClearUndo()
- uid: System.Windows.Forms.TextBoxBase.Click
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Click
  nameWithType: TextBoxBase.Click
  fullName: System.Windows.Forms.TextBoxBase.Click
- uid: System.Windows.Forms.TextBoxBase.Copy
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Copy()
  nameWithType: TextBoxBase.Copy()
  fullName: System.Windows.Forms.TextBoxBase.Copy()
- uid: System.Windows.Forms.TextBoxBase.CreateHandle
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateHandle()
  nameWithType: TextBoxBase.CreateHandle()
  fullName: System.Windows.Forms.TextBoxBase.CreateHandle()
- uid: System.Windows.Forms.TextBoxBase.CreateParams
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
  fullName: System.Windows.Forms.TextBoxBase.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.TextBoxBase.Cut
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Cut()
  nameWithType: TextBoxBase.Cut()
  fullName: System.Windows.Forms.TextBoxBase.Cut()
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
  fullName: System.Windows.Forms.TextBoxBase.DefaultCursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.TextBoxBase.DefaultSize
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
  fullName: System.Windows.Forms.TextBoxBase.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.TextBoxBase.DeselectAll
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DeselectAll()
  nameWithType: TextBoxBase.DeselectAll()
  fullName: System.Windows.Forms.TextBoxBase.DeselectAll()
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
  fullName: System.Windows.Forms.TextBoxBase.DoubleBuffered
- uid: System.Windows.Forms.TextBoxBase.ForeColor
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
  fullName: System.Windows.Forms.TextBoxBase.ForeColor
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharFromPosition(Point)
  nameWithType: TextBoxBase.GetCharFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharFromPosition(Point)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharIndexFromPosition(Point)
  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)
  fullName: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(Point)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexFromLine(Int32)
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(Int32)
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexOfCurrentLine()
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()
  fullName: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine()
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetLineFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(Int32)
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetPositionFromCharIndex(Int32)
  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)
  fullName: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(Int32)
- uid: System.Windows.Forms.TextBoxBase.HideSelection
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
  fullName: System.Windows.Forms.TextBoxBase.HideSelection
- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelectionChanged
  nameWithType: TextBoxBase.HideSelectionChanged
  fullName: System.Windows.Forms.TextBoxBase.HideSelectionChanged
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
  fullName: System.Windows.Forms.TextBoxBase.ImeModeBase
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: IsInputKey(Keys)
  nameWithType: TextBoxBase.IsInputKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.IsInputKey(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.TextBoxBase.Lines
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Lines
  nameWithType: TextBoxBase.Lines
  fullName: System.Windows.Forms.TextBoxBase.Lines
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TextBoxBase.MaxLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
  fullName: System.Windows.Forms.TextBoxBase.MaxLength
- uid: System.Windows.Forms.TextBoxBase.Modified
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Modified
  nameWithType: TextBoxBase.Modified
  fullName: System.Windows.Forms.TextBoxBase.Modified
- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ModifiedChanged
  nameWithType: TextBoxBase.ModifiedChanged
  fullName: System.Windows.Forms.TextBoxBase.ModifiedChanged
- uid: System.Windows.Forms.TextBoxBase.MouseClick
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MouseClick
  nameWithType: TextBoxBase.MouseClick
  fullName: System.Windows.Forms.TextBoxBase.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.TextBoxBase.Multiline
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Multiline
  nameWithType: TextBoxBase.Multiline
  fullName: System.Windows.Forms.TextBoxBase.Multiline
- uid: System.Windows.Forms.TextBoxBase.MultilineChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MultilineChanged
  nameWithType: TextBoxBase.MultilineChanged
  fullName: System.Windows.Forms.TextBoxBase.MultilineChanged
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnAcceptsTabChanged(EventArgs)
  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: TextBoxBase.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHideSelectionChanged(EventArgs)
  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnModifiedChanged(EventArgs)
  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnModifiedChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMouseUp(MouseEventArgs)
  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMouseUp(MouseEventArgs)
- uid: System.Windows.Forms.MouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMultilineChanged(EventArgs)
  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnMultilineChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnPaddingChanged(EventArgs)
  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnPaddingChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: TextBoxBase.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.TextBoxBase.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.TextBoxBase.Padding
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Padding
  nameWithType: TextBoxBase.Padding
  fullName: System.Windows.Forms.TextBoxBase.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.TextBoxBase.PaddingChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PaddingChanged
  nameWithType: TextBoxBase.PaddingChanged
  fullName: System.Windows.Forms.TextBoxBase.PaddingChanged
- uid: System.Windows.Forms.TextBoxBase.Paint
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paint
  nameWithType: TextBoxBase.Paint
  fullName: System.Windows.Forms.TextBoxBase.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.TextBoxBase.Paste
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paste()
  nameWithType: TextBoxBase.Paste()
  fullName: System.Windows.Forms.TextBoxBase.Paste()
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
  fullName: System.Windows.Forms.TextBoxBase.PreferredHeight
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: TextBoxBase.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: TextBoxBase.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.TextBoxBase.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.TextBoxBase.ReadOnly
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
  fullName: System.Windows.Forms.TextBoxBase.ReadOnly
- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnlyChanged
  nameWithType: TextBoxBase.ReadOnlyChanged
  fullName: System.Windows.Forms.TextBoxBase.ReadOnlyChanged
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ScrollToCaret()
  nameWithType: TextBoxBase.ScrollToCaret()
  fullName: System.Windows.Forms.TextBoxBase.ScrollToCaret()
- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Select(Int32,Int32)
  nameWithType: TextBoxBase.Select(Int32,Int32)
  fullName: System.Windows.Forms.TextBoxBase.Select(Int32,Int32)
- uid: System.Windows.Forms.TextBoxBase.SelectAll
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectAll()
  nameWithType: TextBoxBase.SelectAll()
  fullName: System.Windows.Forms.TextBoxBase.SelectAll()
- uid: System.Windows.Forms.TextBoxBase.SelectedText
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
  fullName: System.Windows.Forms.TextBoxBase.SelectedText
- uid: System.Windows.Forms.TextBoxBase.SelectionLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
  fullName: System.Windows.Forms.TextBoxBase.SelectionLength
- uid: System.Windows.Forms.TextBoxBase.SelectionStart
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
  fullName: System.Windows.Forms.TextBoxBase.SelectionStart
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.TextBoxBase.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
  fullName: System.Windows.Forms.TextBoxBase.ShortcutsEnabled
- uid: System.Windows.Forms.TextBoxBase.Text
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Text
  nameWithType: TextBoxBase.Text
  fullName: System.Windows.Forms.TextBoxBase.Text
- uid: System.Windows.Forms.TextBoxBase.TextLength
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: TextLength
  nameWithType: TextBoxBase.TextLength
  fullName: System.Windows.Forms.TextBoxBase.TextLength
- uid: System.Windows.Forms.TextBoxBase.ToString
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ToString()
  nameWithType: TextBoxBase.ToString()
  fullName: System.Windows.Forms.TextBoxBase.ToString()
- uid: System.Windows.Forms.TextBoxBase.Undo
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Undo()
  nameWithType: TextBoxBase.Undo()
  fullName: System.Windows.Forms.TextBoxBase.Undo()
- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WndProc(Message)
  nameWithType: TextBoxBase.WndProc(Message)
  fullName: System.Windows.Forms.TextBoxBase.WndProc(Message)
- uid: System.Windows.Forms.TextBoxBase.WordWrap
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
  fullName: System.Windows.Forms.TextBoxBase.WordWrap
- uid: System.Windows.Forms.TextBoxBase.AcceptsTab*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AcceptsTab
  nameWithType: TextBoxBase.AcceptsTab
- uid: System.Windows.Forms.TextBoxBase.AppendText*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AppendText
  nameWithType: TextBoxBase.AppendText
- uid: System.Windows.Forms.TextBoxBase.AutoSize*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: AutoSize
  nameWithType: TextBoxBase.AutoSize
- uid: System.Windows.Forms.TextBoxBase.BackColor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackColor
  nameWithType: TextBoxBase.BackColor
- uid: System.Windows.Forms.TextBoxBase.BackgroundImage*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImage
  nameWithType: TextBoxBase.BackgroundImage
- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: TextBoxBase.BackgroundImageLayout
- uid: System.Windows.Forms.TextBoxBase.BorderStyle*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: BorderStyle
  nameWithType: TextBoxBase.BorderStyle
- uid: System.Windows.Forms.TextBoxBase.CanEnableIme*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanEnableIme
  nameWithType: TextBoxBase.CanEnableIme
- uid: System.Windows.Forms.TextBoxBase.CanUndo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CanUndo
  nameWithType: TextBoxBase.CanUndo
- uid: System.Windows.Forms.TextBoxBase.Clear*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Clear
  nameWithType: TextBoxBase.Clear
- uid: System.Windows.Forms.TextBoxBase.ClearUndo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ClearUndo
  nameWithType: TextBoxBase.ClearUndo
- uid: System.Windows.Forms.TextBoxBase.Copy*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Copy
  nameWithType: TextBoxBase.Copy
- uid: System.Windows.Forms.TextBoxBase.CreateHandle*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateHandle
  nameWithType: TextBoxBase.CreateHandle
- uid: System.Windows.Forms.TextBoxBase.CreateParams*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: CreateParams
  nameWithType: TextBoxBase.CreateParams
- uid: System.Windows.Forms.TextBoxBase.Cut*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Cut
  nameWithType: TextBoxBase.Cut
- uid: System.Windows.Forms.TextBoxBase.DefaultCursor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultCursor
  nameWithType: TextBoxBase.DefaultCursor
- uid: System.Windows.Forms.TextBoxBase.DefaultSize*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DefaultSize
  nameWithType: TextBoxBase.DefaultSize
- uid: System.Windows.Forms.TextBoxBase.DeselectAll*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DeselectAll
  nameWithType: TextBoxBase.DeselectAll
- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: DoubleBuffered
  nameWithType: TextBoxBase.DoubleBuffered
- uid: System.Windows.Forms.TextBoxBase.ForeColor*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ForeColor
  nameWithType: TextBoxBase.ForeColor
- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharFromPosition
  nameWithType: TextBoxBase.GetCharFromPosition
- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetCharIndexFromPosition
  nameWithType: TextBoxBase.GetCharIndexFromPosition
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexFromLine
  nameWithType: TextBoxBase.GetFirstCharIndexFromLine
- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetFirstCharIndexOfCurrentLine
  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine
- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetLineFromCharIndex
  nameWithType: TextBoxBase.GetLineFromCharIndex
- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: GetPositionFromCharIndex
  nameWithType: TextBoxBase.GetPositionFromCharIndex
- uid: System.Windows.Forms.TextBoxBase.HideSelection*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: HideSelection
  nameWithType: TextBoxBase.HideSelection
- uid: System.Windows.Forms.TextBoxBase.ImeModeBase*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ImeModeBase
  nameWithType: TextBoxBase.ImeModeBase
- uid: System.Windows.Forms.TextBoxBase.IsInputKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: IsInputKey
  nameWithType: TextBoxBase.IsInputKey
- uid: System.Windows.Forms.TextBoxBase.Lines*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Lines
  nameWithType: TextBoxBase.Lines
- uid: System.Windows.Forms.TextBoxBase.MaxLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: MaxLength
  nameWithType: TextBoxBase.MaxLength
- uid: System.Windows.Forms.TextBoxBase.Modified*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Modified
  nameWithType: TextBoxBase.Modified
- uid: System.Windows.Forms.TextBoxBase.Multiline*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Multiline
  nameWithType: TextBoxBase.Multiline
- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnAcceptsTabChanged
  nameWithType: TextBoxBase.OnAcceptsTabChanged
- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnBorderStyleChanged
  nameWithType: TextBoxBase.OnBorderStyleChanged
- uid: System.Windows.Forms.TextBoxBase.OnFontChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnFontChanged
  nameWithType: TextBoxBase.OnFontChanged
- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleCreated
  nameWithType: TextBoxBase.OnHandleCreated
- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: TextBoxBase.OnHandleDestroyed
- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnHideSelectionChanged
  nameWithType: TextBoxBase.OnHideSelectionChanged
- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnModifiedChanged
  nameWithType: TextBoxBase.OnModifiedChanged
- uid: System.Windows.Forms.TextBoxBase.OnMouseUp*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMouseUp
  nameWithType: TextBoxBase.OnMouseUp
- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnMultilineChanged
  nameWithType: TextBoxBase.OnMultilineChanged
- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnPaddingChanged
  nameWithType: TextBoxBase.OnPaddingChanged
- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnReadOnlyChanged
  nameWithType: TextBoxBase.OnReadOnlyChanged
- uid: System.Windows.Forms.TextBoxBase.OnTextChanged*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: OnTextChanged
  nameWithType: TextBoxBase.OnTextChanged
- uid: System.Windows.Forms.TextBoxBase.Padding*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Padding
  nameWithType: TextBoxBase.Padding
- uid: System.Windows.Forms.TextBoxBase.Paste*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Paste
  nameWithType: TextBoxBase.Paste
- uid: System.Windows.Forms.TextBoxBase.PreferredHeight*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: PreferredHeight
  nameWithType: TextBoxBase.PreferredHeight
- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessCmdKey
  nameWithType: TextBoxBase.ProcessCmdKey
- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ProcessDialogKey
  nameWithType: TextBoxBase.ProcessDialogKey
- uid: System.Windows.Forms.TextBoxBase.ReadOnly*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ReadOnly
  nameWithType: TextBoxBase.ReadOnly
- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ScrollToCaret
  nameWithType: TextBoxBase.ScrollToCaret
- uid: System.Windows.Forms.TextBoxBase.Select*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Select
  nameWithType: TextBoxBase.Select
- uid: System.Windows.Forms.TextBoxBase.SelectAll*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectAll
  nameWithType: TextBoxBase.SelectAll
- uid: System.Windows.Forms.TextBoxBase.SelectedText*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectedText
  nameWithType: TextBoxBase.SelectedText
- uid: System.Windows.Forms.TextBoxBase.SelectionLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionLength
  nameWithType: TextBoxBase.SelectionLength
- uid: System.Windows.Forms.TextBoxBase.SelectionStart*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SelectionStart
  nameWithType: TextBoxBase.SelectionStart
- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: SetBoundsCore
  nameWithType: TextBoxBase.SetBoundsCore
- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ShortcutsEnabled
  nameWithType: TextBoxBase.ShortcutsEnabled
- uid: System.Windows.Forms.TextBoxBase.Text*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Text
  nameWithType: TextBoxBase.Text
- uid: System.Windows.Forms.TextBoxBase.TextLength*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: TextLength
  nameWithType: TextBoxBase.TextLength
- uid: System.Windows.Forms.TextBoxBase.ToString*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: ToString
  nameWithType: TextBoxBase.ToString
- uid: System.Windows.Forms.TextBoxBase.Undo*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: Undo
  nameWithType: TextBoxBase.Undo
- uid: System.Windows.Forms.TextBoxBase.WndProc*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WndProc
  nameWithType: TextBoxBase.WndProc
- uid: System.Windows.Forms.TextBoxBase.WordWrap*
  parent: System.Windows.Forms.TextBoxBase
  isExternal: false
  name: WordWrap
  nameWithType: TextBoxBase.WordWrap
