### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlSecureResolver
  id: XmlSecureResolver
  children:
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  - System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  - System.Xml.XmlSecureResolver.Credentials
  - System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver
  fullName: System.Xml.XmlSecureResolver
  type: Class
  summary: "Позволяет защитить другую реализацию <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> путем заключения <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> объекта и ограничения ресурсов, базовый <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> имеет доступ."
  remarks: "<xref:System.Xml.XmlUrlResolver>Класса является арбитром по умолчанию для всех классов в <xref:System.Xml>пространства имен.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> Он используется для загрузки XML-документов, а также для разрешения внешних ресурсов, таких как сущности, DTD или схемы и импортировать или директивы #include.       Это значение по умолчанию можно переопределить, указав <xref:System.Xml.XmlResolver>объект для использования в.</xref:System.Xml.XmlResolver> Например, если вы хотите ограничить ресурсы, базовый <xref:System.Xml.XmlResolver>доступен, можно использовать объект XmlSecureResolver.</xref:System.Xml.XmlResolver>       XmlSecureResolver переносится вокруг конкретную реализацию <xref:System.Xml.XmlResolver>и ограничивает ресурсы, базовый <xref:System.Xml.XmlResolver>имеет доступ к.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver> Например XmlSecureResolver имеет может запретить переадресацию между доменами, возникающее из внедренных ссылки на универсальный код ресурса (URI).       При создании объекта XmlSecureResolver обеспечивается допустимая <xref:System.Xml.XmlResolver>реализации вместе с URL-АДРЕСЕ, экземпляр объекта свидетельства или набор разрешений, который используется для определения безопасности XmlSecureResolver.</xref:System.Xml.XmlResolver> Либо <xref:System.Security.PermissionSet?displayProperty=fullName>создается или существующих используется один и <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName>для него вызывается для защиты базовый <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> </xref:System.Security.PermissionSet?displayProperty=fullName>      Настроек [!IMPORTANT] настроек XmlSecureResolver объекты могут содержать конфиденциальные сведения, например учетные данные пользователя. Следует соблюдать осторожность при кэшировании XmlSecureResolver объектов и не следует передавать объект XmlSecureResolver недоверенному компоненту.      Настроек [!IMPORTANT] настроек существуют различия в инфраструктуру безопасности для кода, выполняемого в .NET Framework CLR (CLR), а также для кода, выполняемого в среде CLR, интегрированной в Microsoft SQL Server 2005. Это может привести к вариантам, где кода, разработанного для .NET Framework CLR по-разному работает при использовании на сервере SQL Server интеграции со средой CLR. Одно из этих отличий влияет на класс XmlSecureResolver при наличии свидетельства, основанный на URL-адрес (то есть, при использовании <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29>метода или <xref:System.Xml.XmlSecureResolver.%23ctor%2A>конструктор).</xref:System.Xml.XmlSecureResolver.%23ctor%2A> </xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> Политика разрешения механизма SQL Server, интеграции со средой CLR не используется <xref:System.Security.Policy.Url>или <xref:System.Security.Policy.Zone>сведения.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Url> Вместо этого он предоставляет разрешения на основе GUID, который добавляется сервером при загрузке сборок. При использовании XmlSecureResolver в SQL Server для интеграции со средой CLR, укажите любые необходимые свидетельство напрямую с помощью указанного <xref:System.Security.PermissionSet>.</xref:System.Security.PermissionSet>      ## Использование безопасного сопоставителя 1.  Создайте XmlSecureResolver с набором нужные разрешения.      2.  Создание <xref:System.Xml.XmlReaderSettings>объект, который использует объект XmlSecureResolver.</xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples 5а #](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_1.vb)][!code-cs[XmlSecureResolver_Samples 5а #](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_1.cs) ] 3.        Передайте <xref:System.Xml.XmlReaderSettings>объект <xref:System.Xml.XmlReader.Create%2A>метод при создании <xref:System.Xml.XmlReader>объекта.</xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings>           [!code-vb[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_2.vb)][!code-cs[XmlSecureResolver_Samples&#5;b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_2.cs) ] ## для ограничения доступа при использовании URL-адрес <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>конструктор для создания объекта, может получить доступ только к узлам интрасети XmlSecureResolver.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29>             [!code-vb[XmlSecureResolver_Samples #3](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_3.vb)][!code-cs[XmlSecureResolver_Samples #3](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_3.cs) ] ## ограничить доступ с помощью разрешений задано значение 1.    Создание <xref:System.Net.WebPermission>объекта.</xref:System.Net.WebPermission>           [!code-vb[XmlSecureResolver_Samples 4а #](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_4.vb)][!code-cs[XmlSecureResolver_Samples 4а #](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_4.cs) ] 2.        Укажите, следует ли разрешить доступ к URL-адреса.           [!code-vb[XmlSecureResolver_Samples #4b](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_5.vb)][!code-cs[XmlSecureResolver_Samples #4b](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_5.cs) ] 3.        Добавить веб-разрешения к <xref:System.Security.PermissionSet>объекта.</xref:System.Security.PermissionSet>           [!code-vb[C# 4 XmlSecureResolver_Samples](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_6.vb)][!code-cs[c# 4 XmlSecureResolver_Samples](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_6.cs) ] 4.        Используйте <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>конструктор для создания объекта XmlSecureResolver с помощью набора разрешений.</xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29>           [!code-vb[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_7.vb)][!code-cs[XmlSecureResolver_Samples&#4; d](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_7.cs) ] разделе <xref:System.Xml.XmlSecureResolver.%23ctor%2A>справочника, посвященных еще один пример.</xref:System.Xml.XmlSecureResolver.%23ctor%2A>            ## Ограничить доступ, с использованием свидетельства, можно ограничить доступ, используя <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>конструктор и указав <xref:System.Security.Policy.Evidence>.</xref:System.Security.Policy.Evidence> </xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> <xref:System.Security.Policy.Evidence>Используется для создания <xref:System.Security.PermissionSet>, применяемый к базовой <xref:System.Xml.XmlResolver>.</xref:System.Xml.XmlResolver> </xref:System.Security.PermissionSet> </xref:System.Security.Policy.Evidence> Вызовы XmlSecureResolver <xref:System.Security.PermissionSet.PermitOnly%2A>для созданного <xref:System.Security.PermissionSet>перед открытием какие-либо ресурсы.</xref:System.Security.PermissionSet> </xref:System.Security.PermissionSet.PermitOnly%2A>       Ниже приведены некоторые распространенные сценарии и тип свидетельства для каждого: - при работе в полностью доверенной среде, используйте для создания свидетельства сборки: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_8.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_8.cs) ] -Если вы работаете в среде с частичным доверием, у вас есть код или данные поступают из внешнего источника и знать внешней источник и иметь поддающийся проверке URI , используйте URI для создания свидетельства: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_9.vb)][!code-cs[XmlSecureResolver_Samples&2;](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_9.cs) ] — Если вы работаете в среде с частичным доверием и у вас есть код или данные поступают из внешнего источника, но вы не знаете источника из внешнего источника, либо: задать `evidence` параметра `null`.             Это позволяет никакого доступа к ресурсам.           - или - если приложению требуется доступ к ресурсам, запросите свидетельство у вызывающего объекта.      ## Использование безопасного Сопоставитель для загрузки таблицы стилей XSLT 1.  Создайте XmlSecureResolver с набором нужные разрешения.      2.  Передайте XmlSecureResolver для <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>метод.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>           [!code-vb[#6 XmlSecureResolver_Samples](~/add/codesnippet/visualbasic/t-system.xml.xmlsecurere_10.vb)][!code-cs[XmlSecureResolver_Samples&#6;      ](~/add/codesnippet/csharp/t-system.xml.xmlsecurere_10.cs)]"
  syntax:
    content: 'public class XmlSecureResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  id: '#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> класса <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> и <xref href=&quot;System.Security.PermissionSet&quot;> </xref> указанного."
  remarks: ''
  example:
  - "The following example constructs an <xref:System.Xml.XmlSecureResolver> object by using a customized permission set.  \n  \n [!code-cs[XmlSecureResolver.cctor#1](~/add/codesnippet/csharp/e6fb0edb-66a8-45c7-82d0-_1.cs)]\n [!code-cpp[XmlSecureResolver.cctor#1](~/add/codesnippet/cpp/e6fb0edb-66a8-45c7-82d0-_1.cpp)]\n [!code-vb[XmlSecureResolver.cctor#1](~/add/codesnippet/visualbasic/e6fb0edb-66a8-45c7-82d0-_1.vb)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Сопоставитель XML, которое находится в оболочке <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "Набор разрешений для применения к основному <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Вызовы &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; набора разрешений перед вызовом метода <xref:System.Xml.XmlSecureResolver.GetEntity*>метода для базового сопоставителя XML.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: '#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> класса <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> и <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> указанного."
  remarks: "Ниже приведены некоторые возможные сценарии и тип свидетельства для каждого сценария: - при работе в полностью доверенной среде, используйте для создания свидетельства сборки: [!code-vb [XmlSecureResolver_Samples&#1;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_1.vb)][!code-cs[XmlSecureResolver_Samples&#1;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_1.cs) ] -Если вы работаете в среде с частичным доверием, у вас есть код или данные поступают из внешнего источника и знать внешней источник и иметь поддающийся проверке URI , используйте URI для создания свидетельства: [!code-vb [XmlSecureResolver_Samples&#2;](~/add/codesnippet/visualbasic/74601da4-12bd-44fe-a117-_2.vb)][!code-cs[XmlSecureResolver_Samples&2;](~/add/codesnippet/csharp/74601da4-12bd-44fe-a117-_2.cs) ] — Если вы работаете в среде с частичным доверием и у вас есть код или данные поступают из внешнего источника, но вы не знаете источника из внешнего источника, либо: задать `evidence` параметра `null`.             Это позволяет никакого доступа к ресурсам.           - или - если приложению требуется доступ к ресурсам, запросите свидетельство у вызывающего объекта."
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Сопоставитель XML, которое находится в оболочке <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Свидетельство, используемое для создания <xref href=&quot;System.Security.PermissionSet&quot;> </xref> будут применяться к базовому объекту <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Вызовы &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; метод для созданного <xref href=&quot;System.Security.PermissionSet&quot;> </xref> перед вызовом метода <xref:System.Xml.XmlSecureResolver.GetEntity*>для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  id: '#ctor(System.Xml.XmlResolver,System.String)'
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> класса <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> и указанного URL-адреса."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> method or the XmlSecureResolver constructor). The policy resolution mechanism of the SQL Server integrated CLR does not use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  example:
  - "This example uses the XmlSecureResolver constructor to create an <xref:System.Xml.XmlSecureResolver> object that is allowed to access your local intranet site only.  \n  \n [!code-vb[XmlSecureResolver_Samples#3](~/add/codesnippet/visualbasic/m-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver_Samples#3](~/add/codesnippet/csharp/m-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);
    parameters:
    - id: resolver
      type: System.Xml.XmlResolver
      description: "Сопоставитель XML, которое находится в оболочке <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref>."
    - id: securityUrl
      type: System.String
      description: "URL-адрес, используемый для создания <xref href=&quot;System.Security.PermissionSet&quot;> </xref> будут применяться к базовому объекту <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Вызовы &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; для созданного <xref href=&quot;System.Security.PermissionSet&quot;> </xref> перед вызовом метода <xref:System.Xml.XmlSecureResolver.GetEntity*>для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>.</xref:System.Xml.XmlSecureResolver.GetEntity*>"
  overload: System.Xml.XmlSecureResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  id: CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Создает свидетельство, используя предоставленный URL-адрес."
  remarks: >-
    > [!IMPORTANT]

    >  There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005. This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR. One of these differences affects the <xref:System.Xml.XmlSecureResolver> class when you have evidence that is based on a URL (that is, when you use the CreateEvidenceForUrl method or the <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> constructor). The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <xref:System.Security.Policy.Url> or <xref:System.Security.Policy.Zone> information. Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded. When you use the <xref:System.Xml.XmlSecureResolver> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <xref:System.Security.PermissionSet>.
  syntax:
    content: public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);
    parameters:
    - id: securityUrl
      type: System.String
      description: "URL-адрес, используемый для создания свидетельства."
    return:
      type: System.Security.Policy.Evidence
      description: "Свидетельство, созданное из предоставленного URL-адреса в соответствии с политикой по умолчанию."
  overload: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Задает учетные данные, используемые для проверки подлинности веб-запросов."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Xml.XmlSecureResolver> with default credentials to resolve and open network resources needed by the <xref:System.Xml.XmlTextReader>.  \n  \n [!code-cpp[XmlSecureResolver.Credentials#1](~/add/codesnippet/cpp/p-system.xml.xmlsecurere_1.cpp)]\n [!code-vb[XmlSecureResolver.Credentials#1](~/add/codesnippet/visualbasic/p-system.xml.xmlsecurere_1.vb)]\n [!code-cs[XmlSecureResolver.Credentials#1](~/add/codesnippet/csharp/p-system.xml.xmlsecurere_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Учетные данные, используемые для проверки подлинности веб-запросов. <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> Задает учетные данные для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Если это свойство не задано, используется значение по умолчанию <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, то есть <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> имеет без учетных данных пользователя."
  overload: System.Xml.XmlSecureResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Сопоставляет URI с объектом, содержащим фактический ресурс. Этот метод временно задает <xref href=&quot;System.Security.PermissionSet&quot;> </xref> создается в конструкторе путем вызова &lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt; перед вызовом <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> будет открыт ресурс."
  remarks: >-
    > [!IMPORTANT]

    >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, который возвращается из <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. В текущей версии возвращаются только <xref:System.IO.Stream>объектов.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Поток, возвращенный при вызове <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Если тип, отличный от <xref:System.IO.Stream>указан, метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>не является ни <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не является <xref:System.IO.Stream> типа."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Указанный URI не является абсолютным URI."
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Есть ошибка среды выполнения (например, прервано подключение к серверу)."
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Асинхронно сопоставляет URI с объектом, содержащим фактический ресурс."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, возвращаемый методом <xref:System.Xml.XmlSecureResolver.ResolveUri*>.</xref:System.Xml.XmlSecureResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. В текущей версии возвращаются только <xref:System.IO.Stream>объектов.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Поток, возвращенный при вызове <xref uid=&quot;langword_csharp_GetEntity&quot; name=&quot;GetEntity&quot; href=&quot;&quot;> </xref> для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>. Если тип, отличный от <xref:System.IO.Stream>указан, метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Xml.XmlSecureResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Разрешает абсолютный URI на основе базового и относительного URI путем вызова <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Базовый URI, используемый для разрешения относительного URI."
    - id: relativeUri
      type: System.String
      description: "URI для решения. URI может быть абсолютным или относительным. Если абсолютным, данное значение замещает `baseUri` значение. Если относительным, в нем сочетаются с `baseUri` в абсолютный URI."
    return:
      type: System.Uri
      description: "Абсолютный URI или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если невозможно разрешить относительный URI (возвращаемый путем вызова <xref uid=&quot;langword_csharp_ResolveUri&quot; name=&quot;ResolveUri&quot; href=&quot;&quot;> </xref> для базового <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>)."
  overload: System.Xml.XmlSecureResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,PermissionSet)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,Evidence)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver(XmlResolver,String)
  nameWithType: XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
  fullName: System.Xml.XmlSecureResolver.XmlSecureResolver(XmlResolver,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl(String)
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl(String)
  fullName: System.Xml.XmlSecureResolver.CreateEvidenceForUrl(String)
- uid: System.Xml.XmlSecureResolver.Credentials
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
  fullName: System.Xml.XmlSecureResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlSecureResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlSecureResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlSecureResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlSecureResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlSecureResolver.#ctor*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: XmlSecureResolver
  nameWithType: XmlSecureResolver.XmlSecureResolver
- uid: System.Xml.XmlSecureResolver.CreateEvidenceForUrl*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: CreateEvidenceForUrl
  nameWithType: XmlSecureResolver.CreateEvidenceForUrl
- uid: System.Xml.XmlSecureResolver.Credentials*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlSecureResolver.Credentials
- uid: System.Xml.XmlSecureResolver.GetEntity*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlSecureResolver.GetEntity
- uid: System.Xml.XmlSecureResolver.GetEntityAsync*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlSecureResolver.GetEntityAsync
- uid: System.Xml.XmlSecureResolver.ResolveUri*
  parent: System.Xml.XmlSecureResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlSecureResolver.ResolveUri
