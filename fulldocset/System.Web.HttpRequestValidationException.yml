### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequestValidationException
  id: HttpRequestValidationException
  children:
  - System.Web.HttpRequestValidationException.#ctor
  - System.Web.HttpRequestValidationException.#ctor(System.String)
  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
  type: Class
  summary: "Исключение, возникающее при получении от клиента потенциально опасной строки входящих как часть данных запроса. Этот класс не наследуется."
  remarks: "Ограничение и проверка пользовательского ввода очень важно в веб-приложении для предотвращения атак злоумышленников, которые зависят от вредоносных входных строк. Атаки межсайтовых сценариев являются одним из примеров таких злонамеренных действий. Другие типы вредоносных или нежелательных данных могут передаваться в запросе посредством различных форм ввода данных. Ограничивая виды данных, передаваемых на низком уровне в приложении, можно предотвратить нежелательные события, даже если программисты, использующие код следует размещать методы надлежащую проверку на месте.       Проверка запроса обнаруживает входные данные от клиента потенциально вредоносных и создает это исключение для прекращения обработки запроса. Прерывание запроса может указывать на попытку нарушения безопасности приложения, такие как атака межсайтовых скриптов. Настоятельно рекомендуется выполнять в том, что в приложении явную проверку всех входных данных, касающихся прерываний запросов. Тем не менее, можно отключить проверку запросов, задав `validateRequest` атрибута в директиве `false`, как показано в следующем примере: `<%@ Page validateRequest=&quot;false&quot; %>` Чтобы отключить проверку запросов для приложения, необходимо изменить или создать файл Web.config для приложения и набора `validateRequest` атрибут `pages` раздел `false`, как показано в следующем примере: ```   <configuration>      <system.web>        <pages validateRequest=&quot;false&quot; />      </system.web>    </configuration>    ``` для отключения проверки запросов для всех приложений на сервере , внесения этого изменения в файл Machine.config.      Настроек [!NOTE] настроек настоятельно рекомендуется, что в приложении явную проверку всех входных данных используется в дополнение к проверке запросов, выполняемой ASP.NET. Средство проверки запросов не может перехватить все атаки, особенно направленные конкретно против логики приложения."
  example:
  - "The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Web.HttpException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor
  id: '#ctor'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Создает новый экземпляр <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> класса."
  syntax:
    content: public HttpRequestValidationException ();
    parameters: []
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Создает новый <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> исключения с указанным сообщением об ошибке."
  remarks: "Содержимое `message` параметр должно быть понятно для чтения. Чтобы убедиться, что требуется код, вызывающий конструктор HttpRequestValidationException `message` локализованные строки."
  syntax:
    content: public HttpRequestValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Строка, описывающая ошибку."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException%2A>свойство.</xref:System.Exception.InnerException%2A> <xref:System.Exception.InnerException%2A>Свойство возвращает то же значение, которое было передано в конструктор HttpRequestValidationException или `null` Если <xref:System.Exception.InnerException%2A>свойства не предоставляет значение внутреннего исключения конструктору HttpRequestValidationException.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public HttpRequestValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: innerException
      type: System.Exception
      description: "Исключение, которое стало причиной текущего исключения. Если этот параметр не является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.HttpException
  isExternal: false
  name: System.Web.HttpException
- uid: System.Web.HttpRequestValidationException.#ctor
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpRequestValidationException.#ctor*
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException.HttpRequestValidationException
