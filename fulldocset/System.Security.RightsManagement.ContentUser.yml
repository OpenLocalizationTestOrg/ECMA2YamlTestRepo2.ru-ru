### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.ContentUser
  id: ContentUser
  children:
  - System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  - System.Security.RightsManagement.ContentUser.AnyoneUser
  - System.Security.RightsManagement.ContentUser.AuthenticationType
  - System.Security.RightsManagement.ContentUser.Equals(System.Object)
  - System.Security.RightsManagement.ContentUser.GetHashCode
  - System.Security.RightsManagement.ContentUser.IsAuthenticated
  - System.Security.RightsManagement.ContentUser.Name
  - System.Security.RightsManagement.ContentUser.OwnerUser
  langs:
  - csharp
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
  type: Class
  summary: "Представляет пользователя или группу пользователей для предоставления доступа к содержимому с управлением правами."
  remarks: "Как и другие <xref:System.Security.RightsManagement>типов, ContentUser можно использовать только в приложения с полным доверием.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to use <xref:System.Security.RightsManagement.UnsignedPublishLicense.Owner%2A> property to assign a variable of this type.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class ContentUser
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  id: '#ctor(System.String,System.Security.RightsManagement.AuthenticationType)'
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> класса."
  remarks: "Пользователь или группа `name` чаще всего в виде адреса электронной почты отдельных (такие как johndoe@contoso.com) или список рассылки электронной почты (такие как marketing@contoso.com)."
  example:
  - "The following example shows how to use this constructor to create a secure environment.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubsecenv)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubSecEnv](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubsecenv)]"
  syntax:
    content: public ContentUser (string name, System.Security.RightsManagement.AuthenticationType authenticationType);
    parameters:
    - id: name
      type: System.String
      description: "Имя пользователя или группы."
    - id: authenticationType
      type: System.Security.RightsManagement.AuthenticationType
      description: "Метод проверки подлинности."
  overload: System.Security.RightsManagement.ContentUser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  id: AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает экземпляр «Любой» <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> лицо."
  remarks: "Имеет AnyoneUser <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>«Internal» и <xref:System.Security.RightsManagement.ContentUser.Name%2A>«Любой».</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       Если <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>«Internal» с <xref:System.Security.RightsManagement.ContentUser.Name%2A>«Любой» предоставляются права во время публикации, сервер проверки подлинности будет выдавать <xref:System.Security.RightsManagement.UseLicense>любого запроса и подключает лицензию пользователя, выполняющего запрос.</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>"
  syntax:
    content: public static System.Security.RightsManagement.ContentUser AnyoneUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "Экземпляр «Любой» <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> лицо."
  overload: System.Security.RightsManagement.ContentUser.AnyoneUser*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  id: AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает <xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;> </xref> заданы для &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; конструктор."
  syntax:
    content: public System.Security.RightsManagement.AuthenticationType AuthenticationType { get; }
    return:
      type: System.Security.RightsManagement.AuthenticationType
      description: "<xref href=&quot;System.Security.RightsManagement.AuthenticationType&quot;> </xref> Заданы для &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; конструктор."
  overload: System.Security.RightsManagement.ContentUser.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает значение, указывающее, является ли это <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> эквивалента в другой присваивается экземпляр."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Пользовательский экземпляр для сравнения на равенство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <> </> *настроек и <> </> *настроек одинаковы для этого пользователя и данного пользователя; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.RightsManagement.ContentUser.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  id: GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает вычисляемый хэш-код, основанный на пользователя <> </> *настроек и <> </> *настроек."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Вычисляемый хэш-код от пользователя <> </> *настроек и <> </> *настроек."
  overload: System.Security.RightsManagement.ContentUser.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает значение, указывающее, является ли пользователь в настоящее время проверку подлинности."
  remarks: "<xref:System.Security.RightsManagement.ContentUser.Name%2A>Проверка подлинности выполняется на основе заданного <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>.</xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A> </xref:System.Security.RightsManagement.ContentUser.Name%2A> данного пользователя       Пользователь прошел проверку подлинности и свойство IsAuthenticated `true`, диалоговое окно пользователя и для подтверждения подлинности больше не отображается при создании <xref:System.Security.RightsManagement.SecureEnvironment>.</xref:System.Security.RightsManagement.SecureEnvironment>"
  syntax:
    content: public bool IsAuthenticated ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если в данный момент пользователь прошел проверку подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.  Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> до выполнения проверки подлинности."
  overload: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.Name
  id: Name
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает имя пользователя или группы, заданный для &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; конструктор."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Имя пользователя или группы, заданный для &lt;xref:System.Security.RightsManagement.ContentUser.%23ctor%2A&gt; конструктор."
  overload: System.Security.RightsManagement.ContentUser.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  id: OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  langs:
  - csharp
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Возвращает экземпляр «Владелец» <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> лицо."
  remarks: "Имеет OwnerUser <xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>«Internal» и <xref:System.Security.RightsManagement.ContentUser.Name%2A>«Владелец».</xref:System.Security.RightsManagement.ContentUser.Name%2A> </xref:System.Security.RightsManagement.ContentUser.AuthenticationType%2A>       OwnerUser используется на стороне сервера шаблонов для предоставления специальных прав для содержимого автору или издателю, при создании защищенного документа."
  syntax:
    content: public static System.Security.RightsManagement.ContentUser OwnerUser { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "Экземпляр «Владелец» <xref href=&quot;System.Security.RightsManagement.ContentUser&quot;> </xref> лицо."
  overload: System.Security.RightsManagement.ContentUser.OwnerUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser(String,AuthenticationType)
  nameWithType: ContentUser.ContentUser(String,AuthenticationType)
  fullName: System.Security.RightsManagement.ContentUser.ContentUser(String,AuthenticationType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.AuthenticationType
  parent: System.Security.RightsManagement
  isExternal: false
  name: AuthenticationType
  nameWithType: AuthenticationType
  fullName: System.Security.RightsManagement.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
  fullName: System.Security.RightsManagement.ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
  fullName: System.Security.RightsManagement.ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals(System.Object)
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals(Object)
  nameWithType: ContentUser.Equals(Object)
  fullName: System.Security.RightsManagement.ContentUser.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.ContentUser.GetHashCode
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode()
  nameWithType: ContentUser.GetHashCode()
  fullName: System.Security.RightsManagement.ContentUser.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated()
  nameWithType: ContentUser.IsAuthenticated()
  fullName: System.Security.RightsManagement.ContentUser.IsAuthenticated()
- uid: System.Security.RightsManagement.ContentUser.Name
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
  fullName: System.Security.RightsManagement.ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
  fullName: System.Security.RightsManagement.ContentUser.OwnerUser
- uid: System.Security.RightsManagement.ContentUser.#ctor*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser.ContentUser
- uid: System.Security.RightsManagement.ContentUser.AnyoneUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AnyoneUser
  nameWithType: ContentUser.AnyoneUser
- uid: System.Security.RightsManagement.ContentUser.AuthenticationType*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: AuthenticationType
  nameWithType: ContentUser.AuthenticationType
- uid: System.Security.RightsManagement.ContentUser.Equals*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Equals
  nameWithType: ContentUser.Equals
- uid: System.Security.RightsManagement.ContentUser.GetHashCode*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: GetHashCode
  nameWithType: ContentUser.GetHashCode
- uid: System.Security.RightsManagement.ContentUser.IsAuthenticated*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: IsAuthenticated
  nameWithType: ContentUser.IsAuthenticated
- uid: System.Security.RightsManagement.ContentUser.Name*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: Name
  nameWithType: ContentUser.Name
- uid: System.Security.RightsManagement.ContentUser.OwnerUser*
  parent: System.Security.RightsManagement.ContentUser
  isExternal: false
  name: OwnerUser
  nameWithType: ContentUser.OwnerUser
