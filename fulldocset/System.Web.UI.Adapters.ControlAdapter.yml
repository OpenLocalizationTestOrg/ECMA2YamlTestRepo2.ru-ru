### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Adapters.ControlAdapter
  id: ControlAdapter
  children:
  - System.Web.UI.Adapters.ControlAdapter.#ctor
  - System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.Browser
  - System.Web.UI.Adapters.ControlAdapter.Control
  - System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  - System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.Page
  - System.Web.UI.Adapters.ControlAdapter.PageAdapter
  - System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  langs:
  - csharp
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
  type: Class
  summary: "Настраивает отрисовку производного элемента управления, к которой подключен адаптер, для изменения стандартной разметки или поведения для конкретных обозревателей и является базовым классом, из которого все управление наследуются адаптеров."
  remarks: "Адаптеры элементов управления, компоненты, переопределяющие некоторые <xref:System.Web.UI.Control>классов, методов и событий в цикле выполнения для обозревателя или обработки разметки.</xref:System.Web.UI.Control> Платформа .NET Framework сопоставляет для одного производного элемента управления адаптера <xref:System.Web.UI.Control>объекта для каждого запроса клиента.</xref:System.Web.UI.Control>       Адаптер изменяет элемент управления для определенного обозревателя или классов обозревателей или выступает в роли произвольный фильтр с некоторыми возможностями. Обычно адаптер определяется языком разметки, который использует браузер (например, XHTML или HTML 3.2). Большая часть адаптируемости поведения отрисовки может быть инкапсулирована в специализированные классы, которые являются производными от <xref:System.Web.UI.HtmlTextWriter>класса.</xref:System.Web.UI.HtmlTextWriter> Таким образом, вполне вероятно, что один адаптер можно использовать для нескольких классов поведения обозревателя или что включение адаптируемости в <xref:System.Web.UI.HtmlTextWriter>классы могут использовать адаптер элемента управления ненужных.</xref:System.Web.UI.HtmlTextWriter>       Адаптер для класса элемента управления применяется ко всем элементам управления, которые наследуют от этого класса, только при наличии более специализированные адаптеры. Например, адаптер для <xref:System.Web.UI.WebControls.BaseValidator>класс может использоваться для всех `Validator` объектов.</xref:System.Web.UI.WebControls.BaseValidator>       Адаптеры обычно не наследуют непосредственно от класса ControlAdapter, но из одного из базовых классов адаптера конкретных целевых объектов, которые предоставляют функции, характерные для типа элемента управления и целевого обозревателя или требует определенной отрисовки.       Сами элементы управления не обязательно требуется адаптер. Если элементы управления расширяются через композицию, обычно достаточны адаптеров дочерних элементов управления.       Каждый элемент управления имеет явные сопоставления с адаптерами посредством файлов определения типа BROWSER. Таким образом, любой доступ к <xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>использует свойство <xref:System.Web.HttpBrowserCapabilities>объекта, извлеченных из файлах определения браузеров, для выполнения поиска для сопоставления адаптера для элемента управления.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>       Во время обработки, .NET Framework перехватывает вызовы к переопределяемым методам элемента управления, который может зависеть от целевого устройства. Если подключен адаптер элемента управления, платформа .NET Framework вызывает методы связанного адаптера.       Адаптер выполняет отрисовку элемента управления через <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>метод.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Если переопределено, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>потенциально не следует вызывать реализацию базового класса, так как, выполняющего вызов обратно на <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Это может привести к отрисовке дважды, один раз адаптером и один раз с помощью элемента управления.       <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>Обратно на основе вызовов метода <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>метод элемента управления.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Таким образом Если переопределить <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, не следует вызывать реализацию базового класса, если подготовки, реализации, предоставляемые <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>элемента управления.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Необходимо убедиться, что .NET Framework выполняет перехват для адаптеров дочерних элементов управления. Это можно сделать, вызвав <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>базовый метод, который вызывает <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName>метод элемента управления, от вашего <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>переопределить.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>       <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>И <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>методы вызываются с помощью элемента управления, непосредственно перед и после (соответственно) вызывает элемент управления <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>метод.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Если до и после подготовки к просмотру только обозревателем задач обработки, требуемое <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>и <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>может сделать его нужно переопределить <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Поведение по умолчанию <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>и <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>имеет методы для вызова соответствующих методов <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>       Чтобы сохранить свои собственные сведения о состоянии, можно переопределить адаптер элемента управления <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, и <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>методы.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, и <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>вызываются, когда закрытый элемент управления и представление состояния и загрузки, соответственно.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, И <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A>базовые методы вызова обратно на соответствующее <xref:System.Web.UI.Control>методы класса.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> Таким образом любой из этих методов ControlAdapter переопределенные вызвать их базовых методов; в противном случае связанные события с <xref:System.Web.UI.Control>метод класса не будет активизироваться.</xref:System.Web.UI.Control>       Элементы управления и адаптеры можно также реализовать <xref:System.Web.UI.IPostBackDataHandler>и <xref:System.Web.UI.IPostBackEventHandler>интерфейсы.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.IPostBackDataHandler> Платформа .NET Framework определяет, существует ли адаптер и реализует ли эти интерфейсы. В этом случае следует переопределить адаптер <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, и <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>методов, при необходимости.</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> Если данные обратной передачи, не распознается в адаптере, необходимо вызвать элемент управления для его обработки. Обработчик последующих событий также должен вызвать на элементе управления."
  syntax:
    content: public abstract class ControlAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> класса."
  remarks: "Платформа .NET Framework внутренним образом создает этот адаптер при создании соответствующего <xref:System.Web.UI.Control>объекта.</xref:System.Web.UI.Control>"
  syntax:
    content: protected ControlAdapter ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  id: BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Вызывается до отрисовки элемента управления. В производном классе адаптеров приводит к возникновению ошибки открывающие теги, которые необходимы для определенной цели, но не требуются для HTML-обозревателей."
  remarks: "Вызывается непосредственно перед вызовом метода BeginRender <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>метода и используется для выполнения конкретных целевых объектов предварительная обработка до отрисовки элемента управления.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Используйте метод BeginRender в сочетании с <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>метод, чтобы гарантировать Открытие и закрытие тега согласованности.</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>"
  syntax:
    content: protected virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Содержащий методы для подготовки к просмотру выходные данные конкретных целевых объектов."
  overload: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  id: Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Возвращает ссылку на возможности браузера клиента, выполняющего текущий запрос HTTP."
  remarks: "Объект <xref:System.Web.UI.Adapters.ControlAdapter>объект определяет возможности браузера клиента из <xref:System.Web.HttpBrowserCapabilities>объекта, который возвращается свойством браузера.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Adapters.ControlAdapter> Это позволяет <xref:System.Web.UI.Adapters.ControlAdapter>объекта для отображения разметки обозревателем либо для изменения поведения <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter>"
  example:
  - "The following code example shows how to use the Browser property to access the details of the requesting browser. In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.  \n  \n [!code-cpp[ControlAdapter_Browser#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_1_1.cpp)]\n [!code-vb[ControlAdapter_Browser#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_1_1.vb)]\n [!code-cs[ControlAdapter_Browser#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_1_1.cs)]"
  syntax:
    content: protected System.Web.HttpBrowserCapabilities Browser { get; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> Задания клиентских возможностей браузера и разметки."
  overload: System.Web.UI.Adapters.ControlAdapter.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  id: Control
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Возвращает ссылку на элемент управления, к которой подключен адаптер элемента управления."
  remarks: "При присоединении к адаптеру производного элемента управления к элементу управления, платформа .NET Framework вызывает определенные члены адаптера вместо элементов управления."
  example:
  - "The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class. The adapter overrides the Control property and returns a strongly-typed reference to the control.  \n  \n [!code-cs[ControlAdapter.Control#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_0_1.cs)]\n [!code-vb[ControlAdapter.Control#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_0_1.vb)]\n [!code-cpp[ControlAdapter.Control#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_0_1.cpp)]"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref> К которому <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> присоединен."
  overload: System.Web.UI.Adapters.ControlAdapter.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Создает целевые дочерние элементы управления для составного элемента управления."
  remarks: "Если имеется адаптер производного элемента управления присоединяется к <xref:System.Web.UI.Control>объекта и CreateChildControls, переопределяется метод, переопределенный метод вызывается вместо <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.Control> Таким образом CreateChildControls можно использовать для создания набора целевыми дочернего элемента управления.       Дополнительные сведения об объединении элементов управления для создания нового элемента управления см. в разделе [составные элементы управления](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)."
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  id: EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Вызывается после отрисовки элемента управления. В производном классе адаптеров приводит к возникновению ошибки закрывающие теги, которые необходимы для определенной цели, но не требуются для HTML-обозревателей."
  remarks: "Метод EndRender вызывается сразу после <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>метода и используется для выполнения конкретных целевых объектов постобработку после отрисовки элемента управления.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Используйте метод EndRender в сочетании с <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>метод, чтобы гарантировать Открытие и закрытие тега согласованности.</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>"
  syntax:
    content: protected virtual void EndRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Содержащий методы для подготовки к просмотру выходные данные конкретных целевых объектов."
  overload: System.Web.UI.Adapters.ControlAdapter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  id: LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Загружает сведения о состоянии адаптера управления, сохраненного методом <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>во время предыдущего запроса на страницу, где находится элемент управления, связанный с данным адаптером элемента управления.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>"
  remarks: "Состояние элемента управления — важные сведения о состоянии требуется, даже если состояние просмотра отключено. Если адаптер должен поддерживать свои собственные сведения о состоянии элемента управления, его можно переопределить LoadAdapterControlState и <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>методы.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       Адаптер может нужно хранить сведения о состоянии элемента управления, когда нет компонентов, которые должны иметь состояния между запросами, независимо от состояния связанного элемента управления. Например, составного элемента управления состоящий из большого текстового дисплея и группы <xref:System.Web.UI.WebControls.RadioButton>элементы управления могут обрабатывать как отдельное представление браузеры для настольных компьютеров.</xref:System.Web.UI.WebControls.RadioButton> В других браузерах можно разделять отображение — одно представление для текстового дисплея, а другой — для группы переключателей. Адаптер должен обслуживать собственный целевой информацию о активного представления.       Метод LoadAdapterControlState вызывается сразу после <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>метод в `LoadState` Этап жизненного цикла.</xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName> Состояние элемента управления адаптера представляет помимо состояние элемента управления элемента управления."
  syntax:
    content: protected virtual void LoadAdapterControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>, Содержащий сведения о состоянии адаптер управления как <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  id: LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Загружает сведения о состоянии адаптера представления, сохраненного методом <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>во время предыдущего запроса на страницу, где находится элемент управления, связанный с данным адаптером элемента управления.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>"
  remarks: "Когда адаптер должен поддерживать свои собственные данные о состоянии просмотра, оно может заменить LoadAdapterViewState и <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>методы.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>       Адаптер должен поддерживать сведения о состоянии представления при наличии данных, которая должна сохраняться между запросами, независимо от состояния просмотра связанного элемента управления. Например сетка на браузеры для настольных компьютеров может привести как единое представление строк и столбцов. В других браузерах можно разделять отображение на несколько отдельных представлений, такой как список строк и сведения об одной строки. Адаптер может потребоваться настройка данных для представления, которые в настоящий момент неактивны в состоянии представления.       Метод LoadAdapterViewState вызывается непосредственно перед <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>метод в `LoadState` Этап жизненного цикла.</xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName> Состояние просмотра адаптера отделено и дополняет состояние представления элемента управления."
  syntax:
    content: protected virtual void LoadAdapterViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>, Содержащий сведения о состоянии представления адаптер как <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Переопределяет <xref:System.Web.UI.Control.OnInit*>метод для связанного элемента управления.</xref:System.Web.UI.Control.OnInit*>"
  remarks: "Если адаптер подключен к <xref:System.Web.UI.Control>объекта и OnInit, метод переопределяется, переопределяющий метод вызывается вместо <xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Переопределить OnInit для выполнения конкретных целевых объектов в `Initialize` Этап жизненного цикла элемента управления. Как правило имеются функции, которые выполняются при создании элемента управления."
  example:
  - "The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class. It then overrides the OnInit method to set a property on the associated control and call the base method to complete the control initialization.  \n  \n [!code-cs[ControlAdapter_OnInit#1](~/add/codesnippet/csharp/m-system.web.ui.adapters_1.cs)]\n [!code-vb[ControlAdapter_OnInit#1](~/add/codesnippet/visualbasic/m-system.web.ui.adapters_1.vb)]\n [!code-cpp[ControlAdapter_OnInit#1](~/add/codesnippet/cpp/m-system.web.ui.adapters_1.cpp)]"
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Переопределяет <xref:System.Web.UI.Control.OnLoad*>метод для связанного элемента управления.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "Если адаптер подключен к <xref:System.Web.UI.Control>объекта и OnLoad, переопределяется метод, переопределенный метод вызывается вместо <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Переопределите метод OnLoad для выполнения конкретных целевых объектов в `Load` Этап жизненного цикла элемента управления. Как правило имеются функции, которые должны выполняться для каждого запроса клиента."
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Переопределяет <xref:System.Web.UI.Control.OnPreRender*>метод для связанного элемента управления.</xref:System.Web.UI.Control.OnPreRender*>"
  remarks: "Если адаптер подключен к <xref:System.Web.UI.Control>объекта и OnPreRender, переопределяется метод, переопределенный метод вызывается вместо <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Переопределите метод OnPreRender для выполнения конкретных целевых объектов в `PreRender` Этап жизненного цикла элемента управления. Как правило имеются функции, которые непосредственно выполняются до отрисовки элемента управления выводом."
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Переопределяет <xref:System.Web.UI.Control.OnUnload*>метод для связанного элемента управления.</xref:System.Web.UI.Control.OnUnload*>"
  remarks: "Если адаптер подключен к <xref:System.Web.UI.Control>объекта и OnUnload, переопределяется метод, переопределенный метод вызывается вместо <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName>метод.</xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Переопределите метод OnUnload, чтобы сделать целевой обработки в `Unload` Этап жизненного цикла элемента управления. Обычно имеются функции очистки, которые выполняются до удаления элемента управления."
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  id: Page
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Возвращает ссылку на страницу, где находится элемент управления, связанный с данным адаптером."
  remarks: "Свойства страницы предоставляет доступ к <xref:System.Web.UI.Page?displayProperty=fullName>объекта, где расположен элемент управления.</xref:System.Web.UI.Page?displayProperty=fullName>"
  syntax:
    content: protected System.Web.UI.Page Page { get; }
    return:
      type: System.Web.UI.Page
      description: "Объект <xref href=&quot;System.Web.UI.Page&quot;> </xref> , обеспечивающий доступ к экземпляру страницы, где расположена связанного элемента управления."
  overload: System.Web.UI.Adapters.ControlAdapter.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Возвращает ссылку на адаптер страницы для страницы, где располагается связанного элемента управления."
  remarks: "Свойство PageAdapter предоставляет доступ к <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>для объекта <xref:System.Web.UI.Page>объекта где <xref:System.Web.UI.Control>объект, связанный с текущим <xref:System.Web.UI.Adapters.ControlAdapter>располагается объект.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control> </xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>       Свойство PageAdapter может использоваться для доступа к другим элементам на уровне адаптера страницы, такие как общие функции для конкретных целевых объектов, которые могут применяться к нескольким типам элементов управления на странице."
  syntax:
    content: protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "Объект <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> для страницы, где элемент управления, связанный с текущим <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> расположена."
  overload: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Создает целевую разметку для элемента управления, к которой подключен адаптер элемента управления."
  remarks: "Переопределите метод Render, чтобы создать целевую разметку для отправки в браузер клиента. Метод Render вызывается вместо <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>метод Если <xref:System.Web.UI.Adapters.ControlAdapter>объект присоединяется к <xref:System.Web.UI.Control>объекта.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Используемого для отображения вывода конкретных целевых объектов."
  overload: System.Web.UI.Adapters.ControlAdapter.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Создает целевую разметку для дочерних элементов управления в составном элементе управления, к которой подключен адаптер элемента управления."
  remarks: "Переопределите метод RenderChildren, когда это необходимо создать целевую разметку для набора дочерних элементов управления составного элемента управления, в дополнение к разметке для отдельных дочерних элементов управления."
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Используемого для отображения вывода конкретных целевых объектов."
  overload: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  id: SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Сохраняет управления сведения о состоянии для адаптера управления."
  remarks: "Состояние элемента управления — важные сведения о состоянии требуется, даже если состояние просмотра отключено. Если адаптер должен поддерживать свои собственные сведения о состоянии элемента управления, его можно переопределить SaveAdapterControlState и <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>методы.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>       Адаптер может нужно хранить сведения о состоянии элемента управления, когда нет компонентов, которые должны иметь состояния между запросами, независимо от состояния связанного элемента управления. Например, составного элемента управления состоящий из большого текстового дисплея и группы <xref:System.Web.UI.WebControls.RadioButton>элементы управления могут обрабатывать как отдельное представление браузеры для настольных компьютеров.</xref:System.Web.UI.WebControls.RadioButton> В других браузерах можно разделять отображение — одно представление для текстового дисплея, а другой — для группы переключателей. Адаптер должен обслуживать собственный целевой информацию о активного представления.       Метод SaveAdapterControlState вызывается сразу после <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>метод в `SaveState` Этап жизненного цикла.</xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName> Состояние элемента управления адаптера представляет помимо состояние элемента управления элемента управления."
  syntax:
    content: protected virtual object SaveAdapterControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>, Содержащий сведения о состоянии адаптер управления как <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  id: SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Сохраняет Просмотр сведений о состоянии для адаптера управления."
  remarks: "Когда адаптер должен поддерживать свои собственные данные о состоянии просмотра, оно может заменить SaveAdapterViewState и <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>методы.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>       Адаптер должен поддерживать сведения о состоянии представления при наличии данных, которая должна сохраняться между запросами, независимо от состояния просмотра связанного элемента управления. Например сетка на браузеры для настольных компьютеров может привести как единое представление строк и столбцов. В других браузерах можно разделять отображение на несколько отдельных представлений, такой как список строк и сведения об одной строки. Адаптер может потребоваться настройка данных для представления, которые в настоящий момент неактивны в состоянии представления.       Метод SaveAdapterViewState вызывается непосредственно перед <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>метод в `SaveState` Этап жизненного цикла.</xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName> Состояние просмотра адаптера отделено и дополняет состояние представления элемента управления."
  syntax:
    content: protected virtual object SaveAdapterViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>, Содержащий сведения о состоянии представления адаптер как <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter.ControlAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender
  nameWithType: ControlAdapter.BeginRender
- uid: System.Web.UI.Adapters.ControlAdapter.Browser*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
- uid: System.Web.UI.Adapters.ControlAdapter.Control*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls
  nameWithType: ControlAdapter.CreateChildControls
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender
  nameWithType: ControlAdapter.EndRender
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState
  nameWithType: ControlAdapter.LoadAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState
  nameWithType: ControlAdapter.LoadAdapterViewState
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit
  nameWithType: ControlAdapter.OnInit
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad
  nameWithType: ControlAdapter.OnLoad
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender
  nameWithType: ControlAdapter.OnPreRender
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload
  nameWithType: ControlAdapter.OnUnload
- uid: System.Web.UI.Adapters.ControlAdapter.Page*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render
  nameWithType: ControlAdapter.Render
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren
  nameWithType: ControlAdapter.RenderChildren
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState
  nameWithType: ControlAdapter.SaveAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState
  nameWithType: ControlAdapter.SaveAdapterViewState
