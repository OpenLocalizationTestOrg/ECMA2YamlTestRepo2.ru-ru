### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameResolver
  id: PeerNameResolver
  children:
  - System.Net.PeerToPeer.PeerNameResolver.#ctor
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  - System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  langs:
  - csharp
  name: PeerNameResolver
  nameWithType: PeerNameResolver
  fullName: System.Net.PeerToPeer.PeerNameResolver
  type: Class
  summary: "Задает значения, которые разрешаются <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> для <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> по протоколу PNRP API-Интерфейс поставщика пространства имен."
  remarks: "Объект <xref:System.Net.PeerToPeer.PeerNameRecord>, содержащий все сведения для <xref:System.Net.PeerToPeer.PeerName>, опубликованную в <xref:System.Net.PeerToPeer.Cloud>или облака, который запрошен в процессе разрешения.</xref:System.Net.PeerToPeer.Cloud> </xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRecord>"
  syntax:
    content: public class PeerNameResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Инициализирует новый экземпляр по умолчанию <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver&quot;> </xref> класса."
  remarks: "После успешного устранения <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord>содержит все сведения для указанного <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>, опубликованную в облака, который запрошен во время <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>операции.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public PeerNameResolver ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  id: OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Возвращает одноранговых разрешения данных после <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> события."
  remarks: "Этот метод является асинхронным обратным вызовом для обработки данных разрешения имени однорангового узла после завершения операции разрешения однорангового узла.       Производные типы можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие объект распознавателя одноранговых узлов.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveCompletedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref> Объект, содержащий данные, возвращенные <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> событий."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  id: OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Возвращает однорангового узла данных ход выполнения разрешения при <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> события."
  remarks: "Этот метод является асинхронным обратным вызовом для обработки данных разрешения одноранговых после запроса выполняется разрешение однорангового узла.       Производные типы можно переопределить этот метод для выполнения дополнительных задач при <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>событием.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>"
  syntax:
    content: protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&quot;></xref>Объект, содержащий однорангового узла о ходе выполнения сведения о разрешении имен возвращаемых <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> событий."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  id: Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Сопоставляет указанный <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> во всех облаках, известных вызывающему узлу."
  remarks: "Этот метод связывает имя однорангового узла с облаками. Все облака опрашиваются на наличие <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Если имя узла не может быть разрешен или `null`, <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException>       Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака.       Вызов <xref:System.Net.PeerToPeer.PeerNameResolver>метода аналогичен вызову <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метода для каждой записи имени однорангового узла в списке <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Обратите внимание, что с помощью метода разрешения на запись отдельных одноранговых имен не сделает недействительным разрешение несколько имен одноранговых узлов.       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий.       Если <xref:System.Net.PeerToPeer.Cloud>параметр не задан, используется метод <xref:System.Net.PeerToPeer.Cloud.Available>ярлык для заполнения параметров облака.</xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  example:
  - "The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.  \n  \n [!code-cs[NCLPNRPPeerNameResolver#1](~/add/codesnippet/csharp/m-system.net.peertopeer._2_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Объект <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> , содержащий все записи имени однорангового узла (в виде <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объекты), связанную с именем указанного однорангового узла. Для незащищенных имен одноранговых узлов, то <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> можно зарегистрировать разными пользователями, в том же <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>и связанные с разными конечными точками."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Указанное имя однорангового узла не удалось разрешить."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Разрешает имя указанного однорангового узла во всех облаках, известных вызывающему узлу, возвращая не больше, чем заданное число <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объектов."
  remarks: "Этот метод связывает имя однорангового узла с облаками. Все облака опрашиваются на наличие имени однорангового узла. Для незащищенных имен одноранговых узлов, тем же именем однорангового узла могут быть зарегистрированы с разных пользователей в том же <xref:System.Net.PeerToPeer.Cloud>и связанные с разными конечными точками.</xref:System.Net.PeerToPeer.Cloud> Если <xref:System.Net.PeerToPeer.PeerName>не удается разрешить (например, имя узла не публикуются) <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий.       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: maxRecords
      type: System.Int32
      description: "Максимальное число <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объектов, получаемых из всех <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> объектов для предоставленного `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Объект <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> , размер которых меньше или равно <code> maxRecords </code> записей. Эта коллекция содержит записи имени однорангового узла, связанный с <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> , была разрешена."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code> Меньше или равно нулю."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Не удается разрешить указанное имя однорангового узла."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Сопоставляет указанный <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>в указанном <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Если <xref:System.Net.PeerToPeer.PeerName>не удается разрешить (т. е. имя узла не публикуются) <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака.       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий.       Если <xref:System.Net.PeerToPeer.Cloud>параметр `null`, <xref:System.Net.PeerToPeer.PeerNameResolver>использует <xref:System.Net.PeerToPeer.Cloud.Available>ярлык для заполнения <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> В котором для разрешения имени однорангового узла."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;></xref>содержащий все записи имени однорангового узла (в виде <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объекты), связанную с именем указанного однорангового узла. Для незащищенных имен одноранговых узлов, то <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> можно зарегистрировать разными пользователями, в том же <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>и связанные с разными конечными точками."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Не удается разрешить указанное имя однорангового узла."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Сопоставляет указанный <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>в указанном <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, возвращая не больше, чем заданное число <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объектов.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака. Если имя узла не удалось разрешить, <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException>       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий.       Если <xref:System.Net.PeerToPeer.Cloud>параметр `null`, <xref:System.Net.PeerToPeer.PeerNameResolver>использует <xref:System.Net.PeerToPeer.Cloud.Available>ярлык для заполнения <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> В котором для решения `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Максимальное количество объектов записей имен одноранговых узлов, получаемых из указанного облака для указанного `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Объект <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> , размер которых меньше или равно <code> maxRecords </code> записей. Эта коллекция содержит записи имени однорангового узла, связанный с <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> , была разрешена."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code> Меньше или равно нулю."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Не удается разрешить указанное имя однорангового узла."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Начинает операцию асинхронной одноранговых имя разрешения для указанного <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>во всех облаках, известных вызывающему узлу.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Этот метод асинхронно связывает имя однорангового узла с облаками. Все облака опрашиваются на наличие <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Он выдает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Или он выдает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Если имя узла не удалось разрешить, <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException>       Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака.       Вызов <xref:System.Net.PeerToPeer.PeerNameResolver>метода аналогичен вызову <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метода для каждой записи имени однорангового узла в списке <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Обратите внимание, что с помощью метода разрешения на запись отдельных одноранговых имен не сделает недействительным разрешение несколько имен одноранговых узлов.       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.       Все асинхронные ссылки на объект распознавателя координируются с помощью уникального маркера идентификатора. Это `userState` токен или идентификатор сообщения позволяет операционной системе доставить сообщение единственному принимающему процессу после сообщение было помещено в очередь сообщений.       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: userState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения о состоянии операцией разрешения имени однорангового узла."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба <code> peerName </code> и <code> userState </code> параметры имеют значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Начинает операцию асинхронной одноранговых имя разрешения для указанного <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> во всех облаках, известных вызывающему узлу, возвращая не более чем <code> maxRecords </code> записи имени однорангового узла."
  remarks: "Этот метод асинхронно связывает имя однорангового узла с облаками. Все облака опрашиваются на наличие <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака. Если имя узла не может быть разрешен или `null`, <xref:System.Net.PeerToPeer.PeerToPeerException>возникает исключение.</xref:System.Net.PeerToPeer.PeerToPeerException>       Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Или он выдает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.       Все асинхронные ссылки на объект распознавателя координируются с помощью уникального идентификатора маркера <xref:System.Object>.</xref:System.Object> Это `userState` токен или идентификатор сообщения позволяет операционной системе доставить сообщение единственному принимающему процессу после сообщение было помещено в очередь сообщений.       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: maxRecords
      type: System.Int32
      description: "Максимальное число записей для получения имени однорангового узла."
    - id: userState
      type: System.Object
      description: "Определяемые пользователем объект, содержащий сведения об операции разрешения."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба <code> peerName </code> и <code> userState </code> параметры имеют значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code> Меньше или равно нулю."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Начинает операцию асинхронной одноранговых имя разрешения для указанного <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> в указанном <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Или он выдает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака.       Если <xref:System.Net.PeerToPeer.Cloud>параметр `null`, имя домена разрешается с помощью <xref:System.Net.PeerToPeer.Cloud.Available>клавиш, которое инициализирует значения по умолчанию для <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Свойства.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.       Все асинхронные ссылки на объект распознавателя координируются с помощью уникального маркера идентификатора. Это `userState` токен или идентификатор сообщения позволяет операционной системе доставить сообщение единственному принимающему процессу после сообщение было помещено в очередь сообщений.       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Для решения."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> В котором для решения `peerName`."
    - id: userState
      type: System.Object
      description: "Определяемая пользователем <xref:System.Object>, содержащий сведения об операции разрешения имени однорангового узла.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба <code> peerName </code> и <code> userState </code> параметры имеют значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Начинает операцию асинхронной одноранговых имя разрешения для указанного <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> в указанном <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.  Операция разрешения разрешит не более чем <code> maxRecords </code> записи для указанного имени однорангового узла."
  remarks: "Для незащищенных имен одноранговых узлов, тем же именем может быть зарегистрировано (и связанные с разными конечными точками) разными узлами одного облака.       Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Или он выдает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Если <xref:System.Net.PeerToPeer.Cloud>параметр `null`, имя домена разрешается с помощью <xref:System.Net.PeerToPeer.Cloud.Available>клавиш, которое инициализирует значения по умолчанию для <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Свойства.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>метод, отсутствует эквивалент <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>метод.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Их списки параметров идентичны, за исключением того, что метод ResolveAsync включают системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.       Все асинхронные ссылки на объект распознавателя одноранговых узлов координируются с помощью уникального идентификатора маркера <xref:System.Object>.</xref:System.Object> Это `userState` токен или идентификатор сообщения позволяет операционной системе доставить сообщение единственному принимающему процессу после сообщение было помещено в очередь сообщений.       <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>Событие будет вызываться, если операция разрешения завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "`peerName` Для решения."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "`cloud` В котором для решения `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Максимальное количество записей, получаемых из `cloud` для `peerName`."
    - id: userState
      type: System.Object
      description: "Определяемые пользователем объект, содержащий сведения об операции разрешения имени однорангового узла."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба <code> peerName </code> и <code> userState </code> параметры имеют значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Один или несколько предоставленных параметров являются недопустимыми."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Успешное завершение этой операции требуется по крайней мере один обработчик событий."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> maxRecords </code> Меньше или равно нулю."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  id: ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Отменяет запрос на разрешение имени однорангового указанной асинхронной."
  remarks: "Вызов этого метода гарантирует система не будет пытаться получить дополнительные записи для указанного <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName>  Если этот метод вызывается, когда асинхронный имя операции разрешения однорангового не ожидает выполнения, он действует как «отсутствие операции» (NO OP).       `userState` Необходимо предоставить объект, так как он используется для отслеживания определенного асинхронного вызова, когда выполняются несколько вызовов. Этот объект, предоставленный вызывающей стороной является уникальным для каждого запроса на разрешение имени однорангового узла.       Этот метод немедленно вернет, но операция может или не может отменить немедленно. Аргументы события, возвращенные <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>событие содержит поле, которое может быть запрошено клиентами для определения, произошла ли Отмена.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>       Вызов этого метода гарантирует событие ResolveCompleted будет отправлено с помощью аргумента события как можно быстрее <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>равным `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>"
  syntax:
    content: public void ResolveAsyncCancel (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "Объект, предоставляемый для <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>экземпляра метода, который запущен операции разрешения.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userState </code> Параметры не могут быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  id: ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "ResolveCompleted событие сигнализирует, когда запрос на разрешение имени однорангового узла для конкретного <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>завершена.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "<xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>Событие возникает один раз для каждой конечной точки найден, и это событие будет вызываться только один раз, когда все конечные точки были найдены.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Это событие также будет вызываться, если <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>операция завершится с ошибкой или отменяется.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  id: ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Событие происходит всякий раз, когда <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> объект найден в ответ на <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>операции для конкретного <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  remarks: "При наличии нескольких <xref:System.Net.PeerToPeer.PeerName>в опрашиваемом существуют объекты, это событие происходит один раз для каждого <xref:System.Net.PeerToPeer.PeerNameRecord>найден.</xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs> ResolveProgressChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveProgressChangedEventArgs
  nameWithType: ResolveProgressChangedEventArgs
  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveProgressChangedEventArgs>
  nameWithType: EventHandler<ResolveProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
    name: ResolveProgressChangedEventArgs
    nameWithType: ResolveProgressChangedEventArgs
    fullName: ResolveProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver
  nameWithType: PeerNameResolver.PeerNameResolver
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted
  nameWithType: PeerNameResolver.OnResolveCompleted
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged
  nameWithType: PeerNameResolver.OnResolveProgressChanged
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerNameResolver.Resolve
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync
  nameWithType: PeerNameResolver.ResolveAsync
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel
  nameWithType: PeerNameResolver.ResolveAsyncCancel
