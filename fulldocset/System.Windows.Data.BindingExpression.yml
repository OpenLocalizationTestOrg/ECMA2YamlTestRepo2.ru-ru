### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  id: BindingExpression
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.ResolvedSource
  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpression.UpdateSource
  - System.Windows.Data.BindingExpression.UpdateTarget
  langs:
  - csharp
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  summary: "Содержит сведения об одном экземпляре <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>."
  remarks: "<xref:System.Windows.Data.Binding>Класс является классом высокого уровня для объявления привязки.</xref:System.Windows.Data.Binding> Класс BindingExpression является базовым объектом, поддерживающим связь между источником привязки и целевого объекта привязки. Объект <xref:System.Windows.Data.Binding>содержит всю информацию, которая может совместно использоваться в нескольких объектов BindingExpression.</xref:System.Windows.Data.Binding> Выражение BindingExpression представляет собой экземпляр выражения, не могут быть доступны, которая содержит все сведения об экземпляре <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding>       Например, рассмотрим следующую команду, где `myDataObject` является экземпляром класса `MyData` класса `myBinding` является источником <xref:System.Windows.Data.Binding>объекта, и `MyData` класс является определенный класс, который содержит строковое свойство с именем `MyDataProperty`.</xref:System.Windows.Data.Binding> В этом примере привязывает текстовое содержимое `mytext`, который является экземпляром класса <xref:System.Windows.Controls.TextBlock>, `MyDataProperty`.</xref:System.Windows.Controls.TextBlock>       [!code-cs[CodeOnlyBinding&#1;](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)][!code-vb[CodeOnlyBinding&#1;](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1) ] можно использовать те же `myBinding` объект для создания других привязок.   Например, можно использовать `myBinding` объект для привязки текстового содержимого типа &quot;флажок&quot; для `MyDataProperty`. В этом случае будут два экземпляра BindingExpression, которые совместно используют `myBinding` объекта.       Объект BindingExpression можно получить с помощью <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>метода или <xref:System.Windows.FrameworkElement.GetBindingExpression%2A>метода для объекта с привязкой к данным.</xref:System.Windows.FrameworkElement.GetBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>"
  syntax:
    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements:
  - System.Windows.IWeakEventListener
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.HasError
  - System.Windows.Data.BindingExpressionBase.HasValidationError
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationError
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает объект источника привязки, это <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> использует."
  remarks: ''
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "Объект источника привязки, это <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> использует."
  overload: System.Windows.Data.BindingExpression.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> текущего <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public System.Windows.Data.Binding ParentBinding { get; }
    return:
      type: System.Windows.Data.Binding
      description: "<xref href=&quot;System.Windows.Data.Binding&quot;> </xref> Текущего выражения привязки."
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  id: ResolvedSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает объект источника привязки для этой <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public object ResolvedSource { get; }
    return:
      type: System.Object
      description: "Для этого объекта источника привязки <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  id: ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Возвращает имя свойства источника привязки для этой <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public string ResolvedSourcePropertyName { get; }
    return:
      type: System.String
      description: "Имя свойства источника привязки для этого <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Этот член поддерживает [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] инфраструктуру и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "Тип <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> вызов этого метода. Это распознает только объекты типа диспетчера <xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>."
    - id: sender
      type: System.Object
      description: "Объект, вызвавший событие."
    - id: e
      type: System.EventArgs
      description: "Данные события."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если прослушиватель обработал событие; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Отправляет текущее значение целевого объекта привязки к свойству источника привязки в <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> или <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> привязки."
  remarks: "Этот метод не выполняет никаких действий при <xref:System.Windows.Data.Binding.Mode%2A>привязке не равна <xref:System.Windows.Data.BindingMode>или <xref:System.Windows.Data.BindingMode>.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding.Mode%2A>       Если <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>привязки имеет значение <xref:System.Windows.Data.UpdateSourceTrigger>, необходимо вызвать метод UpdateSource или изменения не будут распространены в источнике.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>"
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Привязка была отсоединена от своей цели."
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Принудительно вызывает передачу данных из свойства источника привязки в свойство цели привязки."
  remarks: "Этот метод позволяет вызвать перенос данных из свойства источника к целевому свойству. Если исходный объект реализует механизм уведомления, нужные изменения свойства, такие как <xref:System.ComponentModel.INotifyPropertyChanged>, целевой объект обновляется автоматически.</xref:System.ComponentModel.INotifyPropertyChanged> Тем не менее вы можете использовать этот метод для обновления целевого свойства явным образом в случаях, где исходный объект не обеспечивает правильную уведомлений об изменении свойства. Этот метод также можно использовать, если приложению необходимо периодически обновлять свойства целевого объекта."
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateTarget*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Привязка была отсоединена от своей цели."
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.BindingExpression.DataItem
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingExpression.ParentBinding
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.BindingExpression.UpdateSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
- uid: System.Windows.Data.BindingExpression.DataItem*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.ResolvedSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
- uid: System.Windows.Data.BindingExpression.UpdateTarget*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: BindingExpression.UpdateTarget
