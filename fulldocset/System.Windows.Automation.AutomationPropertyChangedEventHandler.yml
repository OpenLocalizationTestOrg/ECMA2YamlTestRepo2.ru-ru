### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationPropertyChangedEventHandler
  id: AutomationPropertyChangedEventHandler
  langs:
  - csharp
  name: AutomationPropertyChangedEventHandler
  nameWithType: AutomationPropertyChangedEventHandler
  fullName: System.Windows.Automation.AutomationPropertyChangedEventHandler
  type: Delegate
  summary: "Представляет метод, реализованный приложение клиента автоматизации пользовательского интерфейса для обработки событий, вызываемых поставщиком модели автоматизации пользовательского интерфейса при изменении свойства."
  remarks: "<xref:System.Windows.Automation.AutomationElement>Представленный `sender` может не иметь все кэшированные свойства и шаблоны, в зависимости от того, было ли приложение подписан на событие во время <xref:System.Windows.Automation.CacheRequest>был активен.</xref:System.Windows.Automation.CacheRequest> </xref:System.Windows.Automation.AutomationElement>       В зависимости от реализации поставщика событие изменения свойства не обязательно означает, что значение свойства отличается; Это может просто означать было задано свойство, даже в то же значение. Если приложение должно отвечать только на фактические изменения, это вы несете ответственность за отслеживание состояния этого свойства."
  example:
  - "In the following example, changes in the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> property of subscribed elements are handled.  \n  \n [!code-cs[UIAClient_snip#172](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#172)]\n [!code-vb[UIAClient_snip#172](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#172)]"
  syntax:
    content: public delegate void AutomationPropertyChangedEventHandler(object sender, AutomationPropertyChangedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
