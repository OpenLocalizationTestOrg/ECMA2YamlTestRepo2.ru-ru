### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageStore
  id: PackageStore
  children:
  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  langs:
  - csharp
  name: PackageStore
  nameWithType: PackageStore
  fullName: System.IO.Packaging.PackageStore
  type: Class
  summary: "Представляет коллекцию конкретного приложения <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> экземпляров, используемых в сочетании с <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
  remarks: "PackageStore определяет коллекции ссылок пакета, которые были открыты и активны в приложении.  Добавляемый PackageStore пакетов доступ — по значению ключа URI.  PackageStore поддерживает три распространенных случаев: 1.  Доступ к <xref:System.IO.Packaging.PackagePart>данным через <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart>      2.  Приложение, получив экземпляр из <xref:System.IO.Packaging.Package>заданному URI пакета.</xref:System.IO.Packaging.Package>      3.  Доступе к пакетам, которые создаются и хранятся в папке <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream>       Для повышения производительности и свести к минимуму нагрузку повторяющиеся файловых операций открытия/закрытия, PackageStore используется для управления экземпляров обращаются пакетов <xref:System.IO.Packaging.PackWebRequest>и непосредственно приложением.</xref:System.IO.Packaging.PackWebRequest>  При доступе к данным в пакете, <xref:System.IO.Packaging.Package>Запрошенный адрес <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A>сначала проверяется, находится ли пакет уже определены и открыт в PackageStore.</xref:System.IO.Packaging.PackagePart.Uri%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  Если пакет определен как открытый в PackageStore, запрошенный частей может осуществляться непосредственно, без повторного открытия и закрытия пакета для каждого запроса.       Если приложение открывает пакет с <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A>можно вызвать, чтобы добавить пакет PackageStore.</xref:System.IO.Packaging.PackageStore.AddPackage%2A> </xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>должен быть вызван, более поздней версии, чтобы удалить пакет из PackageStore до вызова метода <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.</xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName></xref:System.IO.Packaging.PackageStore.RemovePackage%2A>       Пакеты XPS открывается с <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>конструктор автоматически добавляются и удаляются из PackageStore при создании и удалении документа.</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>  (Необходимо вызвать <xref:System.IO.Packaging.PackageStore.AddPackage%2A>или <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>отдельно для открытой пакеты XPS с <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>конструкторов.)</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> </xref:System.IO.Packaging.PackageStore.RemovePackage%2A> </xref:System.IO.Packaging.PackageStore.AddPackage%2A>       Разрешения для операций ввода-вывода файла пакета, доступных через PackageStore остается неизменным, как разрешения ввода-вывода, назначенных для пакета при его открытии.  PackageStore только ссылки на пакеты, добавленные в хранилище.  Это приложение должно правильно открытия, обновления и закрытия каждого пакета.       Добавляемый PackageStore пакетов может осуществляться в многопоточных средах, при их использовании в сочетании с [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] средство синтаксического анализа, например <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>  При работе в многопоточной среде, приложение должно заблокировать пакет перед выполнением доступа."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public static class PackageStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  id: AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Добавляет <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> в хранилище."
  remarks: "`packageUri`Определяет ключ пакет URI, который сравнивается при вызове <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest>       Если `packageUri` соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A>для <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackWebRequest>вызова, пакет, определенный в <xref:System.IO.Packaging.PackageStore>используется для доступа к запрошенной части.</xref:System.IO.Packaging.PackageStore> </xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       Если `packageUri` не соответствует <xref:System.IO.Packaging.PackagePart.Uri%2A>для объекта <xref:System.IO.Packaging.PackagePart>в <xref:System.IO.Packaging.PackWebRequest>вызов, пакет с указанным URI будет открыт для доступа к запрошенной части.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission>для всех пользовательских <xref:System.IO.Packaging.Package>(отличных<xref:System.IO.Packaging.ZipPackage>) типы.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the AddPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]"
  syntax:
    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);
    parameters:
    - id: uri
      type: System.Uri
      description: "Ключ [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] из `package` для сравнения в <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
    - id: package
      type: System.IO.Packaging.Package
      description: "Пакет, для добавления в хранилище."
  overload: System.IO.Packaging.PackageStore.AddPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Недопустимый пакет уже [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Пакет с указанным <code> packageUri </code> уже находится в хранилище."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  id: GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Возвращает <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> с указанным [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] из хранилища."
  remarks: "`packageUri`сопоставляется с URL-адреса, указанного в <xref:System.IO.Packaging.PackageStore.AddPackage%2A>вызов метода.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission>для всех пользовательских <xref:System.IO.Packaging.Package>(отличных<xref:System.IO.Packaging.ZipPackage>) типы.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the GetPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]"
  syntax:
    content: public static System.IO.Packaging.Package GetPackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Пакета для возврата."
    return:
      type: System.IO.Packaging.Package
      description: "Пакет с указанным <code> packageUri </code>; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если пакет с указанным <code> packageUri </code> не находится в хранилище."
  overload: System.IO.Packaging.PackageStore.GetPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Недопустимый пакет уже [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  id: RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Удаляет <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> с указанным [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] из хранилища."
  remarks: "`packageUri`сопоставляется с URL-адреса, указанного в <xref:System.IO.Packaging.PackageStore.AddPackage%2A>вызов метода.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Примечание по безопасности** этот метод требует <xref:System.Security.Permissions.EnvironmentPermission>для всех пользовательских <xref:System.IO.Packaging.Package>(отличных<xref:System.IO.Packaging.ZipPackage>) типы.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the RemovePackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]"
  syntax:
    content: public static void RemovePackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Пакета для удаления."
  overload: System.IO.Packaging.PackageStore.RemovePackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>Недопустимый пакет уже [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
- uid: System.IO.Packaging.PackageStore.AddPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage
  nameWithType: PackageStore.AddPackage
- uid: System.IO.Packaging.PackageStore.GetPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage
  nameWithType: PackageStore.GetPackage
- uid: System.IO.Packaging.PackageStore.RemovePackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage
  nameWithType: PackageStore.RemovePackage
