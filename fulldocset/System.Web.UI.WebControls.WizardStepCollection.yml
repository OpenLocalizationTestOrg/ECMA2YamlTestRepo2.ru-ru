### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepCollection
  id: WizardStepCollection
  children:
  - System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Clear
  - System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Count
  - System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  - System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  - System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  - System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: WizardStepCollection
  nameWithType: WizardStepCollection
  fullName: System.Web.UI.WebControls.WizardStepCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в элемент управления, который выступает в качестве мастера. Этот класс не наследуется."
  remarks: "Класс WizardStepCollection используется для хранения и управления коллекцией <xref:System.Web.UI.WebControls.WizardStepBase>-производных объектов в элемент управления, который выступает в качестве мастера, такие как <xref:System.Web.UI.WebControls.CreateUserWizard>управления или <xref:System.Web.UI.WebControls.Wizard>управления.</xref:System.Web.UI.WebControls.Wizard> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.WizardStepBase> Например <xref:System.Web.UI.WebControls.Wizard>элемент управления использует класс WizardStepCollection для его <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>свойство.</xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> </xref:System.Web.UI.WebControls.Wizard>       Существует несколько способов, которые можно получить доступ к <xref:System.Web.UI.WebControls.WizardStepBase>-производных объектов в WizardStepCollection:-использование <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>свойство для прямого доступа к <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект с указанным индексом (с нуля).</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> </xref:System.Web.UI.WebControls.WizardStepBase>      -Используйте <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>метод для создания перечислитель, который может использоваться для итерации по коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>      -Используйте <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>метод для копирования содержимого коллекции в WizardStepCollection <xref:System.Array>объекта.</xref:System.Array> </xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>"
  example:
  - "The following example demonstrates how to populate the WizardStepCollection collection using declarative syntax.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_1.aspx)]  \n  \n The following example demonstrates how to programmatically populate a WizardStepCollection collection.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_2.aspx)]  \n  \n The following is the code-behind file for the Web page in the preceding example.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_3.cs)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_3.vb)]"
  syntax:
    content: 'public sealed class WizardStepCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  id: Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект в конец коллекции."
  remarks: "Добавляет метод Add <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в конец <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Чтобы добавить <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в коллекцию в расположении конкретного индекса, используйте <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>метод.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Add method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived <xref:System.Web.UI.WebControls.WizardStep> objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/visualbasic/dbb341bd-e6ba-460d-b742-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/csharp/dbb341bd-e6ba-460d-b742-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект, добавляемый к <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-— Переданный объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект в коллекцию по указанному индексу."
  remarks: "Добавляет метод методом AddAt <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в коллекцию по указанному индексу.</xref:System.Web.UI.WebControls.WizardStepBase>       Чтобы добавить <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в конец <xref:System.Web.UI.WebControls.WizardStepCollection>сборе, использовании <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>метода.</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс, по которому нужно вставить <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производного объекта."
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект, добавляемый к <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-— Переданный объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет все <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов из коллекции."
  remarks: "Используйте метод Clear для удаления всех <xref:System.Web.UI.WebControls.WizardStepBase>-производных объектов из <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      Настроек [!NOTE] настроек после метод Clear удаляет <xref:System.Web.UI.WebControls.WizardStepBase>-производных объектов из коллекции, <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>свойство <xref:System.Web.UI.WebControls.WizardStepCollection>коллекция имеет нулевое значение.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  id: Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет, является ли <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекция содержит заданный <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производного объекта."
  remarks: "Метод Contains используется для определения ли <xref:System.Web.UI.WebControls.WizardStepBase>-производного объекта, содержащегося в коллекции.</xref:System.Web.UI.WebControls.WizardStepBase> Этот метод обычно используется для проверки существования <xref:System.Web.UI.WebControls.WizardStepBase>-производного объекта перед выполнением задачи, такие как удаление <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект из коллекции.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект найден в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>wizardStep</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Копирует все элементы из <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекцию в совместимый одномерный массив <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> объектов, начиная с указанного индекса в массиве назначения."
  remarks: "Используйте метод CopyTo для копирования содержимого коллекции в указанный массив, начинающийся с нуля. Элементы копируются, начиная с указанного индекса целевого массива. Когда элементы в массиве, синтаксис массива можно использовать для доступа к элементам в <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection>       В качестве альтернативы можно также использовать <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>метод для создания перечислитель, который может использоваться для доступа к элементам в коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.WizardStepBase> objects from the collection to an array. The array is then iterated through to display the <xref:System.Web.UI.Control.ID%2A> property of each <xref:System.Web.UI.WebControls.WizardStepBase>-derived object. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/csharp/069e4b03-58e3-4a5a-8594-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/visualbasic/069e4b03-58e3-4a5a-8594-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WizardStepBase[]
      description: "Отсчитываемый от нуля массив <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> объектов, которые получает элементы, скопированные из коллекции."
    - id: index
      type: System.Int32
      description: "Позиция в массиве назначения, с которого массива начинается получение копируемые элементы."
  overload: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает число <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> элемента управления <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
  remarks: "Свойство Count для определения числа <xref:System.Web.UI.WebControls.WizardStepBase>-производных объектов в <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Свойство Count обычно используется во время итерации по коллекции для определения ее верхней границы."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Число <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> управления."
  overload: System.Web.UI.WebControls.WizardStepCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает <xref:System.Collections.IEnumerator>-реализован объект, который может использоваться для итерации по <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в коллекции.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>-Реализованный объект, содержащий все <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  id: IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет индекс, представляющий позицию указанного <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект в коллекции."
  remarks: "Метод IndexOf используется для определения индекса указанного <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в текущем <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Если <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект не найден в коллекции, метод возвращает значение -1.</xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект для поиска в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
    return:
      type: System.Int32
      description: "Если найден, отсчитываемый от нуля индекс первого вхождения <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект, переданный в текущем <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции; в противном случае — значение -1."
  overload: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-— Переданный объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Вставляет указанный <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект в коллекцию по указанному индексу."
  remarks: "Метод Insert добавляет <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в коллекцию по указанному индексу.</xref:System.Web.UI.WebControls.WizardStepBase>       Кроме того, можно использовать <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>метод, чтобы добавить <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в коллекцию.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Чтобы добавить <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект в конец <xref:System.Web.UI.WebControls.WizardStepCollection>сборе, использовании <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>метода.</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      Настроек [!NOTE] настроек метод Insert и <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>метода выполняют по сути ту же функцию.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> При вызове метода вставки, он просто передает `wizardStep` и `index` параметры <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>метод.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Insert method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/visualbasic/a6945f59-a965-41a5-8e08-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/csharp/a6945f59-a965-41a5-8e08-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс, по которому нужно вставить <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производного объекта."
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект для вставки в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производных объектов в коллекции можно изменить."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции может быть изменен; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным)."
  remarks: "Это свойство является производным от <xref:System.Collections.ICollection>интерфейса и переопределяется, чтобы всегда возвращать `false`.</xref:System.Collections.ICollection>       Дополнительные сведения о свойстве IsSynchronized см. <xref:System.Collections.ICollection.IsSynchronized%2A>свойство <xref:System.Collections.ICollection>интерфейса</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект из коллекции по указанному индексу."
  remarks: "Используйте свойство элемента для извлечения <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект по указанному индексу в <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции с помощью нотации массива.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Web.UI.WebControls.WizardStep&quot;> </xref> извлекаемого объекта."
    return:
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект в <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекцию по указанному индексу."
  overload: System.Web.UI.WebControls.WizardStepCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  id: Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет указанный <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект из коллекции."
  remarks: "Используйте метод Remove для удаления <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект от <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Кроме того, можно использовать <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>метод для удаления <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект из указанного расположения в <xref:System.Web.UI.WebControls.WizardStepCollection>коллекции.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.WizardStepBase>-derived object from the <xref:System.Web.UI.WebControls.WizardStepCollection> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/visualbasic/f9ffdaaf-8580-49a0-8194-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/csharp/f9ffdaaf-8580-49a0-8194-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-Производный объект, удаляемый из коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-— Переданный объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект из коллекции в указанном месте."
  remarks: "Метод RemoveAt служит для удаления <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект от <xref:System.Web.UI.WebControls.WizardStepCollection>коллекцию по указанному индексу.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Кроме того, можно удалить определенный <xref:System.Web.UI.WebControls.WizardStepBase>-производный объект из коллекции с помощью <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>метод.</xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-производный объект для удаления."
  overload: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к коллекции."
  remarks: "Объект, возвращаемый в этой реализации является <xref:System.Web.UI.WebControls.WizardStepCollection>сам объект.</xref:System.Web.UI.WebControls.WizardStepCollection>       Дополнительные сведения о свойстве SyncRoot см. в разделе <xref:System.Collections.ICollection.SyncRoot%2A>свойство <xref:System.Collections.ICollection>интерфейса.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Копирует все элементы из <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции в одномерный массив, начиная с указанного индекса в целевом массиве."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Отсчитываемый от нуля <xref:System.Array>, получающий элементы, скопированные из <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> коллекции.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Позиция в массиве назначения, с которого начинается копироваться содержимое."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный объект в конец коллекции."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для добавления в конец коллекции.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Позиция, в которую вставлен новый элемент."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет, содержит ли коллекция указанный объект."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для поиска в коллекции.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Object>находится в <xref:System.Collections.IList>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет индекс, представляющий позицию указанного объекта в коллекции."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект для поиска в коллекции."
    return:
      type: System.Int32
      description: "Значение индекса указанного объекта в коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный объект в коллекцию в указанной позиции."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс, по которому вставляется объект в коллекцию."
    - id: value
      type: System.Object
      description: "Объект, вставляемый в коллекцию."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает значение, указывающее, имеет ли коллекция фиксированный размер."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если коллекция имеет фиксированный размер. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает объект по указанному индексу в коллекции."
  remarks: 'Это свойство предоставляет возможность доступа к указанному элементу коллекции с помощью следующего синтаксиса: myCollection [index].'
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс получаемого объекта из коллекции."
    return:
      type: System.Object
      description: "Объект, который требуется получить."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет указанный объект из коллекции."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Объект, удаляемый из коллекции."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepBase
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
- uid: System.Web.UI.WebControls.WizardStepBase[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WizardStepBase
    name: WizardStepBase
    nameWithType: WizardStepBase
    fullName: WizardStepBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add
  nameWithType: WizardStepCollection.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt
  nameWithType: WizardStepCollection.AddAt
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear
  nameWithType: WizardStepCollection.Clear
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains
  nameWithType: WizardStepCollection.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo
  nameWithType: WizardStepCollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.Count*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: WizardStepCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf
  nameWithType: WizardStepCollection.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert
  nameWithType: WizardStepCollection.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item
  nameWithType: WizardStepCollection.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove
  nameWithType: WizardStepCollection.Remove
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt
  nameWithType: WizardStepCollection.RemoveAt
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: WizardStepCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: WizardStepCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: WizardStepCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: WizardStepCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: WizardStepCollection.System.Collections.IList.Remove
