### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.IComSoapPublisher
  id: IComSoapPublisher
  children:
  - System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  - System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  langs:
  - csharp
  name: IComSoapPublisher
  nameWithType: IComSoapPublisher
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher
  type: Interface
  summary: "Публикует COM-интерфейсы для приложений COM + с поддержкой протокола SOAP."
  remarks: "Реализация IComSoapPublisher <xref:System.EnterpriseServices.Internal.Publish>; Подробные сведения см.</xref:System.EnterpriseServices.Internal.Publish>       IComSoapPublisher используется внутренне платформой .NET Framework. Необходимо непосредственно использовать его в коде."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013eee-730b-45e2-ba24-874b7242c425")]

      public interface IComSoapPublisher
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Создает почтовый ящик приложения COM + с поддержкой протокола SOAP на указанный URL-адрес. Реализован не полностью."
  remarks: "Реализован не полностью. не в настоящее время создать почтовый ящик. Возвращает сообщение об ошибке «COM + SOAP службы SMTP-публикация не поддерживается»."
  syntax:
    content: public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "URL-адрес корневого почтового сервера."
    - id: MailBox
      type: System.String
      description: "Чтобы создать почтовый ящик."
    - id: SmtpName
      type: System.String
      description: "При возвращении данного метода этот параметр содержит имя сервера Simple Mail Transfer Protocol (SMTP), содержащие почтовый ящик."
    - id: Domain
      type: System.String
      description: "При возвращении данного метода этот параметр содержит домен SMTP-сервера."
    - id: PhysicalPath
      type: System.String
      description: "При возвращении данного метода этот параметр содержит путь файловой системы для почтового ящика."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Создает виртуальный корень приложения COM + с поддержкой протокола SOAP."
  remarks: "Рекомендуется <xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>использоваться вместо CreateVirtualRoot.</xref:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx%2A>"
  syntax:
    content: public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);
    parameters:
    - id: Operation
      type: System.String
      description: "Выполняемая операция."
    - id: FullUrl
      type: System.String
      description: "Полный URL-адрес виртуального корня."
    - id: BaseUrl
      type: System.String
      description: "При возвращении данного метода этот параметр содержит базовый URL-адрес."
    - id: VirtualRoot
      type: System.String
      description: "При возвращении данного метода этот параметр содержит имя виртуального корневого каталога."
    - id: PhysicalPath
      type: System.String
      description: "При возвращении данного метода этот параметр содержит путь к файлу для виртуального корневого каталога."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду.       - или - вызывающий объект не имеет разрешения на доступ к сведениям доменных имен (DNS)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>FullUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Возникает ошибка при разрешении имени локального узла."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>FullUrl</code>является пустым.       - или - схемой, указанной в <code>FullUrl</code> является недопустимым.       - или - <code>FullUrl</code> содержит более двух знаков косой черты подряд.       - или - пароль, указанный в <code>FullUrl</code> является недопустимым.       - или - имя узла, указанное в <code>FullUrl</code> является недопустимым.       - или - имя файла, указанное в <code>FullUrl</code> является недопустимым."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  id: DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: DeleteMailBox(String,String,String)
  nameWithType: IComSoapPublisher.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Удаляет почтовый ящик приложения COM + с поддержкой протокола SOAP на указанный URL-адрес. Реализован не полностью."
  remarks: "Реализован не полностью. Удаляет почтовый ящик. Возвращает сообщение об ошибке «COM + SOAP службы SMTP-публикация не поддерживается»."
  syntax:
    content: public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "URL-адрес корневого почтового сервера."
    - id: MailBox
      type: System.String
      description: "Почтовый ящик."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  id: DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Удаляет виртуальный корень приложения COM + с поддержкой протокола SOAP. Реализован не полностью."
  remarks: "Функциональные возможности для <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>еще не доступен.</xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>      Настроек [!CAUTION] настроек метод в настоящее время возвращает без ошибок, но виртуальный корень не удаляется.       Если функциональность станет доступной, рекомендуемым методом будет <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>.</xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>"
  syntax:
    content: public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);
    parameters:
    - id: RootWebServer
      type: System.String
      description: "Корневого веб-узла."
    - id: FullUrl
      type: System.String
      description: "Полный URL-адрес виртуального корня."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  id: GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GacInstall(String)
  nameWithType: IComSoapPublisher.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Устанавливает сборку в глобальный кэш сборок."
  syntax:
    content: public void GacInstall (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "Путь файловой системы для сборки."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  id: GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GacRemove(String)
  nameWithType: IComSoapPublisher.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Удаляет сборку из глобального кэша сборок."
  syntax:
    content: public void GacRemove (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "Путь файловой системы для сборки."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>AssemblyPath</code>является пустым."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>не найден."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "Сборка или модуль был загружен дважды с двумя разными свидетельствами."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>не является допустимой сборкой."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  id: GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GetAssemblyNameForCache(String,String)
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Возвращает полный путь для созданной подписанной сборки со строгим именем в папке SoapCache."
  remarks: "Для неуправляемого компонента COM + для публикации через службу удаленного взаимодействия .NET учетную запись-посредник должна быть создана делать неуправляемые компоненты доступными для .NET Framework. Это делается путем программного выполнения те же действия, как программа импорта библиотек типов (Tlbimp.exe) [!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)] инструмент, используемый для преобразования библиотек типов COM + в сборки метаданных прокси-сервера. Для активации клиента по протоколу SOAP для успешного выполнения тем не менее, клиентские и серверные компьютеры должны совместно использовать одинаковые учетные записи-посредники со строгими именами подписью метаданных. По этой причине при создании управляемой прокси-сборки для неуправляемого компонента COM + ключ строгого имени также создается и используется для подписи сборки прокси-сервера."
  syntax:
    content: public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);
    parameters:
    - id: TypeLibPath
      type: System.String
      description: "Путь к файлу, содержащему библиотеку типов."
    - id: CachePath
      type: System.String
      description: "При возвращении данного метода этот параметр содержит полный путь к прокси-сборке в каталоге SoapCache."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>TypeLibPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Имя файла является пустым, содержит только пробелы или содержит недопустимые символы."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Доступ к <code> TypeLibPath </code> запрещен."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Указанный путь и имя файла превышает максимальную длину, определенная системой. Например для платформ на основе Windows пути должна составлять менее 248 знаков и имена файлов должны быть короче 260 символов."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>TypeLibPath</code>содержит двоеточие (:) в середине строки."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  id: GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: GetTypeNameFromProgId(String,String)
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Отображает сборку и возвращает имя типа, соответствующее коду ProgID."
  syntax:
    content: public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "Путь файловой системы для сборки."
    - id: ProgId
      type: System.String
      description: "Программный идентификатор класса."
    return:
      type: System.String
      description: "Имя типа, соответствующее коду ProgID."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Обрабатывает клиентскую библиотеку типов, создавая файл конфигурации на стороне клиента."
  remarks: "Этот метод используется в импорте клиентского прокси для создания файла конфигурации удаленного взаимодействия.       В реализации Если `Mode` параметр имеет значение «wellknownobject», или пустая строка (&quot;»), предполагается хорошо известного объекта. в противном случае предполагается активация клиента.       Рекомендуется <xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>использоваться вместо ProcessClientTlb.</xref:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx%2A>"
  syntax:
    content: public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "Программный идентификатор класса."
    - id: SrcTlbPath
      type: System.String
      description: "Путь к файлу, содержащему библиотеку типов."
    - id: PhysicalPath
      type: System.String
      description: "Каталог веб-приложения."
    - id: VRoot
      type: System.String
      description: "Имя виртуального корневого каталога."
    - id: BaseUrl
      type: System.String
      description: "Базовый URL-адрес, содержащий виртуальный корень."
    - id: Mode
      type: System.String
      description: "Режим активации."
    - id: Transport
      type: System.String
      description: "Не используется. Укажите <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для этого параметра."
    - id: AssemblyName
      type: System.String
      description: "При возвращении данного метода этот параметр содержит отображаемое имя сборки."
    - id: TypeName
      type: System.String
      description: "При возвращении данного метода этот параметр содержит полное имя сборки."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Обрабатывает библиотеку типов сервера, добавляя или удаляя записи компонентов в файлах Web.config и Default.disco. При необходимости, создает учетную запись-посредник."
  remarks: "Приводит к возникновению ошибки записи файла Web.config и Default.disco для компонентов COM +. При необходимости, создает учетную запись-посредник.       Рекомендуется <xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>и <xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A>использоваться вместо ProcessServerTlb.</xref:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb%2A> </xref:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb%2A>"
  syntax:
    content: public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string AssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "Программный идентификатор класса."
    - id: SrcTlbPath
      type: System.String
      description: "Путь к файлу, содержащему библиотеку типов."
    - id: PhysicalPath
      type: System.String
      description: "Каталог веб-приложения."
    - id: Operation
      type: System.String
      description: "Выполняемая операция."
    - id: AssemblyName
      type: System.String
      description: "При возвращении данного метода этот параметр содержит отображаемое имя сборки."
    - id: TypeName
      type: System.String
      description: "При возвращении данного метода этот параметр содержит полное имя сборки."
    - id: Error
      type: System.String
      description: "При возвращении данного метода этот параметр содержит сообщение об ошибке, если была обнаружена проблема."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду."
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "<code> SrcTlbPath </code> Параметр ссылается на библиотеку scrobj.dll; таким образом, не поддерживается публикация компонентов скриптов в SOAP."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  id: RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: RegisterAssembly(String)
  nameWithType: IComSoapPublisher.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Регистрирует сборку для COM-взаимодействия."
  remarks: "Реализация RegisterAssembly использует средство регистрации сборок (Regasm.exe) для регистрирует создаваемые классы в сборке. Дополнительные сведения см. в разделе [Regasm.exe (средство регистрации сборок)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void RegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "Путь файловой системы для сборки."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "Входная сборка не имеет строгого имени."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду.       - или - база кода, которая не начинается с «file://» была указана без требуемого <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>не найден, или не указано расширение имени файла."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>не является допустимой сборкой."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "Сборка или модуль был загружен дважды с двумя разными свидетельствами, или имя сборки содержит больше MAX_PATH знаков."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод, помеченный атрибутом <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> не <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>.       - или - более чем один метод, помеченный <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> на данном уровне иерархии.       подпись метода, помеченного - или - <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> является недопустимым."
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  id: UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  langs:
  - csharp
  name: UnRegisterAssembly(String)
  nameWithType: IComSoapPublisher.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Отменяет регистрацию COM-взаимодействия сборка."
  remarks: "Реализация UnRegisterAssembly использует Regasm.exe для отмены регистрации создаваемые классы в сборке. Дополнительные сведения см. в разделе [Regasm.exe (средство регистрации сборок)](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void UnRegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "Путь файловой системы для сборки."
  overload: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "У вызывающего кода в цепочке вызовов нет разрешения на доступ к неуправляемому коду.       - или - база кода, которая не начинается с «file://» была указана без требуемого <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>не найден, или не указано расширение имени файла."
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>не является допустимой сборкой."
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "Сборка или модуль был загружен дважды с двумя разными свидетельствами, или имя сборки содержит больше MAX_PATH знаков."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод, помеченный атрибутом <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> не <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>.       - или - более чем один метод, помеченный <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> на данном уровне иерархии.       подпись метода, помеченного - или - <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> является недопустимым."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.FileLoadException
  isExternal: true
  name: System.IO.FileLoadException
- uid: System.BadImageFormatException
  isExternal: true
  name: System.BadImageFormatException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteMailBox(String,String,String)
  nameWithType: IComSoapPublisher.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: IComSoapPublisher.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacInstall(String)
  nameWithType: IComSoapPublisher.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacRemove(String)
  nameWithType: IComSoapPublisher.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetAssemblyNameForCache(String,String)
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetTypeNameFromProgId(String,String)
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: RegisterAssembly(String)
  nameWithType: IComSoapPublisher.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: UnRegisterAssembly(String)
  nameWithType: IComSoapPublisher.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateMailBox
  nameWithType: IComSoapPublisher.CreateMailBox
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: CreateVirtualRoot
  nameWithType: IComSoapPublisher.CreateVirtualRoot
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteMailBox
  nameWithType: IComSoapPublisher.DeleteMailBox
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: DeleteVirtualRoot
  nameWithType: IComSoapPublisher.DeleteVirtualRoot
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacInstall
  nameWithType: IComSoapPublisher.GacInstall
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GacRemove
  nameWithType: IComSoapPublisher.GacRemove
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetAssemblyNameForCache
  nameWithType: IComSoapPublisher.GetAssemblyNameForCache
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: GetTypeNameFromProgId
  nameWithType: IComSoapPublisher.GetTypeNameFromProgId
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessClientTlb
  nameWithType: IComSoapPublisher.ProcessClientTlb
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: ProcessServerTlb
  nameWithType: IComSoapPublisher.ProcessServerTlb
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: RegisterAssembly
  nameWithType: IComSoapPublisher.RegisterAssembly
- uid: System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly*
  parent: System.EnterpriseServices.Internal.IComSoapPublisher
  isExternal: false
  name: UnRegisterAssembly
  nameWithType: IComSoapPublisher.UnRegisterAssembly
