### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapEnumAttribute
  id: SoapEnumAttribute
  children:
  - System.Xml.Serialization.SoapEnumAttribute.#ctor
  - System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapEnumAttribute.Name
  langs:
  - csharp
  name: SoapEnumAttribute
  nameWithType: SoapEnumAttribute
  fullName: System.Xml.Serialization.SoapEnumAttribute
  type: Class
  summary: "Элементы управления как <xref:System.Xml.Serialization.XmlSerializer>сериализации члена перечисления.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Класс SoapEnumAttribute принадлежит к семейству атрибутов, управляющих как <xref:System.Xml.Serialization.XmlSerializer>сериализует или десериализует объект как закодированный SOAP XML.</xref:System.Xml.Serialization.XmlSerializer> Получаемый код XML соответствует разделу 5 документа «Simple Object Access Protocol (SOAP) 1.1» консорциума World Wide Web (www.w3.org). Полный список аналогичных атрибутов см. в разделе [атрибуты, управляющие кодированной SOAP сериализацией](~/add/includes/ajax-current-ext-md.md).       Чтобы сериализовать объект как закодированное сообщение SOAP, необходимо создать <xref:System.Xml.Serialization.XmlSerializer>с помощью <xref:System.Xml.Serialization.XmlTypeMapping>создания с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>метода <xref:System.Xml.Serialization.SoapReflectionImporter>класса.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       Используется для изменения перечисления SoapEnumAttribute, <xref:System.Xml.Serialization.XmlSerializer>генерирует или распознает (при сериализации или десериализации класса, соответственно).</xref:System.Xml.Serialization.XmlSerializer> Например, если перечисление содержит член с именем `One`, но вы предпочитаете, что выходные данные XML называться `Single`, применить SoapEnumAttribute элементом перечисления и задать <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>Свойства «Один».</xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>       Можно переопределить <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>значение свойства SoapEnumAttribute путем создания экземпляра класса SoapEnumAttribute и присвоения его <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>свойству <xref:System.Xml.Serialization.SoapAttributes>.</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> </xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>       Чтобы сериализовать объект как закодированное сообщение SOAP, необходимо создать <xref:System.Xml.Serialization.XmlSerializer>с помощью <xref:System.Xml.Serialization.XmlTypeMapping>создания с помощью <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>метода <xref:System.Xml.Serialization.SoapReflectionImporter>класса.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>      Настроек [!NOTE] настроек можно использовать слово `SoapEnum` в коде вместо более SoapEnumAttribute.       Дополнительные сведения об использовании атрибутов см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a SoapEnumAttribute for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the SoapEnumAttribute. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_12_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_12_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_12_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field)]

      public class SoapEnumAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: SoapEnumAttribute()
  nameWithType: SoapEnumAttribute.SoapEnumAttribute()
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapEnumAttribute&quot;> </xref> класса."
  remarks: "Используйте SoapEnumAttribute для переопределения существующего перечисления. Создайте новый <xref:System.Xml.Serialization.SoapEnumAttribute>, задать его свойства и назначить объект в <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>свойство <xref:System.Xml.Serialization.SoapAttributes>.</xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> </xref:System.Xml.Serialization.SoapEnumAttribute> Для каждого члена перечисления необходимо создать новый <xref:System.Xml.Serialization.SoapAttributes>и добавить его на <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>      Настроек [!NOTE] настроек можно использовать слово `SoapEnum` в коде вместо более <xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_7_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_7_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_7_1.vb)]"
  syntax:
    content: public SoapEnumAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: SoapEnumAttribute(String)
  nameWithType: SoapEnumAttribute.SoapEnumAttribute(String)
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapEnumAttribute&quot;> </xref> класса с помощью указанного имени элемента."
  remarks: "Укажите <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>при необходимости созданный XML перечислитель перечислитель найдено в перечислении.</xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>      Настроек [!NOTE] настроек можно использовать слово `SoapEnum` в коде вместо более <xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_6_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_6_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_6_1.vb)]"
  syntax:
    content: public SoapEnumAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя элемента XML, созданные <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapEnumAttribute.Name
  id: Name
  parent: System.Xml.Serialization.SoapEnumAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SoapEnumAttribute.Name
  fullName: System.Xml.Serialization.SoapEnumAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение, создаваемое в XML-документ при <xref:System.Xml.Serialization.XmlSerializer>сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Укажите имя, при необходимости созданный XML перечислитель перечислитель найдено в перечислении.      Настроек [!NOTE] настроек можно использовать слово `SoapEnum` вместо больше <xref:System.Xml.Serialization.SoapEnumAttribute>.</xref:System.Xml.Serialization.SoapEnumAttribute>"
  example:
  - "The following example uses the <xref:System.Xml.Serialization.XmlSerializer> to serialize a class named `Food` that includes an enumeration named `FoodType`. The `FoodType` enumeration is overridden by creating a <xref:System.Xml.Serialization.SoapEnumAttribute> for each enumeration and setting the <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapEnumAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_15_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_15_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_15_1.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Значение, созданное в XML-документ при <xref:System.Xml.Serialization.XmlSerializer>сериализует перечисление, или значение, распознаваемое при десериализации члена перечисления.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapEnumAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute()
  nameWithType: SoapEnumAttribute.SoapEnumAttribute()
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute()
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute(String)
  nameWithType: SoapEnumAttribute.SoapEnumAttribute(String)
  fullName: System.Xml.Serialization.SoapEnumAttribute.SoapEnumAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapEnumAttribute.Name
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: Name
  nameWithType: SoapEnumAttribute.Name
  fullName: System.Xml.Serialization.SoapEnumAttribute.Name
- uid: System.Xml.Serialization.SoapEnumAttribute.#ctor*
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: SoapEnumAttribute
  nameWithType: SoapEnumAttribute.SoapEnumAttribute
- uid: System.Xml.Serialization.SoapEnumAttribute.Name*
  parent: System.Xml.Serialization.SoapEnumAttribute
  isExternal: false
  name: Name
  nameWithType: SoapEnumAttribute.Name
