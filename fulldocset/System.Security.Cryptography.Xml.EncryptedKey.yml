### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedKey
  id: EncryptedKey
  children:
  - System.Security.Cryptography.Xml.EncryptedKey.#ctor
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  - System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  - System.Security.Cryptography.Xml.EncryptedKey.GetXml
  - System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedKey.Recipient
  - System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  langs:
  - csharp
  name: EncryptedKey
  nameWithType: EncryptedKey
  fullName: System.Security.Cryptography.Xml.EncryptedKey
  type: Class
  summary: "Представляет <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования. Этот класс не наследуется."
  remarks: "Этот класс представляет `<EncryptedKey>` элемент в XML-шифрования. `<EncryptedKey>` Элемент используется для отправки ключей шифрования. Можно создавать в отдельном XML-документа, могут находиться внутри документа приложения или находиться внутри `<EncryptedData>` элемента в качестве дочернего элемента `<KeyInfo>` элемент. Значение ключа всегда шифруется для получателя. При `<EncryptedKey>` будет расшифрован, полученный ключ предоставляется `<EncryptionMethod>` алгоритм без дополнительной обработки.       `<EncryptedKey>` Элемент аналогичен `<EncryptedData>` элемент <xref:System.Security.Cryptography.Xml.EncryptedData>класса, за исключением того, что данные, зашифрованные всегда является значением ключа.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the EncryptedKey class. This example then displays the values of various properties of the EncryptedKey class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_46_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_46_1.vb)]"
  syntax:
    content: 'public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedType
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> class."
  remarks: "Этот конструктор создает новый экземпляр <xref:System.Security.Cryptography.Xml.EncryptedKey>класса.</xref:System.Security.Cryptography.Xml.EncryptedKey> Дополнительные сведения о стандартах XML-шифрования см. в http://www.w3.org/TR/xmlenc-core/ документа XML шифрования синтаксиса и обработки."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_82_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_82_1.vb)]"
  syntax:
    content: public EncryptedKey ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  id: AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Добавляет <xref uid=&quot;langword_csharp_&lt;DataReference&gt; &quot; name=&quot;&lt;DataReference&gt; &quot; href=&quot;&quot;> </xref>элемент <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Этот метод добавляет <xref:System.Security.Cryptography.Xml.DataReference>объект <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>свойство <xref:System.Security.Cryptography.Xml.EncryptedKey>объекта.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.DataReference> `<DataReference>` Элемент указывает на зашифрованные данные, зашифрованные с помощью ключа, указанный в `<EncryptedKey>` элемент."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);
    parameters:
    - id: dataReference
      type: System.Security.Cryptography.Xml.DataReference
      description: "Объект <xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;> </xref> объект для добавления <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>свойство.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  id: AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Добавляет <xref uid=&quot;langword_csharp_&lt;KeyReference&gt; &quot; name=&quot;&lt;KeyReference&gt; &quot; href=&quot;&quot;> </xref>элемент <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Этот метод добавляет объект <xref:System.Security.Cryptography.Xml.KeyReference>объект <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>свойство <xref:System.Security.Cryptography.Xml.EncryptedKey>объекта.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.KeyReference> `<KeyReference>` Элемент указывает зашифрованный ключ, зашифрованный с помощью ключа, указанный в `<EncryptedKey>` элемент."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);
    parameters:
    - id: keyReference
      type: System.Security.Cryptography.Xml.KeyReference
      description: "Объект <xref href=&quot;System.Security.Cryptography.Xml.KeyReference&quot;> </xref> объект для добавления <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>свойство.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  id: CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает необязательный <xref uid=&quot;langword_csharp_&lt;CarriedKeyName&gt;&quot; name=&quot;&lt;CarriedKeyName&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "`<CarriedKeyName>` Элемент является необязательным элементом, который связывает имя пользователя для чтения со значением ключа. Это имя может затем использоваться для ссылки ключа с помощью `<KeyName>` элемент в пределах `<KeyInfo>` элемента. Соответствует `<CarriedKeyName>` значение элемента, в отличие от значений Идентификаторов может встречаться несколько раз в одном документе. Значение ключа должно быть одинаковым для всех `<EncryptedKey>` элементов, определенных с тем же `<CarriedKeyName>` имя XML-документа. Обратите внимание, что поскольку пробел учитывается в значении `<KeyName>` элемент, пробел учитывается также в значении `<CarriedKeyName>` элемента."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_109_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_109_1.vb)]"
  syntax:
    content: public string CarriedKeyName { get; set; }
    return:
      type: System.String
      description: "Строка, представляющая имя для значения ключа."
  overload: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает XML-представление <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> объекта."
  remarks: "Этот метод используется для вывода `<EncryptedKey>` XML-элемента."
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> , Представляющий <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  overload: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Загружает указанный XML-данных в <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "Используйте этот метод для загрузки элемента XML в `<EncryptedKey>` элемента, представленного <xref:System.Security.Cryptography.Xml.EncryptedData>объекта.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_79_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_79_1.vb)]"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Представляет элемент XML, используемый для <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code> Параметр не содержит <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> элемента."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  id: Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает необязательный <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> атрибут в XML-шифрования."
  remarks: "`<Recipient>` Атрибут является необязательным атрибутом, который содержит сведения о какой получателя предназначено значение зашифрованного ключа. Его содержимое зависит от приложения."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_92_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_92_1.vb)]"
  syntax:
    content: public string Recipient { get; set; }
    return:
      type: System.String
      description: "Строка, представляющая значение <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  id: ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> элемент в XML-шифрования."
  remarks: "`<ReferenceList>` Элемент — это необязательный элемент, который содержит указатели на данные и ключи, зашифрованные с помощью этого ключа. Справочный список может содержать несколько ссылок на `<EncryptedKey>`и `<EncryptedData>` элементов с помощью `<KeyReference>` и `<DataReference>` элементы соответственно."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_50_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_50_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }
    return:
      type: System.Security.Cryptography.Xml.ReferenceList
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.ReferenceList&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedType
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
- uid: System.Security.Cryptography.Xml.DataReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataReference
  nameWithType: DataReference
  fullName: System.Security.Cryptography.Xml.DataReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
- uid: System.Security.Cryptography.Xml.KeyReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyReference
  nameWithType: KeyReference
  fullName: System.Security.Cryptography.Xml.KeyReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
- uid: System.Security.Cryptography.Xml.ReferenceList
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: ReferenceList
  nameWithType: ReferenceList
  fullName: System.Security.Cryptography.Xml.ReferenceList
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey
  nameWithType: EncryptedKey.EncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference
  nameWithType: EncryptedKey.AddReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml
  nameWithType: EncryptedKey.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedKey.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
