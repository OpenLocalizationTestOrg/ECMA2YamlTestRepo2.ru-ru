### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapAttributes
  id: SoapAttributes
  children:
  - System.Xml.Serialization.SoapAttributes.#ctor
  - System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)
  - System.Xml.Serialization.SoapAttributes.SoapAttribute
  - System.Xml.Serialization.SoapAttributes.SoapDefaultValue
  - System.Xml.Serialization.SoapAttributes.SoapElement
  - System.Xml.Serialization.SoapAttributes.SoapEnum
  - System.Xml.Serialization.SoapAttributes.SoapIgnore
  - System.Xml.Serialization.SoapAttributes.SoapType
  langs:
  - csharp
  name: SoapAttributes
  nameWithType: SoapAttributes
  fullName: System.Xml.Serialization.SoapAttributes
  type: Class
  summary: "Представляет коллекцию объектов атрибутов, которые управляют как <xref:System.Xml.Serialization.XmlSerializer>сериализует и десериализует методы SOAP.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Создание SoapAttributes — часть процесса, который переопределяет значение по умолчанию, каким образом <xref:System.Xml.Serialization.XmlSerializer>сериализует экземпляры класса.</xref:System.Xml.Serialization.XmlSerializer> Например предположим, что необходимо сериализовать объект, созданный из библиотеки DLL, которая имеет недоступный источник. С помощью <xref:System.Xml.Serialization.SoapAttributeOverrides>класса, можно расширить или управлять сериализацией объекта.</xref:System.Xml.Serialization.SoapAttributeOverrides>       Члены класса SoapAttributes напрямую соответствуют семейству классов атрибутов, которые управляют сериализацией. Например <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>свойству необходимо присвоить значение <xref:System.Xml.Serialization.SoapAttributeAttribute>, позволяет переопределить сериализацию поля или свойства, предписывая <xref:System.Xml.Serialization.XmlSerializer>для сериализации значения свойства как закодированный атрибут SOAP.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> Полный список атрибутов, которые управляют сериализацией закодированного SOAP см. в разделе [атрибуты, управляющие кодированной SOAP сериализацией](~/add/includes/ajax-current-ext-md.md).       Дополнительные сведения о добавлении экземпляра класса SoapAttributes экземпляр <xref:System.Xml.Serialization.SoapAttributeOverrides>см. в описании <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a SoapAttributes is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_3_1.cpp)]\n [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_3_1.vb)]\n [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_3_1.cs)]"
  syntax:
    content: public class SoapAttributes
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapAttributes()
  nameWithType: SoapAttributes.SoapAttributes()
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttributes()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapAttributes&quot;> </xref> класса."
  remarks: "Для каждого члена или класса экземпляра переопределяется сериализация которого необходимо создать новый <xref:System.Xml.Serialization.SoapAttributes>.</xref:System.Xml.Serialization.SoapAttributes> Задание свойств <xref:System.Xml.Serialization.SoapAttributes>в зависимости от элемента или объекта, а затем добавьте <xref:System.Xml.Serialization.SoapAttributes>к экземпляру <xref:System.Xml.Serialization.SoapAttributeOverrides>класса.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> </xref:System.Xml.Serialization.SoapAttributes>"
  example:
  - "The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_5_1.cpp)]\n [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_5_1.vb)]\n [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_5_1.cs)]"
  syntax:
    content: public SoapAttributes ();
    parameters: []
  overload: System.Xml.Serialization.SoapAttributes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)
  id: '#ctor(System.Reflection.ICustomAttributeProvider)'
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapAttributes(ICustomAttributeProvider)
  nameWithType: SoapAttributes.SoapAttributes(ICustomAttributeProvider)
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttributes(ICustomAttributeProvider)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.SoapAttributes&quot;> </xref> класса с помощью указанного настраиваемого типа."
  syntax:
    content: public SoapAttributes (System.Reflection.ICustomAttributeProvider provider);
    parameters:
    - id: provider
      type: System.Reflection.ICustomAttributeProvider
      description: "Любой объект, реализующий <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> интерфейса, таких как <xref:System.Type>класс.</xref:System.Type>"
  overload: System.Xml.Serialization.SoapAttributes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapAttribute
  id: SoapAttribute
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapAttribute
  nameWithType: SoapAttributes.SoapAttribute
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttribute
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> для переопределения."
  remarks: "По умолчанию если атрибут не применяется к открытое поле или свойство чтения/записи, он сериализуется как элемент XML. Можно также указать <xref:System.Xml.Serialization.XmlSerializer>для сериализации элемента как закодированный SOAP атрибут XML, применяя <xref:System.Xml.Serialization.SoapAttributeAttribute>к полю или свойству.</xref:System.Xml.Serialization.SoapAttributeAttribute> </xref:System.Xml.Serialization.XmlSerializer> ( <xref:System.Xml.Serialization.XmlSerializer>Должны создаваться с помощью <xref:System.Xml.Serialization.XmlTypeMapping>для сериализации объекта в кодировке SOAP XML-потоке.)</xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       Свойство SoapAttribute позволяет переопределить сериализацию, управляемую применением <xref:System.Xml.Serialization.SoapAttributeAttribute>участнику.</xref:System.Xml.Serialization.SoapAttributeAttribute> Дополнительные сведения об этом процессе см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_11_1.cpp)]\n [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_11_1.vb)]\n [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_11_1.cs)]"
  syntax:
    content: public System.Xml.Serialization.SoapAttributeAttribute SoapAttribute { get; set; }
    return:
      type: System.Xml.Serialization.SoapAttributeAttribute
      description: "Объект <xref href=&quot;System.Xml.Serialization.SoapAttributeAttribute&quot;> </xref> , переопределяющий <xref:System.Xml.Serialization.XmlSerializer>при сериализации элемента.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapAttributes.SoapAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapDefaultValue
  id: SoapDefaultValue
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapDefaultValue
  nameWithType: SoapAttributes.SoapDefaultValue
  fullName: System.Xml.Serialization.SoapAttributes.SoapDefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение по умолчанию XML-элемента или атрибута."
  remarks: "Значение по умолчанию элемента можно задать, применив <xref:System.ComponentModel.DefaultValueAttribute>атрибут.</xref:System.ComponentModel.DefaultValueAttribute> Если член сериализуется как закодированное сообщение SOAP, можно изменить значение по умолчанию, создав новую <xref:System.ComponentModel.DefaultValueAttribute>, параметр его <xref:System.ComponentModel.DefaultValueAttribute.Value%2A>Свойства и задать свойству SoapDefaultValue значение объекта.</xref:System.ComponentModel.DefaultValueAttribute.Value%2A> </xref:System.ComponentModel.DefaultValueAttribute> Добавление <xref:System.Xml.Serialization.SoapAttributes>на <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Group` that includes a field named `GroupName`. The default value is set with the <xref:System.ComponentModel.DefaultValueAttribute> to \".NET\". By either not setting the field, or by setting it to \".NET\", the value is not serialized (because the default value is already known). The sample also overrides the default value in the `CreateOverrideSerializer` method, which is called by the `SerializeOverride` method. The example calls both methods, `SerializeOriginal` and `SerializeOverride`, and sets the same value (\".NET\") for the `GroupName` field. Because of the override, the value is serialized only when calling the `SerializeOverride` method.  \n  \n [!code-cs[SoapAttribues.SoapDefaultValue#1](~/add/codesnippet/csharp/p-system.xml.serializati_12_1.cs)]\n [!code-cpp[SoapAttribues.SoapDefaultValue#1](~/add/codesnippet/cpp/p-system.xml.serializati_12_1.cpp)]\n [!code-vb[SoapAttribues.SoapDefaultValue#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_12_1.vb)]"
  syntax:
    content: public object SoapDefaultValue { get; set; }
    return:
      type: System.Object
      description: "Объект, представляющий значение по умолчанию XML-элемента или атрибута."
  overload: System.Xml.Serialization.SoapAttributes.SoapDefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapElement
  id: SoapElement
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapElement
  nameWithType: SoapAttributes.SoapElement
  fullName: System.Xml.Serialization.SoapAttributes.SoapElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает <xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;> </xref> для переопределения."
  remarks: "<xref:System.Xml.Serialization.SoapElementAttribute>Используется для управления сериализацией члена класса как XML-элемента.</xref:System.Xml.Serialization.SoapElementAttribute> Присвойте свойству SoapElement новый <xref:System.Xml.Serialization.SoapElementAttribute>для переопределения сериализации члена класса как элемент XML путем создания нового <xref:System.Xml.Serialization.SoapElementAttribute>и присвоив его свойству.</xref:System.Xml.Serialization.SoapElementAttribute> </xref:System.Xml.Serialization.SoapElementAttribute> Затем добавьте <xref:System.Xml.Serialization.SoapAttributes>на <xref:System.Xml.Serialization.SoapAttributeOverrides>.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes> Создать <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapAttributeOverrides>затем создайте <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlTypeMapping>.</xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.XmlTypeMapping>       Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes a class named `Transportation`. The serialization of the `Vehicle` field is overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_13_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_13_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_13_1.vb)]"
  syntax:
    content: public System.Xml.Serialization.SoapElementAttribute SoapElement { get; set; }
    return:
      type: System.Xml.Serialization.SoapElementAttribute
      description: "<xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;> </xref> Для переопределения."
  overload: System.Xml.Serialization.SoapAttributes.SoapElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapEnum
  id: SoapEnum
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapEnum
  nameWithType: SoapAttributes.SoapEnum
  fullName: System.Xml.Serialization.SoapAttributes.SoapEnum
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает объект, указывающий как <xref:System.Xml.Serialization.XmlSerializer>сериализует перечисление SOAP.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "<xref:System.Xml.Serialization.SoapEnumAttribute>Используется для управления сериализацией члена перечисления.</xref:System.Xml.Serialization.SoapEnumAttribute> Присвойте свойству SoapEnum новый <xref:System.Xml.Serialization.SoapEnumAttribute>для переопределения сериализации такого члена.</xref:System.Xml.Serialization.SoapEnumAttribute>       Дополнительные сведения см. в разделе <xref:System.Xml.Serialization.SoapAttributeOverrides>Общие сведения о классе.</xref:System.Xml.Serialization.SoapAttributeOverrides>"
  example:
  - "The following example serializes two classes named `Food` and `FoodType`. The `FoodType` class contains two enumerations that are overridden, and for each enumeration, the example creates a <xref:System.Xml.Serialization.SoapEnumAttribute> that it assigns to the SoapEnum property of a <xref:System.Xml.Serialization.SoapAttributes>. The example then adds the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.  \n  \n [!code-cs[SoapEnumOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_23_1.cs)]\n [!code-cpp[SoapEnumOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_23_1.cpp)]\n [!code-vb[SoapEnumOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_23_1.vb)]"
  syntax:
    content: public System.Xml.Serialization.SoapEnumAttribute SoapEnum { get; set; }
    return:
      type: System.Xml.Serialization.SoapEnumAttribute
      description: "Объект, задающий как <xref:System.Xml.Serialization.XmlSerializer>сериализации члена перечисления.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapAttributes.SoapEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapIgnore
  id: SoapIgnore
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapIgnore
  nameWithType: SoapAttributes.SoapIgnore
  fullName: System.Xml.Serialization.SoapAttributes.SoapIgnore
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение, указывающее, является ли <xref:System.Xml.Serialization.XmlSerializer>сериализует открытое поле или свойство как закодированный SOAP XML.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "По умолчанию все открытые поля и свойства чтения записи сериализуются с помощью <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> То есть значение каждого открытого поля или свойства сохраняется как XML-элемент или атрибут XML в XML-документа.       Чтобы переопределить сериализацию по умолчанию для поля или свойства, создайте <xref:System.Xml.Serialization.SoapAttributes>и установите его свойство SoapIgnore `true`.</xref:System.Xml.Serialization.SoapAttributes> Используйте <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A>метод, чтобы добавить объект <xref:System.Xml.Serialization.SoapAttributeOverrides>и укажите тип объекта, который содержит поле или свойство, чтобы игнорировать и имя поля или свойства, чтобы игнорировать.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A>       Если <xref:System.Xml.Serialization.SoapIgnoreAttribute>применяется к полю или свойству, поле или свойство игнорируется.</xref:System.Xml.Serialization.SoapIgnoreAttribute> Однако можно переопределить это поведение, создав <xref:System.Xml.Serialization.SoapAttributes>, присвоив свойству SoapIgnore `false`и его добавления в <xref:System.Xml.Serialization.SoapAttributeOverrides>, задающий тип объекта, который содержит поле или свойство и имя поля или свойства.</xref:System.Xml.Serialization.SoapAttributeOverrides> </xref:System.Xml.Serialization.SoapAttributes>"
  example:
  - "The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_22_1.cpp)]\n [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_22_1.vb)]\n [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_22_1.cs)]"
  syntax:
    content: public bool SoapIgnore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Xml.Serialization.XmlSerializer>не должен сериализовать поле или свойство; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapAttributes.SoapIgnore*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapAttributes.SoapType
  id: SoapType
  parent: System.Xml.Serialization.SoapAttributes
  langs:
  - csharp
  name: SoapType
  nameWithType: SoapAttributes.SoapType
  fullName: System.Xml.Serialization.SoapAttributes.SoapType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает объект, который указывает, что <xref:System.Xml.Serialization.XmlSerializer>способ сериализации типа объекта в закодированный SOAP XML.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "<xref:System.Xml.Serialization.SoapTypeAttribute>Можно использовать для управления XML-потока, создаваемые <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.SoapTypeAttribute> Присвойте свойству SoapType новый <xref:System.Xml.Serialization.SoapTypeAttribute>для управления схемой для XML, который создается при сериализации класса.</xref:System.Xml.Serialization.SoapTypeAttribute>"
  example:
  - "The following example serializes a class named `Group`. The serialization of the `GroupName` and `IgnoreThis` fields and the members of the `GroupType` enumeration are overridden. In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides>. An <xref:System.Xml.Serialization.XmlTypeMapping> is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides>, and that <xref:System.Xml.Serialization.XmlTypeMapping> is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.  \n  \n [!code-cpp[SoapAttributesOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_27_1.cpp)]\n [!code-vb[SoapAttributesOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_27_1.vb)]\n [!code-cs[SoapAttributesOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_27_1.cs)]"
  syntax:
    content: public System.Xml.Serialization.SoapTypeAttribute SoapType { get; set; }
    return:
      type: System.Xml.Serialization.SoapTypeAttribute
      description: "Объект <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> который или переопределяет <xref href=&quot;System.Xml.Serialization.SoapTypeAttribute&quot;> </xref> применен к объявлению класса, или применяется к объявлению класса."
  overload: System.Xml.Serialization.SoapAttributes.SoapType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.SoapAttributes.#ctor
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapAttributes()
  nameWithType: SoapAttributes.SoapAttributes()
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttributes()
- uid: System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapAttributes(ICustomAttributeProvider)
  nameWithType: SoapAttributes.SoapAttributes(ICustomAttributeProvider)
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttributes(ICustomAttributeProvider)
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xml.Serialization.SoapAttributes.SoapAttribute
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapAttribute
  nameWithType: SoapAttributes.SoapAttribute
  fullName: System.Xml.Serialization.SoapAttributes.SoapAttribute
- uid: System.Xml.Serialization.SoapAttributeAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: SoapAttributeAttribute
  nameWithType: SoapAttributeAttribute
  fullName: System.Xml.Serialization.SoapAttributeAttribute
- uid: System.Xml.Serialization.SoapAttributes.SoapDefaultValue
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapDefaultValue
  nameWithType: SoapAttributes.SoapDefaultValue
  fullName: System.Xml.Serialization.SoapAttributes.SoapDefaultValue
- uid: System.Xml.Serialization.SoapAttributes.SoapElement
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapElement
  nameWithType: SoapAttributes.SoapElement
  fullName: System.Xml.Serialization.SoapAttributes.SoapElement
- uid: System.Xml.Serialization.SoapElementAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: SoapElementAttribute
  nameWithType: SoapElementAttribute
  fullName: System.Xml.Serialization.SoapElementAttribute
- uid: System.Xml.Serialization.SoapAttributes.SoapEnum
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapEnum
  nameWithType: SoapAttributes.SoapEnum
  fullName: System.Xml.Serialization.SoapAttributes.SoapEnum
- uid: System.Xml.Serialization.SoapEnumAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: SoapEnumAttribute
  nameWithType: SoapEnumAttribute
  fullName: System.Xml.Serialization.SoapEnumAttribute
- uid: System.Xml.Serialization.SoapAttributes.SoapIgnore
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapIgnore
  nameWithType: SoapAttributes.SoapIgnore
  fullName: System.Xml.Serialization.SoapAttributes.SoapIgnore
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.SoapAttributes.SoapType
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapType
  nameWithType: SoapAttributes.SoapType
  fullName: System.Xml.Serialization.SoapAttributes.SoapType
- uid: System.Xml.Serialization.SoapTypeAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: SoapTypeAttribute
  nameWithType: SoapTypeAttribute
  fullName: System.Xml.Serialization.SoapTypeAttribute
- uid: System.Xml.Serialization.SoapAttributes.#ctor*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapAttributes
  nameWithType: SoapAttributes.SoapAttributes
- uid: System.Xml.Serialization.SoapAttributes.SoapAttribute*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapAttribute
  nameWithType: SoapAttributes.SoapAttribute
- uid: System.Xml.Serialization.SoapAttributes.SoapDefaultValue*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapDefaultValue
  nameWithType: SoapAttributes.SoapDefaultValue
- uid: System.Xml.Serialization.SoapAttributes.SoapElement*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapElement
  nameWithType: SoapAttributes.SoapElement
- uid: System.Xml.Serialization.SoapAttributes.SoapEnum*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapEnum
  nameWithType: SoapAttributes.SoapEnum
- uid: System.Xml.Serialization.SoapAttributes.SoapIgnore*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapIgnore
  nameWithType: SoapAttributes.SoapIgnore
- uid: System.Xml.Serialization.SoapAttributes.SoapType*
  parent: System.Xml.Serialization.SoapAttributes
  isExternal: false
  name: SoapType
  nameWithType: SoapAttributes.SoapType
