### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileManager
  id: ProfileManager
  children:
  - System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  - System.Web.Profile.ProfileManager.ApplicationName
  - System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  - System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileManager.Enabled
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  - System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  - System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  - System.Web.Profile.ProfileManager.Provider
  - System.Web.Profile.ProfileManager.Providers
  langs:
  - csharp
  name: ProfileManager
  nameWithType: ProfileManager
  fullName: System.Web.Profile.ProfileManager
  type: Class
  summary: "Управляет данные профиля пользователя и параметры."
  remarks: "Профиль ASP.NET используется для хранения и извлечения параметров пользователя в источнике данных, например к базе данных. Профиль пользователя осуществляется с помощью <xref:System.Web.HttpContext.Profile%2A>свойства текущего <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Profile%2A> Профиль данными и значениями свойств осуществляется с помощью поставщика профилей.       Класс ProfileManager используется для управления настройками профиля, поиска профилей пользователей и удалять профили пользователей, которые больше не используются. Класс ProfileManager предоставляет статические методы и свойства, к которым можно обращаться с помощью ссылки на класс ProfileManager в коде приложения. Например см. в разделе этой статьи и Дополнительные примеры, приведенные в разделах для членов класса ProfileManager.       По умолчанию профиль пользователя отключен для всех приложений ASP.NET. Чтобы включить профиль пользователя, задайте `enabled` атрибута элемента конфигурации значение true, как показано в следующем примере.      ```   <configuration>     <system.web>       <profile enabled=&quot;true&quot; />     </system.web>   </configuration>   ```Дополнительные сведения о профиле пользователя см. в разделе [Общие сведения о свойствах профиля ASP.NET](~/add/includes/ajax-current-ext-md.md).       Поставщик профилей используется для хранения и извлечения свойств в профиле пользователя. Платформа .NET Framework включает <xref:System.Web.Profile.SqlProfileProvider>класс, который хранит свойства профиля пользователя в базе данных SQL Server.</xref:System.Web.Profile.SqlProfileProvider> Объект <xref:System.Web.Profile.SqlProfileProvider>экземпляр с именем `AspNetSqlProvider` указано в конфигурации компьютера, как поставщик профиля по умолчанию.</xref:System.Web.Profile.SqlProfileProvider> `AspNetSqlProvider` Экземпляр подключается к базе данных SQL Server на локальном веб-сервере. Можно указать <xref:System.Web.Profile.SqlProfileProvider>, подключается к другой экземпляр SQL Server в качестве поставщика профилей по умолчанию с помощью элемента конфигурации и `defaultProvider` атрибута элемента конфигурации, как показано в следующем примере.</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows an ASP.NET page that uses the ProfileManager class to manage inactive profiles.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/t-system.web.profile.pro_1_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/t-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public static class ProfileManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  id: AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Программно добавляет свойство профиля."
  remarks: "Этот метод является функциональным эквивалентом Добавление свойства `profile` раздел файла конфигурации. Чтобы вызвать этот метод, чтобы добавить свойство профиля, необходимо сделать вызов в метод, помеченный <xref:System.Web.PreApplicationStartMethodAttribute>атрибут.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);
    parameters:
    - id: property
      type: System.Web.Configuration.ProfilePropertySettings
      description: "Значения свойств для добавления."
  overload: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.ApplicationName
  id: ApplicationName
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает или задает имя приложения, для которого будут сохраняться и извлекаться сведения о профиле."
  remarks: "<xref:System.Web.Profile.ProfileManager>Использует свойство ApplicationName связать данные профиля с различными приложениями.</xref:System.Web.Profile.ProfileManager> Это позволяет нескольким приложениям использовать ту же базу данных для хранения сведений о пользователе без конфликтов дублировании пользователей. Несколько приложений ASP.NET могут использовать одну и ту же базу данных пользователя, указав то же значение в свойство ApplicationName. Свойство ApplicationName могут устанавливаться программными средствами, или он может быть задано как декларативно в файле конфигурации для веб-приложения с помощью `applicationName` атрибута.       Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, то использовать поставщики профилей, входящий в состав .NET Framework <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>значение свойства для приложений ASP.NET.</xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> Для приложений, не относящихся к ASP.NET, значение по умолчанию — <xref:System.Diagnostics.ProcessModule.ModuleName%2A>значение свойства, без расширения файла.</xref:System.Diagnostics.ProcessModule.ModuleName%2A>       Предоставляет свойство ApplicationName <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName>Свойства поставщика профилей по умолчанию.</xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=fullName> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, они могут быть настроены с именем другого приложения. Для доступа к имя приложения поставщика профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и доступа <xref:System.Configuration.SettingsProvider.ApplicationName%2A>Свойства поставщика непосредственно.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>      Настроек [!CAUTION] настроек, так как экземпляр поставщика профилей по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication>объекта может быть несколько запросов, параллельном выполнении и попытка задать значение свойства ApplicationName.</xref:System.Web.HttpApplication> Свойство ApplicationName не является потокобезопасным для нескольких операций записи и изменение значения свойства ApplicationName может привести к непредвиденному поведению для нескольких пользователей приложения. Избежать написания кода, который позволяет пользователям задать свойство ApplicationName, если не требуется, его рекомендуется. Пример приложения, где может потребоваться задать свойство ApplicationName — административные приложения, в котором данные профиля для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения."
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It sets the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n  <add name=\"SqlProvider\"  \n    type=\"System.Web.Profile.SqlProfileProvider\"  \n    connectionStringName=\"SqlServices\"  \n    applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения, для которого будут сохраняться и извлекаться сведения о профиле."
  overload: System.Web.Profile.ProfileManager.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  id: AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает значение, указывающее, является ли профиль пользователя автоматически сохраняется в конце выполнения страницы ASP.NET."
  remarks: "Свойство AutomaticSaveEnabled указывает, включено ли автоматическое сохранение профиля пользователя для приложения. Если включено автоматическое сохранение, <xref:System.Web.Profile.ProfileModule>объекта вызывает <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>события и вызовы <xref:System.Web.Profile.ProfileBase.Save%2A>метод во время <xref:System.Web.HttpApplication.EndRequest>событие в конце выполнения страницы ASP.NET.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.Profile.ProfileBase.Save%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> </xref:System.Web.Profile.ProfileModule>       Свойство AutomaticSaveEnabled задается с помощью `automaticSaveEnabled` атрибута элемента в файле Web.config для приложения ASP.NET."
  example:
  - "The following configuration file excerpt shows the  element in the  section of the Web.config file for an ASP.NET application. It specifies the application's default profile provider to a <xref:System.Web.Profile.SqlProfileProvider> instance and sets the `automaticSaveEnabled` attribute to `true`.  \n  \n```  \n<profile enabled=\"true\"  \n  automaticSaveEnabled=\"true\"  \n  defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool AutomaticSaveEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если профиль пользователя автоматически сохраняется в конце выполнения страницы ASP.NET; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Была предпринята попытка получить значение свойства AutomaticSaveEnabled без крайней <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Удаляет данные профиля пользователя, для которого действие Дата и время последнего возникло до указанной даты и времени."
  remarks: "Метод DeleteInactiveProfiles используется для удаления неиспользуемых профиль данных из источника данных для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей все профиля <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит на или до указанной `userInactiveSinceDate` удалено значение параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Вызовы метода DeleteInactiveProfiles <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, данные профиля в источнике данных не удаляется. Чтобы удалить неактивные профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all profiles that have been unused for the specified number of days and are therefore considered inactive.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/32807c48-d028-41c4-938b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/32807c48-d028-41c4-938b-_1.aspx)]"
  syntax:
    content: public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или обоих типов профилей, удаляются."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "Число профилей, удаленных из источника данных."
  overload: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  id: DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Удаляет профиль для указанного имени пользователя из источника данных."
  remarks: "Метод DeleteProfile удаляет все сведения о профиле и свойства для данного профиля пользователя для указанного `username` из источника данных для указанного <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A>       Вызовы метода DeleteProfile <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>метод поставщика профилей по умолчанию для выполнения операции delete.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, они не удаляются. Чтобы удалить свойств профиля, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. The DeleteProfile method is called when a single profile is selected to be deleted. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter value passed to the <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#10](~/add/codesnippet/csharp/m-system.web.profile.pro_0_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#10](~/add/codesnippet/visualbasic/m-system.web.profile.pro_0_1.aspx)]"
  syntax:
    content: public static bool DeleteProfile (string username);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для профиля для удаления."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если профиль пользователя был найден и удален; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.DeleteProfile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>является пустой строкой (&quot;») или содержит запятую."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Удаляет свойства профиля и данные для предоставленного списка имен пользователей."
  remarks: "Метод DeleteProfiles удаляет все сведения о профиле и свойства для указанного профилей из источника данных для приложения, указанного <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>свойство.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Список профилей, подлежащих удалению, задается как массив строк имен пользователей. Если свойства профиля и данные существуют в источнике данных для имени пользователя в `usernames` параметра, они удаляются.       Возвращаемое значение может отличаться от длины заданного массива `usernames`. Это означает, что некоторые профиле в указанный массив `usernames` уже были удалены из хранилища данных.       Вызовы метода DeleteProfiles <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, они не удаляются. Чтобы удалить свойств профиля, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A <xref:System.Web.UI.WebControls.GridView> control displays the inactive profiles returned. Each row of the <xref:System.Web.UI.WebControls.GridView> control includes a button that deletes the profile for that row from the data source with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/m-system.web.profile.pro_4_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/m-system.web.profile.pro_4_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Массив строк имен пользователей для профили должны быть удалены."
    return:
      type: System.Int32
      description: "Число профилей, удаленных из источника данных."
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The length of <code>usernames</code> is zero.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is an empty string (\"\") or contains a comma.  \n  \n \\- or -  \n  \n Two or more items in <code>usernames</code> have the same value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the items in <code>usernames</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Удаляет свойства профиля и данные из источника данных для предоставленного списка профилей."
  remarks: "Метод DeleteProfiles удаляет все сведения о профиле и свойства для указанного профилей из источника данных для приложения, указанного <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>свойство.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Список профилей, подлежащих удалению, задается с помощью <xref:System.Web.Profile.ProfileInfoCollection>, передаваемого в качестве `profiles` параметр.</xref:System.Web.Profile.ProfileInfoCollection> Объект <xref:System.Web.Profile.ProfileInfoCollection>могут быть возвращены из <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, и <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>методы.</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfoCollection>       Обратите внимание, что возвращаемое значение может отличаться от <xref:System.Web.Profile.ProfileInfoCollection.Count%2A>значения для предоставленного <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfoCollection.Count%2A> Это означает, что некоторые профиле в заданном <xref:System.Web.Profile.ProfileInfoCollection>уже были удалены из хранилища данных.</xref:System.Web.Profile.ProfileInfoCollection>       Вызовы метода DeleteProfiles <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=fullName> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, они не удаляются. Чтобы удалить свойств профиля, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to search for profiles using the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> and <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> methods. The user can then delete the returned profiles with a call to the DeleteProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/dbbefae3-6297-4bf8-9680-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/dbbefae3-6297-4bf8-9680-_1.aspx)]"
  syntax:
    content: public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> , содержащий данные профилей для удаления."
    return:
      type: System.Int32
      description: "Число профилей, удаленных из источника данных."
  overload: System.Web.Profile.ProfileManager.DeleteProfiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>profiles</code> has a <xref:System.Web.Profile.ProfileInfoCollection.Count*> value of zero.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is an empty string (\"\") or contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>profiles</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n One of the <xref href=\"System.Web.Profile.ProfileInfo\"></xref> objects in <code>profiles</code> has a <xref:System.Web.Profile.ProfileInfo.UserName*> that is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Enabled
  id: Enabled
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает значение, указывающее, включен ли профиль пользователя для приложения."
  remarks: "Профиль пользователя включена для приложения с помощью `enabled` атрибута элемента конфигурации."
  example:
  - "The following code example shows the  element in the  section of the Web.config file for an ASP.NET application where the user profile has been enabled.  \n  \n```  \n<profile enabled=\"true\" defaultProvider=\"SqlProvider\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Profile.SqlProfileProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</profile>  \n```"
  syntax:
    content: public static bool Enabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включен профиль пользователя; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileManager.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает сведения о профиле для всех профилей, в которых дата последнего действия в или до указанной даты и времени и имя пользователя для профиля совпадает с указанным именем."
  remarks: "Метод FindInactiveProfilesByUserName используется для получения сведений о профиле для всех профилей неиспользуемые пользователей для приложения, указанного `applicationName` атрибут в файле конфигурации. Этот метод извлечет только профили, для которых имя пользователя соответствует предоставленному `usernameToMatch` значение параметра. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей все профиля <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит на или до указанной `userInactiveSinceDate` возвращается значение параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Можно получить эту информацию на страницах данных, с помощью перегрузки для <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>метод, который принимает дополнительные `pageIndex` и `pageSize` параметров.</xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29>      Настроек [!NOTE] настроек ваш поставщик профилей может поддерживать символы подстановки в `usernameToMatch` параметра. Например <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>метод <xref:System.Web.Profile.SqlProfileProvider>класс поддерживает подстановочные знаки в `usernameToMatch` параметр.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       Вызовы метода FindInactiveProfilesByUserName <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=fullName> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти неактивные профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The sample allows the user to specify whether to return only inactive profiles. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/02c1131d-855c-4e58-af67-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/02c1131d-855c-4e58-af67-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя, который требуется найти."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения о профиле пользователя для неактивных профилей, в которых имя пользователя соответствует предоставленному <code> usernameToMatch </code> параметра."
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>является пустой строкой (»»)."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает сведения о профиле на страницах данных для профилей, в которых дата последнего действия в или до указанной даты и времени и имя пользователя для профиля совпадает с указанным именем."
  remarks: "Метод FindInactiveProfilesByUserName используется для получения сведений о профиле для профилей неиспользуемые пользователей для приложения, указанного `applicationName` атрибут в файле конфигурации. Этот метод извлечет только профили, для которых имя пользователя соответствует предоставленному `usernameToMatch` значение параметра. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей любому профилю возвращается с <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит на или до указанной `userInactiveSinceDate` значение параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Ограниченные результаты, возвращенные FindInactiveProfilesByUserName `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное количество <xref:System.Web.Profile.ProfileInfo>объекты для возврата в <xref:System.Web.Profile.ProfileInfoCollection>коллекции.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex` Определяет страницу результатов; 0 указывает первую страницу. `totalRecords` Параметр `out` задается общее число неактивных профилей пользователей для настроенного `applicationName`, основываясь на `authenticationOption` и `userInactiveSinceDate` параметров. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` значение-1, с `pageSize` 5, <xref:System.Web.Profile.ProfileInfoCollection>возвращается будет содержать с шестого до десятого неактивные профили.</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords` Параметр будет иметь значение 13.       Обратите внимание, что ваш поставщик профилей может поддерживать символы подстановки в `usernameToMatch` параметра. Например <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>метод <xref:System.Web.Profile.SqlProfileProvider>класс поддерживает подстановочные знаки в `usernameToMatch` параметр.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>       Вызовы метода FindInactiveProfilesByUserName <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти неактивные профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the FindInactiveProfilesByUserName method is called; otherwise, the <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/8901892e-7654-4efd-b373-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/8901892e-7654-4efd-b373-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значения, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя, который требуется найти."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "По возвращении из этого метода содержит целое число, определяющее общее число профилей. Этот параметр передается неинициализированным."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения о профиле пользователя для неактивных профилей, где имя пользователя соответствует предоставленному <code> usernameToMatch </code> параметра."
  overload: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает все данные профиля для профилей, в которых имя пользователя совпадает с указанным именем."
  remarks: "Метод FindProfilesByUserName возвращает список всех данных профиля, для которой имя пользователя соответствует предоставленному `usernameToMatch` значение параметра для настроенного <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>значение свойства.</xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска.       Можно извлечь данные профилей пользователей на страницах данных, с помощью перегрузки для <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>метод, который принимает дополнительные `pageIndex` и `pageSize` параметров.</xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>       Обратите внимание, что ваш поставщик профилей может поддерживать символы подстановки в `usernameToMatch` параметра. Например <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>метод <xref:System.Web.Profile.SqlProfileProvider>класс поддерживает подстановочные знаки в `usernameToMatch` параметр.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       Вызовы метода FindProfilesByUserName <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> enumeration value and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#8](~/add/codesnippet/csharp/31ac7eb6-b35d-45af-a76d-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#8](~/add/codesnippet/visualbasic/31ac7eb6-b35d-45af-a76d-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя, который требуется найти."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения профиля пользователя для профилей, где имя пользователя соответствует предоставленному <code> usernameToMatch </code> параметра."
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>является пустой строкой (»»)."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает сведения о профиле на страницах данных для профилей, в которых имя пользователя совпадает с указанным именем."
  remarks: "<xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>Метод возвращает список сведений о профиле, для которой имя пользователя соответствует предоставленному `usernameToMatch` значение параметра из настроенных. <xref:System.Web.Profile.ProfileManager.ApplicationName%2A></xref:System.Web.Profile.ProfileManager.ApplicationName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска.       Обратите внимание, что ваш поставщик профилей может поддерживать символы подстановки в `usernameToMatch` параметра. Например <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>метод <xref:System.Web.Profile.SqlProfileProvider>класс поддерживает подстановочные знаки в `usernameToMatch` параметр.</xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>       Ограниченные результаты, возвращенные FindProfilesByUserName `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Profile.ProfileInfo>объектов, включаемых в <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex` Определяет страницу результатов; ноль указывает первую страницу. `totalRecords` Параметр `out` задается общее число неактивных профилей пользователей для приложения, указанного `applicationName` атрибут в файле конфигурации на основе предоставленного `authenticationOption`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` значение-1, с `pageSize` 5, <xref:System.Web.Profile.ProfileInfoCollection>вернул будет содержать с шестого до десятого профили.</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords` Параметр будет иметь значение 13.       <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>Вызовы метода <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example allows a user to supply a `usernameToMatch` value and a <xref:System.Web.Profile.ProfileAuthenticationOption> and retrieves profile information for any matching profiles. The example allows the user to specify whether to return inactive profiles exclusively. If the user specifies only inactive profiles, the <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> method is called; otherwise, the FindProfilesByUserName method is called.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/3375ceaa-fae5-498d-b74c-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/3375ceaa-fae5-498d-b74c-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя, который требуется найти."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "По возвращении из этого метода содержит целое число, определяющее общее число профилей. Этот параметр передается неинициализированным."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения профиля пользователя для профилей, где имя пользователя соответствует предоставленному <code> usernameToMatch </code> параметра."
  overload: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> is larger than <xref:System.Int32.MaxValue>."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает все данные профиля пользователя для профилей, в которых дата последнего действия или до указанной даты и времени."
  remarks: "Метод GetAllInactiveProfiles используется для получения сведений о профиле из источника данных для всех профилей неиспользуемые пользователей для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей любому профилю возвращается с <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит на или до указанной `userInactiveSinceDate` значение параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Можно получить сведения о профиле для неактивных профилей пользователей на страницах данных, с помощью перегрузки для <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>метод, который принимает дополнительные `pageIndex` и `pageSize` параметров.</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>       Вызовы метода GetAllInactiveProfiles <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти неиспользуемые профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#7](~/add/codesnippet/csharp/12596197-85de-46bb-89a0-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#7](~/add/codesnippet/visualbasic/12596197-85de-46bb-89a0-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения о профиле пользователя о неактивных профилей."
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает страницу <xref href=&quot;System.Web.Profile.ProfileInfo&quot;> </xref> объектов для профилей пользователей, в которых дата последнего действия или до указанной даты и времени."
  remarks: "Метод GetAllInactiveProfiles используется для получения сведений о профиле из источника данных для профилей неиспользуемые пользователей для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей любому профилю возвращается с <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит до указанного `userInactiveSinceDate` значения параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>       Ограниченные результаты, возвращенные GetAllInactiveProfiles `pageIndex` и `pageSize` параметров. `pageSize` Параметр определяет максимальное число <xref:System.Web.Profile.ProfileInfo>объектов, включаемых в <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex` Определяет страницу результатов; ноль указывает первую страницу. `totalRecords` Параметр `out` задается общее число неактивных профилей пользователей для настроенного `applicationName`, основываясь на `authenticationOption` и `userInactiveSinceDate` параметров. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` имеет значение `pageSize` 5, <xref:System.Web.Profile.ProfileInfoCollection>возвращается будет содержать с шестого до десятого неактивные профили.</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords` Параметр будет иметь значение 13.       Вызовы метода GetAllInactiveProfiles <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example shows an ASP.NET Web page that manages inactive profiles. A button is provided to delete all inactive profiles. Whether a profile is considered inactive is based on the date specified for the `userInactiveSinceDate` parameter.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileManager#4](~/add/codesnippet/csharp/40315987-b58d-4459-883e-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#4](~/add/codesnippet/visualbasic/40315987-b58d-4459-883e-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "По возвращении из этого метода содержит целое число, определяющее общее число профилей. Этот параметр передается неинициализированным."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> содержащий сведения о профиле пользователя о неактивных профилей."
  overload: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает данные профиля пользователя для профилей в источнике данных."
  remarks: "Метод GetAllProfiles используется для получения сведений о профиле из источника данных для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска.       Вы можете получить страницы <xref:System.Web.Profile.ProfileInfo>объектов для профилей пользователей, с помощью перегрузки для <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>метод, который принимает дополнительные `pageIndex` и `pageSize` параметров.</xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileInfo>       Вызовы метода GetAllProfiles <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName`.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/14cc8f0b-52b7-434e-bc19-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/14cc8f0b-52b7-434e-bc19-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> со сведениями о пользователях профиль для всех профилей в источнике данных."
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Извлекает страницы данных профиля пользователя."
  remarks: "Метод GetAllProfiles используется для получения сведений о профиле из источника данных для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска.       Результаты, возвращенные <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>ограничены `pageIndex` и `pageSize` параметров.</xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> `pageSize` Параметр определяет максимальное число <xref:System.Web.Profile.ProfileInfo>объектов, включаемых в <xref:System.Web.Profile.ProfileInfoCollection>.</xref:System.Web.Profile.ProfileInfoCollection> </xref:System.Web.Profile.ProfileInfo> `pageIndex` Определяет страницу результатов; ноль указывает первую страницу. `totalRecords` Параметр `out` задается общее число неактивных профилей пользователей для настроенного `applicationName`, основываясь на указанном экземпляре `authenticationOption`. Например, если имеется 13 пользователей для настроенного `applicationName`и `pageIndex` имеет значение `pageSize` 5, <xref:System.Web.Profile.ProfileInfoCollection>возвращается будет содержать с шестого до десятого профилей.</xref:System.Web.Profile.ProfileInfoCollection> `totalRecords` Параметр будет иметь значение 13.       Вызовы метода GetAllProfiles <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>метод поставщика профилей по умолчанию.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Поставщик профилей по умолчанию задается с помощью `defaultProvider` атрибута элемента конфигурации. Если профиль пользователя содержит свойства, которые управляются с помощью поставщика профилей, отличных от поставщика по умолчанию, источник данных для другого поставщика профилей не выполняется. Чтобы найти профили, управление которыми осуществляется поставщиком профилей, отличных от поставщика по умолчанию, необходимо получить ссылку на поставщик профиля с помощью <xref:System.Web.Profile.ProfileManager.Providers%2A>свойство и вызвать <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A>метод поставщика непосредственно.</xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> </xref:System.Web.Profile.ProfileManager.Providers%2A>"
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` in pages of data.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#3](~/add/codesnippet/csharp/3142f281-fd51-44c5-967b-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#3](~/add/codesnippet/visualbasic/3142f281-fd51-44c5-967b-_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: pageIndex
      type: System.Int32
      description: "Индекс страницы возвращаемых результатов. `pageIndex`начинается с нуля."
    - id: pageSize
      type: System.Int32
      description: "Размер страницы возвращаемых результатов."
    - id: totalRecords
      type: System.Int32
      description: "По возвращении из этого метода содержит целое число, определяющее общее число профилей. Этот параметр передается неинициализированным."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;> </xref> со сведениями о пользователях профиль для всех профилей в источнике данных."
  overload: System.Web.Profile.ProfileManager.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает число профилей, в которых дата последнего действия в или до указанной даты."
  remarks: "Метод GetNumberOfInactiveProfiles используется для получения количества все профили неиспользуемые пользователя из источника данных для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска. Искомая профилей учитываются все профили, имеющих <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>, происходит на или до указанной `userInactiveSinceDate` значение параметра.</xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A>"
  example:
  - "The following code example allows a user to view and delete information for active and inactive profiles based on search criteria. A count of inactive profiles is displayed using the results of the GetNumberOfInactiveProfiles method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.ProfileManager#5](~/add/codesnippet/visualbasic/456bb4d7-dc47-48d9-b96d-_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#5](~/add/codesnippet/csharp/456bb4d7-dc47-48d9-b96d-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, определяющий, какие профили пользователей считаются неактивными.</xref:System.DateTime> Если <xref:System.Web.Profile.ProfileInfo.LastActivityDate*>пользователя происходит профиля или до этой даты и времени, профиль считается неактивным.</xref:System.Web.Profile.ProfileInfo.LastActivityDate*>"
    return:
      type: System.Int32
      description: "Количество профилей в источнике данных, для которого возникло Дата последнего действия до указанной даты и времени."
  overload: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  id: GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Получает количество профилей в источнике данных."
  remarks: "Метод GetNumberOfProfiles используется для получения количества все профили пользователя из источника данных для приложения, указанного `applicationName` атрибут в файле конфигурации. Используйте `authenticationOption` для указания, следует ли только анонимные профили, только прошедшие проверку подлинности профили, или все профили для поиска."
  example:
  - "The following code example displays profile information for all of the profiles for the configured `applicationName` and also returns the number of profiles.  \n  \n [!code-cs[System.Web.Profile.ProfileManager#6](~/add/codesnippet/csharp/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]\n [!code-vb[System.Web.Profile.ProfileManager#6](~/add/codesnippet/visualbasic/754e4c9f-e8cb-4da5-b2cc-_1.aspx)]"
  syntax:
    content: public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "Один из <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;> </xref> значений перечисления, указав ли анонимные, проверку подлинности или возвращаются обоих типов профилей."
    return:
      type: System.Int32
      description: "Количество профилей в источнике данных."
  overload: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Provider
  id: Provider
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает ссылку на поставщика профилей по умолчанию для приложения."
  remarks: "Свойства поставщика позволяет напрямую ссылаться поставщика профилей по умолчанию для приложения. Обычно это используется для доступа к пользовательским элементам поставщика профилей, которые не являются частью <xref:System.Web.Profile.ProfileProvider>абстрактного базового класса.</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists properties of the default profile provider.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_6_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#2](~/add/codesnippet/csharp/p-system.web.profile.pro_6_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProvider Provider { get; }
    return:
      type: System.Web.Profile.ProfileProvider
      description: "Поставщик профилей по умолчанию для приложения."
  overload: System.Web.Profile.ProfileManager.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Была предпринята попытка получить значение свойства поставщика без крайней <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  platform:
  - net462
- uid: System.Web.Profile.ProfileManager.Providers
  id: Providers
  parent: System.Web.Profile.ProfileManager
  langs:
  - csharp
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Возвращает коллекцию поставщиков профилей для приложения ASP.NET."
  remarks: "Поставщики свойство ссылается на профиль поставщики, доступные для приложения, включая поставщиков, добавленные в конфигурации машины и службы, добавленные во всех файлах Web.config. Можно выбрать, какие поставщики профилей доступны для приложения с помощью элемента раздела в файле конфигурации. Например, следующий файл Web.config удаляет поставщиков профилей, указанные в родительском файле конфигурации и добавляет <xref:System.Web.Profile.SqlProfileProvider>экземпляр в качестве поставщика профилей для приложения.</xref:System.Web.Profile.SqlProfileProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=         &quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <profile enabled=&quot;true&quot; defaultProvider=&quot;SqlProvider&quot;>         <providers>           <clear />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Profile.SqlProfileProvider&quot;             connectionStringName=&quot;SqlServices&quot;             applicationName=&quot;MyApplication&quot; />         </providers>       </profile>     </system.web>   </configuration>   ```При указании в разделе, необходимо указать поставщика по умолчанию, задав `defaultProvider` атрибута. Если не указать раздел в файл Web.config, используются значения из конфигурации компьютера и <xref:System.Web.Profile.SqlProfileProvider>экземпляр с именем AspNetSqlProvider устанавливается в качестве поставщика по умолчанию.</xref:System.Web.Profile.SqlProfileProvider>       Можно получить строго типизированную ссылку на поставщик из коллекции поставщиков индексирования поставщика профилей по имени и его привязки в качестве требуемого типа."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#9](~/add/codesnippet/visualbasic/p-system.web.profile.pro_5_1.aspx)]\n [!code-cs[System.Web.Profile.ProfileManager#9](~/add/codesnippet/csharp/p-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public static System.Web.Profile.ProfileProviderCollection Providers { get; }
    return:
      type: System.Web.Profile.ProfileProviderCollection
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileProviderCollection&quot;> </xref> поставщиков профилей, настроенного для приложения ASP.NET."
  overload: System.Web.Profile.ProfileManager.Providers*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Была предпринята попытка получить значение свойства поставщиков без крайней <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty(ProfilePropertySettings)
  nameWithType: ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
  fullName: System.Web.Profile.ProfileManager.AddDynamicProfileProperty(ProfilePropertySettings)
- uid: System.Web.Configuration.ProfilePropertySettings
  parent: System.Web.Configuration
  isExternal: false
  name: ProfilePropertySettings
  nameWithType: ProfilePropertySettings
  fullName: System.Web.Configuration.ProfilePropertySettings
- uid: System.Web.Profile.ProfileManager.ApplicationName
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
  fullName: System.Web.Profile.ProfileManager.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
  fullName: System.Web.Profile.ProfileManager.AutomaticSaveEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileManager.DeleteProfile(System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile(String)
  nameWithType: ProfileManager.DeleteProfile(String)
  fullName: System.Web.Profile.ProfileManager.DeleteProfile(String)
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileManager.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileManager.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileManager.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileManager.Enabled
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
  fullName: System.Web.Profile.ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime)
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String)
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileManager.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles(ProfileAuthenticationOption)
  nameWithType: ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
  fullName: System.Web.Profile.ProfileManager.GetNumberOfProfiles(ProfileAuthenticationOption)
- uid: System.Web.Profile.ProfileManager.Provider
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
  fullName: System.Web.Profile.ProfileManager.Provider
- uid: System.Web.Profile.ProfileProvider
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
- uid: System.Web.Profile.ProfileManager.Providers
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
  fullName: System.Web.Profile.ProfileManager.Providers
- uid: System.Web.Profile.ProfileProviderCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileProviderCollection
  nameWithType: ProfileProviderCollection
  fullName: System.Web.Profile.ProfileProviderCollection
- uid: System.Web.Profile.ProfileManager.AddDynamicProfileProperty*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AddDynamicProfileProperty
  nameWithType: ProfileManager.AddDynamicProfileProperty
- uid: System.Web.Profile.ProfileManager.ApplicationName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: ApplicationName
  nameWithType: ProfileManager.ApplicationName
- uid: System.Web.Profile.ProfileManager.AutomaticSaveEnabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: AutomaticSaveEnabled
  nameWithType: ProfileManager.AutomaticSaveEnabled
- uid: System.Web.Profile.ProfileManager.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileManager.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileManager.DeleteProfile*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfile
  nameWithType: ProfileManager.DeleteProfile
- uid: System.Web.Profile.ProfileManager.DeleteProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileManager.DeleteProfiles
- uid: System.Web.Profile.ProfileManager.Enabled*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Enabled
  nameWithType: ProfileManager.Enabled
- uid: System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileManager.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileManager.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileManager.FindProfilesByUserName
- uid: System.Web.Profile.ProfileManager.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileManager.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetAllProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileManager.GetAllProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileManager.GetNumberOfInactiveProfiles
- uid: System.Web.Profile.ProfileManager.GetNumberOfProfiles*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: GetNumberOfProfiles
  nameWithType: ProfileManager.GetNumberOfProfiles
- uid: System.Web.Profile.ProfileManager.Provider*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Provider
  nameWithType: ProfileManager.Provider
- uid: System.Web.Profile.ProfileManager.Providers*
  parent: System.Web.Profile.ProfileManager
  isExternal: false
  name: Providers
  nameWithType: ProfileManager.Providers
